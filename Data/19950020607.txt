b'/\n"\n\nNASA\nICASE\n\nContractor\nReport\n\nReport\n\n//\n\n,/\n\n195069\n\nNo. 95-26\n\nS\nUNSTRUCTURED\nADAPTIVITY\n\nMESH\n\nGENERATION\n\n(NASA-CR-195069)\nGENERATION\nAND\nReport\n\n([CASE)\n\nAND\n\nUNSTRUCTURED\nADAPT[VITY\nFinal\n48\n\n_ESH\n\nN95-27027\n\np\nUnclas\n\nG3/34\n\n0049654\n\nD. J. Mavriplis\n\nLecture notes prepared for 26th Computational\nFluid Dynamics Lecture Series\nProgram of the von Karman Institute (VKI) for Fluid Dynamics,\nRhode-SaintGenese, Belgium, 13-17 March 1995.\n\nContract\nNo. NAS\nApril 1995\n\n1-19480\n\nInstitute\nfor Computer\nApplications\nNASA\nLangley\nResearch\nCenter\nHampton,\nVA 23681-0001\n\nOperated\n\nin Science\n\nby Universities\n\nSpace\n\nand Engineering\n\nResearch\n\nAssociation\n\nUNSTRUCTURED\n\nMESH\nAND\n\nGENERATION\n\nADAPTIVITY\n\nD.\n\nJ.\n\nMavriplis*\nICASE\n\nInstitute\n\nfor Computer\nMS 132C,\n\nApplications\nNASA\n\nin Science\n\nLangley\n\nHampton,\n\nResearch\n\nand\n\nEngineering\n\nCenter\n\nVA 23681-0001\n\nUnited\n\nStates\n\nAbstract\n\nAn overview\nBasic\n\nbuilding\n\nVarious\nand\n\npractical\n\nillustrated\n\nfor anisotropic\n\nof current\nblocks\n\nmore\n\nexamples.\nare\n\nmanner,\nabout\n\nfrom\n\ngeneration\n\nproblems\n\nin an educational\nto learn\n\ntaken\n\nmesh\nwith\n\nunstructured\n\ncurrent\n\nmesh\n\nthe\n\nfield\n\ngeneration\nof computational\n\ntechniques\nIssues\n\ntreated\n\nbased\n\nin subsequent\n\nunstructured\n\nfamiliar\nmesh\n\nadaptivity\n\non these\n\nalgorithms\nand\n\nsections.\n\nwith\n\ntechniques\n\ngeometry\n\nmeshing\n\nof adaptive\n\nfor readers\n\nand\n\nThe\n\ncomputational\n\nare\n\nfirst\n\nare then\n\nstretched\n\ndescribed.\nconstructed\n\nmesh\n\npresentation\nfluid\n\nis given.\n\ngeneration\nis organized\n\ndynamics,\n\nwishing\n\ntechniques.\n\n*This research was supported by the National Aeronautics and Space Administration\nunder NASA Contract. No. NAS1-19480 while the author was in residence at the Institute for Computer Applications in\nScience and Engineering (ICASE), NASA Langley Research Center, Hampton, VA 23681-0001.\n\nUNSTRUCTURED\n\nMESH\n\nGENERATION\n\nAND\n\nADAPTIVITY\nD.\n\nJ.\n\nMavriplis\nICASE\n\nInstitute\n\nfor Computer\n\nApplications\n\nMS 132C,, NASA\n\nin Science\n\nLangley\n\nHampton,\n\nResearch\n\nand\n\nEngineering\n\nCenler\n\nVA 23681-0001\n\nUnited\n\nStates\n\nContents\n1\n\nIntroduction\n\n2\n\nComputational\nGeometry\nConstructs\nand Algorithms\n2.1\nThe Delaunay\nTriangulation\n...............................\n\n3\n3\n\n2.1.1\n2.1.2\n\n2.2\n\nBowyer-Watson\nAlgorithm\nGreen-Sibson\nAlgorithm\n\n2.1.3\n2.1.4\nOther\n\n............................\n.............................\n\n3\n4\n\nTanemura-Merrianl\nAlgorithm\n..........................\nConstrained\nDelaunay Triangulations\n......................\nTriangulations\nand Transformation\nAlgorithms\n.................\n\n2.2.1\n2.2.2\n\nTwo-Dimensional\nThree-Dimensional\n\n5\n6\n7\n\nEdge-Swapping\n........................\nEdge-Face\nSwapping\n....................\n\n7\n9\n\nPractical\nMesh\nGeneration\nAlgorithms\n3.1\nQuad/Octree\nBased Mesh Generation\n..........................\n3.2\nAdvancing-Front\nMethods\n................................\n3.3\nDelaunay\nPoint-Insertion\nMethods\n............................\n3.4\nAdvancing-Front\nDelaunay Triangulation\n........................\n3.5\nAdvancing-Front\nPoint-Insertion\nMethods\n........................\n4\n\n10\n\nAdaptive\nMeshing\n4.1\nRefinement\nCriteria\n\n.25\n\n4.2\n\nbiesh\n4.2.1\n\nAdaptation\n\nTechniques\n\n...............................\n\n2_\n\n4.2.5\n\n5.1\n5.2\n\nblesh\n\n5.3\n5.4\n5.5\n\nStretched\n\nMovement\n\nTechniques\n\n...........................\n\nPoint-Insertion\n\nHybrid Methods\n......................................\nSemi-Structured-Unstructured\nHybrid\nAdvancing-Layers\nAdvancing-Front\n\nMethod\nMin-Max\n\n............\n\n2_\n30\n30\n31\n32\n33\n\nGeneration\nDelaunay\n\n22\n\n27\n\nDelaunay\nPoint-Insertion\nBased on Solution Gradients\nExtensions\nto Steiner Triangulation\n.......................\nAdaptive\nRemeshing\n...............................\nh-Refinement\nor Subdivision\nTechniques\n....................\n\nStretched-Mesh\n\n15\n18\n\n....................................\n\n4.2.2\n4.2.3\n4.2.4\n\n5\n\n12\n12\n\n...........................\nMeshes\n\n.....................\n\n................................\nTriangulations\n........................\n\n35\n37\n3_\n39\n40\n\n1\n\nIntroduction\n\nThe\n\ngeneration\n\nof unstructured\n\nmeshes\n\nfor computational\n\nfluid\n\nrapidly over the last ten years. In fact, it has been stated recently\nhas reached such a level of maturity\nthat it can be considered\ngeneration\nof unstructured\nmeshes about arbitrarily\nbe routinely\nperformed\non present-day\nworkstations,\na reader\n\nwith good\n\nprogramming\n\ndynamics\n\nproblems\n\nthat unstructured\nmesh generation\na solved problem.\nCertainly,\nthe\n\ncomplex three-dimensional\nwith currently\navailable\n\nskills and persistence\n\nshould\n\nhas evolved\n\nconfigurations\ncan\ntechniques.\nIn fact,\n\nbe able to create\n\nhis/her\n\nowl, mesh\n\ngeneration\ncode from the information\ncontained\nin these notes, ttowever, it would be premature\nto\nstate that further inlprovements\nare not needed in this field. Of the various techniques\ndescribed\nin\nthese notes, each has its particular\nstrengths\nand weaknesses.\nFurther improvements\nin efficiency,\nand\n\nespecially\n\nrobustness\n\nare surely\n\nneeded.\n\nA good\n\ndefinition\n\nof an optimal\n\nmesh,\n\nas this relates\n\nto numerical\nproperties\nof the solution scheme is still lacking, and with it, appropriate\ntechniques\nfor constructing\nsuch optimal meshes, particularly\nfor anisotropic\nor stretched-mesh\ngeneration.\nMany\n\nof the successful\n\nalgorithms\n\nin unstructured\n\nmesh\n\ngeneration\n\nhave found\n\ntheir\n\nroots\n\nin\n\nthe field of computational\ngeometry.\nComputational\ngeometry is the theoretical\nscience concerned\nwith defining or postulating\ntile existence\nof specific geometrical\nconstructs\n(i.e., particular\ntriangulations\nin our case), devising algorithms\nfor generating\nthese constructs,\ncomplexity\nof these algorithms\n(usually asymptotic\nworst case complexities).\nDelaunay\ntriangulation\nrepresents\na fundamental\ncomputational\ngeometrical\nmany construction\nalgorithms\nhave been devised\ncomputational\ngeometry\nwork has been confined\ntute planar\nor algorithm\n\nand analyzing\nthe\nFor example,\nthe\nconstruct\nfor which\n\nand analyzed\n[1, 2]. Unfortunately,\nto two-dimensional\ntriangulations,\n\ngraphs, and are thus easier to analyze.\nfrom a computational\ngeometry point\n\nAlso, the concept of an optimal\nof view does not always coincide\n\nmuch of the\nwhich constitriangulation\nwith the view\n\nfrom a computational-fluid-dynamics\npoint of view, and thus many of the computational\ngeometry results\nhave found little use in the area of unstructured\nmesh generation.\nGreat progress\nin unstructured\nmesh generation\nhas been made by devising heuristic algorithms\ncombined\nwith\nempirical\nexperience.\nIn some sense,\nmore theoretical\nfield of computational\n\nthe engineering\nfield of mesh generation\nhas outstriped\nthe\ngeometry, particularly\nfor three-dimensional\nconstructions.\n\nHowever,\nwhile heuristic\nalgorithms\nmay\nlack of any sound theoretical\njustification\n\nwork well for most\nof these algorithms\n\nsituations\nwhich may result in failure or greatly\nconstruction\nof efficient and particularly\nrobust\n\ncases encountered\nleaves the door\n\nin practice,\nthe\nopen for possible\n\nincreased comple_ty\nof the algorithm.\nHence, the\nmesh generation\ntechniques\ncan only be achieved\n\nthrough algorithms\nwith solid theoretical\njustification.\nTile purpose\nof these notes is to familiarize\nthe reader with current techniques\nfor unstructured mesh generation,\nwhile exposing\ntheir individual\nstrengths\nand weaknesses.\nA preliminary\ndiscussion\nof selected computational\ngeometry\nalgorithms\nwhich are most relevant\nto mesh generation\n\ntechniques\n\nof various mesh\nmesh adaptation\nscribed algorithms\ndescribed.\nThe\n\nis first given.\n\nOnce\n\nessentials\n\nhave been\n\noutlined,\n\ngeneration\napproaches\nin both two- and three-dimensions\nis discussed in a following section. In the final section,\nas well as alternate\n\ndata-structures\n\nrequired\n\nand the region quadtree.\nThe heap-list\nwhich enables the ordering of elements\nis a spatial\n\nstrategies\n\nfor efficient\n\ndiscussed\nin detail.\nTheir description\ntext books. The main data-structures\n\ndimensions,\n\nthese\n\ndecomposition\n\nfor generating\n\nimplementation\n\nanisotropic\nof many\n\nand analysis can be found\nemployed in the algorithms\n\na critical\n\ndescription\n\nis given. The issue of\nmodifications\nto the deor stretched\n\nof these\n\nin appropriate\nof this chapter\n\nmeshes\n\nalgorithms\n\nare\n\nare not\n\ncomputer\nscience\nare the heap-list,\n\nrepresents\na particular\nimplementation\nof a priority queue,\nbased on a key [3]. Tile region quadtree,\nor octree in three\ndata-structure,\n\nwhich\n\nspatial search operations\nsuch as proximity searches. Quadtrees\nthe quadtree\nand the heap-list\nare dynamic\ndata-structures,\n2\n\nenables\n\nefficient\n\nimplementation\n\nof\n\nare discussed ill detail in [4]. Both\ni.e., they enable simple operations\n\nsuch\n\nas insertion\n\nand\n\nand\n\nadaptation\n\n2\n\ndeletion\n\nComputational\nThe\n\nGiven\n\na set\n\nof points\n\n{P}\n\ntile\n\nwhich\n\nare\n\nparticularly\n\nwhich\n\nwell\n\nand\n\npoint\n\nmany\n\nways\n\nsuited\n\nfor mesh\n\ngeneration\n\nAlgorithms\n\nto join\n\ncovers\n\nthe\n\ndomain.\n\nwhich\n\nhas\n\nvarious\n\ncompletely\ntype\n\nis the\n\nby drawing\n\nto a given\n\nexists\n\nof this\n\ntriangulation\n\nobtained\ncloser\n\nConstructs\n\nthere\n\nconstruction\n\nDelaunay\n\ngraph\n\nin a plane,\n\ntriangles\n\na particular\n\nis the\n\nthus\n\nTriangulation\n\nof non-overlapping\n\nexample,\n\nare\n\nGeometry\n\nDelaunay\n\nrepresents\n\nand\n\npurposes.\n\n2.1\n\nset\n\nof elements,\n\nthe\n\ndual\n\nmedian\n\nof {P}\n\nof the\n\nVoronoi\n\nline-segments\n\nthan\n\nto any\n\npoints\n\nThe\nwell\n\npoint\n\ntogether\n\nDelaunay\ndefined\n\nTessalation.\nwhich\n\nother\n\nthe\n\nto form\n\ntriangulation\nproperties.\n\nA Voronoi\n\nseparate\n\nin the set\n\nthe\n\nFor\n\nTessalation\n\nplane\n\n{P},\n\na\n\ninto\n\nas shown\n\nregions\nin Figure\n\n1.\n\nFigure\n\n1:\n\nin the\n\nplane,\n\nVoronoi\n\nIf we draw\n\na line\n\nobtain\n\nDelaunay\n\nthe\n\nAnother\nThis\n\ntriangle,\n\nthat\n\ni.e..\n\nout\n\nincurs\n\nthe\n\nWhile\nabove\n\ndimensions,\n\nThis\n\nmost\n\nBowyer-Watson\nis an\n\nDelaunay\n\nincremental\ntriangulation\n\nof a set of points\n\nwhich\n\nare\n\nneighbors\n\nin this\n\nVoronoi\n\ndiagram,\n\nwe\n\npoints.\n\ntriangulation\n\nforming\n\nthe\n\nset\n\nDelaunay\n\n{P}\n\nis known\ncan\n\nas tim\n\nbe contained\n\ntriangulation\n\nempty\ninside\n\nangle\n\nfor all triangular\n\nmany\n\nother\n\nuseful\n\nfor mesh\n\nelements,\n\nproperties\n\nthe\n\nset\n\ncircumcircle\nthe\n\nproperty.\n\ncircnmcircle\n\ncircumsphere\n\nit is the\n\nThus.\n\na Delaunay\n\nvery\nwith\n\nof any\n\nsmall\n\nthe\n\ntriangulation,\n\ntriangulation\n\nwhich\n\ntriangulation\n\nmay\n\nangles.\n\nDelaunay\n\ntriangulation\n\n[1, 2], the\n\npurposes.\n\nin particular,\n\nis attractive,\n\nassociated\n\nthe basis for\nare described\n\nto a max-rain\n\nof points,\n\nelements.\nwithout\n\nassociated\n\ngeneration\n\nproperty,\n\nforms\nwhich\n\ncorresponds\n\nof a given\n\nin "well-shaped"\n\ncircumcircle\n\nproperty\ndimensions,\n\npoints\n\ntriangulations\n\nminimum\nare\n\ntwo\n\ntriangulation\n\nproperty.\n\n1.\n\nby considering\n\ncircle/sphere\nand three\n\n2.1.1\n\nthe\n\nempty\n\nany\n\nDelaunay\n\nthat\n\npossible\n\nto result\nthere\n\nare\n\nThe\n\nthe\n\nDelaunay\n\ncirculncircle\n\nof these\n\nof the\n\nknown\n\nlargest\n\nbe expected\n\npoint\nin Figure\n\nwell\n\nof all\n\nbetween\n\nof the\n\nno\n\ncorresponding\n\nenlpty\n\ntriangulation\n\nas shown\n\nIt is also\n\nand\n\nthe\n\nsegment\n\nproperty\n\nstates\n\ntessalation\n\nillustrating\n\nseveral\nbelow.\n\nwith\n\nDelaunay\n\nsince\n\neach\n\nit extends\n\ntetrahedron.\n\ntriangulation\n\nThe\nalgorithms\n\nreadily\nempty\n\nto three\ncircum-\n\nin both\n\ntwo\n\nAlgorithm\nalgorithm\n[5, 6].\n\nwhich\nWhen\n\nassumes\n\na new\n\npoint\n\nnew\n\npoints\n\nis inserted\n\nare\ninto\n\nadded\n\nsequentially\n\nthe\n\ntriangulation,\n\nto an\nthe\n\nexisting\nfirst\n\ntask\n\nis to identify all existing triangles\nwhose circumcircle\nis intersected\nby tile new point, as shown\nin Figure 2. This can be achieved by first locating\nthe triangle\nwhich contains\nthe new point.\nThe circumcircle\nof this triangle must certainly\nbe intersected\nby the new point.\nThe remaining\nintersected\ntriangles\ncan be identified\nby first searching\nthe neighbors\nof tile containing\ntriangle,\nand then the neighbors\nof these neighbors,\nin a breadth-first\ntype search, abandoning\nthe search\nalong\n\nany neighbor\n\npath\n\nwhere\n\nthe test result\n\nis negative.\n\nProperties\n\nof the Delaunay\n\ntriangulation\n\nguarantee\nthat such a neighbor search is sufficient lo locate all intersected\ntriangles.\nTile union of\nthese intersected\ntriangles is then removed from the current triangulation,\nthus creating a convex\ncavity which contains the new point, as shown in Figure 2. A new triangulation\nis then constructed\nby joining the new point to all vertices on the boundary\nof the polygonal\ncavity. The algorithm\nextends\nnaturally\nto three dimensions\nby considering\nthe circumspheres\nof tetrahedra\nand results\nin the retetrahedralization\nof a convex polyhedral\ncavity. Proofs of the convexity\nof the resulting\ncavity,\n\nand\n\ntile validity\n\nof the retriangulation\n\nof this cavity\n\nhave been\n\nformulated\n\nin the literature\n\n[6, 7].\n\nFigure\n2: Illustration\ngulations.\n\nof tile Bowyer/Watson\n\nIn order to construct\nthe Delaunay\ntriangulation\nis constructed,\neither\n[2], or more simply\n\nby creating\n\ntriangulation\nby forming\n\na large initial\n\nalgorithm\n\nfor constructing\n\nDelaunay\n\ntrian-\n\nof a set of points using this algorithm,\nan initial\nthe triangulation\nof the convex hull of the points\n\ntriangulation,\n\nusing three\n\nor four auxiliary\n\npoints\n\n(in\n\ntwo dimensions),\nwhich contains\nall of the points to be triangulated.\nThe points of the set to be\ntriangulated\nare then put in a list, and inserted sequentially\ninto the evolving triangulation.\nThe Bowyer-Watson\nalgorithm\nhas proven to be very useful for unstructed\nmesh generation.\nIt\nhas been shunned by the computational\ngeometry field, mainly due to its poor worst-case\ncomplexity of O(N 2) (imagine the case where each newly inserted\npoint intersects\nall existing triangles).\nttowever,\n\nfor unstructed\n\nmesh generation,\n\ntwo- and three-dimensional\napplications\nworst-case\ncomplexity\nof this algorithm\nby randomizing\n2.1.2\nThis\n\nGreen-Sibson\nalgorithm\n\ninsertion\ninsert\n\nthe order\n\nis similar\n\ninto an existing\n\na new point\n\nThe point is then\nenclosing\ntriangle,\n\nin which\n\nnear linear O{ N) performance\n[7, 8, 9]. More recently,\nrepresents\na pathological\n\nthe points\n\nare inserted\n\nhas been reported\n\nfor both\n\nit has been shown that the poor\ncase which can easily be avoided\n\n[10].\n\nAlgorithm\nto the Bowyer-Watson\ntriangulation,\n\ninto the triangulation,\n\nalgorithm\n\nin that\n\nand also relies on the empty\nthe triangle\n\nwhich\n\nencloses\n\nit is based\ncircumcircle\n\non sequential\nproperty\n\nthis new point\n\npoint[11]. To\n\nis first located.\n\ninserted\ninto the triangulation\nsimply by joining it to the three vertices of the\nas shown in Figure 3. (In the case where the point falls on a mesh edge, the\n\nedgeis split and the point,is joinedto four meshvertices;situationsin threedimensions\ninvoiving\nsplit facesand edges are treated analogously).\n\nFigure\ntions.\n\n3: Illustration\n\nof the Green-Sibson\n\nThe resulting\ntriangulation,\nalthough\nis to transform\nit. into tile Delaunay\n\nalgorithm\n\nfor constructing\n\nI)elaunay\n\nvalid, is not necessarily\nDelaunay,\nand\ntriangulation\nby rearranging\nthe mesh\n\ntriangula-\n\ntile remaining\ntask\nconnectivity\nin the\n\nvicinity of tile new point.\nThis is accomplished\nby examining\nthe three (or four) newly formed\ntriangles.\nIf their circumcircles\nare all empty, then the triangulation\nis indeed Detaunay,\nand no\nfurther\nmodifications\nare required.\nIn the event one of these circumcircles\ncontains\na vertex, the\nedge\n\nof the\n\ntriangle\n\nwhich\n\nborders\n\non an "outer"\n\nneighbor\n\n(i.e.,\n\none which\n\ndoes\n\nnot touch\n\nthe\n\nnewly inserted\npoint), is reconfigured\nor swapped\nas shown in Figure 3. Tile reason only these\nouter edges need be considered\nis that the initial three (or four) edges which touch the newly\ninserted\npoint, can always be shown to be part. of the final Delaunay\ntriangulation\n(i._.. consider\nhow\n\nthey\n\nmay\n\nappear\n\nin the\n\nBowyer-Watson\n\nalgorithm).\n\nEach\n\ntime\n\nan edge\n\nis swapped,\n\ntwo\n\ntriangles\nare altered, and these must therefore\nbe checked for the Delaunay\ncriterion,\nltowever.\neach edge that is swapped\ncan he shown to be included in tile final Delaunay\nconstruction,\nand\nthus the only edges which need be considered\nfor swapping\nare those which border on a modified\ntriangle and an "outer" untouched\ntriangle.\nThe edge swapping\nprocedure\nbegins with the outer\nedges of the newly formed triangles\n(which contain the new point as a vertex), and propagates\noutwards,\nnever reexamining\nthe previously\nswapped edges, until the procedure\nterminates\nwheu\nno further\nedges need\nGreen-Sibson\nalgorithm\nas for generating\n2.1.3\n\nbe swapped.\nThere are certain practical\nadvantages\nassociated\nover the Bowyer-Watson\nalgorithm,\nfor constrained\ntriangulations,\n\ntriangulations\n\nTanemura-Merriam\n\nWhile the previous algorithms\ning the Delaunay\ntriangulation\n\nother\n\nthan\n\nDelaunay,\n\nwith tile\nas we!l\n\nas will be demonstrated.\n\nAlgorithm\nrepresent a top-down approach,\na bottom-up\napproach to constructof a given set of points is afforded by the advancing-front\nDelaunay\n\nalgorithm.\nThis technique has apparently\nbeen rediscovered\nseveral times in various fields throughout the literature\n[12, 13, 14, 15]. The idea is to construct\nthe triangulation\none triangle\nat a\ntime, beginning\nat the boundaries\nof the domain, thus advancing\nor sweeping a front throughout\nthe domain.\nThe initial front is composed\nof the set of edge segments\nwhich define the convex\nhull of the point-set\n\nto be triangulated\n\n(or, for mesh\n\ndefine all physical boundaries\nof the domain).\nproblem consists of determining\nthe particular\nbe joined\n\nin order\n\nto construct,\n\nthe unique\n\ngeneration\n\npurposes,\n\nthe set of edges\n\nwhich\n\nWe begin by choosing an edge of this front.\nThe\npoint to which the two end points of this edge must\n\nDelaunay\n\ntriangle\n\nfor this edge.\n\nwhich\n\nwill be present\n\nin the final triangulation. This may be solvedin a simpleiterativemanner.All\npoint\n\n(interior\n\nwith respect\n\nto the orientation\n\nof the front)\n\nis chosen,\n\narbitrary\ninterior\nand the triangle formed by the\n\ntwo end-points\nof the front edge and the interior point is constructed.\nIf this triangle contains ally\nother points within its circumcircle,\nit cannot be a valid Delaunay\ntriangle, and thus an alternate\npoint is chosen:\ni.e. the point contained\ninside the newly formed circumcircle\nwhich is closest to\nits circumcenter.\n\n./-"\n".,..\n\n/\n..\n\n.\xe2\x80\xa2..\n\n/\n\n\'...\n\n"...,\'-...\n\n\\\n\n"\n\n"".2_..."..\n\xe2\x80\xa2,,,._\n\nFigure\ntriangle\n\n4: Iterative\nprocedure\nin the advancing-front\n\nBy iterating\n\non this\n\nprocedure,\n\n:\n\n,_\n\n"\xe2\x80\xa2\n\n:\n\n..\n\n.:" ,.._...\n,_...+\'\n\nfor determining\nappropriate\npoint\nDelaunay triangulation\nalgorithm.\n\nas shown\n\nin Figure\n\n4, the\n\nfor constructing\n\nappropriate\n\npoint\n\nthe next\n\nwhich\n\nproduces\n\na\n\ntriangle\ncontaining\nno points interior to its circumcircle\nis eventually\nfound.\nThis new triangle is\ntherefore\naccepted,\nand the front is advanced by removing the current edge from the front, which\nis now obscured by the new triangle, and adding the new edges to the front. (There may be 0, 1, or\n2 new edges depending\non whether the chosen point is interior to, or on the front). The algorithm\nterminates\nonce all edges have been deleted fl\'om the front, i.e., when the entire domain has been\nswept out.\n2.1.4\n\nConstrained\n\nDelaunay\n\nTriangulations\n\nA triangulation\nof a given set of points which is forced to include as a subset of predetermined\nedges,\nis known as a constrained\ntriangulation.\nLoosely speaking, a constrained triangulation\nwhich is as\nclose as possible to a Delaunay triangulation\nformal definition of a constrained\nDelaunay\nwhich\n\ncontains\n\na set of prescribed\n\nedges,\n\nis called a constrained Delaunay triangulation.\nA more\ntriangulation\nis given by Chew [16]: it is a triangulation\nand such that\n\nthe circumcircle\n\nof each triangle\n\ncontains\n\nno other vertex of the mesh which is visible to it. A vertex is visible to a triangle if the line joining\nthe vertex to any point interior to the triangle does not intersect one of the prescribed edges of the\nmesh. An example of a constrained\nDelaunay\ntriangulation is given in Figure 5. The existence\nof\nconstrained\nDelaunay\ntriangulations\nensures the validity of the Tanemura-Merriam\nalgorithm for\narbitrary initial (possibly non-convex)\nfronts. It also guarantees\nthe possibility\nof modifying an\nexisting Delaunay\ntriangulation\nto include a set of edges which define the boundaries\nof the domain\nto be triangulated.\n\nFigure\n\nThis\nand\n\n5: Illustration\n\nis an important\nmultiply\n\nof constrained\n\nconsideration\n\nconnected\n\nfor practical\n\ndomains\n\ntriangulation,\n\nhas proved\n\n2.2\n\nOther\n\nTriangulations\n\nThe\n\nDelaunay\n\nTriangulation\n\nof points.\nminimum\n\nOther\nweight\n\ncriterion\nvariable\n\ntriangulation.\n\nmesh\n\nare often considered.\n\nconstrained\nDelaunay\ntriangulations\nand modification\nof three-dinmnsional\nsurface\n\nDelaunay\n\nalgorithms,\n\nUnfortunately.\n\nwhere\n\nan equivalent\n\nin three dimensions\nis not available.\nThus,\nDelaunay\ntriangulations,\nwhich conforln\n\nto be a non-trivial\nand\n\ngeneration\n\ndefinition\n\nfor\n\nthe construction\nto a prescribed\n\nproblem.\n\nTransformation\n\nis but one of a large\n\nnon-convex\n\nAlgorithms\n\nnumber\n\nof possible\n\ntriangulations\n\npossible triangulations\ninclude the minimum\ntotal edge-length\ntriangulation,\nand the minimum\nmaximum-angle\ntriangulation\n\nof a given\ntriangnlation,\n[2]. In fact,\n\nset\nor\nany\n\nfor describing\nan optimum triangulation\nmay be constructed,\neven one based on possible\ndata-values\nstored at the vertices of the triangulation,\nsuch as in the data-dependent\ntri-\n\nangulations\noptimum\n\nof [17], and\ntriangulation\n\nmum\n\nmay be difficult\n\noften\n\nan algorithm\ndevised.\n\nfor transforming\n\nIn practice,\n\nan algorithm\n\nTwo-Dimensional\n\nA method\n\nand local optima,\n\ncapable\n\ntriangulation\n\nto the\n\nof constructing\n\nor improvements\n\nfrom\n\nso-defined\n\nthe global\nan initial\n\nmesh\n\nopti-\n\nproduced.\n\n2.2.1\n\nto formulate,\n\nthe current\n\nare\n\nEdge-Swapping\n\nfor transforming\n\na 2D triangulation\n\ninto another\n\n2D triangulation\n\nis given\n\nby the edge-\n\nswapping\nprocedure\nof Lawson [18]. The algorithm\nis based on the fact that there are at most two\nways of triangulating\na set of four points, as shown in Figure 6. For each pair of triangles\nin the\nmesh which forms a convex quadrilateral,\nthe original triangulation\nis compared\nto the alternative\ntriangulation\nobtained\nalternative\ntriangulation\nswapped.\nBy iteralive\n\nby swapping the position of the internal diagonal, as shown in Figure 6. If the\nis found to better optinlize the triangulation\ncriterion, then the diagonal is\napplication\nof this simple diagonal swapping primitive\nover the entire mesh.\n\nthe triangulation\nis eventually\ntransformed\ninto a more optimal triangulation,\ncriterion.\nIn [19] it is proven that any given 2D triangulation\nmay be recovered\n\nas defined by the\nfrom any initial 2I)\n\ntriangulation\n\nalthough\n\nthrough\n\nrepeated\n\napplication\n\nof the diagonal-swapping\n\nprimitive,\n\na general\n\nalgorithm\nfor achieving this is not given. In general, it is found that a straight-forward\napplication\nof the edge-swapping\nprocedure\ngets stuck in local optima, and is often incapable\nof t)roducing\nthe\nglobal\n\noptimum\n\nmesh.\n\nFigure 6: Two possible\nconfigurationsor the diagonalof\nf\nedge-swapping\nFurthermore,\nbe achieved.\n\ndepending\nA notable\n\ncan be shown\n\nthat\n\npair of triangles\n\non tile order in which tile edges are swapped, different\nexception\nis the construction\nof a max-rain\nor Delaunay\n\nrepeated\n\napplication\n\nof the edge-swapping\n\nminimum\nangle always converges to the globally optimum\ntion, regardless\nof the initial mesh, and the order in which\nof this procedure\nThe globally\n\na convex\n\nin the\n\nalgorithm.\n\nis O(NlogN),\nwhere N represents\noptimum\nmin-max\ntriangulation,\n\ntechnique\n\nbased\n\nlocal optima\ntriangulation.\n\nmay\nIt\n\non maximizing\n\nthe\n\nmesh, which is the Delaunay\ntriangulathe edges are swapped.\nThe complexity\n\nthe number\non the other\n\nof vertices.\nhand, is not generally\n\nattainable\n\nwith this algorithm.\nA more sophisticated\ntechnique,\nknown as the edge-cutting\nalgorithm\n[20], is\ncapable of transforming\nany triangulation\ninto the globally optimum min-max\ntriangulation.\nThe\nalgorithm\nmay be interpreted\nas a generalization\nof the edge-swapping\nprocedure.\nThe first step\nconsists\n\nof locating\n\ncontains\n\nthe maximum\n\nthis maximum\n\nangle,\n\nangle in the current\n\nwhich\n\nis situated\n\ntriangulation.\n\nat point\n\nLet prq be the triangle\n\np, as depicted\n\nin Figure\n\n$.\n\nFigure\ntions.\n\n7: Illustration\n\nIn a.n attempt\ncandidate\nare both\n\n7.\n\ns-\n\nP\n\nto reduce\n\nof the edge-cutting\n\nthis angle,\n\nalgorithm\n\na. new point\n\nand\n\nA\n\nq\n\nfor constructing\n\ns is chosen,\n\nwhich\n\ns"\n\nrain-max\n\ntriangula-\n\nthe edge ps is drawn.\n\nThe\n\nfirst\n\nfor the point s is the point of the neighboring\ntriangle\nrsq. If the two angles at q and r\nsmaller than the original angle at p, then the swap is successful,\nand the procedure\nmay\n\nbe continued\nby searching\nfor the next largest angle in the mesh. However,\nare both larger than the original angle at p, no improvements\nare possible.\nat q is larger,\n\nbut the angle\n\nat r is smaller\n\nthan\n\nthe original\n\nif the angles at q and r\nIn the event the angle\n\nangle at p, it can be shown\n\noptimum\nnew edge must intersect\nthe edge rs. Thus we choose a new point s t in\ntriangle of rsq. This procedure may be applied recursively to the neighbors of these\na suitable point is found, perhaps\nseveral neighbor distances away. The edge pst\ninto the triangulation,\nand all edges which intersect pJ are removed, as shown in\ndefines two empty polygons,\nconsecutive\nvertices of each\nthe maximunl\n\nthat\n\nthe\n\nthe neighboring\nneighbors,\nuntil\nis then inserted\nFigure 7. This\n\nwhich are then retriangulated.\nThis is achieved by iteratively\ndefining\npolygon boundary\nwhich form a triangle\nwith all angles smaller than\n\nangle of the original\n\ntriangulation.\n\nTile insertionof edgessuchas ps\',\n\nwhich\n\ntional non-local information\nwhich enat)]es\nHowever, tile complexity\nof the edge-cutting\n\nmay\n\nintersect\n\nextensions\nhave been reported.\nThese are tile probable\nimplemented\nfor mesh generation\napplications.\n2.2.2\n\nThree-Dimensional\n\nEdge-Face\n\nmany\n\nexisting\n\nedges,\n\ninvolves\n\naddi-\n\nthe algorithm\nto avoid getting stuck in local optima.\nalgorithm\nis O(N21ogN).\nand no three-dimensional\nreasons\n\nwhy this algorithm\n\nhas seldom\n\nt)een\n\nSwapping\n\nThree-dimensional\ntetrahedralization\nalgorithms\nbased on simple edge-face swapping primitives\nare\nalso possible.\nThese primitives\nare based on the fact that, in d dimensions,\nd + 2 points may be\ntriangulated\nin at most two ways. as stated by\' Lawson [21]. Thus. in three dimensions,\na set\nof five points\n\nmay be triangulaled\n\nin at most\n\ntwo manners.\n\nDepending\n\non the\n\nconfiguration\n\nof\n\nthese five points, either a unique triangulation\nexists, in which case the configuration\nis called\nnon-swappable,\nor two different triangulations\nare possible, in which case swapping\nbetween the set\nof two constructs\nis possible.\nresult in 2, 3, or 4 tetrahedra,\n\nIn general, the triangulation\nas shown in Figure 8.\n\nof five points\n\nin three\n\ndimensions\n\nmay\n\nd\n\n/////_\'\n\na\n\na\n"\n\n(a)\n\nc\n\nc\n\n(b)\n\nFigure\n8: Possible\ndegenerate\ncases.\n\nThis is in contrast\n\n" " " - - .......\n\ntetrahedralizations\n\nto the two-dimensional\n\n(b)\n\nof a set of 5 points\n\ncase, where the number\n\nin three\n\ndimensions\n\nof triangles\n\n(neglecting\n\nand edges are identical\n\nfor all possible triangulations\nof a given point-set,\ntIowever, the triangulation\nof three-dimensional\npoint-sets\nno longer represents\na planar graph, and Euler\'s formula, no longer relates the number\nof cells to the number of vertices [22]. Thus, various triangulations\nof the same point-set\nin 3D\ncan be expected\nt.o contain\nprimitives\ncan be expected\nIn the case where\none of the five points\n\ndifferent numbers of cells, faces,\nto modify these numbers.\n\nfive vertices\nis interior\n\nare triangulated\n\nto the convex\n\nand edges,\n\nwith four tetrahedra,\n\nhull of the other\n\nand the face-edge\n(i.e.,\n\nfour points,\n\nswapping\n\ncase (a) of Figure\n\nand no other\n\n8).\n\ntriangulation\n\nof this configuration\nis possible. This is a non-swappable\nconfiguration.\nIn the case where the five\nvertices are triangulated\nwith two tetrahedra,\n(i.e., case (b) of Figure 8), the configuration\nis\nswappable\nprovided it is convex.\nA sufficient, condition\nfor convexity\nis that. the line de intersect\nthe face abe in Figure\n\nS (b).\n\nIf this is the case, then the two-tetrahedron\n\nconfiguration\n\nof Figure\n\n(b) may be swapped into the three-tetrahedron\nconfiguration\nof Figure 8 (c) by removing\nface abc\nand inserting the edge de (and thus faces ade, bde, cde). If the initial two-tetrahedron\nconfiguration\nis non-convex,\n\nthen it. is non-swappable.\n\n(In this case, it corresponds\n\n9\n\nto the configuration\n\nin Figure\n\n8 (c), whereoneof the tetrahedrais missing). Similarly,in the casewheretile five verticesare\ntriangulated with three tetrahedra,as in Figure 8 (c), the configurationis swappable\ninto the\ntwo-tetrahedron\nconfigurationof Figure8 (b), providedit is convex. To determineif the threetetrahedronconfigurationis convex,the convexitytest may be applieddirectly to the anticipated\ntwo-tetrahedron\nswapped\nconfiguration,which yieldsthe sameresult. A completealgorittun for\ntransformingthree-dinmnsional\ntriangulationsmaybe givenas follows:\nStep 1: Tagall meshfaces\nascandidates swapping.\nfor\nStep 2: Choose pair of neighboring\na\ntetrahedrain the meshwhichsharea candidateface. This\ndefines\nfivevertices,threeof whichformthe facecommon bothtetrahedra,andtwootherswhich\nto\nform the endpointsof the two tetrahedra.\nStep 3: By searching\nthroughneighboring\ntetrahedra,ocateall otherelements\nl\nwhichcontainfour\nof the five vertices.\nStep 4: If the numberof elements four, the configuration non-swappable.\nis\nis\nGoto step8.\nStep 5: Checkfor convexity.If the configuration non-convex, to step8.\nis\ngo\nStep 6: Comparethe swapped\nconfiguration\nwith the original configuration.Choose configuthe\nration which "improves"the triangulationbased the givencriterion.\non\nStep 7: Tag the swapped\nfacesas optimal, and the neighboring\nfacesas future candidates\nfor\nswappiilg.\nStep 8: If future candidatesor swapping\nf\nexist,goto step2, elseend.\nAs in the two-dimensional\ncase,theselocal transformationtechniques\nmost often terminatein\nlocal optima,with the resultthat the globaloptimumtriangulationfor a givencriterionis usually\nnot achieved.While convergence the globallyoptimummax-rainor Delaunaytriangulationis\nto\nassured two dimensions, similar result doesnot hold in three dimensions.In fact, the maxin\na\nrain and Delaunaytriangulationare not equivalentin three dimensions, nd three-dimensional\na\nDelaunaytriangulationsmust be characterized the empty-circumsphere\nby\nproperty. Using the\nempty-circumsphere asa measure optimality,Joe[23]hasshownthat local transformations\ntest\nof\nof an arbitrary triangulationarenot guaranteedo converge the Delaunay\nt\nto\ntriangulations.Only\nunderspecialconditions,suchasthe additionof a newvertexto anexistingDelaunay\ntriangulation\nfollowingthe Green-Sibsonlgorithm,canthe applicationof local transformations guaranteed\na\nbe\nto converge the Delaunay\nto\ntriangulation[23,24,25].\n3\n\nPractical\n\nThe\n\nalgorithms\n\npoints,\n\nMesh\ndescribed\n\nor to modify\n\ntechniques,\ntechniques\n\nGeneration\n\nAlgorithms\n\nin tile previous\n\nan existing\n\nsection\n\ntriangulation.\n\ncan be used\n\nAs such,\n\nthey\n\nto triangulate\n\nan existing\n\ndo not constitute\n\nmesh\n\nset of\n\ngeneration\n\nbut rather form basic building\nblocks, which can be used in conjunction\nwith other\nto devise mesh generation\nstrategies.\nIn general, the generation\nof unstructured\nmeshes\n\ninvolves tile creation of both tile mesh points and their connectivity.\nThis can be performed\neither\nsequentially\n(pre-generation\nof mesh points, followed by a triangulation\nphase), or simultaneously\nusing an advancing-front\ntechnique,\nor a Steiner triangulation\ntechnique.\n(Steiner\ntriangulations\nrefer to the insertion\nof additional\npoints into an existing triangulation\nin order to improve the\nquality of the triangulation.)\nThe problem of mesh generation\nincludes several well defined phases\nwhich can be summarized\nas follows:\n\xe2\x80\xa2 Definition\n\nof boundaries\n\nof physical\n\ndomain.\n\n\xe2\x80\xa2 Definition of element-size\ndistribution\nas a function of spatial\nbution is also required in the case of stretched\nmeshes).\n10\n\nlocation\n\n(element\n\nshape\n\ndistri-\n\n\xe2\x80\xa2 Generation boundaryconforming\nof\nmeshusinga suitableapproach.\n* Optional\n\nmesh\n\nThe boundaries\nwhich most often\n(i.e.,\n\npossibly\n\ndiscretized\npurposes.\n\npost-processing\n\nto improve\n\nelement\n\nquality.\n\nof tile physical domain are usually defined through some CAD-type\ndata-base,\ninvolves the use of piecewise spline curves in 2D. and assemblies\nof trimmed\n\nintersecting)\n\nspline surface\n\npatches\n\nill 3D. This initial\n\nboundary\n\ndescription\n\nmust\n\nbe\n\nas a set of line segments in 2D or a collection of planar faces in 3D, for mesh generation\nThis may be achieved prior to, or simultaneously\nwith, the construction\nof the mesh. The\n\nmesh generation\nprocedure\nmust be capable of guaranteeing\nboundary\nintegrity:\nin two dimensions\nthis corresponds\nto generating\ntriangulations\nwhich contain the subset of edges which define tile\ndomain boundaries\n(c.f. Figure 9),\n\nFigure\n9: Illustration\nairfoil geometry.\n\nwhile\nsubset\n\nin three\n\ndimensions\n\nof triangular\n\na prescribed\nconsiderably\n\nof non-boundary\n\nconforming\n\nthis\n\nto generating\n\nsurface triangulation\ninvolved. A slightly\n\nthat of generating\nwhich nevertheless\n\ncorresponds\n\nfaces which define the discretized\n\nDelaunay\n\ntriangulation\n\ntetrahedralizations\n\nboundary\n\nsurfaces.\n\nwhich\n\nThe prol)lem\n\nill the construction\nof a three-dimensional\nless stringent, approach\nto three dimensional\n\na tetrahedralization\nwhich contains a possibly\ndoes not violate the boundary surface integrity\n\nfor a simple\n\nvolume\nboundary\n\ncontain\n\nthe\n\nof matching\ngrid can be\nintegrity is\n\narbitrary\nboundary\ntriangulation\ni.e. a surface triangulation\nwhich\n\ndoes not intersect\nor cut through tile original boundary\nsurface definition.\nBoundary\nintegrity\nis\next, remely important\nin mesh generation,\nfor if the boundary\nsurfaces cannot be recovered\nin the\nnlesh, no nunlerical\nsimulation\nis possible.\nThe\nplicitly.\nof the\n\ndefinition\nof the element-size\ndistribution\nmay be accomplished\neither implicitly\nor exAn implicit\ndefinition\nmay involve inferring\na value for the element-size\nin tile interior\nmesh from\n\nAnother\n\npossibility\n\nthe boundary\n\ndiscretization\n\nis tile use of an analytic\n\ndesired spacings\n(i.e.. the\nsubsequently\ntriangulated.\n\n(i.e.,\n\nby interpolation\n\nmapping\n\nfunction\n\nfrom the\n\nfor generating\n\ns = E\n\ns_,. 1+\n\nk=l\n\nsource,\n\nsummation\nis over all N sources,\ns_. and rk represent\nthe prescribed\n\nand/_k\n\nboundaries).\n\nsets of points\n\nwith\n\nuse of structured\nO- or C-meshes\nfor generating\npoint sets) which are\nExplicit definitions\nof the element-size\ndistribution\ninvolve the con-\n\nstruction\nof a function .s = f(.r,y,z)\nvalid over the entire physical domain.\nconstructed\nanalytically,\nor using a small set of discrete sources such as:\n\nwhere the\nparameters\n\nclosest\n\nas well as "tk define the relative\n\nThis flmction\n\n-\\\n\nmay be\n\n(_)\n\n_k\n\nand r(x) denotes the position\nvector.\nThe\nelement size at the source, and the location\nregion\n11\n\nof influence\n\nof the source.\n\nsource\nof the\n\nAlternatively, a background\ngrid may be employed,whereat eachvertex a valueof the element sizeis defined,and valuesin between\nverticesare obtainedby linear interpolation. These\nbackground\nmeshes ay beunstructured[26,27] (triangular,tetrahedral),cartesian [2g], or even\nm\nquadtree-based\ntial equation\n\n[29]. In practice, an effective approach is to construct\nwith the aid of source terms defined in a similar manner\n\nto solve this equation\n\non the supporting\n\nbackground\n\ngrid.\n\nteractively,\nand correspond\nto prescribed\nmesh spacings\nis particularly\nattractive,\nsince the elliptic construction\nfunction,\n\nwhich\n\nWhile\n\nis desirable\n\nmesh\n\nwell shaped\n\nquality\n\nelements\n\nof the triangulation\nable mesh quality\n\nfor the generation\n\nis usually\n\ndefined\n\nterms\n\nat these physical\nensures a smooth\n\nof high quality\n\ndifferen( 1 ), and\n\ncan be prescribed\n\nin-\n\nlocations.\nThis approach\nelement-size\ndistribution\n\nmeshes.\n\nsomewhat\n\nheuristically,\n\nof element\n\nwith small changes\n\nscheme employed\ncannot be achieved\n\nThe source\n\nan (elliptic)\npartial\nto those of equation\n\nsize between\n\nthis usually\nneighboring\n\nentails\nelements.\n\nthe notion\n\nof\n\nRegardless\n\n(Delaunay, rain-max, etc...) it is now well known that acceptby optimizing\nmesh connectivity\nalone, but is necessarily\nthe\n\nresult of a close matching\nbetween the mesh-point\ndistribution\nand the mesh connectivity\nemployed\nin the construction\nof the mesh. (This is even more important\nin the case of stretched\nor anisotropic\nmeshes).\nPost-processing\ntechniques\nmay be employed for improving mesh quality. These often include minor redistribution\nfollowed by reconfiguration\nimproving\ndeficiencies\n\nof the mesh points through Laplacian-type\nsmoothing\ntechniques,\noften\nof the mesh connectivity.\nWhile these techniques\nare often successful in\n\ngrid quality by removing minor irregularities,\nin grid quality.\nThus the ability to generate\n\nthe utmost importance.\nFinally, mesh\nthat they must use proven constructs\nand/or\ndeal with ambiguous\nThe use of exact arithmetic\n3.1\n\nQuad/Octree\n\nOne of the\n\nprocedures\nalgorithms,\n\nmust be robust.\nbut they must\n\nThis not only means\nbe designed\nto avoid\n\nsituations\nwhich typically arise in computational\ngeometry\n[30] is perhaps the best approach\nto resolving such issues.\n\nBased\n\nearliest\n\ngeneration\nand exact\n\nthey seldom adequately\ncorrect for serious\na high quality mesh from the outset is of\n\nand simplest\n\nMesh\n\nproblems.\n\nGeneration\n\nmethods\n\nfor generating\n\nunstructured\n\nmeshes\n\ninvolves\n\nthe\n\nuse of\n\nquad and octrees in two and three dimensions\nrespectively.\nConsidering\na two-dimensional\nexample\nfor simplicity,\nan initial quad is formed which is large enough to cover the entire domain.\nAssuming\na mesh element-size\ndistribution\nfunction exists, the quadtree\nis recursively\nsubdivided\nuntil all\nleaf quads are no larger than the local value of the element-size\ndistribution\nfunction.\nIf this\nflmction is only defined on the domain boundaries,\nthe quadtree\nmay be initially subdivided\nalong\nthe boundaries.\nSubdivision\nin the domain interior\ncan then proceed by ensuring\nthat jumps in\nthe sizes of neighboring\nleaf elements\nnever exceeds 2:1. Triangular\nelements\ncan be generated\nby forced subdivision\nof the quad elements [31], or by using the quadtree\nvertices in a. Delaunay\npoint-insertion\nalgorithm\n[32]. At the physical boundaries,\nthe quadtree\nmust be made boundary\nconforming.\nThis is usually accomplished\nby warping the mesh, i.e., displacing\nthe closest quadtree\nvertices\nefficient.\nwarping\n3.2\n\nto coincide\nwith the boundary\nTheir main deficiencies\nrelate\nprocedure.\n\nAdvancing-Front\n\nAdvancing-front\nThe idea\nelements,\ndefined\n[26.27,\n\ncurve.\nto the\n\nQuad/octree\nmethods\nare relatively\nquality of the mesh near boundaries\n\nsimple and\ndue to the\n\nMethods\n\nmethods\n\ninvolve the simultaneous\n\ngeneration\n\nof mesh points\n\nand their connectivity.\n\nis to build the mesh element by element, adding new elements to previously\ngenerated\nthus sweeping out a front across the entire domain.\nThey usually rely on an explicitly\n\nelement-size\n33].\n\ndistribution\n\nfunction,\n\nwhich is most often constructed\n\n12\n\nusing a background\n\ngrid\n\nAdvancing-frontechniques eginwith a discretization tile domainboundaries se!of edges\nt\nb\nof\nasa\nin two dimensions.This is accomplishedy placingpoints alongthe boundarycurves governed\nb\nby the local values of the element-size\ndistribution\nfunction,\nas shown in Figure 10. These edges\nform the initial front which is to be advanced out into the field. A particular\nedge of this front is\nselected,\n\nand\n\na new triangle\n\nis formed\n\nwith this edge\n\nas its base,\n\nby joining\n\nthe two ends\n\nof tile\n\ncurrent edge either to a newly created point, or to an existing point on the front.\nThe current\nedge is then removed from the front, since it is now obscured\nby the new triangle.\nSimilarly,\nthe\nremaining\n\ntwo edges of the new triangle\n\ndepending\n\non their\n\nFigure\n\nThe\n\n10:\n\nfront\n\nremoved\n\nInitial\n\nthus\nfrom,\n\nvisibility,\n\nboundary\n\nconstitutes\nthe\n\nas shown\n\nThe\n\nin Figure\n\ndiscretization\n\na stack\n\nstack.\n\nare either\n\nto the front\n\nor removed\n\nfor the advancing-front\n\nqueue),\n\nterminates\n\nwhen\n\nand edges\n\nmethod.\n\nare continuously\n\nthe stack\n\nis empty,\n\nhave merged upon each other and the domain is entirely covered.\nThe selection of the next edge in the front may be based on various\nis to always\n\nchoose\n\nthe\n\nsmallest\n\nfrom the front,\n\n11.\n\n(or priority\n\nprocess\n\nassigned\n\nedge in the front,\n\nthus ensuring\n\nthe\n\ni.e.,\n\nto. or\n\ngrows\n\nall fronts\n\nA good\n\ncriteria.\n\nfront\n\nadded\nwhen\n\nstrategy\n\nfrom regions\n\nof\n\nsmall cells towards regions of large cells. This has been found to yield smooth high-quality\nelement\ndistributions.\nSuch a strategy\ncan easily be implemented\nby encoding the front as a heap-list\nof\nedges,\n\nwith the edge-length\n\n\xe2\x80\xa2\n\nFigure\n\nas the heap ordering\n\n- ...............\n\n11:\n\n6 "\'I"\n\nGeneration\n\nadvancing-front\n\nkey [3].\n\nI\n\nof new triangle\n\nusing new point\n\n(a), or existing\n\nfront\n\npoint\n\n(b), in\n\nmethod.\n\nOne of the critical\n\nfeatures\n\nof such methods\n\nis the placement\n\nof new points.\n\nUpon\n\ngenerating\n\na\n\nnew triangle, a new point is first placed at a position which is determined\nto result in an optimal\nsize and shape triangle\ni.e., along the median of the front edge, at a distance\ndefined by the local\nvalue of the element-size\ndistribution\nfunction, as shown in Figure 12. The triangle generated\nwith\nthis new point\ndetermined\n\nmay result\n\nby computing\n\nin a cross-over\npossible\n\nwith other\n\nintersections\n\nfront\n\nedges, and\n\nwith "nearby"\n13\n\nthus may be rejected.\n\nfront edges.\n\nAlternately.\n\nThis is\n\nan existing\n\npoint on tile front may coincidentallybe locatedvery closeto the newpoint, andthus shouldbe\nemployed the formingpoint for the newtriangle,to avoidthe appearance a trianglewith a\nas\nof\nvery smalledgeat somelater stage. Thus, all front pointswithin a certaindistanceof the new\npoint mustbe located.This involvesthe determination an appropriate\nof\nlength scalefor defining\nthe searchregion. A typical example a length scaleandsearch\nof\nregionoften employed shown\nis\nin Figure 12. The final accepted\ntrianglewill be the triangle formedfrom the currentfront edge\nand the newpoint, or oneof the "nearby"front points,whichdoesnot intersectany front edges,\nandbest conforms the localelement-sizeistributionfunction.\nto\nd\n\nFigure\n\n12:\n\nPlacement\n\nin advancing-front\n\nof new point\n\nFigure\n\nmethod.\n\n13:\n\nPossible\n\nadvancing-front\nmethod\nfronts of dissimilar sizes.\n\nfailure\n\nof\n\nfor merging\n\nThe determination\nof the set of "nearby"\nfront points involves a proximity\nsearch which is\nusually implemented\nusing a quadtree\ndata-structure\n[4]. Titus, a quadtree\nbased on the front\npoints must be maintained\ndynamically,\nwith points inserted and deleted as the front advances.\nThe front is thus simultaneously\nrepresented\nas a heap and a quadtree.\nThe space requirements\nfor such an algorithm\nare lower than may\nis essentially\nall points,\ngeneration\n\na greedy\n\ntriangulation\n\n[2], i.e., formed\n\nedges and triangles\nwhich lie behind\nprocess.\nThus the only active portion\n\nelements\n\nbe expected.\n\nare never\n\nSince\n\nsubsequently\n\nthe front need no longer\nof the data is the front.\n\nthis\n\nmodified,\n\nbe considered\nSince a front\n\nin the\nhas one\n\nlower dimension\nthan the domain to be discretized,\nthe required space for such an algorithm\nin\ntwo dimensions\nis O(v_\'),\nwhere N is the final number of grid points generated.\nSince N point s\nare added sequentially,\nthe complexity is at most O(Nv/N).\nHowever, by employing sophisticated\nsearching\n\ntechniques\n\nsuch as spatial\n\nquad-trees,\n\nthis complexity\n\nis easily\n\nlowered\n\nto O(Nlogv_)\n\nwhich is asymptotically\nequivalent\nto O(NlogN).\nOptimal\nspace usage has not in general\nbeen\nachieved,\ndue to the difficulty in continuously\ndumping out generated\nelements.\nHowever, restart\ncapabilities\nare easily implemented\na large mesh generation\njob.\n\n[34, 29], which can greatly\n\nreduce\n\nthe required\n\nOne of the advantages\nof such an approach is the automatic\npoint placement\ngenerally\nresults in high-quality\nelements throughout\nmost of the flow-field, due\npositioning\n\nof these\n\nnew points.\n\nAdditionally,\n\nall real operations\n\nperformed\n\n(such\n\nworking\n\nsize for\n\nstrategy,\nwhich\nto the optimum\nas intersection\n\nchecking)\nare of a local nature;\ni.e., intersection\nchecks are performed\nwith neighboring\nedges of\nsimilar length, thus reducing\nthe chances for round-off error induced\nfailure.\nFinally, boundary\nintegrity is guaranteed,\nsince the boundary\ndiscretization\nconstitutes\nthe initial condition.\nThe disadvantages\nof advancing-front\ntechniques\nmainly relate to their efficiency.\nsection checking phase is a rather brute-force\ntechnique\nfor ensuring the acceptability\n14\n\nThe interof a new\n\ntriangle, which is relatively expensive.Additionally, for eachgeueratedtriangle, the quad-tree\ndata-structuremust betraversed\nfromtop to bottom (O(logN) steps)in orderto locate"nearby"\npoint.s\nandedges.Anothercontributingfactoris the fact that advancing-front\ntechniques onstruct\nc\nthe meshonetriangleat a time. Sincein two dimensions\nthereare asymptoticallytwice as many\ntrianglesas points,a moreefficientstrategywouldbe to construct the mesh one point at a time.\nThus,\n\neach time a new point\n\nis generated,\n\nefficiency\n\ncould be gained\n\nby determining\n\nall the potential\n\ntriangles\nwhich join this new point to tile existing front with a single tra.versal of the quad-tree\ndata-structure.\nIn three dimensions,\nthe savings are even greater,\nsince there exists on average 5\nto 6 times more tetrahedra\nthan vertices.\nFinally,\n\neven\n\nthough\n\nsuffer from robustness\n\nadvancing-front\n\nproblems.\n\ntechniques\n\nCentral\n\nrely only on local operations,\n\nto the issue of determining\n\nacceptable\n\nthey\n\ntriangles\n\nmay\n\nstill\n\nand "\'best"\n\npoints, is the determination\nof a local length scale which defines the region of "\'nearby"\npoints\nand edges. This length scale is generally\nobtained\nfrom the field function\n(which may employ a\nbackground\n\ngrid).\n\nIn the case of two merging\n\nfronts,\n\nif the field function\n\nvaries\n\nrapidly\n\nover the\n\nregion between the merging fronts, the relative sizes of the edges on one front may be much\nthan those on tim other front. If a sea.rch is initiated\nfrom the front with the smaller length\n\nlarger\nscale,\n\nthe region\n\nfront,\n\nand\n\nof "nearby"\n\nfailure\n\nedges\n\nwill occur,\n\nrelies\n\non the existence\n\n3.3\n\nDelaunay\n\nmay not contain\n\nas shown\n\nin Figure\n\nof a sinoothly\n\nvarying\n\nPoint-Insertion\n\n[8, 7, 35, 36].\n\nconfiguration\na structured\n\nof the other\n\nof the advancing-front\n\ntechnique\n\nfield function.\n\npossibility\nalgorithms\n\nefficient/robust\noverall approach).\nSome of the earliest Delaunay-based\nsets\n\nedges and points\n\nthe success\n\nMethods\n\nDelaunay-based\nmethods\noffer the\non proven computational-geometry\n\npoint\n\nthe appropriate\n\n13. Thus,\n\nmesh\n\nFor multi-component\n\nof constructing\nmesh generation\n(although\nthis does not in itself\ngeneration\n\nstrategies\n\ngeometries,\n\neach\n\nstrategies\nguarantee\n\nrelied on predetermined\ncomponent\n\nrepresents\n\nbased\na more\nmesha simple\n\nwhich can be fitted locally with a simple structured\nmesh (i.e.. for example\nusing\nO-mesh\nabout each element\nof a multi-element\nairfoil.\nBy constructing\na set of\n\noverlapping\nstructured\nmeshes in this manner, and discarding\nthe connectivity\nof these meshes, as\nwell as the points which fall outside of the physical domain, a set of points is obtained\nwhich may be\nused a.s the basis for a Delaunay\n\ntriangulation\n\nmesh generation\n\nstrategy,\n\nusing\n\nthe Bowyer/Watson\n\nor Green-Sibson\nalgorithms.\nIn one particular\napproach\n[8, 3.5], an initial Delaunay mesh is constructed\nby joining one of the\ninner boundary\npoints to all of the outer boundary\npoints in a hub and spoke type arrangement.\nThe inner boundary\npoints are then inserted into the triangulation\nusing the Bowyer/Watson\nalgorithm. After all inner bonndary\nt)oints are inserted, a. check for boundary\nintegrity is performed.\nIf\nboundary\nviolations\nare encountered,\nadditional\nboundary\nmesh-points\ntlle situation.\nOnce boundary\nintegrity\nhas been recovered,\ntriangles\nremoved,\n\nthus\n\neffectively\n\nand triangulated\nof the point-set,\n\nfreezing\n\nall boundary\n\nusing the Bowyer/Watson\ncoincidentally\nclose inesh\n\nployed as a post-processing\noperation\nfinal mesh spacing, as seen in Figure\nto restore\nsmooth\nttlree-dimensional\n\ndefining\n\nedges,\n\nand\n\ncan be inserted\nto remedy\nexterior\nto tim domain are\n\nall interior\n\npoints\n\nalgorithm.\nDue to the overlapping\nmesll construction\npoints may be produced,\nand mesh smoothing\nis em-\n\nin order to relieve effects caused by local irregularities\nin tim\n14. Mesh-point\nfiltering techniques\nmay also been employed\n\nmesh-point\ndistributions\n[37]. These techniques\nmesh generation\nabout aircraft-type\nconfigurations\n\nhave also been employed\nfor\nby Baker [7, 38]. Although\n\npredetermined\nmesh-point\nset techniques\nhave been very successful for certain\nclasses\ntries, the simultaneous\nmesh-point\ngeneration\nand triangulation\ntechniques\nembodied\ntriangulations\noffer improved\nangulation\nis a triangulation\n\nare inserted\n\nof geomein Steiner\n\nflexibility and automation\nfor arbitrary\ngeometries.\nA Steiner\nt.riwhose additional\npoints are inserted in order to improve the quality\n\n15\n\nof the triangulation.\nexist, the triangulation\n\nAssuming\nan initial triangulation\ncan be incrementally\nmodified\n\nand an element-size\nby continually\ninserting\n\nfinal mesh closely matches\nthe prescribed\nelement-size\ndistribution\ndomain.\nA particularly\neffective strategy is to insert the new mesh\nthe triangles\n\nwhich\n\nare flagged\n\nfor improvement\n\ndistribution\nnew points\n\nflmction\nuntil the\n\nfunction\nin all regions of the\npoints at the circumcenters\nof\n\n[39, 40, 41, 9, 25].\n\ni\n\nFigure\n\n14:\n\nstructured\n\nDelaunay\nmeshes,\n\ntriangulation\n\nbefore\n\nand\n\nof mesh-point\n\nafter application\n\ndistribution\n\ngenerated\n\nfrom overlapping\n\nof smoothing.\n\nThis strategy\ncan be proved to result in triangulations\nwhere the angles are all bounded between\n30 \xc2\xb0 and 120% neglecting\nboundary\neffects [16, 42]. This result is a consequence\nof the fact that the\ncircumcenter,\nwhere the new point\ntriangle, which represent the closest\n\nis placed, is equidistant\npoints to the new point,\n\nthe Delaunay\nas follows:\n\nmesh generation\n\ncriterion.\n\nStep\nStep\n\n1: Construct\n2: Discretize\n\nStep\n\n3:\n\ntriangulation\n\nConstruct\n\nAn effective\n\n5:\n\nan initial\n\ntriangulation\n\nof a large quadrilateral\n\nConstruct\n\nstrategy\n\nusing this approach\n\ncan be formulated\n\nan element-size\ndistribution\nfunction s = f(x,y,\nz).\nall boundary\ncurves based on the above function.\n\nStep 4: Insert all the boundary\nSibson algorithm.\nStep\n\nfrom the three vertices of its forming\nsince the circle is necessarily\nempty by\n\na heap-list\n\nwhich\n\ncovers\n\nin 2D or hexahedron\n\npoints\n\nthe\n\ndomain\n\n(usually\n\nby forced\n\nin 3D).\n\ninto the triangulation\n\nof all triangles\n\nentire\n\nin the mesh\n\nusing the Bowyer/Watson\nwhich\n\nare larger\n\nthan\n\nor Green-\n\nthe local\n\nvalue\n\nspecified by the element-size\ndistribution\nfunction (usually all existing triangles at this initial stage);\nthe heap-list\nis ordered by some measure of triangle size (i.e.. circumradius)\nor quality (maximum\nangle).\nStep\n\n6: Pull the first triangle\n\noff the top of the heap-list,\n\nretriangula.te\nusing the Bowyer/Watson\nor Green-Sibson\ntriangles,\nwhich are larger than the local vatue specified\ninsert them into the heap-list.\nStep\nStep\n\ninsert\n\na new point\n\nat its circumcenter\n\nand\n\nalgorithm.\nFor each of the newly formed\nby the element-size\ndistribution\nflmction,\n\n7: If the heap-list is empty, stop, else go to step 6.\n8: Recover the boundary\nintegrity.\n\nThe heap-list\nempties out when the triangulation\nconverges\nto the element-size\nscribed by the function\ns = f(z.9,\nz). This method\nresults in a very efficient\n\n16\n\ndistribution\npremesh generation\n\ntechnique.Sincetile identity of the originatingtrianglefor the circumcenter oint-insertionoperap\ntion is initially known,the search the containing\nfor\ntrianglein the Delaunay\nalgorithmis initiated\nwith this triangle. In mostcases, corresponds the containing\nthis\nto\ntriangle, andin all other cases.\nthe containing\ntriangle\nin Watson\'s\nalgorithm\n\nis only several neighbors\naway. Thus, the union of intersected\ncan usually be found very rapidly, in constant\ntime.\nSince the\n\ntriangles\nheap-list\n\noperations\n(insert/delete)\ncan all be performed\nin O(logN) time, the space and time requirements\nof this algorithm\nare 0(NlogN).\nIn practice, this metho<l has produced\nsome of the most efficient\nmesh\n\ngeneration\n\ncodes available\n\ntoday,\n\ncapable\n\nper hour on present-day\nworkstations\n[43].\nIn the above description\nof tile algorithm,\nfinal step, after all mesh\neither in the final stages\ninserted,\n\ni.e., between\n\nalgorithm\nenables\nthe point-insertion\nalgorithm\nprocedure,\n\nof generating\n\n1 million\n\nthe boundary\n\nrecovery\n\nthree-dimensional\nprocedure\n\nis performed\n\npoints have been inserted.\nIn practice, this procedure\nof the algorithm,\nor earlier on, just after the boundary\n\nsteps 4 and 5. Recovering\n\nthe boundary\n\nintegrity\n\nelements\nas a\n\nmay be performed\npoints have been\n\nin the final\n\nstages\n\nof the\n\ntile boundaries\nto be neglected\nand the domain to be treated\nas convex, during\nphase.\nThis permits a straight-forward\napplication\nof tile Delaunay\ninsertion\n\nat this stage. Furthermore,\nmesh quality is much higher\nwhich may result in a more robust boundary\nrecovery\n\nat the end of the point-insertion\nphase. On the other hand, new\n\npoints may be introduced\narbitrarily\nclose to the eventual\nboundary\nsurfaces, during\ninsertion\nprocess, which may result in a poor quality mesh after the boundary\nrecovery\n\nthe pointoperation.\n\nIf the boundary\nrecovery is performed\njust. after the insertion of the boundary\npoints, interior\nInesh points near the boundary\nmay be positioned\nmore optimally\n(see for example\nsection 3.5).\nHowever, this requires boundary\nintegrity be maintained\nsubsequently\nthroughout\ntile remainder\nof the grid generation\nprocess, and implies the application\nof Delaunay\npoint-insertion\nin non-convex\ndomains for step 6. In two dimensions,\nthe existence\nof a constrained\ntriangulation\n\nguarantees\n\nthat\n\nthe\n\npoint-insertion\n\nalgorithms\n\ncan be extended\n\nalgorithms\nDelaunay\n\nby terminating\n\nthe\n\nsearch for intersected\ntriangles ill tile given direction,\nwhen a boundary\nis encountered.\nIn three\ndimensions,\nalthough\nsimilar techniques\nhave been employed, there is no guarantee\nthat a valid triangulation\nwill result, since no three-dimensional\ndefinition of a constrained\nDelaunay\ntriangulation\nis available.\nOne way of recovering\nor after\nnumber\n\nthe insertion\nof additional\n\nA more elegant\n\nthe boundary\n\nand triangulation\nboundary\npoints\n\napproach\n\nconsists\n\nintegrity,\n\neither\n\na.t the end of the mesh\n\nof the prescribed\nuntil the Delaunay\n\nof modifying\n\nthe existing\n\ngeneration\n\nprocess.\n\nboundary\npoints, is to insert a sufficient\ntriangulation\nconforms to the boundary.\nDelaunay\n\ntriangulation\n\nusing\n\nthe edge\n\nswapping\n(in 2D) and face-edge swapping\n(in 3D) primitives\ndiscussed\nin section 2.2 to produce\na locally modified triangulation\nwhich conforms to the boundary.\nThis approach\nalso offers tile\npossibility\nof matching\nexactly a predetermined\nboundary\ndiscretization.\nIn two dimensions,\nca, h\nedge of the prescribed\nboundary\ndiscretization\nis searched\nfor. in the l)elaunay\nmesh.\nIf one of\nthese\n\nedges\n\nis not found,\n\nbut\n\nthe two endpoints\n\nof the edge are located\n\nthen a simple edge swap, as depicted in Figure 6, is sufficient,\nevent these endpoints\nare located in non-neighboring\ntriangles,\n\nin neighboring\n\ntriangles,\n\nto recover the missing edge. In the\nthen all triangles which the missing\n\nedge intersects\nare first located.\nThese triangles are all removed, and the missing edge is inserted.\nas shown in Figure 15. This creates two polygons, on either side of the new edge, which are then\ntriangulated,\nusing, for example, the Tanemura-Merriam\nalgorithm.\nThe situation\nin three dimensions is somewhat\nmore complex.\nThe procedure\nis usually divided\ninto two phases for a prescribed\nboundary\nsurface triangulation:\nfirstly the recovery of the boundary\nedges, and secondly the recovery of the boundary faces. The face-edge\n2.2 are utilized to tra.nsform\nthe Delaunay\ntriangulation\ninto one\nedges and faces.\nis often required\n\nHowever,\nto enable\n\ncontrary to tile two-dimensional\nthe completion\nof the boundary\n\n17\n\nswapping primit ives of section\nwhich contains\nthe I)oundary\n\ncase, the insertion\nrecovery procedure\n\nof additional\npoints\nin three dilnensions.\n\nWeatherill\nrules\n\n[40]\n\nhe advocates\ngrid\n\nremoval\n\nFigure\n\n[9], a similar\n\nby\n\nmethod\n\nthe\n\nare\n\nadvancing-front\ndifficulty\n\ninsertion\n\nsomewhat\n\nwhich\n\nwith\n\nThis\n\nerror.\n\ndistorted\nsimply\n\nall quantities\n\ndue\n\nin which\ncreation\n\nParticularly\n\npoints\n\nof highly\n\ntriangulation.\n\n(i.e.,\ninserted,\n\nskewed\n\nthe\n\ninteger\n\nabove\n\nphases,\n\ntechnique\n\nprogra.mnfing\n\nAdvancing-Front\n\nin 64 bit\n\nHowever,\n\nbest\n\nwhen\n\nthe\n\nthis\n\nmay\n\nthus\n\nalso have\n\npoints\n\nprecision\n\nmay\n\nlead\n\nOne\n\ntriangulations\n\nthe\n\nare\n\nreal\n\nperhaps\n\ndue\n\ninserted,\n\nutilized\n\nof the\n\nalgorithm\n\nis to alter\npoints\n\nof modifying\n\nis to resort\nin conlbination\n\nwith\n\nthe\n\norder\n\nto avoid\nthe\n\nto infinite\n\nto\n\nhighly\n\narithmetic\n\nto failure\n\nremedy\n\neffect\n\nare\nA more\n\nproblems\n\ntemporary)\n\nrobustness\n\nwhile\nproduced\n\nrefinement.\n\nrobustness\n\nboundary\nfinite\n\npermitting\n\nstrategies,\n\nSteiner\n\nthrough\n\n(possibly\n\n[30],\n\ncases.\n\nDe-\n\nof smoothness\n\nthat\nto\n\narithmetic).\n\nfor ensuring\n\ntechniques\n\nfact\n\netc.)\n\nauxiliary\n\nan existing\n\nis developed,\n\ndegree\n\nrelates\n\nThe\n\nmay\n\nin some\n\npoint-placement\nhigh\n\nto the\n\ncircumcenter,\n\n(even\n\ninto\n\ntriangulations\n\nformed.\n\npoints\n\nthe\n\nresulting\nprecision\n\nsome\n\nof the\n\nstrategies.\n\n3.4\n\ndue\n\nmethods\n\nor to employ\n\nelements.\n\nthe\n\ntile existing\n\nsurface\n\nbe retriangulated.\n\nsurface\n\nlack\n\nexisting\n\nare\n\ncell volume,\n\naccuracy\n\nare\n\nUltimately,\nusing\n\ninitial\n\nelements\n\nto insufficient\n\nthe\n\narithmetic\n\nin the\n\noff the\n\nlists\n\nwith\n\nnew\n\nttowever,\n\nedge\nmust\n\ncircumcenter\n\npoint-insertion\n\ntriangular/tetrahedral\n\nwhich\n\nthe\n\nis perhaps\n\ntile\n\nand\n\nspeaking.\n\nbe re-tetrahedralized.\n\nboundary\n\npoints\n\ntypes,\nGenerally\n\nof intersection\n\ndiscretization,\n\nand\n\nto improve\n\nDelaunay\n\nround-off\nto compute\n\nnew\n\nintersection\nelements.\n\nrecovered,\n\ncannot\n\npolygons\n\nirregular\n\nseek\n\nsurface\nwhich\n\nface\n\npoint\n\nbeen\n\nof a missing\nempty\n\nintroduces\n\nmethod.\n\napproaches,\n\nserious\n\noriginal\n\nand\n\nboundary\n\nat the\n\nhave\n\nin cavities\n\nresulting\n\nwhich\n\nsurface,\n\nfaces\n\noriginal\nsurface\ndiscretization.\ndistribution\nproduced\nby\n\nacceptable,\n\ntop-down\n\nthe\n\nthe\n\nresult,\n\nof the\nand\n\nrecovery\nof the\nThe mesh-point\n\ncertainly\n\nmay\n\nIllustration\n\ntriangulation,\n\nand\n\nedge\n\nof these\n\non tile\n\nedges\n\nto recover\n\npoint\n\nboundary\n\nrecovery\n\nof new points\n\nattempt\n\nof these\n\npossible\n\nto enable\n\nall boundary\n\nin an\n\n15:\n\nlaunay\n\nall\n\npoints\n\ncreation\n\nOnce\n\nremoved\n\ntile\n\nthe\n\ncategorized\nnew\n\nthe\n\nelement.\n\nbe\n\nIn\n\nhas\n\nfor inserting\n\nIn an effort\n\nto Mleviate\n\nadvancing-front\nmethod\nreplace\n\nthe\n\nsome\n\nDelaunay\n\nenjoys\n\nadvancing-front\n\nDelaunay\n\nthe\n\nsmooth\n\nmethods,\nheuristics\n\nTriangulation\n\nof the drawbacks\ntriangulation\npoint\n\ndistribution\n\nwhile\n\nusing\n\npresent\n\nin the\n\nof point-insertion\n\nalgorithm\nthe\n\nwas\n\nand\nwell\n\nguaranteed\nfounded\n\nreconnection\n\nphase\n\n18\n\nDelaunay\n\nrecently\n\ndeveloped\nboundary\n\nprinciples\nof traditional\n\ntriangulation\nby the\nintegrity\n\nof\n\nDelaunay\n\nmethods,\n\nauthor\nof the\n\n[29].\n\nan\nThis\n\ntraditional\n\ntriangulation\n\nadvancing-front\n\nmethods.\n\nto\n\nRobustness\nwithout the use of high accuracy arithmetic\nis assured by only constructing\ntriangular\nelements wltich are acceptable\nill size and shape, as determined\nby the background\nspacing function,\ni.e., the highly skewed\nformed.\n\ntriangles\n\nwhich appear\n\ntemporarily\n\nin the point-insertion\n\nmethods\n\nare never\n\nA background\nspacing\nfunction\ns = f(x,y)\nis used to determine\nthe maximum\npermissible\ncircumradius\np of a triangle as a function of spatial location.\nEach time a new point is added ahead\nof the front, it is desired to construct all Delaunay triangles which contain this new point, but which\ndo not violate the local circumradius\nbound. Triangles which violate the local circumradius\nbound\nshould\n\nnot\n\nbe constructed,\n\npossibility\nof round-off\nthe new point to every\n\neven\n\ninduced\npossible\n\ntemporarily,\n\nfor this may\n\nrequire\n\na subset\n\ncan be formed\n\nby considering\n\nnew point. The advancing-front\nMerriam)\ndescribed\nin section\ntriangles\nalgorithm,\n\nbetween\n\nthese\n\nfront\n\nit is possible\n\nthat\n\noperations\n\nand\n\nthe\n\nerror. One method of constructing\nthese triangles is simply to join\npair of points in the grid and preserve each potential\ntriangle which\n\ndoes not violate the Delaunay\ncriterion\nand the circumradius\nis to determine\na subset of the grid points which is sufficient\nSuch\n\nnon-local\n\nall front\n\npoints\n\nDelaunay\ntriangulation\n2.1.3 [14, 15] can then\npoints\n\nand\n\nthe\n\na new triangle\n\nnew\nmay\n\nbound.\nA more efficient\nfor locating all acceptable\nwhich\n\nare less than\n\ntechni(lue\ntriangles.\n\n2p away\n\nfrom the\n\nalgorithm\nfor fixed point sets (Taneinurabe employed\nto construct\nthe Delaunay\n\npoint.\n\nAs in the\n\nbe formed\n\nfrom\n\ntraditional\n\nthe current\n\nadvancing-front\nfront\n\nedge\n\nwith\n\nan\n\nexisting front point. Such cases are automatically\ndetected\nby the Tanemura-Merriam\nalgorithm,\nand the new point, is rejected.\nFinally, when a new point is introduced,\nit is possible that it int.ersecls\ncircumcircles\nof existing triangles.\nformation\nof new triangles,\nsince\n\nIf this is the case, these triangles must be deleted prior t.o the\nthey are in violation of the Delaunay\ncriterion.\nThe method\nis\n\nset. up similarly to the traditional\nadvancing-front\nprocedure.\nA background\ndefined, and the boundaries\nare discretized\nand constitute\nthe initial front.\ncan be suminarized\n\nStep\nStep\n\nas follows:\n\n1: Construct\nthe original front as a set of boundary\n2: Choose a particular\nedge from the front, according\n\nlength.\nStep 3:\n\nLocate\n\nall front\n\npoints\n\nwhere p is the local circumradius\nStep 4: Use the Tanenmra-Merriam\nthis edge and the set of candidate\nStep\n\n5: If this triangle\n\nexists\n\nwhich\n\n7:\n\nUsing\n\na neighbor\n\nare less than\n\nand is acceptable\n\nsearch\n\nedges.\nto some criteria\n\n2p away\n\nfrom either\n\n(circumradius\n\n12. Otherwise\ncreate\nwhose circumcircles\n\ninitiated\n\nat the\n\nsmaller\n\nintersected\n\nthis operation\nare added to the list of "close" points.\nStep\n9: If the circumradius\nof any of the new intersected\nany additional\n\nmaxilnum\nfront\n\npermissible\npoints\n\nend\n\npoint\n\nvalue p, replace\n\nwhich are less than\n\nof this\n\nformed\n\nedge\nedge,\n\nbetween\n\nthan p), form a new triangle,\n\na new point at the appropriate\nlocation.\nare intersected\nby the new point.\nfront\n\ntriangles,\n\ntriangles\nwhose circumcircles\nare intersected\nby the new point.\nStep 8: Remove all such triangles and update the front. Any new front\n\ndetermined\n\nsuch as minimum\n\nbound determined\nfrom the field function.\nalgorithm to determine\nthe Delaunay\ntriangle\npoints, if such a triangle exists.\n\nupdate the front, and proceed to step\nStep 6: Determine\nall front triangles\nStep\n\nsl)acing function\nis\nThe basic algorithm\n\ntriangles\n\npoints\n\nis larger\n\nlocate\n\nall interior\n\nwhich\n\nresult\n\nthan\n\nthe\n\nthe old value by this new maximum,\n\nfrom\n\npreviously\nand locate\n\n2p away from the new point.\n\nStep\n10: Form all possible Delaunay\ntriangles which contain the new point and two other points\nin the list of "close" points, and which do not. violate the local circumradius\nbound.\nSuch triangles\nare found using the Tanemura-Merriam\nalgorithm.\nStep 11: Add these triangles\nto the mesh and update the front.\nStep 12: If the front queue is empty, stop, otherwise go to step 2.\n\n19\n\nAsin previousadvancing-front\nalgorithms, he front is storedasa heap-listin order\nt\nthe choice in step 2. A front-based\nstep 3. A second\n(The construction\nin [4]).\nIn most\n\nquadtree\n\nis also used to perform\n\nto facilitate\nfor "close" points in\n\ntile search\n\nquadtree\nis also employed in the search for intersected\nfront triangle circumcircles.\nof quadtrees\nfor geometric entities other than points, such as circles, is described\n\ncases when\n\na new point\n\nis inserted\n\nahead\n\nof the front,\n\nno intersected\n\ncircumcircles\n\nare\n\ndetected,\nand few if any other front points are within the critical 2p distance of the new point, thus\nthe construction\nof new triangles is quite simple. When fronts merge upon each other, the situation\nbecomes more complex.\nTriangle\nalerts the front being advanced\n\ncircumcircles\nfrom the opposing front are usually intersected.\nThis\nto tile proximity\nof the neighboring\nfront and provides an extra\n\nlength scale (the circumradius\nof tile intersected\nthe two fronts as shown in Figure 16.\n\ntriangle)\n\nwhich\n\nis utilized\n\nFigure\n16: Illustration\nof the use of the front triangle circumcircle\nof a front. (compare\nwith the situation\ndepicted in Figure 13).\n\nThe Delaunay construction\nnaturally\nresults in additional\ntwo fronts of dissimilar\nlength scales.\nThis is precisely\ntraditional\nadvancing-front\nalgorithms,\nwhich are prone\nare encountered.\nhaving to merge\n\nAlthough\ndissimilar\n\nthe Delaunay-based\nrobustness.\nThe\nthose\n\nspace\n\nrequirements\n\ncase\n\nestimate\nwhich\n\nand computational\n\nregion\nbehind\n\nthe size of the front.\n\nfacility\n\nis more\ndumps\n\nthe merging\n\nalgorithms\n\nin mending\n\nthe proximity\n\ninformation\nwhich is essential for merging\nthe information\nwhich is missing in the\nto failure when fronts of dissimilar\nscales\n\nof arbitrarily\n\nefficiency\n\ndissimilar\n\nof the present\n\nand the Bowyer/Watson\n\nfronts,\nalgorithm\n\nalgorithm\n\nlikelihood\ninherent\n\nof\nin\n\nthus increasing\nlie in between\nfor Delaunay\n\ntri-\n\nto the advancing-front\nalgorithms,\nthe present approach does not represent\n[2], i.e., triangles behind the front may be subsequently\nmodified.\nHowever,\nwhich may be modified are those whose circumcircle\nextends ahead of the\n\nfront into the ungridded\ndistribution\nof elements\ntimes\n\npermits\n\nadvancing-front\n\nangulation.\nAs opposed\na true greedy algorithm\nthe only such triangles\n\nto detect\n\na smoothly\nvarying background\nflmction can reduce the\nfronts, this cannot be guaranteed.\nThe extra information\n\nalgorithm\n\nof traditional\n\neffectively\n\nThus,\n\nlikely\n\ninto which new points\nthe front, the number\nwe can expect\n\nO(N).\n\na space\n\nOn the other\n\nout the generated\n\nportion\n\nhand,\n\nare placed.\nAssuming a relatively\nsmooth\nof such non-frozen\nelements is a constant\nrequirement\n\nof O(v_),\n\nit is a simple\n\nof the grid after\n\nmatter\n\na prescribed\n\nalthough\n\nthe worst\n\nto create\nnumber\n\na restart\n\nof elements\n\nhave been produced,\nand reinitializes\nthe generation\nprocess using the front of the previous\nmesh\nas the initial condition.\nIf no old elements behind the front are considered\nin the restart process,\nthe\n\nresulting\n\nmesh\n\nmay contain\n\nregions\n\nof locally\n\n2O\n\nnon-Delaunay\n\ntriangles\n\nalong\n\nthe fronts\n\npresent\n\nat each\nusing\n\nrestart\nthe\n\nThe\n\ncurrent\n\nalgorithm\nare\n\nphase.\n\nfor\n\nare\n\ncharacteristic\napproach\nsearch\nthe\n\ntwo\n\nWhen\n\non\n\nthe\n\ncomplexity\nthe\n\nalgorithms,\nIn two\n\nsince\n\nthe\n\non\n\nthe\n\nthe\n\ntriangle\ncircumcircles).\nmore tetrahedra\nthan\namortized\n\nover\n\nHowever,\nthe\n\nmay\n\nrequired\n\nfor\n\nthe\n\nbe small,\n\nespecially\n(an\n\ngenerated\n\n!\n\ni\n\n\'\n\n:\n\ni\n\ni\n,\n\n_\ni\n\ni\n,\n\nabout\n\neach\n\nnewly\n\nsince\n\ninserted\n\nthe\n\nmesh\n\nsame\none\n\nlength\n\nfor the\nThis\n\nscales\n\nand\n\nintersected\n\n,,i\ni\n\ni\n\nFigure\n\ni\n\ni\n\n\'\n\npoint.\n\n\'\n\nE ,\nI i\n\n.,,\n\nI!,\n\ni\n\n1\n\n17:\n\nIllustration\n\nof initial\n\nboundary\n\ngenerated\n\nmesh\n\nof advancing-front\n\ndiscretization.\nprior\n\nto the\n\n(ii)\n\napplication\n\nDelaunay\nGrid\n\nat\n\nof smoothing.\n\n21\n\ntriangulation\n\nintermediate\n(iii)\n\nstage\nFinal\n\na\n\nthus\n\ntile average\n5 to 6 times\ndata-structures\nmay be\n\n; i i :\n\nii\n\nat\nfront\n\nI\n!\n\nis\n\nadvancingtriangle\n\ni\ni\n\nthe\n\nassumptions.\n\nother\n\nfor the\n\npoint\nshould\n\nexpected.\n\nthan\n\ntwo\none\n\nand\nwithin\n\ntriangles\n\nthan\n\nrather\n\nadditional\n\ntriangles\nof "nearby"\n\nelement\n\nbe\n\nfaster\n\na time,\n\nVatson\n\nemployed\n\ncan\nunder\n\nlist\n\nof points\n\ndata-structures\n\nalgorithms\nat\n\nsmooth\n\nof intersected\n\nsignificantly\n\npoint\n\nrobustness\n\nnumber\n\nBowyer/X,\n\nill the\n\nnumber\n\nof O(NIogN)\n\nto run\none\n\nbe converted\n\nof all existing\n\nfor the\n\nquad-tree\n\nadvancing-front\n\nis generated\n\nmay\n\nas the\n\nbe included\n\ngeneration,\n\nthe\n\nbe expected\n\njust\n\ncircumcircles\n\nmust\n\nand\n\nfrom\n\nregions\n\nHowever,\nin three\ndimensions\nwhere there\nare on\nvertices,\nthe O(logN)\ncost of traversing\nthe octree\n\n\'\ni\n\nthe\n\npoints\n\na complexity\n\ndifferences\n\nare\n\nall elements\n\nt\n\ncan\n\nmesh\n\nfront\n\npoint\n\nterm\n\nby other\n\nalgorithm\n\ndimensions,\n\nsearches\n\nlogN\n\nof O(N2),\n\nwhen\n\nof mesh\n\ninserted\n\nis included,\n\nexhibited\n\npresent\n\ncomplexity\n\nall front\n\ncontext\n\nthese\n\nphase.\n\na new element.\n\nin the\n\nthe\n\nfront\n\nis required,\n\noccurs\n\nor when\n\nfor forming\n\nsought\n\ncase\n\nThis\n\npoint,\n\nof a newly\n\na constant.\n\nsame\n\ntime.\n\nare\n\ndistance\n\nroutines\n\nHowever,\nfront\n\nnew\n\ncandidates\n\nwhich\n\na worst\n\ntriangulation.\n\nby each\n\nwhich\n\ntriangulation\n\nin a postprocessing\n\nexhibits\n\nDelaunay\n\ndistributions\n\nDelaunay\n\nalgorithm\n\nalgorithm\n\nintersected\n\npoints\n\nIf a true\n\nedge-swapping\n\nprocedure.\n\n(i) Quadtree\n\nof generation.\nsmoothed\n\nmesh.\n\n(iii)\n\nFinal\n\nOnthe other hand,the presentalgorithmwill probablynot achieve efficiency\nthe\nexhibitedby\nDelaunay-triangulation\npoint-insertionmethods,due to the needto traversethe quad-tree\ndatastructures,\nnot\n\nwhich\n\nnecessary\n\nwell as the\nexample\nis depicted\n\nvalue\n\nare\n\nis descended\n\nof this\nprocess.\n\nfigure.\n\n3.5\n\nthe\n\nfirst\n\npart\n\nof Figure\n\nAnother\n\noption\n\nwith\n\nmethods\n\nare\n\nwith\n\nthe\n\nan\n\nefficiency\n\nthe\n\ndisadvantages\nsection\n\ni.e.,\n\nassociated\nat\n\nas will\nlater\n\nand\n\ndefined,\n\nup\n\nand\n\nspatial\n\nactive,\nby\n\nwaiting\n\nthe\n\nwhich\n\nbe used\n\nThus,\net\n\ntechnique\nhas\n\nalso\n\nby the\n\ninto\n\nthe\n\nmesh\n\nfor advancing\nbeen\nauthor\n\nfound\nis given\n\ncopy\n\nThe\nwhile\n\nthe\n\nsecond\nthe\n\nfinal\n\nfourth\n\npart\n\na very\n\nexhibits\n\ntechniques.\n\nof\n\nregular\n\n(Compare\n\nthis\n\nmesh\n\nsequentially,\nthe\nto work\n\nfront\nwell.\n\nwhich\n\nactive\nMarcum\n\ngeneration\n\nis created\n\nahead\n\nby using\n\nthe\n\nDelaunay\n\na heap-list,\n\nA particular\n\nbelow:\n\n22\n\nActive\n\ntechniques.\n\nAt\n\nfront,\n\nthen filtered,\nof the front,\n\npoint-insertion\nwhich\n\nalways\n\ntriangles\n\nthe\n\nonly\n\nbetween\n\npoint\neach\n\nof\n\nas either\n\nActive\n\ntriangles\n\nsimilarly\n\nand\nbeen\n\nas a function\n\nare\n\nborder\n\ndevised\n\nhas\n\ncircnmradius-bound\n\nnot.\n\nsimply\n\n[45],\n\ntriangulation\n\ntriangles\nthe\n\nare\n\nal.\n\nfunction\n\nthe\n\ndoes\n\nto three\n\ntriangulation,\net\n\nof a triangle\n\n[46] have\n\nimplementation\n\nreadily\n\nMueller\n\ninitial\n\nelements\n\nconsideral)ly\n\nDelaunay\n\nsatisfies\n\ndelilnits\n\nof the\n\nextend\n\nof\n\nproblems\n\nskewed\n\nthe\n\nThe\n\nmethods\n\nrobustness\n\ndistribution\n\nthat\n\ntriangles\n\nscheme.\nThese points\nare\nsuch as in concave\nregions\nusing\n\nthan\n\nthat\n\nis one\n\nmethods.\n\nare\n\n[44], and\n\nof the\n\ncoupled\n\nof highly\n\nThey\n\ncircumradius\n\nof such\n\nmethods,\n\nmethods\n\nthese\n\nother\n\nis one\n\nadvantages\n\npossible\n\nsection.\n\ntriangles.\n\nof edges\nand\n\nThe\n\npresence\n\nby Rebay\n\ntriangle\n\nof accepted\nset\n\nto the\n\nof advancing-\n\nor Green-Sibson)\n\npoint-insertion\n\nand\n\nHowever,\n\ntriangles\n\nthose\n\npoint-insertion\n\nan element-size\n\nall\n\nwith\n\ncircumcircle\n\nprevious\n\ntriangle\n\n[45] and\n\nof points\n\nthe\n\npermissible\n\na waiting\n\nfront,\n\nal.\n\nin a structured\nhyperbolic\nmesh\nwhich may be too close together,\ninserted\n\nfashion\n\nDelaunay\n\ndue\n\nAssuming\n\naccepted\n\nthe\n\nthe\n\nstructured\nset\n\nill\n\nadvancing-front\n\ntechniques,\n\ndescribed\n\nby classifying\n\nneighbors\n\nMueller\n\na new\n\nmesh\n\nfunction\n\ngeneration\n\nalgorithm.\nprocess,\n\nstrategy.\n\ntriangulations\n\nbeen\n\nmaximum\n\nAn\n\nare\n\nhyperbolic\nand\n\nmesh\n\nBowyer/Watson\n\nwith\n\nprocess.\n\nof the\n\n[43, 46].\n\nwhile\n\nconstitutes\n\nfront.\n\nmimic\n\nconsidered,\n\nhave\nthe\n\nfunction,\n\nfor\n\narithmetic,\n\nto generate\n\net al.\n\nfor refinement.\nthe\n\nthe\n\nby the\n\ntriangulation\n(e.g.\n\nthe\n\nrecovery\n\ngeneration\n\n[44] begins\n\nwhich\n\nthe\n\nsecond\n\ngeneration\n\npoint-placement\n\ndescribed\n\nalgorithm\n\nto control\n\nfield\n\ntriangles\non\n\nthose\n\nmesh\n\nor waiting.\n\ntriangles\n\nconsidered\n\ntype\n\nof boundary\n\nmethods\n\nRebay\n\nthe\n\nsmoothed\n\nalgorithms\n\nof\n\nthe\n\nby Marcum\n\ndefined\n\nwaiting\n\nthan\n\nis used\n\nand\n\nthroughout\n\nin this\n\nassociated\n\nas\n\nof the\n\nSuch\n\nlocation,\n\naccepted,\n\nedge\n\nsame\n\ncan also\n\nf(x,y),\n\nThe\n\nrequired\n\nof Delaunay\n\ndistributions\n\nuse of finite-precision\n\nbe shown.\n\ntaken\n\nadvantages\n\napplication\n\nto implement\n\nbackground\n\n_ =\n\nvertices.\n\nof post-processing\n\nof implementation\n\nease\n\nthe\n\nstages\n\ndimensions,\n\npoint\n\nand\n\nfront\n\nthe\n\ncopies\n\n(x, y) location,\n\nmesh\n\ngenerated\n\npoint-insertion\n\nthe\n\nwith\n\nsimpler\n\nthe\n\nthe\n\nintermediate\n\nmesh\n\nand\n\nTwo\n\nfor the\n\nlocation\n\nAn\n\nalgorithm\n\nquad\n\nfour\n\nas\n\nMethods\n\nadvancing-front\n\nsmooth\n\nare\n\n3.3,\n\nthe\n\nis to employ\n\nin conjunction\n\nthe\n\nof the\n\napplication\n\nPoint-Insertion\n\nfor combining\n\ntechniques\n\nfinal\nthe\n\nstructure\n\nbut\n\ncost,\n\nrobustness.\n\nof the figure.\n\nspatial\n\nparticular\n\nThis\n\ntriangulation\n\npart\n\nsearches\n\nfigure,\n\nfor additional\n\nDelaunay\n\nat the\n\na sufficient\n\nprocess.\n\n14, for example).\n\nAdvancing-Front\n\nfront\n\nthe\n\nthe\n\nstage\n\nof tile\n\nbefore\n\nrequired\n\na given\n\nwith\n\nspatial\n\nto consider\n\nsupporting\n\nthe\n\nvalues\n\nalong\n\nfor the\n\nneed\n\nin the first\n\nat\n\ncontains\n\nis advanced\n\nthat\n\nforms\n\nof the\n\nan intermediate\n\neven\n\nis shown\n\nfunction\n\nwhich\n\npart\n\nas the\n\nand\n\nthis\n\nquad\n\nthird\n\nof elements,\n\nthe\n\nis static\n\nis employed\n\nIt is noteworthy\n\ndistribution\nwith\n\nfirst\n\nthe\n\npoint-insertion\n\nthe advancing-front\n\nquadtree\n\ninterpolation\n\nillustrates\nin\n\nprice\n\nusing\n\nfront\n\nand\n\nand\n\nis viewed\n\nto evaluate\n\nto the leaf\n\nquadtree\n\nfigure\n\nis depicted\n\nthe\n\nThe\n\nis dynamic,\n\nThis\n\nof the\n\ninitial\n\nby bilinear\n\nquadtree\n\nmesh\n\nkept.\n\nmethods,\n\nat each\n\nprocess\n\nThe\n\nother\n\nfor triangulation\n\ncomplexity,\n\nIn order\n\nis obtained\n\npart\n\n17.\n\nfunction.\n\nin these\n\npoints\n\ngeneration\n\nin Figure\n\nquadtree\n\npresent\n\ncoding\n\nmesh\n\nquadtree\n\nspacing\n\nnot\n\nof candidate\n\nincreased\n\nof the\n\nof this\n\nare\n\nlist\n\naccepted\nwhich\n\nthe\n\nto a new\n\nand\n\nhave\n\nplacement\n\nstage,\n\nare\n\ntriangles\nan\n\nstrategies\n\nentire\nlayer\n\nfront\n\nis\n\nof points\n\nin order\nto remove\npoints\nand the filtered\npoint-set\nis\nmethods.\n\nchooses\n\nof these\n\nthe\n\nA more\nsmallest\n\nalgorithms,\n\ntraditional\nfront-edge,\n\nas performed\n\nStep 1: Definea field-spacing\nfunctionanddiscretize boundaries\nthe\naccordingly.\nStep 2: Createan initial triangulationwhichcovers entire domain(usingauxiliary points)\nthe\nStep 3: Insert all boundarypointsinto the triangulationusinga Delaunaypoint-insertionalgorithm (Bowyer/YVatsonr Green-Sibson).\no\nStep 4: Recoverhe boundaryintegrityusingedge-swapping\nt\ntechniques edge-face\n(or\nswapping\nin\n3D)\nStep\n\n5:\n\nFlag\n\ndomain\n\nall triangles\n\nwhich\n\nviolate\n\noutside\n\nthe\n\nlocal\n\nof the\n\nphysical\n\ndomain\n\ncircumradius-bound\n\nas accepted,\n\nas waiting\n\nand\n\n(usually\n\nall\n\nall\n\ntriangles\n\ninitial\n\ninside\n\ntriangles\n\nthe\n\nwill\n\nbe\n\nin violation).\nStep\n\n6:\n\n(which\n\nThe\n\nby smallest\nStep\nthe\n\nset\n\ncoincides\n7:\n\npoint\n\nthe\n\nStep\n\n8:\n\nInsert\n\n9:\n\nReclassify\nand\n\nStep\n\ndelimits\n\nboundaries\n\nsmallest\n\nahead\n\nStep\nbound,\n\nwhich\n\nthe\n\naccepted\n\nat this\n\nand\n\nstage).\n\nwaiting\n\ntriangles\n\nConstruct\n\nforms\n\na heap-list\n\nthe\n\ncurrent\n\nof these\n\nedges\n\nfront\nordered\n\nedge-length.\nPick\n\nnew\n\nof edges\nwith\n\n10:\n\nthis\n\npoint\n\ninto\n\nnewly\n\nupdate\nIf the\n\nfront\n\nedge\n\nof tiffs edge,\n\nthe\nfront\n\nthe\n\nformed\nfront\n\nis not\n\nfrom\n\nbased\n\nthe\n\ntop\n\non the\n\ntriangulation\ntriangles\n\nof the\n\nlocal\n\nheap-list,\n\nvalue\n\nusing\n\nand\n\nof the\n\nfield\n\nthe\n\nDelaunay\n\nand\n\nas accepted\n\nwaiting,\n\ndetermine\n\nthe\n\nposition\n\nof\n\nfunction.\npoint-insertion\n\nbased\n\nalgorithm.\n\non the\n\nlocal\n\ncircumradius\n\naccordingly.\nempty,\n\ngo to step\n\n7, else stop.\n\n9\n\n//i\n\nI\n\nf\n.f"\nP2\n\ni\n\n,"\n\nT/\n\n//\n\n!\n\n,PI\n\n;\n\nJ\n\nFigure\ninsertion\n\nThe\n\n18:\nIllustration\nmethod.\n\npoint-placement\n\nof the\n\ncurrent\n\nby\n\nthe\n\nfield\n\nby\n\nthe\n\nof point-placement\n\nstrategy\n\nfront-edge,\n\nintersection\n\nfunction.\n\nis illustrated\n\nat a distance\nThe\n\nlocation\n\nof the\n\ntriangle\n\nstrategy,\nto\n\nan existing\n\nstage\n\nfor the\n\nidentity\n\nof the\n\nplacement\nas the\n\nformed\n\nas described\nmesh\nsame\n\nwith\n\npoint.\n\naccepted\n\nstrategy\n\nadvancing-front\n\nthis\n\nand\n\nas the\n\nedge.\n\nDelaunay\n\npoint\n\nextreme\n\nThe\n\nnew\n\npoint\n\nalong\n\nthe\n\ncircle\n\nDelaunay\n\nis placed\n\nmedian\n\nof the\n\nthe\n\nin the\n\ntriangles\n\nthe\nprevious\n\nis fairly\n\nnew\n\nat\n\nfront\n\nthe\n\nmesh\n\nevident.\n\nprevious\n\nsection,\n\nprocedure\n\nof the\n\nprevious\n\n23\n\ngeneration\n\nsection.\n\nof the\n\nwill\n\nThe\nThis\n\nand\n\nthus\n\nsection,\n\nnot\n\nfall\n\nshould\nprovided\n\nend\nthis\n\nof this edge\nof the current\npoint-insertion\n\nat\n\nan\n\nis clearly\n\nalgorithm\n\nlower\n\ncoincidentally\n\nprocess\nfront\n\nmedian\n\n(since\n\nedge,\n\nto a cireumcenter\n\npoint\n\nthe\n\np, as prescribed\n\nis limited\n\ncurrent\n\npoint-\n\nalong\n\nof circumradius\n\ncorresponds\n\nensures\n\n19 illustrates\n\nwaiting\n\nadvancing-front\n\nin a triangle\n\ninscribed\n\nThis\nwhich\n\nshown\n\nalgorithm\n\n18.\n\nresults\n\nnew\nthe\n\nfor\n\nwhich\ncan be formed\nwith a triangle\nconsisting\nextreme\nby the location\nof the circumcenter\n\n3.3,\n\nFigure\n\nconfiguration\n\nin Figure\n\nwith\n\nin section\n\nstrategy\n\nwhich\n\nof the\n\nmedian\n\nis the smallest\npossible\ncircumcircle\nand a third\npoint),\nand at the other\nwaiting\n\ni\n\nthe\n\nintermediate\n\nvisible,\n\nuses\nyield\n\nthe\n\nclose\n\nthe\n\nand\n\nthe\n\nsame\n\npoint-\n\nidentical\n\nmesh\n\nsame\n\nbackground\n\nspacing\n\nfunction\n\nis specified\n\n(not tlle case in this example).\n\nThe main\n\ndifference\n\nbetween\n\nthese\n\ntwo\n\nalgorithms\nis that, in the former case, the waiting triangles which are most often highly skewed, are\nnever formed, thus leaving an ungridded\ngap region between the fronts. This results ill the need to\nemploy quadtree\ndata-structures\nto perform the search for nearby front, points and circumcircles.\nIn the present method,\nin all efficient, manner\n\nthe domain is always entirely covered by a triangulation,\nwhich is utilized\nfor supporting\nall spatial searching\noperations\n(implenlented\nas neighl)or\n\nwalks).\n\nFigure\n\n19:\n\nA notable\n\nPartially\n\nfeature\n\ncompleted\n\nof tile present\n\nadvancing-front\n\nDelaunay\n\nmethodology\n\nis that\n\npoint-insertion\n\nthe boundary\n\nmesh.\n\nrecovery\n\nprocedure\n\nmust\n\nbe performed\nimmediately\nafter the insertion\nof the boundary\npoints, and cannot be performed\nat\nthe end of the mesh generation\noperation,\nafter all interior points have been added, as discussed\nin section 3.3.\nThis is due to the fact that the boundary\ndiscretization\nconstitutes\nthe initial\nfront, the location\ndiscretization\nhas\n\nof which is required to guide the placement\nof new points.\nOnce the boundary\nbeen recovered,\nit must be maintained\nthroughout\nthe insertion\nof all interior\n\nmesh points.\nWhile ill two dimensions\nthis is easily achieved\nby modifying\nthe point-insertion\nalgorithms\naccording\nto the principles\nof constrained\nDelaunay\ntriangulations,\nthe lack of any\nsuch notion in three dimensions\nmakes the situation\nmore difficult.\nIndeed, tile initial mesh with\nrecovered boundaries\nof the Delaunay-based\n\nin general will not represent\npoint-insertion\nalgorithms.\n\na Delaunay\n\ntriangulation,\n\nand may lead to failure\n\nAn alternative\ntechnique\n[25, 46] circumvents\nthis issue. The approach is based on relaxing the\nconstraint\nthat the final mesh be as close as possible to Delaunay, and relies on variants of the GreenSibson\nabove,\n\npoint-insertion\nalgorithm.\nThe basic mesh generation\nprocedure is similar to that\nexcept that in step 8, a truncated\nGreen-Sibson\nalgorithm\nis employed\nto insert\n\ndescribed\nnew field\n\npoints.\nThe new point is inserted\nby joining it to the four vertices of its enclosing\ntetrahedron\n(or five vertices of two neighboring\ntetrahedra\nin the event the point coincides with a face, with\na similar extension\nfor a point coinciding\nwith an edge), and then swapping\nfaces and edges of\nthe newly formed and subsequently\nmodified elements according\nto the in-circle criterion,\nuntil a\nDelaunay\nmesh is recovered, or the process can no longer "improve"\nthe mesh. Boundary\nintegrity\nis easily\n\nenforced\n\nin this\n\nmanner,\n\nsince face-edge\n\nswaps\n\nwhich\n\nalter\n\nthe boundary\n\ndiscretization\n\nare simply prohibited.\nWhile the Bowyer/Watson\nalgorithm\nrelies on the Delaunay\nproperty\nof\nthe mesh in order to guarantee\nthe convexity\nof the reconstructed\nregion and the validity of tile\n24\n\nnew triangulation, the Green-Sibsonlgorithm can still be employedwith initial constructions\na\nother than Delaunaytriangulations. In suchcasesit reduces a local optimization technique\nto\nwhich attemptsto approximate Delaunay\nthe\ntriangulation. By modifyingthe face-edgewapping\ns\ncriterion, the algorithmcan beemployed constructother types of triangulations,\nto\nsuch as rainmax triangulations.\nmust be implemented\n\n(ttowever,\nforward\nas well as backward\npropagation\nin such cases as described in section 2.1.2). In fact,\n\nmay not be the optimal\nall the elegant properties\ntetrahedron\n\nconstruction\nassociated\n\nwith vanishingly\n\nimagine\nfour coplanar\nadmit such ill-behaved\n\nfor three-dimensional\ninesh generation\nproblems,\nin spite of\nwith such triangulations.\nSince it is possible to form a sliver\n\nsmall volume\n\nfor which the circumsphere\n\nfor generating\nrain-max\nrain-max triangulation.\nresults\n\nin poor\n\nis not excessively\n\nlarge\n\npoints on the sphere),\nDelaunay\ntriangulations\nin three dimensions\nelements.\nThis suggests that min-max triangulations\nmay t)e better\n\nfor three-dimensional\ngrid generation\npurposes.\nOn the other hand, the use of Green-Sibson\n\nand\n\nof the swapl)ing\ntests\nDelaunay\ntriangulations\n\ntype\n\npoint-insertion\n\nlocal-reconnection\n\n( i.e..\noften\nsuited\n\nalgorithms\n\ntriangulations\nsuffers from the inability\nto recover the globally optimum\nIn fact, the algorithm typically gets caught very quickly in a local optimum\n\nquality\n\nmeshes.\n\nA key feature\n\nwhich\n\nenables\n\na closer\n\napproximation\n\nof the\n\nglobal optimum\nand yields higher quality meshes, is the use of an intermediate\nDelaunay\nin-circle\nswapping\ntest, as demonstrated\nin [43, 46]. In this approach,\neach time a new point is inserted,\nthe\nsurrounding\nfaces and edges are first swapped according\nto the traditional\nDelaunay\nin-circle test,\nand then re-swapped\naccording\nto the rain-max\ncriterion.\nThe use of this intermediate\npseudoDelaunay\nconstruction\nserves to broaden the range of influence of the new point, thus providing\na\nmore global effect, and avoiding\nthe rain-max\ncriterion.\n\n4\n\nAdaptive\n\nthe local optima\n\nwhich typically\n\nthe straight\n\napplication\n\nof\n\nMeshing\n\nAside from the treatment\n\nof complex\n\ngeometries,\n\nthe second main advantage\n\nis the ease with which solution-adaptive\nmeshing\nis assumed in the representation\nof unstructured\nperformed\narbitrarily\nin any region of the\ncourse, to enable a higher accuracy solution\n\nmeshing\n\n\xe2\x80\xa2 Computation\n\xe2\x80\xa2 Estimation\n\nsolution\n\nof initial\n\nstrategy\n\nof unstructured\n\nmeshes\n\nmay be implemented.\nSince no inherent\nstructure\nmeshes, mesh refinement\nand coarsening\nmay be\n\nmesh.\nThe principle\nidea of adaptive\nat lower cost, through a more optimal\n\ngrid points for each computed\nsolution.\nThe entire procedure\nthe output (the solution) drives the machinery\nwhich generates\nin an adaptive\n\nplague\n\nis akin to a control\nthe solution itself.\n\nmeshing is. of\ndistribution\nof\nprol)lem, where\nThe basic steps\n\nare:\n\nsolution.\n\nof local error in solution.\n\n\xe2\x80\xa2 Modification\n\nof mesh\n\naccording\n\nto estimated\n\nerror values.\n\n\xe2\x80\xa2 Initialization\n\nof solution\n\non adal)ted\n\nmesh.\n\n\xe2\x80\xa2 Resumption\n\nof numerical\n\nsolution\n\nprocedure.\n\nA complete adaptive\nsolution package must therefore include a flow solution module, an error\nestimation\ntechnique,\nand a grid adaptation\n(refinement-derefinement)\nmodule, as well as an accurate representation\nof the actual configuration\ngeometry.\nThus, the construction\nof an adaptive\nsolution methodology\ndimensions.\n\nrepresents\n\na large\n\ninvestment\n\n25\n\nin software\n\ndevelopment,\n\nparticularly\n\nin three\n\nThe needto storegeometrydata is dictatedby the requirements placing new adaptively\nof\nintroduced\nboundary\npoints oll the curves or surfaces which define the original geometry,\nrather\nthan simply oil the coarse grid approximation\nto this geometry,\nas shown in Figure 20.\n\nFigure\n\nThe\n\n20:\n\nextraction\n\nIllustration\n\nand\n\nof fine and coarse\n\nreduction\n\nmay prove to be a difficult\n\nof this data\n\ntask, particularly\n\ngrid discretizations\n\nfrom its defining\nfor complex\n\nof curved\n\nsource\n\n(usually\n\nthree-dimensional\n\nboundary.\n\na CAD\n\ndata-package)\n\nconfigurations.\n\nAnother\n\npossibility\nis to encode the geometry\nas a very fine set of points (finer than the highest expected\nmesh resolution).\nThis seemingly\nprimitive\ntechnique\nmay be making a comeback,\nparticularly\nwith the availability\n\nof rapid\n\nhigh-resolution\n\ngeometry\n\nscanning\n\ndevices.\n\nThe actual mechanics\nfor modifying\nthe mesh, i,e., adding,\npoints,\nas well as reconnecting\nthem, is usually the topic which\nadaptive\nmeshing papers.\nIt is also perhaps\nthe best\nMost adaptive\nmeshing techniques\ncan be implemented\n\nremoving,\nand displacing\nmesh\nreceives the most elaboration\nin\n\nunderstood\nof all the required\nas extensions\nor enhancements\n\nmesh generation\nstrategies.\nThe formulation\nof an effective mesh refinement\nhand, is a difficult task which has not been adequately\nresolved to date.\nthat an exact characterization\nobviously impractical.\nWhile\n\nelements.\nto known\n\ncriterion, on the other\nThe main problem is\n\nof the error requires a knowledge\nof the solution itself, which is\nfinite-element\nerror estimates\nhave been developed for simple elliptic\n\nproblems,\nthe difficulty is compounded\nfor fluid dynamics\nproblems by the fact that the governing\nequations\nrepresent a coupled system of non-linear hyperbolic\npartial-differential\nequations.\nA true\ncharacterization\nof the error would necessarily require information\nfrom all flow variables.\nEstimates\nwhich\n\nrely on the smoothness\n\nproperties\n\nof the solution\n\nbreak\n\ndown in regions\n\nnear discontinuities\n\nsuch as at shocks.\nFurthermore,\nall error estimates\nrely on the fact that the computed\nsolution\nis asymptotically\nclose to the exact solution.\nThe non-linear\nand hyperbolic\ncharacter\nof the\ngoverning\nequations\nmay, however, result in situations\nleast locally. Consider for example a separation\nbubble\n\nwhere this assumption\ndoes not hold, at.\nwhich only appears when certain upstream\n\nflow features\nhave been adequately\nresolved, or the diffusion\nupstream\nresolution.\nIn such cases, the downstream\nsolution\nthe exact solution in these regions.\nThe inadequacy\n\nof current\n\nerror\n\nestimators,\n\ncoupled\n\nof a wake profile due to inadequate\nis in no way asymptotically\nclose to\n\nwith the fact that\n\nthe computed\n\nsolution\n\nmay be far removed from the exact solution, are the main reasons why adaptive meshing cannot be\nutilized in lieu of mesh generation\nitself. In other words, the idea of initiating\nthe calculation\nwith\nan extremely\ncoarse grid (possibly just fine enough to resolve the essential geometry\ntopology) and\nrelying on adaptive meshing to generate the final mesh, is impractical\nsince many flow features will\nnever be captured\non such a mesh. The generation\nof a suitable initial mesh, with good resolution\nin regions of expected\nsolution activity, is essential for good overall adaptive\nsolution performance.\n\n26\n\n4.1\n\nRefinement Criteria\n\nThe most popularrefinementcriteria for fluid-flow problemsare essentiallyheuristicallyderived\ngradient-basedriteria.,whichinvolvea singleor multiplephysicalflow variables.As all example,\nc\nthe gradientof pressure\ncanbeusedto identifyinviscidflowfeatures, hilethe gradientof velocity\nw\ncanbe usedto trackshearlayers.In actualfact, it is the undividedgradientwhich is employed:\ne = --\n\nOx\n\n\xe2\x80\xa2h\n\n(2)\n\nor, discretely:\n= Au\n\n(3)\n\nThe use of an undivided\ngradient ensures that the value of e, which\ndecreases\nas the mesh size is reduced.\nSince second-order\nmethods,\ncan represent\nlinear solutions\nbetter refinement\ncriteria:\n\nexactly,\n\nan undivided\n\nsecond\n\nshould approximate\nwhich are typically\n\ndifference\n\nmay be expected\n\ntile error,\nemployed.\nto vield\n\n0 2 It\n\n_= --.17\n\n(4)\n\nOx 2\n\nBoth\n\nfirst\n\nand\n\nliterature.\n\nsecond\n\nHowever,\n\nand is often\n\nfound\n\ndifference\n\nbased\n\nrefinement\n\nthe use of first differences\nto work better\n\ncriterion\nwhich is designed\nis achieved by forming the\nwritten as:\n\nin practice.\n\na\n\ncriteria\n\nhave\n\nbeen\n\nis more conservative\nLohner\n\ntested\n\nand\n\n(i.e., produces\n\n[47] advocates\n\nemployed\n\nin the\n\nmore refinement)\n\nthe use of a non-dimensional\n\nto assign equal weight to weak as well as strong flow features.\nThis\nratio of second and first derivatives.\nThe refinement\nindicator\ncan be\n\n,9 2 t_\n\n_\n\n(5)\nhi 0_ + oK\nOx\n\nwhere _ represents\nsome neighborhood\naverage of the flow variable\nThis extra term in the denonfinator\nacts as a "noise" filter which\n\nu, and o is a small parameter.\navoids triggering\nrefinement\nin\n\nregions of small solution oscillations.\nThis type of refinement\ncriterion\nfor two- and three-dimensional\ntransient\nflow solutions involving shock\n\nhas been\nwaves.\n\nused extensively\n\nAn interesting\nstudy of the effectiveness\nof various refinement\ncriteria for steady-state\nproblems\ncan be found in the paper by Warren et al. [48]. The error levels in various adapted\nmesh solutions\nusing different refinement\ncriteria\n"exact"\nsolution\n(i.e., a solution\n\nwere assessed by comparing\nthe adapted\ncomputed\non a highly resolved, globally\n\nexperiments\nindicate\nthat the modification\na local mesh length-scale\nsuch as:\n\nof the undivided\n\ndifferences\n\nmesh solutions\nrefined mesh).\n\nin equation\n\n= A u \xe2\x80\xa2A x\nproduces\nundivided\n\nto the\nTheir\n\n(3) to include\n\n(6 )\n\na. more effective refinenlent\ncriterion.\nThis is partially due to the fact that while the simple\ndifference form of equation (3) decreases\nin magnitude\nas the mesh is refined in smooth\n\nregions of flow. it. remains approximately\nconstant\nin the vicinity\nwave profile steepens\nas the nlesh is refined, and the jumps remain\n27\n\nof shock waves,\nalmost constant,\n\nsince the shock\nttowever, even\n\nin regionsof smoothflow, the additionallengthscaleweightslargecellsmoreheavilythan small\ncells,and drivesthe adaptationprocess\nclosertowardsglobalrefinement.The introductionof an\nextra length scalethus producesa moreconservative\ncriterion (i.e.. resultsin morerefinement)\nandthus greaterreductionof the error canbeexpected. his asymptotictendency\nT\ntowardsglobal\nrefinementis actually tile behaviorwhich is desiredfor steady-state\nproblems. While adaptive\nmeshingis typically thought of as a process\nthat refinesonly local regionsof the mesh,this is\ncharacteristic theinitial stages\nof\nofanadaptivemeshprocedure, here appropriate\nw\nthe\ndistribution\nof meshresolutionis set up to matchthe solution. Oncethis hasbeenachieved, ndthe error is\na\npresumablyequipartitionedthroughoutthe domain,any increase solution accuracycan only\nin\ncome about\nbehavior.\n\nfrom\n\nglobal\n\nrefinement.\n\nRefinement\n\ncriteria\n\nmust\n\ntherefore\n\nbe able to reproduce\n\nAlthough\ngradient-based\nrefinement\ncriteria have been employed\nsuccessfully\nfluid dynamics,\nsuch techniques\nare not well founded and are far from optimal.\nof a refinement\ncriterion is measured\nin terms of accuracy\nrequired.\nIn the above discussion,\nthe more conservative\nmost\n\nsuccessful\n\nnecessarily\n\nat reducing\n\nthe\n\nmost\n\nthe solution\n\nefficient.\n\nThe\n\nerror,\n\nthe development\nof better error estimation\nextrapolation\nmethod [49].\n4.2\n\nMesh\n\nMesh\n\nadaptation\n\nbution\n\nAdaptation\n\nof existing\n\nin excessive\n\noptimal\n\nmost\n\nrefinement,\n\nrefinement\n\nlikely through\n\ncriteria\n\nand\n\nare not\n\nwill require\n\nthe use of some\n\ntype of\n\nTechniques\n\nmay involve\nvertices\n\nof more\n\ntechniques\n\nin computational\nThe effectiveness\n\ndelivered for the number of mesh points\ngradient-based\ncriteria are obviously the\n\nbut also result\n\nconstruction\n\nthis\n\nthe addition\n\nand\n\nof extra\n\nthe reconnection\n\nvertices,\n\nof mesh\n\nthe\n\nremoval\n\nvertices.\n\nThe\n\nof vertices,\ncharacter\n\nthe\n\nredistri-\n\nof the problem\n\nto be solved dictates\nthe requirements\nof the mesh adaptation\nstrategy.\nFor example, steady-state\nproblems\nusually involve a small number of adaptation\nphases as part of a lengthy solution process.\nTherefore,\nrelatively sophisticated\n(i.e.. more optimal) adaptation\nstrategies\ncan be employed,\nsuch\nas, in the extreme case, complete mesh regeneration.\nMesh refinement\nprocedures\nare most important here, while de-refinement\nhas only a minor effect and can often be omitted for steady-state\ncases. For transient\nproblems,\nmesh adaptation\nmust be performed\nevery several time-steps,\nand\nthus efficiency is much more important\nthan optimality.\nMesh refinement\nand de-refinement\nare\nboth essential\nfor transient\ncases.\nFurthermore,\nthe accuracy\nof interpolation\nfrom the original\nmesh to the refined mesh affects the solution accuracy\n(unlike the steady-state\ncase), and thus\naccurate\ntransfer\nschemes are required.\nThese requirements\nhave often lead to the use of simple\nelement subdivision\nschemes for transient\nflows.\nFor steady-state\nas well as transient\nproblems,\nmesh adaptation\nstrategies\nare generally\non one of the previously\ndiscussed\nnlesh generation\nprocedures,\nand can be implemented\nextension\nof the originating\nprocedure.\n4.2.1\n\nDelaunay\n\nThe Bowyer/Watson\nof new points\ntation\n\nPoint-Insertion\nand Green-Sibson\n\nin any regions\n\nalgorithms.\n\nBased\n\nalgorithms\n\nof an existing\n\nA particular\n\non Solution\ndescribed\n\nmesh,\n\nimplementation\n\nGradients\nin section\n\nand are thus natural\nof an adaptive\n\nBowyer/Watson\nalgorithm\nperformed\nby the author\nDelaunay\ntriangulation\nmesh has been constructed,\n\nbased\nas an\n\nmesh\n\n[50] is described\nthe flow solution\n\n2.1 enable\ncandidates\nsolution\n\nthe introduction\nfor mesh\nstrategy\n\nadap-\n\nusing\n\nthe\n\nbelow. Assuming an initial\nis computed\non this mesh.\n\nUsing the undivided\ngradient\nof density as a refinement\ncriterion\n(c.f. equation\n(3)), each edge of\nthe mesh is then examined\nand flagged for refinement\nif the difference of density along the edge\nis larger than some threshold\nvalue, which is set proportional\nto the average of all density differences taken over all mesh edges. This simple edge-based\nrefinement\nstrategy\ntends to produce\nnon-isotropic\n\npoint\n\ndistributions\n\nwhich\n\ntriangulate\n\n28\n\npoorly.\n\nTherefore,\n\na more\n\nisotropic\n\nrefinement\n\nstrategy\n\nis desired.\n\nthe\n\nremaining\n\nthis\n\noperation\n\nstructure\n\nThis\n\nedges\n\nis achieved\n\nby effecting\n\nfor refinement\n\nrequires\n\nemployed\n\nthe\n\nuse of a cell-to-edge\n\nby the\n\na single\n\nof ally triangle\n\nDelaunay\n\npoints\n\nare\n\nin Figure\n\n20.\n\nthe\n\nmesh\n\nusing\n\nthe\n\npoints\n\nrepositioned\n\nThe\n\nnew\n\nthe\n\ntriangulation\n\nlinear\n\noperators\n\n(or\n\non the\n\ngrid\n\nsize)\n\nmanner\n\nnew\n\nthe\nput\n\nfrom\nfor the\n\nmesh.\n\nThe\n\nspline\n\nthe\n\nmesh\n\nto\n\nalgorithm\nprocedure\n\nthe\n\nthe\n\nnew\n\nis repeated\n\nto the\n\nedge.\n\nfiner\n\nseveral\n\nFor boundary\ngeometry,\n\ntimes,\n\ninto\n\nby ret)ositioning\nthe\n\nchapter)\nuntil\n\nas depicted\n\ninterpolated\n\n(using\n\nnext\n\nedges,\n\nsequentially\n\nis then\n\nmesh\n\nthat\ndata-\n\ndata-structure\n\nis smoothed\n\nin the\n\nflagging\nNote\n\ncell-to-node\n\ntriangulated\n\nsolution\n\nas described\n\nand\n\nedges.\n\nedge-to-node\n\nmesh\n\nThe\n\ntriangles\n\noriginal\n\nand\n\nrefined\n\ntechnique.\n\nthe\nof the\n\ninserted\n\nnew\n\nmesh\n\nor two refined\n\nand\n\ndefines\n\nthen\n\nthe\n\nin ad(lition\n\nmidpoint\n\nwhich\n\nThe\n\nfiltering\noriginal\n\nentire\n\nat the\n\nand\n\nalgorithm.\n\nmultigrid\n\nover\n\na single\n\nalgorithm,\n\ncurve\n\nin a list,\n\nt.o a Laplacian\n\nconstructed\n\nsolved\n\nare\n\nBowyer/Watson\n\naccording\n\npiecewise\n\nonto\n\npoints\n\nhas\n\ndata-structure,\n\nemployed\nby the flow solution\nalgorithm.\nFor each flagged\nedge, a new point is created\nthese\n\nloop\n\nwhich\n\ninterpolation\nand\n\nthe\n\nin a\n\nthe\n\ndesired\n\nflow is\n\naccuracy\n\nis attained.\n\nFigure\n22:\nAdaptively\ngenerated\nmesh for idealized\nfour element\nairfoil\n\nFigure\n21:\nAdaptively\ngenerated\nmesh for NACA\n0012 airfoil.\n\ngeometry.\n\nFigure\n\n21\n\npasses,\nrather\n\nfor\nwell\n\nillustrates\n\nthe\n\nfinal\n\nthe computation\ndefined\nin this\n\nmesh\n\nobtained\n\nof transonic\ncase, and the\n\nby\n\nthis\n\nprocedure,\n\nafter\n\nflow over a NACA\n0012\nvarious\nlevels of refinement\n\nFigure\n22 illustrates\na.n adaptive\nmesh obtained\nfor the computation\na multi-element\nairfoil.\nHere,\ntile flow is smooth\nand features\nare\nlevels\n\nused\n\nvariation\n\nto construct\nof the\n\ndimensions.\nflow\n\nover\n\nthrough\nis clearly\n\nmesh\n\nFigure\nan\ntwo\n\nthe\n\nin most\n23\n\n()NERA\n\nM6\n\nin the\n\nmesh\n\nregions\n\ndepicts\n\napplications\n\nreflected\n\nadapted\n\nwing.\n\nan\n\nof the\nadapted\n\nThis\n\nof adaptive\nmesh\n\nare\n\nmesh\n\nnot as evident,\ndomain.\ncontains\n\nrefinement.\n\nrefinement\n\nThis\n\ntetrahedral\nThe\n\npattern.\n\n29\n\nand\nsame\n\nmesh\na total\ndouble\n\nthree\n\nadaptive\n\nairfoil.\nThe\nare evident\n\nrefinement\n\nflow features\nare\nin the final mesh.\n\nof inviscid\nsubsonic\nflow over\nnot. well defined.\nThe various\n\nthe\n\nprocedure\n\nprocedure\n\nresults\n\nextends\n\nin a smooth\n\nreadily\n\nto three\n\nemployed\n\nto compute\n\nthe\n\ntransonic\n\nof 173,412\n\npoints,\n\nwas\n\nobtained\n\nshock\n\nstructure\n\nand\nin the\n\nflow\n\nsolution\n\nFigure 23: Adaptivelygenerated\nmeshin threedimensionsor ONERAM6 wing.\nf\n\n4.2.2\n\nExtensions\n\nAny\n\nmesh\n\nto\n\ngeneration\n\nfunction\n\ncan\n\nuntil\n\nelements\nobtained\n\non\n\ndescribed\n\nwhich\n\nbeen\n\nsatisfy\n\nthe\n\nto specify\n\nsmall\n\nmesh\n\nthen\n\nresuming\n\nstrategy,\nalso\n\nof course,\nachieved\n\nfor each\n\ndeleted\n\npoint\n\ncurrent\n\n4.2.3\n\n[26].\n\nmesh\n\nadaptive\napproach,\n\nthe\ncurrent\n\nbe achieved,\n\nwhich\n\nencodes\n\nIn\n\nprinciple,\n\nthe\n\nis created\n\nit is possible\nmay\n\nhistory\n\nbe\n\nA new\n\nalgorithm,\nThis\nmay\n\nconvex\n\nthat\n\ncavity\n\nprescribed\n\nby\n\nTanemura-Merriam\nupon\n\nthe\n\nto encounter\n\nbe required.\n\nof the\n\nresult\ncan\n\nde-refinement\n\nby applying\n\napproach\n\nthe\n\nerror).\n\nresulting\nthan\n\nwhich\n\nhas\n\nis achieved.\n\nmesh\nthe\n\nmesh,\n\nfunction\n\ntriangulation\n\nis smaller\n\ncavity\n\na hierarchical\n\nto reflect\n\nfunction\n\nretriangulating\n\nSteiner\n\nflow solution\n\nor solution\n\nSteiner\n\nbackground\n\nhowever,\n\nsophisticated\n\nthe\n\nbackground\n\ngradients\nthe\n\nfor example,\n\ndimensions,\n\na more\n\nOnce\n\nthe\n\nelement-size\n\nof the\n\nto the\n\nremoval\n\ncavities\nAn\n\ntriangulation\n\nof a\nwhich\n\nalternative\n\nis\n\nconstruction,\n\n[51].\n\none\n\nThe\n\nfrom\n\nmesh\n\nmesh\n\nto the vertices\n\nIn three\n\nelement-size\nin a solution\n\ngrid,\n\nrefinement\n\nthe\n\nthe\n\nadded\n\nbe modified\n\nflow\n\nrefinement.\nand\n\nConsider\n\nobtained.\n\nrestarting\n\nsequentially,\n\nproblems.\nare continually\n\nmay\n\nnew\n\ndistribution\n\nRemeshing\n\nbackground\nbe modified\n\nunstructured\n\nmay\n\nand\n\nby Barth\n\nAdaptive\n\nbetween\n\nmesh.\n\na data-structure\n\nas suggested\n\na new\n\nTiffs\n\nof high\n\nelement-size\n\n(i.e.,\n\nsolution,\n\nto the\n\nadditional\n\nare\n\nfunction\n\nto this\n\nin regions\n\nwhere\n\nmeshing\n\nnew points\n\nbackground\n\nby simply\n\npoints\n\nalgorithm\n\nwhere\n\nsize-function\n\nconvergence\n\nill regions\n\nfunction.\n\nthe\n\nsizes\n\nproduces\n\nbe tetrahedralized,\n\nto maintain\n\nThe\nalso\n\nelement\n\nremoving\n\ntriangulation\n\nfrom\n\ncannot\n\nthe\n\nuse of a background\n\nfor adaptive\n\n3.3,\n\ncriterion\n\nuntil\n\npoint,\n\nbackground\n\nDelaunay\n\nmanner\n\nbe constructed\n\nonly\n\nby\n\noil the\n\nbackground\n\nmesh,\n\ntriangulation\n\nbe\n\nthe\n\nthe\n\ninitial\n\nadapted\n\nmay\n\nrelies\n\nin section\n\nof a refinement\n\nmodified\nand\n\nwhich\n\nin a natural\n\nmethods\n\napplication\n\nTriangulation\n\ntechnique\n\nbe extended\n\ntriangulation\n\nof the\n\nSteiner\n\napproach\nusing\n\ndistribution.\nand\n\nis to\n\nadvancing-front\n\nscratch,\n\ncurrent\n\ndistribution\nadaptive\n\nmesh\ndesired\n\nfllnction\nof traditional\nmanner.\nFor background\ndefine\n\nmesh\nthe\n\nA less\n\nnewly\n\nmesh\n\nnew\n\ngeneration\ndefined\n\nexpensive\n\nis removed\n\nthe\n\nfunction\nsoftware\n\nbackground\n\nalternative\n\nin various\n\nresolution\n\n30\n\non\ncan\n\nthe\n\ncurrent\n\nthen\n\nof the\n\nNew\n\nlocal\n\nmethods\nmay\non a (coarse)\nmesh\n\nbe utilized\n\nfunction\nis to use\n\nregions\n\nis large.\n\nadvancing-front\nfunctions\ndefined\n\ndomain\nmeshes\n\nthe\n\nremeshing\nwhere\nare\n\nfor\n\nto regenerate\n\nto determine\n\nlocal\n\nslated\n\n[34].\nthe\n\nthen\n\nsolutionIn this\n\ndiscrepancy\ngenerated\n\nin\n\nthese void regions\nboundary\nbetween\n4.2.4\n\nusing the advancing-front\nmeshed and void regions.\n\nh-Refinement\n\nor Subdivision\n\nh-refinement\ntechniques,\ntermined\nset of primitive\n\nwhich rely\noperations,\n\nmethod,\n\nwhere\n\nthe initial\n\nfront\n\nis determined\n\nby tile\n\nTechniques\non the subdivision\nof mesh elements\nare both simple and efficient.\nThese\n\naccording\nto a predemethods\nresult ill fine\n\ngrid elements\nwhich are fully nested with their forming coarse grid elements,\nas well as fine grids\nwhich contain, as a subset of their vertices, all the coarse grid vertices.\nThese properties\nenable\na very accurate\nand efficient transfer\nframework for encoding history effects\nin turn,\n\nenables\n\nefficient\n\nof variables\nfrom one grid to another,\nto determine parent-child relationships\n\nuse of de-refinement\n\ntechniques.\n\nEfficiency,\n\nas well as a simple\nbetween cells. This,\n\nde-refinement,\n\nand accuracy\n\nof interpolation\nmake these methods ideal for transient problems.\nThe fully nested property of\nthese techniques\nhas also been exploited\nfor constructing\nunstructured\nmultigrid\nalgorithms\nbased\non such meshes (see chapter on multigrid methods).\nThe main drawback of such methods is the possibility\nof generating\nill-shaped elements\nand\nmeshes\n\nwith arbitrarily\n\nhigh connectivity\n\nat isolated\n\nvertices.\n\nstrict rules on the permitted element subdivision\ntypes\nthe subdivision\nand de-refinement\nof three-dimensional\nreproduced\n\nIn order to avoid\n\nsuch\n\nsituations.\n\nmust be enforced.\nA set of primitives\nfor\ntetrahedra\nare given by Lohner [47], and\n\nin Figure 24.\n\n2:4\n1:2\n\n.-"\n\na,---\n\n""\n\n2:8\n\n1:4\n\nFigure\n\n24:\n\n1:2, 1:4, and\npermitted.\ntransformed\nthese rules\npatterns\n\nRules\n\nfor subdivision\n\n1:8 refinements\n\nrefinement\n\nare permitted.\n\nof three\n\nSubsequent\n\ndimensional\n\ntetrahedral\n\nmeshes.\n\nrefinements\n\nof 2:4, 2:8_ and\n\n4:8 are also\n\nHowever, if a 1:2, 1:4, or 2:4 configuration\nis to be refined further,\nit. must first be\nto a 1:8 refinement,\nand then its child elements\nrefined recursively.\nWhen applying\nto a set of elements\nin a mesh, care must be taken to ensure compatible\nrefinemenl\n\nare obtained\n\non neighboring\n\nelelnents,\n\nboring elements.\nThis is achieved by itera.tively\nelements until a compatible\npattern is achieved.\n\nand to avoid jumps\nmodifying\n\n31\n\nlarger\n\nthe refinement\n\nthan\n\n8:1 between\n\ntypes\n\non groups\n\nneighof mesh\n\nI\ni\n\nFigure\n\n25:\n\nshock-wave\nsion).\n\n.....\n\nExample\nproblem\n\n. ,,\n\n,\n\nof three-dimensional\nover an unfriendly\n\nmesh\n\n__.\n\nadaptation\n\nconfiguration.\n\nby subdivision\n\n(Reproduced\n\nfor transient\n\nfrom [52] with\n\nFigure 25 illustrates\nan example of a transient\nshock wave problem\nh-refinement\ntechnique,\ntaken from [52], using the technique\ndescribed\n\npermis-\n\ncomputed\nwith\nabove. Another\n\nan adaptive\nmethod for\n\navoiding ill-shaped\nelements and poor mesh connectivity\nis to perform an edge-swapping\nor faceedge swapping\noperation\nin two dimensions\nor three dimensions,\nrespectively,\nafter the element\nsubdivision\noperations,\nin order to improve the mesh topology.\nWhile\nin mesh quality can be obtained,\nparticularly\nif the strict refinement\nthe nested property\nof the meshes is lost, and\nbecomes more complicated\nto recover.\n4.2.5\n\nMesh\n\nMovement\n\nthe parent-child\n\nhistory\n\nsubstantial\nrules have\nessential\n\nimt)rovement\nbeen relaxed,\n\nfor de-refinement\n\nTechniques\n\nMesh movement\ntechniques\ninvolve the movement\nof mesh vertices in order to improve the discretization\naccuracy,\nby drawing\npoints towards\nregions of high solution error, and away from\nregions of excessive resolution.\nThese are often performed\nwithout altering the mesh connectivity,\nwhich makes then particularly\nsimple to implenlent.\nWhile they have proved useful for structured\nmeshes (where the mesh structure\nmust be preserved),\nthey are rarely used in this form for unstructured\n\nmeshes,\n\nconjunction\nquality.\nis given\n\nsince mesh\n\nwith other\n\nadaptive\n\nrefinement\nmeshing\n\nis easily\n\nimplemented.\n\ntechniques\n\nThey are most\n\na.s a. smoother,\n\nA simple construction\nof Laplacian-type\nsmoothing\noperations\nby updating\nthe coordinates\nof each mesh point as:\n\nin order\n\noften employed\n\nto improve\n\nfor two-dimensional\n\nin\n\nlocal grid\nmeshes\n\nN\nxneu\'\n\n---- x\xc2\xb0ld\n\n+\n\n1 _-_(xO_ d _ xk)\nj,_\'--7\nk=l\n\n1 m\nk=l\n\nwhere the summation\nis over all the neighboring\nminfics a Jacobi iteration\nfor a Laplacian operator\n\nvertices of tile considered\npoint. This procedure\non the coordinates\nof the grid points, and can be\n\napplied iteratively\nfor all grid points. This particular\nformulation\ndoes not exclude the possibility\nof forming negative area elements.\nAlthough\nformulations\nhave been developed for excluding\nsuch\npossibilities,\nthey are often expensive\nand difficult to solve. A simpler approach\nis to unsmooth\ngrid points\n\nin regions\n\nwhere\n\nnegative\n\nelements\n\nare created.\n32\n\nThis approach,\n\ncombined\n\nwith the use\n\nof face-edgewapping improvinggrid connectivity, ansubstantiallyimprovemeshquality (c.f.\ns\nfor\nc\nFigure14).\nWhile meshmovementmethodshaveseldombeenemployed a solution-adaptive\nas\nmeshing\nprocedure unstructuredmeshes, notableexceptionis the useof thesetechniques shock\nfor\na\nfor\nfitting purposes\n[53,54]. If the meshpointsof a triangularmesharedisplaced sucha manneras\nin\nto alignthe meshedges\nwith the shocks the flow, then it is possibleto capturethe shockovera\nin\nsinglemeshcellinterfaceusing,for example, cell-centeredcheme ith a Riemaninterfacesolver.\na\ns\nw\n\n.aa--a\n\nL_\n\nFigure\n26:\nOriginal\nmovement\nshock fitting\n\nmesh, adapted\nmesh,\napproach.\n(Reproduced\n\nand corresl)onding\nsolutions,\nfrom [54] with permission).\n\nusing\n\nmesh-\n\nFigure 26 illustrates\nthe use of this technique\nfor capturing\na bow and fishtail shock about\nsupersonic\nairfoil.\nNot only can very weak shocks be well captured,\nbut the required\nnumber\ngrid points\n\nand computational\n\n5\n\nStretched-Mesh\n\nThe\n\ndrive\n\ntowards\n\neffort is much\n\nlower than\n\nfor mesh\n\nrefinement\n\na\nof\n\ntechniques.\n\nGeneration\nfull Navier-Stokes\n\nsolvers\n\nhas\n\nnecessitated\n\nthe\n\ndevelopment\n\nof stretched\n\ngrid\n\ngeneration\ntechniques\nin order to resolve the thin boundary-layer\nand wake regions\nwhich are\ncharacteristic\nof high-Reynolds-number\nviscous flows. Proper boundary-layer\nand wake resolution\nusually requires mesh spacing several orders of magnitude\nsmaller in the direction\nnormal\nto the\nboundaries\n\nthan\n\nin the streamwise\n\ndirection,\n\nresulting\n33\n\nin large\n\ncell aspect-ratios\n\nin these\n\nregions.\n\nThe\n\napplication\n\nof the\n\nof mesh-point\ncomputations.\n\nThis\n\ngeneration\n\nare\n\nily contain\ngeneration\n\nare\n\nalternative\n\nthe\n\nthe\n\ntwo\n\nof high\ndimensions\n\nboth\nsince\n\ntetrahedral\n\nwhich\n\nnew\n\napproaches\n\nare\n\nit is always\n\nmesh,\n\nand\n\nare\n\nsimilarly\n\ntransformed\n\ninto\n\nmixed\n\nIn fact,\n\nmesh\n\nedges\n\nfor\n\nitself\n\nimplies\n\na certain\n\ndegree\n\nquadrilaterals/prisms\nby\n\nthe\n\nuse\n\nmain\n\nfrom\n\nmay\n\nreduced\n\nof using\n\ncomplicate\n\noverheads\n\nelements\n\nand\n\nof prismatic\n\nthe\n\nmixed-element\n\nprocedures,\n\nresulting\n\nreduction\n\nare\n\nis the\ndue\n\nsuch\n\nare less\n\nnumber\n\noverall\n\nin\nof\n\nuse\n\nThe\n\nstructure,\n\nadvantages\n\nconnectivity\nthe\n\nis implied\n\ngrid\n\nThe\n\nbe\n\nidentifying\n\nregions.\n\nin the\n\nIn three\n\npermits\n\ncan\n\nextraction\n\nsimple\n\nadaptation.\n\nmay\n\ndirection\n\nno loss of flexibility\n\nedges.\n\nthis\n\nby\n\nin highly-stretched\n\nof homogeneity\n\nof mesh\n\nthan\n\ntriangular\n\nmeshes\n\nthe\n\nmesh\n\nlower\n\nto modify\n\na fully\n\nmeshes\n\ntypes\n\nelements.\n\nof a stretching\n\nand\n\nsince\n\nand\n\ninto\n\nenables\n\nthe\n\nuse of\n\nthe\n\ndistinct\n\nmesh\n\nlack\n\nto the\n\nattractive,\n\ncontain\n\nSimilarly,\nmeshes\n\nas flow solution\nin the\n\nparticularly\n\ngeneration,\n\nwhich\n\nmesh.\n\nmeshes\n\nsuch\n\nmesh\nwhich\n\ndefinition\n\nmesh,\n\nto avoid\n\nis to define\n\nprismatic-tetrahedral\n\nin the\n\nnecessar-\n\nis to make\n\ntriangular/tetrahedral\nthe\n\nDelaunay\n\nin two dimensions\n\napproach\n\napproaches\n\nstretched\n\nor prismatic\n\nthese\n\nelements\n\ntwo\n\nfirst\n\nthe\n\ntriangulation\n\nattempt\n\nas quadrilaterals\n\nsecond\nmeshes\n\nIn fact,\n\nstructure\n\nquadrilateral\n\nsame\n\nsuch\n\nfor\n\nelements.\n\ntriangles\n\nThe\n\ntypes\n\nnumerical\n\nconceived\n\nto the\n\nactually\n\ndifficulties.\n\nThe\n\nor\n43].\n\nprocedures\nfor\n\nthese\n\nthese\n\nfor\n\ndimensions,\n\naspect-ratio\n\nthe\n\na triangular/tetrahedral\n\nof semi-structured\n\ndrawbacks\n\nwhich\n\n[15,\n\nof local\n\nhigh\n\na mixed-element\n\nquadrilateral/triangular\n\nappropriate\n\nIn two\ncorrespond\n\nfor stretched\n\nto subdivide\nhighly\n\nbeen\n\nthey\n\nfor generating\n\nmost\n\nremoval\n\na point-set.\n\nstretching,\n\ndesirable\n\nviable.\n\npossible\n\nhave\n\nto\n\nof high-aspect-ratio\n\ntriangulations\n\n[55, 56].\n\ntechniques\n\nmethods\n\nSince\n\nwith\n\nmesh\n\nare\n\ni.e.,\n\nelements.\n\nin dealing\n\nsections\nill-suited\n\ngeneration\n\nof such\n\nDelaunay\n\nin regions\n\nor devise\n\nIn practice,\n\nangle,\n\npreceding\nwhich\n\nof these\nfor the\n\ntriangulations,\nof all\n\nsmall\n\nelements\n\nmethods\n\nmost\n\nill-suited\n\nin three\n\nof triangle/tetrahedral\n\nor\n\nangles\n\nin the\n\ntriangulations,\n\ntriangulation\n\napproaches\n\ntypes\n\nthat\n\nare\n\nto max-rain\n\nsmallest\n\nor hexahedra\n\nbe expected,\n\nand\n\nDelaunay\n\npossible\n\nelement\n\nprisms\n\nexisting\n\nfact\n\nat least one very\nof such elements.\n\nThere\n\nand\n\nto the\n\nequivalent\n\nmaximizes\n\ndescribed\n\nin awkward\n\nmeshes,\n\nfor example,\n\ntriangulations\n\nmethods\n\nresults\n\nis due\n\nof isotropic\n\nConsider,\nwhich\n\ntriangulation\n\ndistributions\n\nare\n\nof these\n\ndimensions,\n\nmesh\nthe\n\nof triangular\n\nuse\n\nsurface\n\nmeshes.\n\nIf fully\nstretched\n\ntriangular/tetrahedral\ntriangle\n\nshape\n\nmeshes\nneeds\n\nare\n\non\n\nto be\n\ndefined.\n\napproximation\n\ndimensional\nfinite-element\nof the elements\nincreases.\n\nto be\n\nIn\n\nemployed,\n[57],\n\ntriangular\n\nit\n\na characterization\n\nis shown\n\nelements\n\nhow\n\nthe\n\ndegrades\n\nof the\naccuracy\n\nas the\n\noptimal\nof a two-\n\nma.\'dmum\n\nangle\n\n7.\n\n(a)\n\nFigure\nobtuse\n\n27:\n(b).\n\n(b)\n\nIllustration\n\nThus,\n\nas shown\n\nin Figure\n\nangles\n\nare\n\nnearly\n\nright\n\nangles\n\nresult\n\nfrom\n\nthe\n\nwhich\n\navoids\n\nwhile\n\nstretched\n\nto be preferred.\n\nsubdivision\n\nobtuse\n\ntypes\n\n27, stretched\n\nto be avoided,\nare\n\nof two\n\ntriangles\n\nof a thin\nin favor\n\nof high\n\nobtuse\n\ntriangles\n\nnearly\n\none may\n\nin 3D\n\nof right-angle\n\n34\n\nare\n\nratio\n\nwhich\n\nright-angle\n\n(Similarly,\nprism\n\naspect\n\ntriangles:\n\ncontain\n\nnon-obtuse\n\n(a)\n\none large\n\nangle\n\nand\n\ntriangles,\n\nwith\n\nsmall\n\nangle\n\ninfer\n\nthe\n\ndesirable).\ntriangles\n\nthat\n\nThus,\nwould\n\none\ntypes\n\nof tetrahedra\n\na triangulation\nbe desirable.\n\nand\n\ntwo\n\nsmall\n\nand\n\ntwo\n\nwhich\nprocedure\n\nIt should\n\nbe\n\nnoted , however,\nonly be obtained\ngeneration\nschemes.\n5.1\n\nthat even if a "perfect"\nprovided\ntile vertices\n\ntechniques\n\nStretched\n\ninvolve\n\ncareful\n\nDelaunay\n\ntriangulation\nare positioned\n\nscheme exists,\nappropriately.\n\npoint-placement\n\nstrategies\n\nacceptable\nmesh elements\nwill\nThus, most stretched-mesh\n\nas well as modified\n\nPoint-Insertion\n\nOne of the earliest techniques\nfor generating\nhighly stretched\ntriangular\nuse of a locally-mapped\nDelaunay\ntriangulation\npoint-insertion\nmethod.\nfine a local stretching\n\ntriangulation\n\nvector\n\n(direction\n\nand magnitude\n\nof stretching)\n\nare inserted\ninto the triangulation\nusing the Bowyer/Watson\nHowever,\nthis triangulation\nis carried out in a transformed\nremapping\nthe physical space according\nto the\nthe new point. This results in a nearly isotropic\nbut in a stretched\nDelaunay\ntriangulation\ncircumellipses,\nas shown in Figure 28.\n\nmeshes [36, 37, 58] makes\nThe basic idea is to de-\n\nat each\n\nvalues of the stretching\nDelaunay\ntriangulation\n\nin physical\n\nvertex.\n\nNew points\n\nDelaunay\ntriangulation\nspace, which is obtained\n\nspace,\n\nwhere\n\nalgorithm.\nby locally\n\nvector in the vicinity of\nin the transformed\nspace,\n\ntriangle\n\ncircumcircles\n\nbecome\n\nJk\nT\n\nFigure\n\n28:\n\nCircumellipse\n\nof a stretched\n\nDelaunay\n\ntriangulation.\n\nThe problem of constructing\na global mapping for complex domains with variable distributions\nof\nstretching\nrepresents\na formidable\ntask. However, since the the Delaunay\ntriangulation\nis a local\nconstruction,\ntime a new\n\nthe\npoint\n\nof the stretching\nto be restructured.\n\nproblem can be formulated\nin a simpler\nis to be inserted,\na local mapping\nmay\nvectors,\nThis\n\nwhich may be averaged\nand\nenables the use of a variable\n\nmanner,\nusing\nbe constructed,\n\nlocal mappings.\nusing the local\n\ntaken as constant\nthroughout\nstretching\ndistribution,\nbut\n\nEach\nvalues\n\nthe region\nrequires\nthe\n\ndistribution\nof stretching\nto be smooth, and to vary slowly with respect to the point-distribution.\nIn fact, a close coupling between the stretching\nand mesh-point\ndistributions\nis required in order\nensure the\nis achieved\nstretched\n\ngeneration\nof appropriately\nshaped triangular\nby generating\nboth mesh-point\nand stretching\nstructured\n\nmeshes.\n\nStep\nStep\n\n1: Generate\na highly\n2: Filter out far-field\n\nStep\n\n3: Define\n\norientation,\n\na stretching\n\nstretching\n\nThe original\n\nelements.\nIn the present approach,\nthis\ndistributions\nfrom a set of overlapping\n\n[37] can be summarized\n\nstretched\nstructured\nmesh about each geometry\nand downstream\nwake points in these structured\nvector\n\ndirection,\n\nStep 4: Using the Bowyer/Watson\nof this set of points.\nStep\n5: Smooth the\nstretchings\nwith their\n\nmethod\n\ndistribution\nneighl)oring\n\nat each remaining\n\nand aspect-ratio\n\npoint,\n\n(stretching\n\nalgorithm,\n\nconstruct\n\nof stretching\nvalues.\n\nvectors\n\n35\n\nto\n\nbased\n\nas follows:\n\ncomponent.\nmeshes.\n\non the local structured\n\ngrid-cell\n\nmagnitude).\n\nthe (unstretched)\nby performing\n\nDelaunay\nseveral\n\npasses\n\ntriangulation\nof averaging\n\nStep 6: Swapthe edges the meshaccording the Delaunay circlecriterion,measured the\nof\nto\nin\nin\nlocally mappedspace, s definedby tile average\na\nlocal stretchingvector(i.e., a stretchedDelaunay\nin ellipsecriterion).\nStep 7: Smooththe mesh-pointdistribution and reswapthe edges(this step may be repeated\nseveral imes).\nt\nThe useof point-sets\nderivedfrom structuredmeshes nsures\ne\nthat the pointswill be distributedin\na.configuration which favors the formation of nearly right-angle triangles in the highly stretched\nregions of the mesh, such a.s near tile walls and in the wake regions. Step 3 ensures the compatibility\nbetween the stretching\ndistribution\n(and thus triangulation\ncriterion)\nand point distribution,\nwhile\nstep 5 is necessary\n\nto guarantee\n\na. smooth\n\ndistribution\n\nof stretching\n\nmeshes overlap.\nIt is noteworthy\nthat an initial triangulation\nthis smoothing.\nFigure 29 illustrates\na stretched\nunstructured\na simple airfoil configuration.\n\nFigure\n29: Stretched\nunstructured\nprocedure\nfor RAE 2822 airfoil.\n\nmesh\n\nproduced\n\nThe present method\npermits\na smooth transition\nwell as between two neighboring\nstretched\nregions,\nof adaptive\nmeshing techniques.\nNew mesh points\nassigning\n\nthem\n\na stretching\n\nvector\n\ntaken\n\nin regions\n\nwhere\n\ntire structured\n\nis required\nin order to accomplish\nmesh produced\nby this technique for\n\nby mapped\n\nl)elaunay\n\ntriangula.tion\n\nbetween stretched\nand unstretched\nregions, as\nand enables a straight-forward\nimplementation\nmay be inserted into the existing mesh by first\n\na.s the average\n\nof the neighboring\n\nstretching\n\nvectors,\n\nand\n\nthen using the Bowyer/Watson\nalgorithm\nin the locally stretched\nspace to triangulate\nthe new\npoint. The final mesh may be post-processed\nwith several passes of smoothing\nand edge-swapping.\nAn example of an adaptively\ngenerated\nstretched\nunstructured\nmesh about a four-element\nairfoil\nis illustrated\nin Figure 30.\n\n36\n\nFigure\n\n30:\n\nIn retrospect,\nlaunay)\n\nAdapted\n\nthis\n\nmesh\n\n5.2\n\nfollowed\n\nby a distribution\n\nmethods\n\nof the\n\nhybrid\n\nmost\n\nwhich\n\nrequire\n\nwhere\n\nevident\n\nhigh\n\ndegrees\n\nmay\n\nbe\n\n[56].\n\nexample\n\nthe\n\nthe\n\nregions\n\nmesh\n\nproblems\n\nthickness\nwhere\n\non\n\nusing\n\nboundary\n\nof the\n\nand\n\nare desirable.\n\nfour-element\n\nconstruction\nphase\n\nit is similar\n\nairfoil.\n\nof an initial\n\ngoverned\n\nto some\n\nelements\n\nmay\n\nor alternatively\nlocal\n\ngrid\n\napproach\n\na hyl)erbolic\n\nsurfaces,\n\nby\n\nof the\n\n(De-\n\na criterion\nmore\n\nrecent\n\nby filling\n\nmesh\n\nboundaries\n\nmesh\n\nin the\n\nthe\n\nviscous\n\nregions\n\ninto\n\nbe retained,\n\na\n\nregions,\n\nof inviscid\n\nflow,\n\nof the\n\nmesh\n\n(semi-structured)\n\ntriangles\nand\n\nis to use\n\nwake\n\nportion\n\nor prismatic\n\nsubdivided\n\nflows\nand\n\nstructured\n\nhexahedra\n\nmay\nmesh\n\ngeneration\n\nhybrid\n\nthe\n\nor\nflow\n\nlayer,\nare\n\ndomain\n\nmesh\n\nwith\n\nconstructions\n\nas well\nin close\n\n37\n\nas\n\ntetrahedra\n\nto\n\nsolver\n\nbe\n\nof generating\n\nmay\n\nwhich\n\nthe\n\ninvolved\nmay\n\na local\n\ndistance\n\ngeneration\n\nan isotropic\n\ninvolve\n\ndifficulties\n\nproximity,\n\nconsists\n\nup to a prespecified\n\nunstructured\n\nof the\nmesh\n\ngeneration\n\ntechnique,\n\nadvancing-front\n\nremainder\n\nwith\n\nstructured\n\nneighboring\n\nto stretched\n\nan\n\nin the\n\nassociated\n\nlater\n\nthey\n\nfor\n\nboundary-layer\n\nstructure.\n\nmesh\n\nand\n\neither\n\nbe\n\nmeshes\nthin\n\ndimensions,\n\ndimensions\n\nthe\n\nin the\n\nan unstructured\nIll two\n\nin three\n\nof a hybrid\n\nmesh\n\nThe\n\nas tlle\n\nstretched\nmesh\n\nmesh,\n\nto capitalize\n\ncomplete\n\nrespect,\n\nfor constructing\n\nThese\n\nused.\n\nmodified\n\nthe\n\nover\n\nreconnection\n\nIn this\n\nof stretching,\nwhile\n\na homogeneous\n\nfrom\n\nbe viewed\n\nedge-swapping\n\nuse of a structured\n\nconstructions\n\nproduce\nAn\n\ncan\n\nflow\n\ntriangulations.\n\ntechniques\nmakes\n\nof quadrilaterals,\n\nstructured\n\nby an\n\nstretched\n\nwhich\n\nisotropic\n\nelements\n\napproach\n\nviscous\n\nMethods\n\ntechnique\n\nconsists\n\nfor computing\n\nof stretching.\n\nfor constructing\n\nHybrid\n\nmesh\n\ngeneration\n\ntriangulation,\n\ndetermined\n\nOne\n\nstretched\n\ntechnique\n\nunstructured\nadequate\nin concave\n\nresult\n\naway\nto\nmesh\n\ndefinition\nregions\n\nin overlapping\n\nof\nor\nof\n\nthe\n\nstructured\n\nmeshes.\n\nAnother\n\ndifficulty\n\nconsists\n\nof producing\n\na mesh\n\nwith a smooth\n\nbetween stretched\nstructured\nregions and isotropic unstructured\nregions. Many\ncan be overcome by employing a structured\ngrid layer of variable thickness.\n5.3\n\nSemi-Structured-Unstructured\n\nHybrid\n\nstructured\nmeshes with a variable\nbe constructed\nby first generating\n\nthickness\nor normal\na structured\nmesh\n\ndistance\n\nportion\n\nwhich\n\ncovers\n\na significant\n\nof the\n\ndifficulties\n\nMeshes\n\nThe hybrid structured-unstructured\napproach\nmay be made more flexible\nsemi-structured\nmeshes in the stretched\nmesh regions [59]. Semi-structured\n\nboundary-layer\ning structured\n\nof these\n\ntransition\n\nresolution.\nabout each\n\ndomain\n\n(i.e.,\n\nby employing\nso-called\nmeshes are essentially\n\nA semi-structured\nmesh may\ngeometry\ncomponent,\nover a\n\na distance\n\nmuch\n\ngreater\n\nthan\n\nthe\n\nthickness),\nand then removing the regions of the mesh which overlap with neighbormeshes and/or geometry components,\nas well as regions of the mesh where stretching\n\nis not required,\ni.e., where the structured\nmesh cell aspect-ratios\nare less than unity. The remaining\nportion\nof the doma.in is then gridded with an isotropic\ntriangulation\nscheme.\nThis results is an\nautomatic\ndetermination\nof the inner-mesh\nthickness,\nand a more smooth transition\nbetween the\ninner and outer meshes.\n\nFigure\n31:\nSemi-structured\nmesh generated prior to completion\nof isotropic region.\nAn example\n\nof a semi-structured\n\nmesh\n\nFigure\nerated\n\ngenerated\n\nby the\n\n32:\n\nFinal\n\nUnstructured\n\nusing semi-structured\nauthor\n\nis depicted\n\nmesh\n\ngen-\n\napproach.\nin Figures\n\n31 and\n\n32. The outer boundary\nis somewhat\nragged, but this presents\nno difficulty for the unstructured\nmesh approach\nwhich is used to complete the mesh.\nIn this case, the advancing-front\nDelaunay\ntriangulation\nscheme was employed in the isotropic regions of the domain, and elements of the semistructured\nof the\nunless\n\nmesh\n\nhave been\n\nsubdivided\n\ninto triangles.\n\nA noteworthy\n\npoint\n\nconcerns\n\nmesh in the wake regions.\nWhile highly stretched\nmeshes are required\nthese are to be carried to the outer boundary\nof the domain,\nthey must\n\nthe structure\n\nin wake regions,\nbe blended\nwith\n\nthe isotropic\nportion\nof the mesh in a smooth manner.\nIn the present implementation,\nthis is\naccomplished\nby coarsening\nthe wake-point\ndistribution\nin the normal direction increasingly\nin the\ndownstream\ndirection,\nand readjusting\nthe connectivity.\nThis operation\nis performed\nprior to the\ngeneration\nof the isotropic portion\nof the mesh, since it results in a modification\nof the initial\nboundary\n\ndiscretization\n\nThe drawbacks\nabout arbitrary\nand the ability\n\nof the remaining\n\nof this method\n\narea to be gridded\n\nare the requirement\n\ngeometry\ncomponents,\nof the method to merge\n\nisotropically.\n\nof being able\n\nto generate\n\nthe task of locating overlapping\ntwo neighboring\nsemi-structured\n\n38\n\nstructured\n\nstructured\nmeshes.\n\nmesh\n\nmeshes\nregions,\n\n5.4\n\nAdvancing-Layers\n\nThe advancing-layers\nstructured\nmeshes.\nmesh,\n\nmethod [60, 61, 62, 63, 64] represents\na generalization\nof the concept of semiRather than construct an inner semi-structured\nmesh by truncating\na structured\n\nthe advancing-layers\n\nat each boundary\ncell.\n\nMethod\n\ntechnique\n\nuses structured\n\nedge or face to advance\n\nAdvancing-layers\n\ncan also be viewed\n\nalgorithm\nto create stretched\nand reconnection\nstrategies.\n\nhyperbolic\n\nmesh\n\na new layer in the normal\nas a modification\n\nto the\n\ngeneration\ndirection,\n\nprinciples\nthus creating\n\nunstructured\n\nlocally\na new\n\nadvancing-front\n\nquadrilateral\n(or prismatic)\nelements using different point-placement\nThis is achieved by capitalizing\non the similarities\nbetween hyperbolic\n\nmesh generation\nand advancing-front\ntechniques.\nThe point placement\nstrategy\nof the advancing-layers\nmethod relies on the surface normals\nof\nthe boundary\ndiscretization.\nA line segment normal to the boundary\nsurface is first associated\nwith\neach boundary\n\npoint.\n\nof their neighbors.\nfrom the boundary\ndimensions)\n\nThese\n\nnormals\n\nProgressive\nis typically\n\nare created\n\nare often\n\nsmoothing,\nemployed.\n\nby placing\n\nsmoothed\n\nby averaging\n\ntheir orientations\n\nwith those\n\nwhich vanishes near the boundary\nand increases\naway\nQuadrilateral\nelements\n(or prismatic\nelements\nin three\n\nnew points\n\nalong\n\nthe boundary\n\nnormals\n\nand\n\nconnecting\n\nthem\n\nto neighboring\npoints in a specified pattern.\nThe layers are advanced\nout from the original discretized\nboundaries\nwith an increasing\nstepsize which results in progressively\ndecreased\nstretching.\nFor each normal stack of cells associated\nwith a boundary\nedge or face, the advancing\nprocess is terminated\neither when an opposing front\nis encountered,\nor when the cell aspect-ratio\nbecomes close to unity.\nOnce the advancing-layers\nprocedure\n\nterminates,\n\nas in the previous\n\nthe remainder\n\nmethods.\n\nWhile\n\nof the domain\n\na background\nfunction is used to determine\nas well as to control that of the unstructured\nphase\n\nterminates,\n\nthe existing\n\nis filled in with an isotropic\n\nthe rate of growth\n\nmesh\n\nthe\n\nthey\n\nmay be subdivided\n\n,\n\nunstructured\n\nlayers is typically\n\nmesh,\n\nprescribed,\n\nresolution\nof the initial boundary\ndiscretization\nportion of the mesh.\nWhen the advancing-layers\n\nlooks much\n\nlike the semi-structured\n\nstructured\nmesh of Figure 31. A three-dimensional\nfrom [64], is depicted in Figure 33, for a four-element\nand the partially\ncompleted\nthe layers may be conserved\n\nof the advancing\n\nor truncated\n\nhypert)olic\n\nexample of the advancing\nlayers method,\nwing configuration,\nshowing the surface\n\ntaken\nmesh,\n\nmesh of stretched\nlayers. As in the semi-structured\nmesh procedure,\nas quadrilaterals\nor prisms in two or three dimensions\nrespectively,\nor\n\ninto triangles\n\nor tetrahedra.\n\n1\n\ni\n\nFigure\n33: Illustration\nof advancing-layers\nmethod\nfor three-dimensional\nunstructured\nmesh generation\nabout segmented\nwing geometry.\n(Reproduced\nfrom [64] with permission).\n\n39\n\n5.5\n\nAdvancing-Front\n\nMin-Max\n\nTriangulations\n\nA somewhat\nmore unified approach\nto generating\nhighly stretched\ntriangulations\ninvolves tile use\nof min-max\ntriangulations,\ni.e., triangulations\nwhich mininlize the maxinlum\nangles produced\nill\nthe elements.\nWhile Delaunay\ntriangulations\nwere written-off\nas unsuitable\nfor stretched\nmesh\ngeneration,\n\nthe\n\nof using\n\ndesire\n\nmin-nia.x\n\nHowever,\n\npatible\n\nto avoid\n\nconnectivity\n\nof\n\nstrategies\n\nMarcum\n\nstretched\n\nregions\n\nthe\n\nalone\n\nmust\n\n[43] makes\n\nplacement\n\npoint\n\nor large\n\nof the\n\nstrategy\n\nuse\n\nand\n\nmesh,\n\nalong\n\nto tile salne\n\nrules described\n\nof section\n\n3..5,\n\nuse\n\nprocess\n\ndomain\npoints\n\nbegins\n\nboundaries\nare\n\ncreating\ntile\n\nnew\n\nexisting\nan(1\n\ninto\n\nintegrity\npoints\n\nthe\n\nusing\n\nfollowed\n\nof new\n\nmethods\n\nhybrid\n\ncharacter.\n\nshown\n\nin Figure\n\nappropriate\nthe\n\nare\n\nhowever\n\nAll example\n\nwhich\n\nOnce\n\nall\n\nl)Oil|ts\n\nis identical\n\ndifferent\n\nill stretched\n\nill these\n\nof a stretched\n\ntwo regions,\n\nunstructured\n\nfor\n\nmesh\n\npoints\n\nthe entire\nand\n\npoints\nand\n\nof this\n\ngenerated\n\ninser-\n\nThe\n\nretains\n\nmesh\n\ninto\nforced\n\ntile\n\nregions.\n\nthe\n\nby\n\npoint\n(i.e.,\n\nis that\n\nuitstretched\n\ninserted,\n\ninitiated\n\neach\n\nand\n\nThe\n\nboundary\n\nbeen\n\nalld\n\nmethod\n\ngener-\n\ndomain.\n\nalgorithnl\nstrategy\n\npoints\n\nalgorithm\nmesh\n\nis then\n\ninserting\n\nhighly\n\nare placed\n\nthese\n\nhave\n\nprocedure\n\nconl-\n\nregions,\n\ni.e.,\n\nThe\n\nfunction,\n\nGreen-Sibson\n\nfeature\n\none\n\ntriangulation\n\ncovers\n\nstrategy\nof tile\n\nunifying\n\nregions,\n\nboun(lary\n\nthus\n\nmethod,\n\nfunction.\n\ninin-lllax\n\npoint-placenient\nvariant\n\nfeasibility\n\ntriangulation\n\nstretched\n\nDelaunay\n\nbackground\n\nand\n\nstrategies,\n\nIll the\n\ndistribution\n\nto the\n\nThe\n\nmeshes,\n\nadvancing-layers\n\ntriangulation\n\nnlhl-nlax\n\nthe\n\nlnin-nlax\n\nIll tile isotropic\n\nTile advancing-front\n\nby edge-swapping).\n\ntrialtgulation\n\nplacement\n\nill the\n\ntriangulation.\n\nimplies\n\nquality\n\nplacement\n\nregions.\n\nelement-size\n\naccording\n\nexisting\n\nusing\n\npoint\n\nsegments.\n\na coarse\n\ndiscretized\n\nthe\n\nhigh\n\nfor the advancing-front\n\nis recovered.\n\ntriangulation\n\ntriangulation\nlion\n\nthen\n\ndistinct\n\nnormal\n\nmeshes\n\nThe advancing-front\n\ndescribed\n\nof a background\n\nby generating\nare\n\ninserted\n\nthe boundary\n\nboundary\n\nguarantee\n\nfor isotropic\n\nthat\n\naccording\n\nmaking\n\ncannot\n\nill such\n\nmeshes.\n\nbe developed.\nof two\n\nresembles\n\ntriangles\n\nstretched\n\nanother\n\na.re placed\n\nation\n\nsmoothed\n\nangle\n\nfor generating\n\nstrategies\n\npoint-placement\n\nalgorithm\n\nobtuse\n\ntriangulations\n\npoint\n\na somewhat\n\nby this technique\n\n34.\nXC.2\n\nt-,_a\n\nV-d\n-,m--\n\nL_\n\nFigure\ngulation\ntriangulation\n\n\'File method\ndimensions,\n\n34:\n\nStretched\n\nprocedure\nover\n\nunstructured\n\nfor familiar\nthe\n\ncoast\n\nhas also been\n\nmesh\n\ntwo-dimensional\n\nof Belgium.\n\ndemonst.rated\n\neach time a Itew point\n\nproduced\n\ngeometry,\n\n(Reproduced\n\nin three\n\nis inserted,\n\nby advancing-front\nfrom\n\ndimensions,\n\ntile mesh must\n\n40\n\nwith\n\nrain-max\n\nillustration\n\n[,13] with\n\nas shown\n\ntrian-\n\nof stretched\n\npernfission).\n\nin Figure\n\nfirst I)e swapl)ed\n\n35.\n\nIn three\n\nto a local Delaunay\n\nis\n\nconfiguration,andthen to the min-maxconfiguration,n orderto attain a moregloballyopt.imun_\ni\nfinal min-maxconfiguration, sdescribed section3.5.\na\nin\nAn alternatepoint-placement trategyfor min-maxtriangulationswhich doesnot rely on an\ns\nadvancing-fronts given by Barth [65]. Oneof the drawbacks the relianceon rain-max trii\nof\nangulationsis the possibilityof the min-maxcriterion resultingin undesirable\nconnectivitiesfor\nseemingly\nwell distributed vertices.For highly stretchedmeshes, min-maxtriangulationmay\nthe\nbe very sensitiveto the placementof vertices,with smalldisplacements\nleadingto substantially\ndifferent, onnectivities. he precise\nc\nT\nplacement f grid pointsin the highlystretchedregionsis thus\no\nmuchmorecritical than in "forced"triangulationmethodssuchas the advancing-layers\nmethod.\n\n......................\n\n.-., N\n\n\xe2\x80\xa2\n\n.x_\' _::.\n\n:\xc2\xb0:.\n\n, ,..:.,\xc2\xb0...-\n\n_:_i_i_ ::.\'.7 I-,\n\n_. ,.._..:::.;_..,.._. ,\n_"\n: _.:..-:.:.:.:.:.y\n\'\n\n. .:\xc2\xb0\n\n_j\n\n.a. ,\n\n" ::S:::::_:_4:_".\n\n\\_\n\n,_ -:::-:::_:.\'._...:_i._\n,:-_ .>._-._r\nI "_i:i:.;-\':N_\n\nFigure\n35: Section of an advancing-front\nmin-max\ntriangulation\ngrid in three\nabout an F-18 aircraft configuration.\n(Reproduced\nfrom [43] with permission).\n\n.:,\n*::::::,\n\ndimensions\n\nReferences\n[1] F. Aurenharnmer.\nA CM Computing\n\nVoronoi diagrams:\nSurveys, 23:345-405,\n\nA survey\n1991.\n\nof a fundamental\n\n[2] F. P. Preparata\nand M. I. Shamos.\nComputational\nMonographs\nin Computer\nScience. Springer-Verlag,\n[3] R. Sedgewick.\n[4] H. Samet.\n[5] A. Bowyer.\n\nAlgorithms.\n\nThe Design\n\nAddison-Wesley,\n\nand Analysis\n\nComputing\n\n[6] D. F. Watson. Computing\npolytopes.\nThe Computer\n\nDirichlet\n\nGeometry,\n1985.\n\n1988. second\n\nof Spatial\n\ntessalations.\n\nAn\n\nData Structures.\nThe Computer\n\nmesh generation\n\nby triangulation\n\n[8] N. P. Weatherill.\nThe generation\nof unstructured\ngrids\nUniversity\nDepartment\nof Mechanical\nand Aerospace\n1985.\n\ndata-structure.\n\nIntroduction.\n\nAddison-Wesley,\n,Journal,\n\nand\n\n1990.\n\n24(2):162-166,\n\nwith application\n\nof arbitrary\n\n1981.\nto Voronoi\n\npoint\n\nsets. AIAA\n\nusing Dirichlet tessalations.\nEngineering\nReport\nMAE\n\nPrinceton\n1715, July\n\n[9] P. L. George F. Hecht and E. Saltel.\nAutomatic\nmesh generator\nwith specified\nComputtr\nMethods in Applied Mechanics and Engineering,\n33:975-995,\n1991.\n\n41\n\nTexts\n\nedition.\n\nthe n-dimensional\nDelaunay tessalation\nJournal, 24(2):167-171,\n1981.\n\n[7] T. J. Baker. Three dimensional\npaper 87-1124, June 1987.\n\ngeometric\n\nboundary.\n\n[10] L. J. Guibas\n\nD. E. Knuth and M. Sharir. Randomized\ndiagrams.\nStanford\nUniversity\nComputer\n\nand Voronoi\n1990.\n\n[11] P. J. Green\n\nand R. Sibson. Computing\n21(2):168-173,\n1977.\n\nJournal,\n\n[12] J. M. Nelson.\n\nA triangulation\n1978.\n\n2:151-159,\n\nalgorithm\n\n[13] A. Malls.\n\nDelaunay\ntriangulation\n24:151-163,\n1984.\n\nBIT,\n\n[14] M. Tanemura\nlation.\n\nT. Ogawa\n\nJournal\n\n[15] M. L. Merriam.\npaper\n\n91-0792,\n\n[16] L. P. Chew.\n\nthe Dirichlet\n\nand\n\nand N. Ogita.\n\nof Computational\n\nfor arbitrary\n\ntile convex\n\nDelaunay\n\ntessalation\n\nplanar\n\ndomains.\n\nalgorithm\n\n[20]H.\n\nTransforming\n\nEdelsbrunner\n\nSIAM Journal\n\nProperties\n\n[22] M. E. Mortenson.\n\nDiscrete\n\nT. S. Tan and R. Waupotitsch.\n\nangle triangulation.\n\n[21] C. L. Lawson.\n\ntriangulations.\n\non Scientific\n\nof n-dimensional\n\nGeometric\n\nModeling.\n\nJohn\n\nMathematics,\n\nSymposium\n\n[25] T. J. Barth.\nNavier-Stokes\n\nOptimality\nof the Delaunay\non Computational\nGeometry,\n\n3:365-372,\n\nand Statistical\n\nComputing,\n\nCAGD,\n\nand Sons,\n\nfinite\n\nfront\n\nmethod.\n\nApril\n\npaper\n\ned. John\n\n1992.\n\n1986.\n\n1985.\nSIAM\n\nJournal\n\ntriangulation\nin R d. In Proceedings\npages 357-372, 1991.\n\non Sci-\n\nof the 7th ACM\n\nAspects of unstructured\ngrids and finite-element\nvolume solvers for the Euler and\nequations.\nIn yon Karman Institute\nLecture Series, AGARD Pub. R-787, 1992.\n\nStructured\nbackground\ngrids for generation\nof unstructured\nAIAA\nJournal, 31(2):257-265,\nFebruary\n1993.\n\n[29] D. J. Mavriplis.\nAIAA\n\nIII.\n\nfor the minmax\n\nfor compressible\n1987.\n\nR. Lohner P. Parikh and S. Pirzadeh.\nA package for unstructured\nelement flow solvers. AIAA paper 89-2175, June 1989.\n\n[28] S. Pirzadeh.\n\ninterpola-\n\n1972.\n\n3:231-246,\n\nM. Vahdati K. Morgan and O. C. Zienkiewicz.\nAdaptive remeshing\nflow computations.\nJournal of Computational\nPhysics, 72:449 466, October\n\nand\n\ntessel-\n\nAIAA\n\n13:994-1008,\n\n[26] J. Peraire\n\n[27] C. Gumbert\n\nlinear\n\nSoftware\n\n[23] B. Joe. Three-dimensional\ntriangulations\nfrom local transformations.\nentific and Statistical\nComputing,\n10:718-741,\n1989.\n\n[24] V. T. Rajan.\n\ntime.\n\n1989.\n\nAn O( N21o9 N ) time algorithm\n\nWiley\n\nlinear\n\ntriangulation.\n\nfor piecewise\n\nIn Mathematical\n\ntriangulations.\n\nModeling,\n\nVoronoi\n\n4:97-108,\n\nNira D. Levin and S. Rippa. Data dependent\ntriangulations\ntion. Journal of Numerical\nAnalysis,\n10( 1 ):137-154, 1990.\nSoftware for C l surface interpolation.\nD. Rice, New York, 1977. Academic\nPress.\n\nMath\n\nin expected\n\nfor Delaunay\n\n[17]D.\n\n[19] C. L. Lawson.\n\nApplied\n\n1983.\n\nAlgorithmica,\n\n[18] C. L. Lawson.\n\nThe Computer\n\nfor three-dimensional\n\n51(2):191-207,\n\ntriangulations.\n\nin tile plane.\n\nhull of N points\n\nA new algorithm\n\nPhysics,\n\nAn efficient advancing-front\nJanuary\n1991.\n\nConstrained\n\nincremental\nconstruction\nof Delaunay\nscience Rep. no. STAN-CS-90-1300,\n\nAn advancing-front\nDelaunay\n93-0671, January\n1993.\n\n42\n\ntriangulation\n\nalgorithm\n\ngrids\n\ndesigned\n\ngrid generation\n\nby advancing-\n\nfor robustness.\n\n[3o] Donald\n\nE. Knuth.\n\nSeminumerical\n\nAddison-Wesley,\n\nReading,\n\n[31] M. A. Yerry\n\nand\n\nmodified-octree\n\nM. S. Shephard.\n\nvolume\n\nsecond\n\nedition,\n\nAutomatic\n\nInternational\n\n2 of The Art of Co,iputer\n\nthree\n\nJournal\n\n10 January\n\nwith\n\nmesh\n\nNumerical\n\ngeneration\n\nMethods\n\ni,\n\nby tile\n\nEngineeri,g.\n\nP. M. Finnigan\nA. F. Hathaway\nA. Kela and W. J. Schroeder.\nQuadtree/octree\nadaptive\nanalysis.\nIn Numerical\n(;rid Generation\nin Computational\nFluid Me-\n\nchanics. Pineridge\nPress, December\n1988. Proc. of the Second\nNumerical\nGrid Generation\nin Computational\nFluid Dynamics,\nHauser,\n\n1981.\n\ndimensional\n\nfor\n\nProgramming.\n\n1984.\n\n[32] J. H. Cheng\nmeshing\n\nMassachusetts,\n\ntechnique.\n\n20:1965-1990,\n\nAlgorithms,\n\nP. R. Eisman,\n\n[33] L. Formaggia.\n\nInternational\n(\'onference\nMiami, eds. S. Sengupta,\n\non\nJ.\n\nand J. F. Thompson.\n\nAn unstructured\n\nmesh generation\n\nalgorithm\n\nfor three\n\ndimensional\n\naeronautical\n\nconfigurations.\nIn Proc. of the Third International\nConference on Numerical\nGrid Generation\nin Computational\nFluid Dynamics\nand Related Fields. Barcelona.\nSpain. New York, 1991.\nNorth-Holland.\neds. A. S. Arcilla, J. Hauser, P. R. Eisman, and J. F. Thompson.\n\n[34] S. Pirzadeh.\n\nRecent\n\nprogrss\n\nin unstructured\n\ngrid generation.\n\nAIAA\n\npaper\n\n92-0445,\n\nJanuary\n\n1992.\n\n[35] D. J. Mavriplis.\nMeshes.\n\nSolution of the Two-Dimensional\nthesis, Princeton\nUniversity,\nMAE\n\nPhD\n\n[36] D. J. Mavriplis.\nJournal\n\nAdaptive\n\nof Computational\n\n[37] D. J. Mavriplis.\ncous flows.\n\nmesh\n\nUnstructured\n\nIn Proc.\n\ngeneration\n\nPhysics,\n\nfor viscous\n\n90(2):271-291,\n\nand\n\nof the\n\nEuler Equations on Unstructured\nDepartment,\n19_7.\n\nadaptive\n\nDelaunay\n\ntriangulation.\n\n1990.\n\nmesh\n\nThird International\n\nflows using\n\nTriangular\n\ngeneration\n\nConference\n\nfor high-Reynolds\non Numerical\n\nnumber\n\nGrid\n\nvis-\n\nGeneration\n\ni,\n\nComputational\nFluid Dynamics\nand Related Fields, Barcelona, 5"jmin, pages 79-92, New York,\n1991. North-Holland.\neds. A. S. Arcilla, J. tlauser, P. R. Eisman, and J. F. Thompson.\n\n[38] T. J. Baker.\nAIAA\n\nUnstructured\n\nCFD\n\nConference,\n\n[39] D. G. Holmes\ngulation.\nDecember\n\nmeshes\nHonohdu,\n\nD. D. Snyder.\n\nIn Numerical\n1988. Proc.\n\nin Computational\n\nand surface\nHau,aii,\n\nThe\n\nfidelity\n\npages\n\ngeneration\n\nfor complex\n\n714-725,\n\nshapes.\n\n1991. AIAA\n\nof unstructured\n\nmeshes\n\nIn Proc.\n\npaper\n\nDynamics,\n\nMianfi,\n\neds. S. Sengupta,\n\n91-1591-CP.\n\nusing\n\nDelaunay\n\nGrid Generation\nin Computational\nFluid Mechanics.\nof the Second International\nConference\non Numerical\n\nFluid\n\nJ. Itauser,\n\nof lOth\n\ntrian-\n\nPineridge\nPress.\nGrid Generation\n\nP. R. Eisman,\n\nand\n\nJ.\n\nF. Thompson.\n\n[4o] N. P. Weatherill\n\nO. Hassan\n\nwith the finite-element\n\n[41] W. K. Anderson.\nunstructured\n\n[42] L. P. Chew.\n\n[44] S. Rebay.\n\n93-0341,\n\nmesh\n\nof unstructured\n\nJamlary\n\nflow solution\n\ngeneration\n\nof steady\n\ncompressil)le\n\nflowfields\n\n1993.\n\nmethod\n\nfor the\n\nEuler\n\nequations\n\non\n\n1994.\nfor curved\n\nGeometry,\n\nsurfaces.\n\nIn Proceedings\n\nof the\n\n1993.\n\ngrids\n\nfor viscous\n\ngeneration\n\nby means\n\nflow applications.\n\nAIAA\n\npaper\n\n1995.\n\nEfficient\n\nBowyer/Watson\n\nCalculation\n\n110(1):23-38,\n\non Computational\n\nGeneration\n\nJanuary\n\npaper\nand\n\nPhys.,\n\nGuaranteed-quality\n\n[43] D. L. Marcum.\n\nAIAA\n\ngeneration\n\nJ. Comp.\n\n9th A CM Symposium\n\n95-0212,\n\nmethod.\n\nA grid\n\ngrids.\n\nand D. L. Marcum.\n\nunstructured\n\nalgorithm.\n\nJournal\n\nmesh\n\nof Computational\n\n43\n\nPhysics.\n\nof Delaunay\n\ntriangulation\n\n106( 1 ):125-138,\n\n1993.\n\nand\n\n[45] J. D. Mueller\n\nP. L. Roe and 1I. Deconinck. A frontal approach for node generation\nill Delaunay\nIll van Karman Institute\nLecture Series, AGARD Pub. R-787, 1992.\n\ntriangulations.\n\n[46] D. L. Marcum\n\nand N. P. Weatherill.\nUnstructured\nreconnection.\nAIAA paper 94-1926,\n\ntion and local\n\n[47] R. Lohner.\n\nFinite-element\nIn van Karman\nInstitute\n\nmethods in CFD: Grid generation,\nLecture Series, AGARD Pub. R-787,\n\n[48]G.\n\nWarren x3L. K. Anderson\nJ. L. Thomas\nmethods.\nAIAA paper 91-1592, June 1991.\n\n[49] G. F. Carey\n\nand J. T. Oden.\n\n[5o] D.\n\nJ. Mavriplis.\nadaptive\nmeshes.\n\n[51] T. J. Barth.\n\n[52]R.\n\nLohner\nproblems.\n\ngrid generation\nJune 1994.\n\nFinite\n\nand\n\nElements.\n\nRandomized\n\nmultigrid.\n\nAIAA\n\nadaptivity\n1992.\n\nS. L. Krist.\n\nGrid\n\nPrentice-ttall,\n\nAccurate\nmultigrid\nsolution\nof the\nAIAA J., 28(2):213-221,\n1990.\npaper\n\nand\n\nequations\n\nJanuary\n\npoint\n\ninser-\n\nparallelization.\n\nconvergence\n\nNew Jersey,\n\nEuler\n\n95-0207,\n\nusing iterative\n\nfor adaptive\n\n1983.\n\non unstructured\n\nand\n\n1995.\n\nand J. D. Baum.\nAdaptive\nh-refinement\non 3D unstructured\ngrids\nInternational\nJournal for Numerical\nMethods in Fuids, 14:1407-1419,\n\nfor transient\n1992.\n\n[53] M. Paraschivoiu,\n\nJ. Y. Trepanier,\nM. Reggio, and R. Camarero.\nA conservative\ndynamic\ntracking algorithm\nfor the Euler equations.\nAIAA Pa.per 94-0081, January\n1994.\n\ndiscontinuity\n\n[54] J. vanRosendale.\n\nFloating shock fitting via Lagrangian\nCR 194997, November\n1994.\n\n89, NASA\n\n[55] K. Nakahashi.\npaper\n\n87-0604,\n\n[56] S. Ward\n\nand\n\ngeolnetries.\n\nfor viscous\n\nand\n\nA. K. Aziz.\n\nof Numerical\n\nAT_alysis,\n\nOn the\n13(6),\n\nangle\n\ncondition\n\nin the\n\nGeneration\nin Computational\nFluid Dynamics\nand Related\n93-103, New York, 1991. North-Holland.\neds. A. S. Arcilla,\nF. Thompson.\n\nAIAA\n\npaper\n\nMatching\n93-3348,\n\n[6o] J. D. Mueller\n\nsenli-structured\nJuly 1993.\n\nP. L. Roe and\n\nno.94-\n\nbodies.\n\nover multiple\n\nreport\n\nAIAA\n\nfor complex\n\nfinite-element\n\nmethod.\n\n3D\n\nSlAM\n\n1976.\n\nF. Hecht and B. Mantel.\nAnisotropic\ncontrol\ntype method.\nIn Prec. of the Third International\n\n[59] R. Lohner.\n\nICASE\n\ngrid generation\n\n[58] M. G. Vallet\na Voronoi\n\nmeshes.\n\nflow computations\n\nY. Kallinderis.\nHybrid prismatic/tetrahedral\nAIAA paper 93-0669, January\n1993.\n\n[57] I. Babushka\nJournal\n\nFDM-FEM\nat)preach\nJanuary\n1987.\n\nadaptive\n\nand\n\nof mesh generation\nbased\nConference\non Numerical\n\nFields, Barcelona.\nSpain, pages\nJ. Hauser, P. R. Eisman, and J.\n\nunstructured\n\ngrids\n\nfor Navier-Stokes\n\nDelaunay\n\nbased\n\ntriangulations\n\nH. Deconinck.\n\nupon\n(;rid\n\ncalculations.\n\nfor the\n\nNaiver-\n\nStokes equations\nwith mininmm\nuser input.\nIn Proc. of the 13th International\nConference\non Numerical\nMethods in Fluid Dynamics.\nRome, Italy, pages 125-129. Springer-Verlag,\nJuly\n1992. Lecture Notes in Physics, No. 414, eds. M. Napolitano\nand F. Sabetta.\n\n[61] M. J. Marchant\ntions.\npages\n\nand\n\nN. P. Weatherill.\n\nIn Numerical\nGrid Generation\n151-162. Pineridge\nPress. April\n\nUnstructured\n\ngrid generation\n\nfor viscous\n\nin Computational\nFluid Dynamics\nand\n1994. Prec. of the Fourth International\n\nNumerical\nGrid Generation\nin Computational\nFluid Dynamics,\nP. Weatherill,\nP. R. Eiseman, J. Hauser, and J. F. Thompson.\n44\n\nSwansea,\n\nflow simula-\n\nRelated Fields,\nConference\non\n\nWales,\n\nUK eds. N.\n\n[62] O. Hassan\nE.\n\nJ. Probert\nN. P. Weatherill\nnumerical\nsimulation\nof viscous transonic\nJune 1994.\n\n[63] S. Pirzadeh.\nUnstructured\nJournal, 32(8):1735-1737,\n[64] S. Pirzadeh.\nAIAA paper\n\nViscous\n94-0417,\n\n[65] T. J. Barth. Steiner\n.lanuary 1995.\n\nM. Marchant\nK. Morgan and D. L. Marcum.\nThe\nflow using unstructured\ngrids. AIAA paper 94-2346,\n\nviscous grid generation\nAugust 1994.\n\nby the\n\nunstructured\nthree-dimensional\nJanuary\n1994.\n\ngrids\n\ntriangulation\n\nfor isotropic\n\n45\n\nand stretched\n\nadvancing-layers\n\nt)y tile a(Ivancing-\n\nelements.\n\nAIAA\n\nmethod.\n\nAIAA\n\nlayers\n\nmethod.\n\npaper\n\n95-0213,\n\nREPORT\n\nDOCUMENTATION\n\nPAGE\n\nForm Approved\nOMB No 0704-0188\n\nPublicreporting\nburdenfor thiscollectionof information isestimatedto average! hourper response,\nincluding time for reviewing\nthe\ninstructions, searching\nexst ngdata sources,\ngathering and maintainin_ data needed, nd compteting\nthe\na\nand reviewing collection information Sendcomments\nthe\nof\nregarding\nthisburden mateor any other aspectof th s\nest\ncollection information,including\nof\nsuggestionsfor reducing\nthisburden,to Washington\nHeadquarters\nServicesDirectoratefor information\nOperationsandReports,1215 Jefferson\nDavis Highway.Suite t204. Arlington,VA 22202-4302,and to the Officeof Managementand Budget, Paperwork\nReduction\nProject (0704 0188). WashingS.on, 20503\nDC\nI. AGENCY\n\nUSE ONLY(Leave\n\nb/ank)\n\n2. REPORT\nApril\n\n4. TITLE\n\nAND\n\nDATE\n\n3. REPORT\n\n1995\n\nTYPE\n\nContractor\n\nAND\n\nDATES COVERED\n\nReport\n\nSUBTITLE\n\n5. FUNDING\n\nUNSTRUCTURED\n\nMESH\n\nGENERATION\n\nAND\n\nNUMBERS\n\nADAPTIVITY\nC NASl-19480\nWU\n\n505-90-52-01\n\n6. AUTHOR(S)\nD.\n\nJ.\n\nMavriplis\n\n7. PERFORMING\nInstitute\nand\n\nORGANIZATION\n\nfor\n\nComputer\n\nNAME(S)\n\nApplications\n\nAND\nin\n\nADDRESS(ES)\n\n8. PERFORMING\nORGANIZATION\nREPORT NUMBER\n\nScience\n\nEngineering\n\nMail\n\nStop\n\n132C,\n\nHampton,\n\nVA\n\nNASA\n\nLangley\n\nAGENCY\n\nAeronautics\n\nLangley\n\nResearch\n\nHampton,\n\nVA\n\nand\n\nNAME(S)\n\nAND\n\nADDRESS(ES)\n\nReport\n\nNo.\n\n95-26\n\n10. SPONSORING/MONITORING\nAGENCY REPORT NUMBER\n\nAdministration\n\nNASA\n\nCenter\n\nCR-195069\n\nICASE\n\nReport\n\nNo.\n\n95-26\n\nNOTES\n\nTechnical\n\nFinal\nReport\nLecture\nnotes\n\nSpace\n\n23681-0001\n\n11. SUPPLEMENTARY\nLangley\n\nICASE\n\nCenter\n\n23681-0001\n\n9. SPONSORING/MONITORING\nNational\n\nResearch\n\nMonitor:\n\nfor\n\n26th\n\nDennis\n\nCFD\n\nM.\n\nLecture\n\n12a. DISTRIBUTION/AVAILABILITY\n\nBushnell\n\nSeries\n\nof\n\nyon\n\nKarman\n\nInstitute;\n\nAGARD\n\nSTATEMENT\n\n)ublication\n12b. DISTRIBUTION\n\nCODE\n\nUnclassified-Unlimited\n\nSubject\n\nCategory\n\n13. ABSTRACT\nAn\nfrom\non\n\n(Maximum\n\noverview\nthe\nthese\n\n64\n\n200 words)\n\nof current\nfield\n\nof\n\nunstructured\n\ncomputational\n\nalgorithms\n\nare\n\nthen\n\nconstructed\n\nmesh\ngeneration\nfor anisotropic\neducational\nmanner,\nIor readers\nunstructured\nmesh\ntechniques.\n\n14. SUBJECT\n\nmesh\ngeometry\nproblems\nfamiliar\n\ngeneration\nare\nand\nare\nwith\n\nfirst\n\nand\n\nadaptivity\n\ndescribed.\n\nillustrated\n\ntechniques\n\nVarious\n\nwith\n\nexamples.\n\ntreated\nin subsequent\ncomputational\nfluid\n\npractical\nIssues\n\nsections.\ndynamics,\n\nis given.\n\nBasic\n\nmesh\n\ngeneration\n\nof\n\nadaptive\n\nand\n\nis organized\nmore\nabout\n\n15. NUMBER\nMesh;\n\nAdaptive\n\nblocks\n\ntechniques\n\nmeshing\n\nThe\npresentation\nwishing\nto learn\n\nTERMS\n\nUnstructured;\n\nbuilding\n\ntaken\nbased\n\nstretched\nin an\ncurrent\n\nOF PAGES\n47\n\n16. PRICE CODE\nA03\n17. SECURITY\nCLASSIFICATION\nOF REPORT\nUnclassified\nNSN 7540-01-280-5500\n\n18. SECURITY CLASSIFICATION\nOF THIS PAGE\nUnclassified\n\n19. SECURITY\nCLASSIFICATION\nOF ABSTRACT\n\n20. LIMITATION\nOF ABSTRACT\n\nStandard Form 298(Rev. 2-89)\nPrescribedby ANSI Std, Z39-18\n298-102\n\n'