b'NOTICE\n\nTHIS DOCUMENT HAS BEEN REPRODUCED FROM\nMICROFICHE. ALTHOUGH IT IS RECOGNIZED THAT\nCERTAIN PORTIONS ARE ILLEGIBLE, IT IS BEING RELEASED\nIN THE INTEREST OF MAKING AVAILABLE AS MUCH\nINFORMATION AS POSSIBLE\n\nr/t G 7a_3\n\nNASA CRm i9affiPre\nFINAL REPORT ON\nPROTOTYPE MICROPROCESSOR CONTROLLER\n\nPrepared For:\nNational Aeronautics and Space Administration\nGoddard Space Flight Center\nGreenbelt, Maryland\t\n20771\n\nContract No.NASS-25356\n\nOctober, 1980\n\nN81-31861\n\n(NASA-CR-166703) 11 hU1UTYFE MICROPROCESSOR \t\n\nCONTRGLLER Final Report (tG E G Washington\nAnalytical Services) 34 p HC A03/11F A01\nCSCL 098\t\n\nUnclas\nG3/60 27324\n\nPlanetary Sciences Department Report No. 002\n0\n\nWASHINGTON ANALYTICAL 9261VIf ;QS- CON\'TE\nWOLF RESEARCH AND DEVELOPMENT GROUP\n\nFINAL REPORT ON\nPROTOTYPE MICROPROCESSOR CONTROLLER\nContract No.: NASS-25356\n\nOctober 1980\n\nPrepared ior:\nNASA Goddard Space Flight Center\nGreenbelt, Maryland \t\n20771\n\nPrepared by:\nJ. Zarur\nR. Kraeuter\nEG&G WASHINGTON ANALYTICAL SERVICES CENTER, INC.\n6801 Kenilworth Avenue,\nRiverdale, Maryland 20840\n\n\t\n\nt\n\nPlanetary Sciences Department Report No. 002-80\n\nr1\n\ni\n\nnK\n\nTABLE OF CONTENTS\nPage\n\t\n\n1.0\t\n\nINTRODUCTION\n\n2.0\n\nSYSTEM DESIGN AND DEVELOPMENT\n\nS\n\n3.0\n\nHARDWARE IMPLEMENTATION\n\n8\n\n3.1\t\n\nDIGITAL CONTROLLER\n\n8\n\n3.2\t\n\nDISPLAY AND OPERATOR INTERFACE\n\n11\n\n3.3\t\n\nDIRECT MEMORY ACCESS\n\n13\n\n3.3.1\t\n\n15\n\n4.0\n\n1\n\nTheory of Operation\n\nSOFTWARE\n\n18\n\n4.1\t\n\nCONTROL SYSTEMS PROGRAMS\n\n18\n\n4.1.1\t\n\nInterrupt Processing\n\n18\n\n4.1.2\t\n\nHydraulics\n\n20\n\n4.1.3\t\n\nMode Control\n\n22\n\n4.1.4\t\n\nLightpen Processing\n\n26\n\nry,\n\n4.2\t\n\nCHROMATICS DISPLAY SOFTWARE\n\n26\n\n4.3\t\n\nCOMMUNICATION ROUTINES\n\n27\n\n4.3.1\t\n\nSIO -\t Input\n\n28\n\n4.3.2\t\n\nSIO - Output\n\n29\n\n4.3.3\t\n\nDMA\n\n29\n\ny\n\nS.0\n\nCONCLUSIONS\n\n30\n\nE\n\ny\n\n.\t\n\n..\t\n\n. reatdYx..i`...w\xe2\x80\xa2\n.\n\n{\t\n\n:.. _\n\n_.;\t ..\t 3 .`.\xe2\x80\x94\t _...,\t -..\t\n\n..r . ;\t\n\n..a.. _.\t\n\nn.\t\n\ni-\t\n\n_\t\n\n...\t\n\n.... =1wiu+cII,:.n..... ,,, .., \t\n\nx.,\t\n\n.n.,,^nes,\t\n\n-,..,_._.\t\n\n.a.....\n\n...\t\n\n.._ v........rw\t\n\nrra..\t\n\n_\n\n..\t .\n\n\t\nr\n\nLIST OF ILLUSTRATIONS\nFigure\t\n\nPage\n\n1.1\n\nANTENNA CONTROL SYSTEM\n\n2\n\n1.2\n\nMICROCOMPUTER-BASED CONTROL SYSTEM\n\n4\n\n2.1\n\nTYPICAL DISPLAY FORMAT\n\n7\n\n3.1\n\nDEVELOPMENT SYSTEM\n\n9\n\n3.2\n\nDIGITAL CONTROLLER BOARD LAYOUT\n\n19\n\n3.7\n\nSYSTEM INTERCONNECTION DIAGRAM\n\n12\n\n3.4\n\nDMA CIRCUIT\n\n14\n\n3.5\n\nDATA TIMING\n\n17\nLIST OF TABLES\n\nTable\n4.1\t\n\nr\n\n21\n\n4.2\t\n\nI\n\nHYDRAULIC CONTROL/STATUS WORD\t\nMODE CONTROL WORD\t\n\n23\n\nSECTION 1.0\nINTRODUCTION\n\nj\t\n\nThe requirement for a microcomputer controller for .STDN\'\nantennas was developed to solve problems with the present\nantenna control system and to add features that improve performance and simplify system maintenance and repair.\nThe application of microcomputer technology to this\nsystem reduces its physical size by the implementation in\nfirmware of functions presently performed by hardwired logic.\nThe reduction in the number of components increases system\nreliability. A simular benefit is derived when a graphic\nvideo display is substituted for several control and indicator\npanels. A substantial reduction in the number of cables,\nconnectors and mechanical switches is achieved.\nIn contrast with the equipment they replace, the microcomputer and video display are programmable. The implementation of new features or the modification of existing functions\nis no longer a major effort and fewer, if any, hardware components would be required. The present system is used only when\ntracking. Between satellite passes the system remains idle.\nOn the other hand, the microcomputer-based system can be programmed to perform calibration and diagnostics, to update the\nsatellite orbital vector, and to communicate with other network\nsystems.\nThis new design is equally applicable to antennas and lasers.\n\n!\n\nDifferences in system operation can easily be accommodated in\nthe software so that a greater degree of hardware standardization\n^-\n\nmay be achieved.\nIn Figure 1.1 the present antenna control system is\n3\n\nshown.\t\n\nIts principal components are the dual-axis servo-\n\n1\n\n0\n\nI\n\n1\t\n\n1\t\nI\n\n\xc2\xb0o\n\n1\n1\t\n\nI\n\n1\t\n1\n\nI\t\n\nI\nI\n\n^\n^\n\n1\t\n\nI\t\nI\t\n\nI\n\n^\n\nI\t\n\nI\n\n^\t\n\nz\t\nices\t\nA Z> V\t\nZ W W\t\nW\t\ncc a\t\nN\t\n\nI\nI1\nI\n\n1\nI\nI\n\nI\nI\n\n^^\t\n\n1\t\n\n1\n\n19\n\nI\na\n\no-\n\njz\n\nI\t\n\nI\n\n12\nw\n\nI\n\nI\nI\nz\n\nZ\nz\n\n.\n\na!\n\nJ\n\nII\n\t\n\nN\t\n\nI\t\n\nz\n\ncc\n\nZ\t\n\nI\n\n<R\n\nY\n\nu\t\n\nI\n\nCW\n\na\n\nx-1\n\n20\ncc\nW\t\n\nI\t\n\n\'=\nLL\n\nJ\n\ny\n\nI\t\n\nN\n\n-1\t\na\t\n\nz\t\n\n1\n1\nI\n1\n\nI\t\n\nI\n\nW\n\nI\t\n\n1\nI\n\n^\n^\n\nI\t\nI\n\nI\n\nI\t\n\n^^\t\n\n1\n\n1\t\n\no ff\t\n\nI\n\nI\t\n\n^s\t\n\nI\t\n\nY^\t\n\n1\nI\n\nW\t\n\n1\n\nI\n\nI\t\n\n^^\t\n\n1\n\nI\t\n\nd\n\nII\n\na\nz\n\nI\n1\n\nW\t\n\ni\n3\'\n\n1\t\n\nLL\n^\t\n\nI\nz\t I\n\nW4\na\n\n1\n\n4\n\nW\nj-\n\n1\n\nI\n\n1\n\n^\n\nI\t\nI\t\n\n1\n\nP\'\n\nI\t\n\nI\n\nI\n\nI\n\nM\n\nk\n4444\n44\n\xe2\x99\xa6 a\n\nF\n\na\n\n2\n\ni\namplifier, logic bay, servo control panel, bias panel, receiver\npanel and the IACC (Interface to the Antenna Control Console).\nThe rack terminal unit distributes signals to the various antenna subsystems. The proposed Antenna Control Console is\nshown in Figure 1.2. The logic bay, the dual axis servoamplifier and the IACC are replaced by the microcomputer\nchassis, while the graphic video display system is substituted\nfor the various control and indicator panels.\n\n.\t\n\nre\n\nt\n\nf,\n\n3\n\ne\n\nX\n\n}4\nG.\n\n64kiNi-\n\ni\n\n.v,.-.._...<.._\t\n\n_....e.r..,m-c:......^.-._W\n.^,vwv_.wca.u...-^....,...^^\xc2\xab...^... d.M....e.^^ \t\n\n^...._... <.....\n\n1\n.:1 3rte...\t\n\n_..\t\n\n\xe2\x80\xa2..\t\n\n\'=:..\t\n\n..-. ^-\t L_,.,\t\n\n..^,. ...\n\n:r\n\nr\nof\nI\n\no^\n\nul\n\nI\n\n>o\n\n>^\n\n1\n\n1\n\nI\nI\nI\n\nj\nI\n\n1\n\nI\n\nI\n\n!\n\na^\n\n^ <\t\n\nZr\n\nI\n\n^\n\ns\n\n1\n\nI\n\nI\n\n_H\n\nI\n\n^\n\n1\n\n=\n\nI\n\nW\n\nI\ni\nI\nI\n\nI\n\n1\n^,\n\nI\n\nI\n\nV\n\n!I\n\nr\nW\n\n^\n\nI\n\nI\nI\n\nI\nI\n\n1\n1\n\n^\n^\n\nf\n\n1\n\nuJi 0\n\nCm\n\nI\nI\n\ni\ni\n\nu\nsv\n\n1\n1\n\n1\nI\n\n^^\n\nI1\n\nI\n\nI\n\n1\n\n1\n\n1\ni\n^l\n\nQ\nQ\n\n^\na\n\nI\n\n^v\n\nN\n\no\n\n1\n\nI\n\n1\n1\n\nSECTION 2.0\nSYSTEM DESIGN AND DEVELOPMENT\n\nGiven the basic approach outlined in the introduction,\nthe next task consisted of the selection of components for its\nimplementation.\nThe criteria for the selection of microcomputers are\nbasically the same as for all computers. Nord size, instruction set, speed, addressing range, accessories and available\nsoftware are some of the considerations that affect the selection of any computer. Although cost of the hardware is almost\nalways a major consideration, the cost of microcomputer hardware\nis relatively small compared to system development costs, so\ni\n\nthat performance should be the principal criterion.\nSeveral 8-bit and 16-bit microprocessors are available.\nOf the 16-bit devices one, the INTEL 8086, is a new design\nwhile the others are micro-versions of minicomputers. Being\nupwardly compatible with previous INTEL 8-bit micros, the 8086\n\ny.\n\ncan use most of the support hardware already available. The\nINTEL development system, particularly when equipped with an\nin-circuit emulator (a device that allows running programs\nwritten for one computer on a different computer), is a\npowerful and versatile system for the development and testing\nof software and hardware. In other respects, the 8086 meets\nall the performance criteria. Insofar as the instruction set,\naddressing range, and speed are concerned, the 8086 is superior\nto some mini-computers.\n\nI\n\nMany types of graphic video displays are available. It\nwas decided to select a color display since color conveys\ngreater\n\ninformation\n\nand provides better image contrast.\n\nGraphic displays come in several screen sizes and image resol-\n\nI\nt\n\nutions. Since the displays would replace panels that controlled\n\n5\n\n=y\nb^\n\nand displayed many functions, a large monitor screen would be\npreferred. A medium resolution 19" monitor was selected that\ndisplayed 512 and 512 pixels (image dot). This resolution\nis adequate for the type of information to he displayed.\nThis information consists of alpha-numeric and graphic\ndata. The system should be able to display rapidly changing\ndata in real-time. The Chromatics CG1999 met this requirement. A typical format for tracking with the USB 9 meter\nantenna is shown in Figure 2.1. The alphanumeric data in\nthe upper third of the display is updated at a rate of 3/s.\nThe remaining alphanumeric fields and graphic data are updated\nas necessary. The background graphic data, i.e. the squares,\nrectangles and labels are initialized once at the start. Data\nis displayed by sending a sequence of commands to the display\ncontroller. In order to meet the real-time requirement, the\ndisplay is furnished with a Direct Memory Access (DATA) channel.\nThe 8086 is similarly equipped, However, the communication\nprotocols for the two channels are not compatible. A custom\ninterface was designed to arbitrate the data transfer between\nthem. The combined system is capable of transferring 400 K\nbytes per second.\n\nt\ns\n\nr\nt\n\n6\n\n\t\n\nk!\n\n\t\nI\nOD\n\nU)\n\nEl\n\xe2\x96\xbaa\n\n^\t\n\nm\n\nm\t\n\n`-\n\n+\n\n0\n\nNeal\n\nY\n\nM\n\nIV\n\nW\n\nr\n\nm\n\nm\t\n\n+OD F 1\t\n\na\n\nx.^\n\nThe entire system consists of a Digital Controller subsystem, a video display and the antenna simulator. The modularity of computer boards increases the reliability and ease\nof maintenance of each part of the system. A block diagram\nof the entire development system is shown in Figure 3.1.\nMost of the programming was done for the Digital Controller\nwhich is the heart of the system. Erasable Programmable Read\nOnly Memory (EPROM) was used during development so that changes\nwere easily made by erasing and then reprogramming then. If\nchanges ever need to be made while the system is in the field,\nonly the PROhts would be affected.\nEach iSBC 86/12A board contains 32K Random Access Memory\n(PJM), expandable to 64K and enough ROM socket space to hold\n32K bytes. The 8086 microprocessor being used is extremely\nfast and is capable of accessing up to one megabyte directly.\nThis system has ample capacity for any upgrade which may be\nneeded.\n\n3.1 DIGITAL CONTROLLER\nThe system consists of a main Central Processing Unit\n(CPU) board, an auxiliary CPU board containing additional\nmemory, a Direct Memory Acces3 (DNIA) controller board and a\nwirewrap board on which a DMA interface circuit was implemented.\nThe configuration of the boards in the chassis is shown in\nFigure 3.2.\nDuring development of the software, an in-circuit emulator, ICE-86, was used because of its full symbolic debugging\n\n8\n\nt\n\ns\n\n0\n\na\n\ns\t\nw\n\nLe\n\na\t\n\nw\nz\n\nQ\t\n\nW\nQJN^j\n\nWN\nO\n\n^\n\nN\n\nQ\nYI\n\nH\n\nW\n0\n\ns\n\nmi\nW\n0\n\np\nW\t\n\nN\n\nr\n\nW\nI\t\n\n\xe2\x80\xa2\t\n\n^p\n1D\t\n\n^\n\nV\t\n\nto\n\nQ\nW\n\no^\n\nQ\nt\n\nlam\n\n_\n\no\nV WN\n\nW\n\n^tl\n\nr\n\n`\t\n\nm\n\nJ\n\n\'1z\nz\n\n3\n\nDMA INTERFACE CIRCUIT\n\nMAIN CPU BOARD\nAUX. MEMORY/CPU BOARD\n\nDMA CONTROLLER BOARD\n\nFIGURE 3.2. DIGITAL CONTROLLER BOARD LAYOUT\n\n10\n\nr\n\ncapability. In the final system, however, the in-circuit\nemulator was removed and the software was programmed into\nPROMS. With the in- circuit emulator removed, the development\nsystem is used as an antenna simulator.\nThe system bus is the INTEL MULTIBUS. The two CPU boards\n-\t\n\nand the DMA controller board all communicate over this bus.\nA diagram of the interfacing to the MULTIBUS is shown in Figure\n3.3.\n\n3.2 DISPLAY ANI. OPERATOR INTERFACE\nThe CHROMATICS video display system contains the main\noutput display for antenna status. It also acts as the operator\'s interactive device to the antenna. The system consists\nof a color CRT, a keyboard, a lightpen, a DMA controller board\nand software to generate graphic functions and to handle the\nd\n\nSerial Input/Output (SIO).\nThe SIO input, keyboard and lightpen functions all have\nan appropriate interrupt. The SIO and keyboard functions have\na single data byte associated with them whereas the lightpen\nhas 4 data bytes.\nThe SIO line is interfaced to the main CPU board in the\nDigital Controller system. It runs at 9600 baud using no\nparity bits and 1 stop bit. It is used primarily for the\ntransfer of command strings from the digital controller to\nthe CHROMATICS video display system. Only short strings of\nspecific commands are sent across this line because of its\nslow speed. Block data transfers are carried out by the DMA,\nwhich is described in the next section. The SIO is\nalso used to transfer o p\terate r initiated commands to the\ndigital controller.\n\n11\n\na\na\na\nO\n2\nO\nF\nu\nui\n2\n2\nO\nV\nW\nH\n_Z\n2\nW\nH\n\nN\nN\nri\nW\nQ\nLL\n\nJ.\n\n12\n\nf"t\n\n___._r.._..._,...^...\t\n\nJ\n\nr^!\n1\n.\t\n\n1\nThe keyboard is interfaced directly to the CPU operating\nsystem of the CHROMATICS. It is used only by the operator when\nhe wishes to enter a character into a selected bias to be\nprocessed by the digital controller. The keyboard is only\nenabled when a bias has been selected\n\n( which\n\nis indicated by\n\na cursor prompt on the appropriate position on the screen),\nand there are no previous keyboard data waiting to be processed.\nThe lightpen is interfaced through a control board in the\nCHROMATICS to the operating system of the display. It is used\nby the operator when he wishes to select a mode or choose another function of the antenna control system. The procedure is\nto point the pen at the desired location on the CRT screen\nand touch the tip of the pen with the forefinger. This will\nflood the screen with blue from the top, down to the lightpen\nposition and generate an interrupt to the CPU operating system.\nThe screen coordinates are then transfered over the SIO line\nto the digital controller where the) , are processed. The lightpen is enabled only if there is rio previous lightpen data\nwaiting to be processed.\n\n3.3 DIRECT MEMORY ACCESS\nFor the purpose of high speed data block transfer, direct\nmemory access, DMA, is used. Since the Intel and Chromatics\na-\n\nD,Nta boards\' protocols are incompatible, an interface circuit is\nrequired. The circuit is responsible for synchronizing the DMA\nsignals upon initiation of a transfer and the subsequent timing\nof handshaking signals for the remainder of the transfer. The\ncircuit is shown in Figure 3.4.\n\nr\n\n13\n\nh\n\nI\n\ns\n\nY\nk\n\nH\nV\nV\n\nQ\nO\nW\n\nLL\n\nF\t\n\n^ <\nL\nk\nY\n\n14\n\nF\n\n3.3.1 Theory of Operation\nDMA operation can be considered independent of the rest\nof the system because during the transfer of data, it only\ninteracts with the system in order to steal a bus cycle to\nread a byte from memory. Until it is ready to read another\nbyte, it interacts only with the peripheral device through the\ninterface circuit. After the DAtA transfer is complete, the main\nCPU is interrupted, signaling the operation is complete.\nThe DMA sequence of events are as follows:\n- If the DMA controller is ready to initiate a\ntransfer, then XFER RQ/ is pre-reset through\nOUTPORT2/.\n- The length register is filled with the number\nof bytes to be transfered.\n- The control register is filled with a control\nword specifying 8-bit transfer from system\nmemory to the peripheral device (the CHROMATICS\nDMA board).\n- The address register is filled with the first\nmemory location to be accessed.\n- XFER RQ/ is asserted through OUTORTI/ which\ninitiates the DATA transfer.\n- As XFER RQ/ is asserted, the DMA board gains\ncontrol of the bus and generates a memory read\ncommand. After the data byte is placed on the\nbus, the control logic issues a transfer\nacknowledge signal (XFER ACK/)\n\nis\n\n- The CHROMATICS DMA asserts 717 a short\ntime thereafter when the data byte is\naccepted. M is then reset.\n- TM remains true for a minimum of 1 microsecond for the data byte to be read. As\n\nM\n\nis reset, XFER RQ/ is also reset. The data\ntransfer is complete.\n- The length register is decremented and if\nnot zero, the DNIA control logic asserts XFER RQ/\nagain and another transfer cycle is begun.\n- When the length register becomes zero, an\ninterrupt is generated to signal that the\nblock transfer has been completed.\nThe timing diagram for DNL4 operation is shown in\nFigure 3.5.\n\na\nz\n\nf\na\n0\nW\n\nLL\n\nN\t\n\n^\nO\n\nO\t\n\nQ\t\nQ\t\nW\t\n\na\nS\nW\n\nO\t\n\nx\t\n\nX\t\n\na\n(^\t\n\n17\n\nI^\n\nh\na\n\nO\n\nSECTION 4.0\nSOFTWARE\n\nThe majority of the software was written for the INTEL\n8086 microprocessor in the Digital Controller. INTEL\'s\nassembly language, ASM86, was used because of its efficiency\nin the programming of real-time processing routines.\nThe main program resides in PROM on the main CPU board\nand is just over 5000 bytes in length. The program on the\nauxiliary CPU board is very small because it just transfers\nstatus data from the antenna simulator to the main program.\nThe remainder of the software is written in Z-80 assembly\nlanguage for the CHROMATICS video display system. This is a\nrelatively small program, since the CHROMATICS system is provided with extensive software. The program accepts command\nstrings from the Digital Controller and passes them to the\nCHROMATICS graphics operating system to be processes, ane\ntransfers operator commands to the Digital Controller.\n\n4.1 CONTROL SYSTEM PROGRAMS\nThe control system programs comprise the bulk of the\nsoftware. These programs include real-time processing of\ninterrupts, hydraulics control, mode control and operator\ncommand processing.\n\n4.1.1 Interrupt Processing\na\t\nThere are a total of 4 interrupts used in normal processing on the main board. These are separated into 2 types,\nsynchronous and asynchronous.\n\n18\nM\n\nt\n\nSynchronous interrupts occur at predefined intervals.\nThe real-time clock interrupt occurs 3 time per second. It\nsets the DMA pro:.ess flag on every occurrence, and signals\nto the main program that it is to initiate a DMA transfer to\nrefresh the display positions and velocities. The other\nfunction of this interrupt is to update the real-time clock\nonce per second.\nThe other synchronous interrupt is the hydraulic startup\ntimer which, when started, produces 15 interrupts spaced 1/3\nsecond apart which creates a 5 second delay. If both the\ncontrol and replenish pressures are not high after this period,\nthen the hydraulics are shut down.\nThere are also asynchronous interrupts which occur only\nto signal an event. These are the DNA completion interrupt\n\nwhich signals\n\nthe completion of a DNA transfer and the SIO\n\ninterrupt which signals that a data byte has been received.\nThe function of the SIO interrupt routine is simply to\nread the data sent, store it in a circular buffer and increment\nthe buffer pointer.\nThe DMA completion interrupt clears the DMA busy flag\nand resets the DNA processor.\nThe interrupts range frcm\np\t\n\nhighest\n\npriority, those which\n\ncontain little processing, to lowest priority, these which\nrequire more processing as follows:\nIR4 - DMA completion interrupt\n- From Multibus signal IKT4/genera\xc2\xb1ed by\nthe DMA controller\n\nt\t\nt\n\n19\n\nIRS - Hydraulics Startup time\n- From 8253 PIT Timer 1 Out (TMR1 INTR)\n- In Rate Generator Mode\nIRE - Real-time clock Interrupt\n- From 8253 PIT Timer 0 Out (TMRO INTR)\n- in Rate Generator Mode\nIR7 - SIO Data Available\n- From 8251A USART Receiver Buffer Full (51RX INTR)\n\n4.1.2 Hydraulics\nThere are four function of the hydraulics software:\n1.\n\nDisplay update\n\n2.\n\nStatus update\n\n3.\n\nHydraulics start-up (X or 1\')\n\n4.\n\nInteraction with braking system\n\nThere are separate control words, status words and motion\nflag for each axis along with a flag containing information\nabout hydraulic running condition for both axes.\nThe format of the control words is the same as that of\nthe status words for both axes. If a bit is set in a control\nword, this means that the status of that parameter is to be\ntoggled whereas a bit set .n a status word denotes a specific\ncondition. If more than one bit is set in a control word,\neach bit is processed before an exit to the main program is\nmade.\n\n20\n\ni\n\nTABLE 4.1\nHYDRAULIC CONTROL/STATUS WORD\n\nBIT\n\nFUNCTION\n\n0\n\nAXIS DISABLE\n\n1\n\nPOWER INTERLOCK\n\n2\n\nHYDRAULICS STARTED\n\n3\n\nK2 - RELAY ON\n\n4\n\nREMOTE START\n\n5\n\nTDPS START\n\n6\n\nOPERATOR START-UP\n\ni\n\nREPLENISH PRESSURE LOW\n\n8\n\nCONTROL PRESSURE. LOW\n\n9\n\nOVERHEAT\nHEAT EXCHANGE TERMPERATURE\n\n10\n\nHI TEMPERATURE\n12\n\nHYDRAULICS RUNNING\n\n13\n\nHYDRAULICS STARTED\n\n14\n\nHYDRAULICS READY\n\n21\n\nThe hydraulics program is entered through either the\nX-axis or Y-axis a.-id the only interaction between the two\nwould take place when a hydraulic s y stem is started or shut\ndown which would send the entire system into brakemode,\ndisabling the axes.\nThe control word is tested to find out which parameter\nof the h y draulics needs to he updated. After all changes\nhave been made the display is updated. A check is made to\nset flags indicating brakes are to be released, enabling\nthe antenna to be moved by the mode control program. If the\nhydraulics are started then the status is updated upon reentrance of the routine after a 5-second delav is executed.\n\n4.1.3 Mode Control\nUpon entering the mode control program, first the\nstatus of s y stem is updated, then the status of the display\nis changed. There are a total of 4 words need to accomplish\nthis task:\nREQUESTMODE: Requests the status of a mode be\nchanged.\nCONTROLMODE: Indicates whether a particular\nmode is selected or not.\nVALIDNIODE: Indicates whether a mode is valid to be\n..\t\n\nselected.\nINVALIDMODE: Indicates a mode is neither selected\nnor valid.\n\n1\n\nt\n\n\t\n\nZ^\n\nTAnLE 4.2\nMODE CONTROL WORD\n\nFUNCTION\n\nBIT\n0\n\nTDPS RUN\n\nl\n\nPRIMARY/SECONDARY\n\n2\n\nHOLD SCAN\n\n3\n\nSCAN\n\n4\n\nADD Y BIAS\n\n5\n\nADD X BIAS\n\n6\n\nADD TIME BIAS\n\n7\n\nAUGMENT\n\n8\n\nAUXILIARY\n\n9\n\nSLAVE\n\n10\n11\n\nPROGRAM\n\n12\n\nMANUAL PROGRAM\n\n13\n\nMANUAL POSITION\n\n14\n\nMANUAL VELOCITY\n\n15\n\ni\t\n\nAUTOTRACK\n\nBRAKEMODE\n\nA\n\n1\ny\n\nV.\n\n4\n\n23\nx\n\nAll four words have the same format as far as bit\n\npositioning. A\n\nbit set in REQUESTMODE indicates a request\n\nto change modes whereas a bit set in the other words\nrepresents status. Even though it is obvious that if a\nmode is selected then it is also valid, it is only represented as o%ing selected in order to avoid ambiguity in coloring\nthe appropriate square in the display part of the program.\nThere are 4 distinct classes of modes that are selectabl , which are:\nMJORNIODE: Can be selected but not toggled,\ncan only be turned off by selecting another\nmajor mode,\nBRAkEMODE: Is a major mode but it is automatically\nselected if an adverse condition arises in the\nhydraulics or if a hydraulic system is started.\nAlso may occur when a major mode is selected\nwhile both axes are disabled.\nSUBMODE: Submodes are valid only after an appropriate\nmajor mode is selected. Submodes can be toggled.\nPRIIARY/SECO\\DART: Toggle switch which determines\na\n\n\t\n\nwhich major modes are valid.\nAll modes are lighted green if selected, blue if they\nare valid and black if invalid.\n\n1\nUpon\n\nentering the\n\nmode control program, if multiple\n\nbits are set in REQUESTMODE the one with the highest priority\nis processed and all others disregarded. The priorities\nare as follows:\n\n24\n\nI\n\nTDPSRDY is always tested first because it is\nindicator of the status of the TPDS computer.\n"\t\n\nIf it is set then TDPS RUN is made valid, if\nnot, then TDPS RUN indicator is automatically\nextinguished.\nPrioriti o s are assigned starting at the highest\norder bit of REQUESTMODE, which is brakemode.\nMajor modes are of higher priority than submodes.\nThe primary/secondary switch has the lowest\npriority.\nIf the brakemode bit was not set in REQUESTMODE,\nthen the next lower bit is tested and so on\nuntil the correct bit is found. \t\n\nIt is processed,\n\nthe display is updated and exit is made to the\nmain program.\n4.1.4 Lightpen Processing\nThe X and Y-coordinates obtained directly from the\nCHROMATICS System are multiplied by a factor of 2 5 and 26\nrespectively. They represent the coordinates of a point on\nthe CHROMATICS CRT with the origin at the lower left hand\ncorner.\nUpon entering the lightpen processing routine, the raw\ncoordinates are shifted right the appropriate number of bits\nin order for the coordinates to be useful in a 512 x 512\npoint representation of the display CRT. Successive testing of\ncoordinates, beginning at the top of the CRT image, is done\nand if the set of coordinates lie within a certain predefined\nboundary then appropriate action is taken, such as selecting\na mode. ?f the selected point does not lie within a valid\nboundary then the routine is simply exited.\n\n25\n\n^n\n\n4.1.5 Keyboard Processing\nThe keyboard is only used to enter data into X-axis,\nTime or Y-axis bias values from the CHROMATICS keyboard.\nThe keyboard will only be enabled if no previous data\nremains to be processed and if a bias position has been\nselected, as designated by a cursor prompt on the specific\ncharacter to be changed in the bias field. \t\n\nIf the character\n\nis valid then the internal value of the bias and the displayed\nvalue will be changed accordingly, and the prompt is advanced\nto the next character. If the next displayed character is a\ncolon or period, it is passed over and the next character is\nprompted. At the end of the displayed value, the prompt is\nremoved.\nThe operator might wish to advance the prompt manually,\nin which case the left and right arrows are used to move the\ncursor. In order to remove the prompt, the operator would\npress "home".\nIf the system is in an add bias mode, the updated bias\nis added automatically to the displayed position or time.\nY\n\n4.2 CHROMATICS DISPLAY SOFTWARE\nThe CHROMATICS System functions mainly as a display and\ncontrol panel. It contains software to generate many graphic\nsymbols. The system uses a relatively slow Z-80 CPU to\na\t\n\nhandle I/O and graphics so that it s not capable of handling\ncomplicated tasks in real-time.\nAll control data that is to be output from the system is\nput in a circular buffer. Each cycle of the program outputs\na single byte. The buffer is scanned continuously for lightpen\n\nI\n\nand keyboard data to be transferred to the Digital Controller.\nInput data is processed immediately because there are\nonly a few tasks involved other than commands to update the\ndisplay. There are:\n1. Enabling keyboard interrupt\n\n1\t\n\n2.\n\nEnabling lightner. interrupt\n\n3.\n\nInitiating MLA transfer\n\nEnabling interrupts are simple one-byte commands.\nInitiating the DMA controller for a transfer consists of one\nbyte to begin the DMA initiation, 2 bytes for a start address\nand 2 bytes for length of data block to be transfered. After\nall of these para-neters have been read, a flag is set and\ncontrol is returned to the main program. After completion of\n{\t\n\nthe transfer, normal program execution resumes.\n\nA\n\n4.3\n\nCOMMUNICATION ROUTINES\nThe Digital Controller and the CHROTLATICS Video Display\n\ncommunicate over a serial I/O (SIO) line and via DMA.\nThe SIO is operated at 9600 band, approximately 960\ncharacters per second. The DMA transfers data at a rate close\nto 400 K bytes/second. These two types of I/O also differ in\ntheir requirement for CPU overhead. For the SIO, the CPU must\nprocess every character sent or received. However, once the DMA\nis set up, it requires no further attention from the CPU until\nthe block transfer is complete.\nFor these reasons, the SIO is used for the transfer of\nshort strings of data, such as lightpen position ASCII key-\n\n27\n\nJ\n\nboard data and the DMA for the transfer of large blocks of\nJ\t\n\ndata such as graphics data, which can amount to several\nthousand bytes.\n4.3.1 SIO - Input\nSerial input to the main processor board consists only\nof operator initiated commands from the CHROMATIC Display\nControl system. There are two types of commands, a lightpen\nselection or a keyboard entry for the bias panel.\nThe lightpen selection data string consists of six\nconsecutive bytes, the first being a special start byte\nindicating that the data are screen coordinates on the\nCHROMATICS CRT. The data itself consists of four bytes.\n1.\n\nThe lower byte of the X - coordinate\n\n2.\n\nThe higher byte of the X - coordinate\n\n3.\n\nThe lower byte of the Y - coordinate\n\n4.\n\nThe higher byte of the Y - coordinate\n\nThere is also a sixth and final byte sent from the\na\t\n\nCHROMATICS which is a special stop byte ending the screen\ncoordinate transfer.\nKeyboard data is also sent over this same line. The\nkeyboard data string consists of only two bytes. The one\nbyte is simply the ASCII code for the key and the other is a\nspecial stop byte to end the data s-L,ing.\nThe SIO interrupt handler palces each byte of data in\na circular buffer to be processed later after all pending\n\n28\n\ns\n\ninterrupts are serviced.\n4.3.2 SIO - Output\nSerial output consists of commands from the master CPU\nto the CHROTIATICS Display program pertaining to the control\nof interrupt enabling (lightpen F keyboard), DAIA transfer\ninitiation and the updating of the output display.\nDuring the normal processing of serial input data and\nreal-time updating of time displays, a large amount of data\nis assembled for output to the display. The data is assembled\nin strings and the address of the first byte of data is placed\nin a circular output buffer. The string is terminated by a\nnull byte.\nSince tie output of data is - relatively slow operation,\nbecause polling of the USART is needed to avoid overrun errors,\nonly one string is output during any processing cycle.\n\n4. 3. 3\t\n\nDATA\n\nThe DMA was described in detail in Section 3.3.\n\n4\n\na\n\n29\n\n^x\n\n^^\xe2\x80\xa2wY\'s\n\nI\nSECTION 5.0\nCONCLUSIONS\n\nThe principal advantage of this implementation over the\npresent system is the utilization of a general purpose microcomputer as opposed to hardwired logic. This approach allows\nthe use of all system resources for different applications at\ndifferent times. This is achieved by activating a specific\nprogram, from several stored in the system, to perform the\nrequired function. Additional functions or modifications are\naccomodated simply and economically by adding programs or\nmodifying existing ones.\nIn terms of hardware, a system based on a microcomputer\nis more compact, simpler to design, and often more economical.\nThe microcomputer board contains the CPU, sufficient memory\nto store the programs and some I/O capability. With additional\nboards to interface with the controlled equipment and the\nproper software, the system is basically complete.\nThe inherent advantages of general purpose microcomputers\nand the availability of high-level languages and better peripherals greatly simplify system design and development.\n\n30\n\nn\n\n'