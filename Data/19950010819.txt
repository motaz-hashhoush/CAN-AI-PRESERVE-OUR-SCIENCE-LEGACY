b'N95- 17234\nI/0<\n\nAUTONOMOUS\n\nMISSION\nPLANNING\nINTEGRATED,\n\nAND SCHEDULING-INNOVATIVE,\nRESPONSIVE\n\nCharisse\nSimon\nComputer\n\nLarry\n\nconcept\nfor NASA\ndecentralized\nand\n\nscheduling,\n\nground data\ndistributed\n\na\n\nsystems,\napproach\n\nFlight\n\nCenter\n\nDavis\nand Space\n\nof Colorado\n\nABSTRACT\nmission\n\nHull\n\nfor Atmospheric\n\nUniversity\n\nAutonomous\n\nCorporation\n\nSpace\n\nRandy\nLaboratory\n\n0"\n\nSary\nLiu\n\nSciences\n\nNASA/Goddard\n\nC7\n\nPhysics\n\nat Boulder\n\nthat the time a scientific\nspacecraft\nspends in\nspace is utilized as fully as possible in making\nobservations\nand conducting\nexperiments.\nTo\nachieve\nthis, most NASA missions\nplan their\nscientific\nactivities\nwell in advance;\nconvert\n\nnew\nis a\nto\n\nscientific\nspacecraft\nplanning,\nscheduling,\nand\ncommand\nmanagement.\nSystems\nand services\nare provided\nthat enable\ninvestigators\nto\noperate\ntheir\nown\ninstruments.\nIn\nautonomous\nmission\nscheduling,\nseparate\nnodes exist for each instrmnent\nand one or\n\nthose\nplans\ninto\nformal\nspacecraft\nand\ninstrument\nschedules\non a daily,\nweekly\nor\nmonthly\nbasis; and then generate\nand uplink\nthe commands\nneeded\nto carry\nout the\nscheduled\nactivities.\n\nmore\noperations\nnodes\nexist\nfor\nthe\nspacecraft.\nEach node is responsible\nfor its\nown\noperations\nwhich\ninclude\nplanning,\nscheduling,\nand\ncommanding;\nand\nfor\nresolving\nconflicts\nwith other nodes.\nOne or\nmore database\nservers\naccessihle\nto all nodes\nenable\neach\nto share\nmission\nand science\n\nThere\nare two principal\ntypes\nof mission\nscheduling\nproblems\nfor NASA.\nThe first\ntype arises when a spacecraft\nmust perform\na\nlarge number\nof activities\nin serial fashion.\nAn example\nis the Hubble\nSpace\nTelescope\n(HST).\nThere\nare\nalways\nhundreds\nof\nproposed\nobservations\nin the queue\nfor the\nHST, and typically\nonly one observation\ncan\nbe made\nat a time.\nHST schedulers\nmust\n\nplanning,\ninformation.\n\nscheduling,\nThe\n\nautonomous\na\nrealistic\n\nmission\nmix\n\nand\ncommanding\narchitecture\nfor\n\nscheduling\nis based\nof\nstate-of-the-art\n\nselect the observations\nto be supported\nand\nthen\nlay\nthem\nout as single\nthread\nof\nactivities.\nThe problem\nis complicated\nfurther\nby the fact that an experiment\nmay require\nseveral observations:\nif the HST is scheduled\n\nupon\nand\n\nemerging\ntechnology\nand services,\ne.g., high\nperformance\nindividual\nworkstations,\nhigh\nspeed\ncommunications,\nclient-server\ncomputing\nand relational\ndatabases.\nconcept\nis particularly\nsuited to the\nless complex\nmissions of the future.\n\nto look at a particular\ntarget today,\nthen it\nmay also be committed\nto viewing\nthe target\non future occasions\nas well. Serial scheduling\nproblems\nare well known (they occur in many\nterTestrial\napplications),\nbut\nthey\nare\ninherently\ndifficult\nand time consuming\nto\nsolve.\nDevelopers\nof automated\nschedulers\nfor space missions\nthat must handle this kind\nof problem\ntend to concentrate\non devising\n\nThe\nsmaller,\n\nINTRODUCTION\nNASA\'s\nvaluable\nimportant\n\nscientific\nspacecraft\nare unique\nand\nresources,\nso it has always been an\npart of mission\noperations\nto assure\n\n481\n\nalgorithms\nthat increase\nscheduled\nobserving\ntime\nwhile\nreducing\nthe processing\ntime\nneeded to generate\nthe schedule.\n\n:i _\n! ili,\n\nup-to-date\nephemeris\ntheir scheduling.\n\nAn interesting\nresult from\nwas that conflicts\nbetween\n\n_i\n_\n\n:iilil\n\nThe\nsecond\ntype\nof mission\nscheduling\nproblem\nis where a spacecraft\ncan perform\na\nnumber\nof major\nactivities\nin parallel.\nAn\nexample\nis the forthcoming\nEarth Observing\nSystem (EOS) AM satellite\nwhich will carry\ninstruments\nthat can conduct\ntheir observing\nprograms\nsimultaneously\nand\nmore-or-less\nindependently\nof one another.\nIt has long\nbeen recognized\nthat this kind\nof parallel\nscheduling\nproblem\nallows\nfor a distributed\nsolution.\nInvestigators,\nresponsible\nfor each\ninstrument\non a spacecraft,\ngenerate\nthe\nschedule\nfor their\nown instrument.\nThese\n\nor resource\n\nSince\n\n1986,\n\nthe\n\nSystems\n\nIdeally,\ncentral\n\nscheduling\nspacecraft\n\nplanning\nand\nenvironment.\n\nTechnology\n\nscheduling\nBecause\n\nof observations\nby\nfalls into the parallel\n\nin\n\nEOS\n\nTestbed\n\nwas\n\na\nthe\n\nmost\nEOS\nscheduling\n\nsuccessful\n\nschedules\ninstruments.\ntransactions\n\nin\n\nas nodes\n\nnot having\n\nfor\n\nthe\nAll\n\nbecome\n\nspacecraft\nand for\nall\nscheduling\nsystem\ntransfers\nof information\n\nto or from a database,\nusing a\nlanguage\n(SQL).\nThe schema\ndatabase\nis flexible\nand easy\nnew information\ncan be added\n\nbut not resolved,\nhowever.\nFor example,\nit\nproved\ndifficult\nto keep\nall of the nodes\'\nscheduling\nactivities\nsynchronized.\nThe\nscheduling\nprocess\nrequired\nsubstantial\ncoordination\nbetween\npersonnel\nat all nodes.\nEven\nwhen\nnodes\ncoordinated\nthere\nwere\nsuch\n\nnode---not\njust the\nhave access to all\n\navailable\nto all nodes.\nFor example,\nthe most\nup-to-date\nephemeris\ndata is always available\nin a database.\nSimilarly,\nall nodes\nhave\naccess, via the database(s),\nto the most current\n\ndemonstrating\nthat distributed\nplanning\nand\nscheduling\nis feasible\nfor a project like EOS.\nSeveral important\nproblems\nwere discovered,\n\nproblems,\n\nevery scheduling\nscheduler--would\n\nAn autonomous\nmission\nscheduling\nconcept\nhas been developed\nthat may eliminate\nthe\nproblems\nnoted above.\nAs shown in Figure 1,\nseparate\nnodes exist for each instrument\nand\none or more operations\nnodes exist for the\nspacecraft.\nCentral to this concept\nis one or\nmore databases\nthat make needed information\n\ncategory\ndescribed\nabove,\nthe EOS project\ndecided\nto sponsor\nan EOS\nPlanning\nand\nScheduling\nTestbed\nproject\nduring\n19921993,\nto explore\nissues\nassociated\nwith\ndistributed\ninstrument\nscheduling.\nThe\n\nthe EOS Testbed\ninstruments\nwere\n\ninformation\nneeded for scheduling,\nand every\nnode would\nbe able to view the spacecraft\nschedule\nand any instrument\nschedule.\nThe\nability\nto detect\nconstraint\nviolations\nand\nconflicts,\nand the potential\nto automatically\nresolve\nsimple\nconflicts,\nare\nimportant\ncapabilities\nfor\na distributed\nscheduling\nsystem.\nHowever,\nthese functions\nneed not\nbe implemented\nwithin a central scheduler.\n\nDivision\nat Goddard\nSpace\nFlight\nCenter\n(GSFC)\nhas been\ninvestigating\nscheduling\nissues\nrelevant\nto GSFC\nmissions\nthrough\nanalysis,\nprototyping\ntasks,\nand\ntestbeds.\nRecent\nwork has concentrated\non EOS and\nstudies\nof\ndistributed\n\nfor use in\n\n(a feature\nthat the EOS\nTestbed\ndid not\nprovide).\nAs the testbed progressed\nthe need\nfor a "central\nscheduler"\nbecame\nless clear.\n\nover-subscription.\nData\n\navailable\n\nusually\nbest\nresolved\nby\nmaking\nthe\ninstrument\ninvestigators\naware of the problem\nand letting them work it out for themselves.\nTo aid in conflict\nresolution,\nit would\nhave\nbeen useful for investigators\nto be able to see\nschedules\nfor instruments\nother than their own\n\ndetailed\ninstrument\nplans can be collected\nand\ncombined\nwith\na\nplan\nfor\nspacecraft\nhousekeeping\nactivities\nto form\na master\nschedule\nthat\ncan\nthen\nbe\nchecked\nfor\nconflicts\n\ndata\n\nstandard\nquery\nof a scheduling\nto modify,\nso\nas needed.\n\nAlong\nwith\nthe\ndatabase\napproach,\nthe\nautonomous\nmission\nscheduling\nconcept\nproposes\na client-server\narchitecture\nfor a\ndistributed\nscheduling\nsystem.\nServices,\nlike\nresource\ntracking,\nconflict\ndetection\nand\n\nthe most\n\n482\n\nconflict\n\nresolution,\n\ncan\n\nbe\n\ninvoked\n\nby\n\na\n\nfacilitates\nhardware\nand software\nreuse\nby\nusing generic\ncomponents\nto support\nscience\nand\nmission\noperations.\nWith\ngeneric,\nreusable\ncomponents,\nground\ndata systems\nwill be rapidly\nand inexpensively\nbuilt by\ntailoring\ncomponents\nfor each new mission.\nEach ground\ndata system\nwill consist\nof a\nnumber\nof physically\nindependent,\npossibly\ngeographically\ndistributed\nnodes.\nThese\nnodes would operate\ntogether\nand participate\nin coordinated\nplanning,\nscheduling,\nand\ncommanding\nusing\nclient-server\ncomputing\nand standards-based\nopen systems.\n\nscheduling\nnode\nas needed.\nDistributed\nscheduling\nmay\nbe\none\nof\nthe\nfirst\nopportunities\nto actually\napply\nthe clientserver\narchitecture\nto\nspace\nmission\n_i_:_i_: / "\n\xe2\x80\xa2\n_iii:/i: :;;i\n\noperations.\n\ni:\'i<J I\ni \xc2\xb8 \xe2\x80\xa2_ii:i _i\n\nARCHITECTURE\nThe\nautonomous\nmission\nscheduling\narchitecture\nis distributed\nwith application\nfunctionality\nand data\npartitioned\nbetween\nworkstations\n(clients\nand servers)\nconnected\nto local area networks\n(LANs).\nAutonomous\nmission\nscheduling\nfunctions\nare allocated\nto\ncomponents\nor\nnodes,\nand\nnodes\nare\nintegrated\ntogether\nto produce\na ground\nsystem for a target mission.\nMany different\nground\nsystem\narchitectures\nare possible\nby\nintegrating\ndifferent\ncombinations\nof\nfunctions\nand nodes.\nA typical\nautonomous\nmission\nscheduling\narchitecture\nis illustrated\nin Figure 2.\n\n/!\'\n\ni:! .\n_\n?i?_, ,\n\nFigure\n\n_>:.\n\nWe\n\n1. Decentralized\nScheduling\n\nbelieve\n\nthat,\n\neven\n\nwith\n\nand Distributed\n\nthe\n\ntrend\n\ntoward\n\nIn this architecture,\na Mission\nOperations\nCenter (MOC), the database\nserver, the Flight\n\nsmaller\nand simpler\nspacecraft,\ndistributed\nscheduling\nsystems\nmay\nprovide\nnew and\nexciting\ncapabilities.\nFor example,\nmultiple\ninvestigators\ncan independently\nschedule\nthe\nuse\nof\na\nsingle\nshared\nspacecraft\nor\ninstrument,\nor\nsimultaneous\nobservations\nfi\'om multiple\nThe\n\nGSFC.\n(SOC)\n\nmission\n\nSince a Science\nOperations\nis remote,\nthe MOC and SOC\n\nCenter\ndo not\n\nGSFC, provides\norbit and attitude planing and\nscheduling\naids. The NCC, located at GSFC,\nprovides\nnetwork\nscheduling\ndata to the MOC\nand remote\nSOC.\nA specialized\nnode,\na\ndatabase\nserver,\nat the MOC,\nreceives\nand\nstores\nthis data.\nNodes\nstore\nplanning,\nscheduling,\nand commanding\ndata\non the\ndatabase\nserver, and may access other nodes\'\nplanning,\nscheduling\nand commanding\ndata of\ninterest\nas well. Nodes can access a database\n\nscheduling\n\noperations\nconcept\nsupports\nkey features\nthe\nReusable\nNetwork\nArchitecture\n\nFacility\n(FDF),\nand the Network\nCenter\n(NCC)\nare all located\nat\n\nshare telemetry\nprocessing\nand state vector\ndetermination\nfunctions.\nThe FDF located at\n\nspacecraft.\n\nautonomous\n\nInteroperable\nNavigation,\n(Renaissance),\n\nDynamics\nControl\n\nof\nfor\n\nSpace\nScience,\nAnalysis,\nand\nControl\nEnvironments\na new\napproach\nto\nthe\n\ndevelopment\nand\noperation\nof\nMission\nOperations\nand\nData\nSystem\nDirectorate\n(MO&DSD)\nground\ndata\nsystems.\nThis\napproach\navoids\ntechnical\nobsolescence\nand\n\n483\n\n.......\n\n.....\n\n\xe2\x80\xa2\n\n..\n\n: .L:.. \xe2\x80\xa2\n\n. :\n\nserver through\nand local nodes\nserver\nnode\n\nThe\n\na WAN.\nasr-g\n\nOperatlona Node\nand\n\nMaintenance\n\n_\n\nCorl_roJ\n\nI\nDatabaseSetup\nI\nl\nsp_r_ct_ sen_e\nJ\ni Genera_on and tvlalnt c_anceJ\ne\n\n_ Network\nCenter\n\nI spocecratxCommand Data J\nGeneration\n\nand\n\nMaintenance\n\nPr_.e_ng\n\nI\n\nM_t\n\nJ\n\ni\n\n,_\n\nFlight\nDynamic8\n\nI\n\n!\n\n/\n\nJ\n\nI\n\n.\n\nI\n\nDatabase\nSetup\nand Maintenance\nIr_rume_t\nGen, eratlon\n\nI\n\nImtrument\nGeneratlo_\n\nExcepllon\n\nI\n\nMaintenance\n\nCommand\nand\n\nData\n\nMalntenance\n\nNego1_a_on\n\nFigure\n\nJ\n\nTelemetry\n\ncommon\ncommanding\n\n/:\'.\n\n:.L/:.L/::\n\n"\'_\'+.::::+:+::+:::+\'::::::::::::;:\':\':::::::::::::::::::<::i:\n\nfrom\nthe NCC,\non the\nnotifies\nnodes when this\n\nGeneration\n\nand\n\nMaintenance\n\ni\n\nState\n\nI\n\nVector\n\ni\n\nDeteernlnallon\n\n]\n\nJ\n\nI\n\n2.\n\nSGC\n\nArchitecture\n\nIt\n\nscheduling,\nstores\n\nconstraints,\n\ncommand\ndefinitions\non\nserver.\nCommand\ndefinitions\n\nand\nor\nthe\nare\n\ndatabase\nse_wer.\nIt converts\ncomposite\n(instrument\nand spacecraft)\ncommand\ndata to\nbinary, creates a network\npacket,\nand uplinks\ncommand\ndata to the spacecraft\nduring\na\nTracking\nand Data Relay\nSatellite\nSystem\n(TDRSS)\ncontact.\nThis function\nalso extracts\nreal time command\ndata from\nthe database\n\nNode,\nseveral\n\nThe\nDatabase\nSetup\nand\nfunction\nenables remote or client\naccess\nthe database\nserver\nfor\nplanning,\ndata.\n\nand scheduling\ndata, including\ndata\nfrom\nthe NCC,\nnetwork\nresource\n\nused to generate\ncommand\ndata and to detect\ncommand\nexceptions.\nThis function\nextracts\nthe\nappropriate\ncommand\nor\ncommand\nsequence\nfrom command\ndefinitions,\ninserts\nthe necessary\nparameters,\ncreates\nthe node\ncommand\ndata, and stores this data on the\n\n,\n\nPrOng\n\nInstrument\nNode, the Operations\nthe Database\nServer\nNode share\n\nfunctions.\nMaintenance\nnodes\nto\n\n_.:\n\nJ\n\nRm\n\nThe\nand\n\n\':_\n\n]\n\nSchedule\nand\n\n.H:\n\nThe\nCommand\nData\nGeneration\nMaintenance\nfunction\nstores\ninstrument\n\nFlight\n\nspacecraft\ndatabase\ni\n\n:.:..\xe2\x80\xa2HH:HL::\n\nsupport\nschedules,\ncoordination\nand activity definitions.\n\nFt__.illly\n\xe2\x80\xa2\n\nSchedule\n\nplanning\nreceived\n\nServer\n\nDotobo_\n\n.........\n\ndesignates,\nas a part\nof each\nscheduled\nactivity,\nthe\nappropriate\ncommands\nor\ncommand\nsequences\nto invoke\nan activity.\nThis function\naccesses\nthe database\nserver for\n\n]\n\nI\nDataba_\n\nH :.:.\n\nJ\n\nTelemetry\n\n_"\n\n.;.\n\nfunction\ngenerates\nand stores, on the database\nserver, coordination\nand operation\nconstraints\nand activity\ndefinitions\nfor the instrument\nor\nspacecraft.\nThis\ninformation\ndescribes\nnominal\noperations\nand\nplanned\nunique\noperations\nand will be used by the database\nserver\nto detect\nexceptions\nlater.\nThis\nfunction\nplans\nand schedules\nresources\nto\nsupport\nspacecraft\nor instrument\noperations\n(e.g.,\nscientific\nobservations,\ncalibrations,\nmaintenance),\ngenerates\nand\nmaintains\nspacecraft\nor instrument\nschedules,\nand stores\nthese schedules\non the database\nserver.\nIt\n\nMOC\n("\n\n......\n\ndata is initially\navailable.\nIt also maintains\nthe node\'s local database,\nwhich contains\ndata\nnot useful or accessible\nto other nodes.\n\na wide area network\nthrough a LAN.\nThe\nalso\ndetects\ninter-\n\nin strument\nand\ninstrument-spacecraft\nexceptions,\nand notifies\naffected\nnodes\nto\nbegin\nnegotiations\nin order\nto resolve\nthe\nexception.\nGSFC nodes\ncommunicate\nwith\none another through a LAN, while the remote\nSOC\ncommunicates\nwith\nGSFC\nnodes\nthrough\n\n....\n\nschedules,\nreceived\ndatabase\nserver, and\n\nserver whether\nthey are remote\nor not, the\nonly difference\nbeing in the kind of network\nmterface\nused;\nremote\nnodes\naccess\nthe\ndatabase\n(WAN)\ndatabase\n\n\xe2\x80\xa2\n\nserver,\nconverts\ncommand\ndata\nto uplink\nformat,\nand uplinks the result when specified\nto the spacecraft\nfor execution\nwhen received\nonboard.\nIt resolves\ncommanding\nexceptions,\n\nand\nnetwork\n\n484\n\n1:2::i\n\ni ! ::_: <::::,::\n\n:::\n\n: ;<: :..\n\n::\n\n: \':\n\nH\n\n:\n\n-\n\n\xe2\x80\xa2\n\n....\n\nvalidates\n\nand\n\nmaintains\n\ncommand\n\n> : : ..\n\nverifies\n\n:,::_ ...........\n\n:\n\ncommand\n\n,\n\n+ \xe2\x80\xa2 :+:\n\ndata,\n\n.<\xe2\x80\xa2H:>>.:\n\n:::\n\nand\n\nill!,i_,\ni!!_\n\nhistory.\n\nfrom\n\nnormal\n\nbehavior\n\nor\n\nunexpected\nsituations\nare exceptions.\nThe\nException\nNegotiation\nfunction\ncoordinates\nand negotiates\nwith other\nnodes to resolve\nexceptions,\nfollowing\nthe receipt of a message\nindicating\nthat an exception\nhas occurred.\n\nInitial\n\nDetection\nand Notification\nnodes\nwhen\nnew data is\n\nchecks\n\nschedules\n\ndata\nfor\nexceptions,\ncreates\ndescribing\nthe exception,\nand\nmessage\nto affected nodes.\n\nand\n\nTerm\n\ncommand\n\na message\nforwards\nthe\n\n+:+:+:+ _::_::::_:.:+_._+:+:+:+:+:+:+:.:+:+:+:+:;:::::::::::::::::_:+:+:+:.>:.:._.:.:.:.:.:.:.:.:.:.:.:+:.:.:.:`_._:_:._._._._;_\n\nScheduling\n\ncycles.\n\nPlanning\n\nThe objective\ninstrument\nobservation,\n\nLong\nterm\nmission\nplanning\nestablishes\nmission\nobjectives\nin an overall\nscience\noperations\nplan and a long term spacecraft\noperations\nplan.\nLong term mission planning\nbegins with the project scientist\nand principle\ninvestigators\nproducing\na long term science\nplan for the instrument\ncomplement.\nThe\nflight operations\nteam uses this long term plan\nto develop\na corresponding\nlong term plan for\nspacecraft\noperation.\n\nof initial scheduling\nand\nspacecraft\nmaintenance,\nand\n\nis to define\noperation,\ncalibration\n\nactivities\nfor\na given\ninterval.\nInitial\ninstrument\nscheduling\nis done at the SOC and\ninitial\nspacecraft\nsubsystem\nscheduling\nis\ndone at the MOC.\nAll participants\nin initial\nscheduling\nmay access available\nplanning\nand\nscheduling\ninformation\nin the database.\nIntrainstrument\nconflicts\nare detected\nand resolved\nlocally\nat each node.\nInter-instrument\nand\ninstrument-spacecraft\nconflicts\nare detected\nand resolved\nas described\nin the next section.\n\nWith the NASA mission model evolving\nfrom\na small number\nof large missions\nto more\nnumerous\nbut smaller, less complex\nmissions,\nboth the long term science\nplan and the long\nterm spacecraft\noperations\nplan are expected\nto be relatively\nbrief and to cover largely\nroutine\noperation,\nobservation,\nmaintenance,\n\nThe results of initial\nthe database.\n\nscheduling\n\nare stored\n\nin\n\nIn\nthe\npast,\nfor\nlarge\nmissions,\ninitial\nscheduling\nwas used to define\nrequirements\nfor communications\nresources\nand services\n\n485\n\ni:!ii\n\n:+:+: +:+:+\n\nA large number\nof instruments\nhave repetitive\ndata acquisition\ncycles.\nThese natural cycles\nare\nnot\nnecessarily\nthe\nsame\nfor\nall\ninstruments\non a given\nmission,\nand some\ninstruments\ndo not have\nsuch cycles,\ne.g.\ntargeting\ninstruments.\nNevertheless,\ninstruments\nwith\nnatural\nrepetitive\ndata\nacquisition\ncycles\nfind it easiest\nto plan and\nschedule\ninstrument\nactivities\nwithin\nthese\n\nCONCEPT\nLong\n\n::::.+>:+\n\ninter-instrument\nand spacecraft\ncoordination\nconstraints;\nactivity\ndefinitions\nwhich depict\nnormal\noperations;\ncommand\ndefinitions\nwhich\nspecify\ncommands,\ncommand\nsequences,\nand\nparameters\nfor\nactivity\nexecution;\nand\noperation\nconstraints\nto\nmaintain\nthe health and safety of instruments\nand spacecraft\nsubsystems.\n\nthe security\nand\nintegrity\nof the data\nis\nmaintained,\nand that distributed,\nconculTent,\nreliable,\nand efficient\naccess is provided.\n\navailable,\n\n>+.\n\nBased on the long term plan, scientists\nand\nflight operators define\nand store information\nin the database.\nThe information\nincludes\n\nThe Database\nManagement\nfunction,\nprovided\nby a commercial\nDatabase\nManagement\nSystem\n(DBMS),\nmanages\nplanning,\nscheduling,\nand commanding\ndata stored by\nnodes.\nThis includes\ninsuring that the data is\nstored, modified,\nand accessed\ncorrectly,\nthat\n\nThe\nException\nfunction\nnotifies\n\n:+::::\n\nand calibration\nactivities.\nThe long\nterm\nscience\nplan\nalso includes\nplanned,\nunique\noperations\nsuch\nas\ncontingency\nand\nemergency\nactivities\nand details\nconcerning\ncoordinated\nactivities\nand observations.\n\ni\xc2\xb8\n\nDeviations\n\n:H:+:+:.>>>:\n\nrequested\nfrom the NCC.\nFor future smaller\nmissions,\nthe initial schedule\nwill largely\nbe\nused\nto detect\nexceptions.\nFor the less\ncomplex\nmissions\nof the future, requests\nfor\ncommunications\nresources\nand services\nare\n\noperator\ndeleting\ndatabase.\ndeadlines\nreceiving\ndeadline\nschedule.\n\nexpected\nto be routine, repetitive,\nand largely\nindependent\nof the mission schedule.\nException\n\nHandling\n\nIn the past,\nmonitored\ncontinuously\nautonomous\n\nIf\n\nplanning\nthe\n\nand scheduling\nscheduling\n\ninvolved,\n\nto detect\nexceptions.\nFor\nmission\nscheduling,\nexceptions\n\ncan be schedule\nThe three types\n\nor command\nof exceptions\n\noperator\nerrors\nsuch\nas failing\nproduce\ninformation\nby a deadline\nstoring incorrect\ninformation.\n\n,,\n\n\xe2\x80\xa2\n\ndo\n\nnot\n\nresource,\nconstraint,\nand inter-instrument\n\nWhen an event\ninvoked.\nTwo\ndetection\nare:\n\noccurs,\nevents\n\nnecessarily\n\nis\n\none node\n\nsuch\nor\n\ndetected,\n\nan\n\nis generated\nIf more than\nis given\n\nthe\n\nas adding\nupdating\n\nand sent to\none node is\n\nprimary\n\nconflict.\n\nThe\n\nauthority\nresponsible\n\nThe\nowner\nof\nthe\nactivity\ncontributes\nthe most to the conflict.\n\n\xe2\x80\xa2\n\nThe\n\nowner\n\nimportant\n\xe2\x80\xa2\n\nThe\n\nof the most\n\ncritical\n\nthat\n\nor most\n\nactivity.\n\ninvolved\n\nrestrictive\n\nto,\nthe\n\nexception\n\n\xe2\x80\xa2\n\nnode\n\noperation\n\nthat\n\nhas\n\nthe\n\nmost\n\nconstraints.\n\nUpon receiving\na notification\nmessage,\nnodes\nanalyze\nexception\ndata contained\nwithin\nthe\nmessage,\nresolve\nany\ninternal\nerrors,\ndeviations,\nor conflicts,\nand negotiate\nwith\nother\nnodes,\nif necessary,\nto resolve\ninterinstrument\nor instrument-spacecraft\nconflicts.\nException\nhandling,\nat any node, is expected\nto be performed\nmanually\nby an operator\nor\nautomatically\nwith user agents.\nAutomation\nwill\nbe\nintroduced\ngradually\nbased\non\noperator\nneed and software\nmaturity.\nUsing\nexception\nhistory,\nuser\nagents\ncan\nbe\ndeveloped\nto handle\nexceptions\nthat\nhave\noccurred\npreviously\nand are likely to recur.\nA\nunique\nuser\nagent\nis defined\nfor\neach\nexception.\nThe initial system\nautomatically\nhandles\nonly a few exceptions\nand contains\nonly\na few user agents:\n_:_As the system\nmatures,\nit is expected\nto handle\nmore\nexceptions\nand to contain many user agents.\n\ndeviations\nfrom\nnormal\noperations\nwhich may or may not be erroneous.\nAn example\nof a deviation\nis a late\nchange\nwhich is not preplanned\nand\nuses\nleftover\navailable\nresources.\nDeviations\nconflicts.\n\nexception\n\nfor resolving\nnode may be:\n\ndata\nare:\n\n,,\n\nfor performing\nan action or\ndata\nsuch\nas missing\na\nfor\nreceiving\nan\ninitial\n\nnotification\nmessage\nthe nodes involved.\n\nsystems\nprocess\n\nare detected\nwhen the potential\narises.\nAn\nexception\ndoes not necessarily\nhave to be an\nerror but is something\nthat requires\nattention.\nExceptions\nare detected\nby software\nand may\nrequire special handling.\nException\ndetection\nis checking\nfor\nand determining\nthat\nan\nexception\nhas\noccurred.\nException\nnotification\nis\ninforming\nnodes\nthat\nan\nexception\nhas occurred.\nException\nhandling\nis responding\nto a notification\nand resolving\nan exception\nonce\nnotified.\nWith\nthis\napproach,\nonce an exception\nis detected,\nit is\nhandled before a major problem arises.\nExceptions\nexceptions.\n\nan\n\nactions\nfrom,\n\nto\nor\n\ncreate\n\nintra-instrument,\nconflicts.\n\nWith user agents,\nthe automation\nlevel can\nchange\ndynamically\ndepending\non operator\nworkload,\nlevel of expertise,\nand preference.\nWhen\nan\nexception\noccurs,\nthe\nsystem\nautomatically\ninvokes\nthe appropriate\nuser\n\nexception\ndetection\nis\nthat trigger\nexception\n\n486\n\n:\n\n+2 \xc2\xb8\n\n:>\n\n: : ::2cx:>.::+::::\n\ni_\n\ni \xc2\xb8 ::i\n\n;__ i!i_\ni_ i\n\n::;&:;::\n\n:;2;\n\n:/::.\n\n+:+\n\n.:\n\nH : <:\n\n, +:-::>\n\n>H>.:;\n\n>::.:::\n\n:.:+::>.H:>.:H\n\n.\n\n::>::\n\n>::>::<<>>:\n\n>..:>:::\n\nFinal\n\nmajor\nlevels\nof\ncommanding:\ncommanding,\ncontingency\nand emergency\ncommanding.\nthe spacecraft\nto\nand instrument\nis stored\nin the\n\nare\nthe\nall\n\nspacecraft\nand\ninstrument\ncommand\ndata\nbefore it is uplinked\nby the MOC.\nThey also\nverify\nthat\ncommand\ndata\nwas\nreceived\nonboard\ncompletely,\ncorrectly,\nand\nin\nsequence,\nand that command\ndata was stored\nand\nexecuted\nproperly.\nAll\nonboard\ncommand\ndata is verified\nby evaluating\nthe\nappropriate\nreturn-link\nhousekeeping\nand\nengineering\nparameters.\nThe MOC and SOC\nmaintain\ntheir\nrespective\ncommand\nhistory\narchives.\n\nas\nContingency\ncommanding\ndirects\nthe\nspacecraft\nto perform\ncontingency\nspacecraft\nand instrument\nactivities,\npossibly\ndue to late\nchanges or targets of opportunity.\nSince most\ncontingency\nactivities\nare preplanned,\nthe\nassociated\ncommand\ndata can be stored in the\n\nthey do not cause an exception,\nand they can\nbe accommodated\nwithin the communications\nresources\nand services\nobtained\nfrom\nthe\nNCC.\n\ndatabase.\nIf no preplanned\ncommand\ndata is\navailable,\nthe responsible\nnode must generate\nthe command\ndata in sufficient\ntime so as not\n\nCommanding\n\nto subject the mission\nto undue risk.\nWhen\naccepted,\nthe schedule\nis updated,\nand a new\ncommand\ndata set is generated\nand uplinked\nat the appropriate\ntime.\n\nThe objective\nof commanding\nis to direct the\nspacecraft\nand\ninstruments\nto\nperform\nscheduled\nor\nother\nrequired\nactivities.\nCommanding\ninvolves\ngenerating,\nuplinking,\nstoring,\nand executing\ncommand\ndata.\nThere\n?\n\n487\n/\n\n:_::_::_>::::>::X+>>:+:+:+_+:+>>_:::::::_::_:::_::::::>:+:+:+:+:+:+:+:+:+:::::::::::::_:::::::::::_:_:::::_:_:.:.:.:.:.:.:`:.:.:.:.:.:`:.:.:.\n\nSpacecraft\nand\ninstrument\nconstraints\ndefined\nprior\nto launch\nand stored\nin\ndatabase.\nThe MOC and SOCs validate\n\ndescribed\nabove.\nChanges\nare permitted\nas\nlong as there is ample time to handle them,\n\n:%\n\n:: .>::;::\n\ndata\nis\ngenerated\nvaries\nby\nmission.\nCommand\ndata is generated\nfrom scheduled\nactivities.\nEach SOC is responsible\nfor its\nown instrument\ncommand\ngeneration\nwhile\nthe\nMOC\nis responsible\nfor\nspacecraft\nsubsystem\ncommand\ngeneration.\nThe MOC is\nresponsible\nfor assembling\nthe instrument\nand\nspacecraft\ncommand\ndata and uplinking\nthe\ncomposite\ncommand\ndata set to the spacecraft\nduring a communication\nlink.\n\nprocess\nof incorporating\nthe results\nof the\nexception\nhandling\nprocess,\nand any changes\nthat have occurred\nincluding\nlate changes\nor\ntargets of opportunity,\nin the initial schedule.\nTargets\nof opportunity\nare phenomena\nof\ninterest\nthat cannot\nbe predicted,\nare often\nshort-lived,\nor are changing\nrapidly.\nAs\nthroughout\nthe\nscheduling\nprocess,\nfinal\ninstrument\nscheduling\nis done at the SOC and\nfinal spacecraft\nsubsystem\nscheduling\nis done\nat the MOC.\nThe results\nof final scheduling\nare stored in the database\nwhere last minute\nand\nspacecraft-instrumelat\ndetected\nand resolved\n\n: >H\n\ndatabase\nso that exceptions\ncan be detected\nand resolved.\nWhen and how often command\n\nFinal\nscheduling\nis the last step\nin the\nplanning\nand scheduling\nprocess.\nThe final\nschedule\nis an executable,\nexception-free,\ncomposite\nschedule\nof\ninstrument\nand\nspacecraft\noperation,\nobservation,\nmaintenance,\nand calibration\nactivities\nfor a\ngiven time interval.\nFinal scheduling\nis the\n\nbe\n\n: >>;\n\nNormal\ncommanding\ndirects\nperform\nscheduled\nspacecraft\nactivities.\nCommand\ndata\n\nScheduling\n\ninter-instrument\nconflicts\ncan\n\n::\n\nare three\nnormal\ncommanding,\n\nagent\nto handle\nthe exception.\nHowever,\noperators\nstill\nhave\nfinal\nauthority\nover\ndecisions\nmade.\nThey can override\nthe user\nagent operating\nat a node and direct the node\nto do something\ndifferent\nthan it would have\nchosen\nautomatically.\nAlso, if an exception\noccurs\nthat\nthe\nsystem\ncannot\nhandle,\noperators\nbecome involved.\nHuman operators\nmay\nwant\nor need\nto negotiate\namong\nthemselves\nto resolve\nexceptions\nusing the\ntelephone,\nelectronic\nmail, or other methods.\n\n?!S i!?_\n_\n\niii_!\n__i\n\n:+>\n\nEmergency\ncommanding\ndirects\nthe\nspacecraft\nto\nperform\nspacecraft\nand\ninstrument\nsating\noperations,\ngenerally\nin\nreaction\nto some\npotentially\ncatastrophic\nevent.\nEmergency\ncommanding\nfor the\nspacecraft\nsubsystem\nis performed\nby the\nMOC.\nEmergency\ncommanding\nfor\nan\ninstrument\nis performed\nby the SOC using the\nresults of instrument\nmonitoring.\nWhenever\npractical,\nemergency\ncommand\ndata\nis\npreplanned\nand stored in the database for later\nuse.\nIf unavailable,\nthe responsible\nnode\ngenerates\nthe command\ndata.\nWhen initiated,\nemergency\ncommands\nare\nvalidated\nand\nuplinked\nat the next available\ncommunication\nlink.\nThe responsible\nnode\nmonitors\ntile\nreturn-link\ntelemetry\nto verify the receipt and\nexecution\nof emergency\ncommands.\n\nThe\n\nMOC\n\nFUTURE\n\nUniversity\n\nand\n\nwill\n\nuse\n\nan\n\nScheduling\nSOC located\n\nat CU will use an enhanced\nOperations\nand\nScience\nInstrument\nSupport\nPlanning\nand\nScheduling\n(OASIS-PS).\nROSE and OASISPS\nare\nwritten\nin\nAda\nand\nuse\nthe\nTransportable\nApplications\nEnvironment\nPlus\n(TAE+)\n(Century\nComputing,\nInc., 1993) for\nthe user interface.\nREFERENCES\nBuford,\nData\n\nCarolyn.\n\n1992).\n\nMD:\n\nScheduling\n\nConcept\n\nin Code\n\nGreenbelt,\n\n520,\n\nand\n\n(DSTL-92-010).\n\nNASA/Goddard\n\nSpace\n\nCenter.\nof Colorado\n\nPropulsion\nFlight\n\nWe plan to prototype\nthe concept\ndescribed\nabove,\nand plan to develop\na representative\nsubset\nof components:\na planning\nand\nscheduling\ndatabase\nat GSFC,\na MOC\nat\nGSFC, and two SOCs--one\nat GSFC and one\n\n(August\n\nRepresentation:\n\nEaperience\n\nWORK\n\n(June\n\nSystem\n\nScheduling\nWorking\n\nat Boulder,\n\nLaboratory,\n\nCenter.\n\nObserving\n\nGoddard\n1993).\n\nDistributed\n\nPrototype\n\nJet\n\nLessons\n\nSpace\n\nEarth\nPlanning\n\nand\n\nLearned\n\nPaper.\n\nNASA/Goddard\nSpace Flight Center.\n(April\n23, 1993). Future Mission Operations\nand\n\nThe\nthe\n\nData\n\nSystems\n\nDirectorate\n\nGround Segment\nGreenbelt,\nMD.\n\nThe planning\nand scheduling\ndatabase\nand the\nCU SOC\nwill\nbe implemented\non VAX\nworkstations.\nThe MOC and the GSFC SOC\n\nCentury\nTAE+\n\nOperations\n\n5.3, Greenbelt,\n\nNASA/Goddard\n\nserver functionality\nSYBASE\nclient\naccess.\n\nArchitecture\n\nFahnestock,\nRenaissance,\n\nConcept.\n\nSpace\n\nDale.\n\nMD:\nFlight\n\n(November\n\nA New Approach\n\nData Systems.\nPresentation\nGreenbelt,\nMD.\n\n488\n\nand\n\nComputing,\nInc. (September\n1993).\nUser Interface\nDeveloper\'s\nGuide,\n\nVersion\n\nwill be implemented\non SUN 4 workstations.\nA commercial\nDBMS, SYBASE,\nwill be used\nto implement\nthe database\nwith\nall\nnodes\nhaving\nfunctionality\nfor distributed\n\nat GSFC\n\nenhanced\nRequest\nOriented\nEngine\n(ROSE)\nscheduler.\nThe\n\nFlight\n\nat the University\nof Colorado\n(CU).\ncommand\nmanagement\nportions\nof\nconcept will not be prototyped.\n\nSOC\n\nCenter.\n18, 1993).\nto Ground\nheld\n\nat\n\n'