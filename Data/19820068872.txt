b'SYSTEM REQUIREMENTS LANGUAGE\nFOUNDATION FOR SOFTWARE ENGINEERING\nCharles R. Everhart\nTeledyne Brown Engineering\nHuntsville, Alabama\nABSTRACT\n"System Requirements Language" here refers to those languages (defined by a formal set of syntax\nrules and semantics) whose purpose is the explicit and comprehensive expression of system definition and design facts. Not only is a formal requirements language necessary in specifying precisely the functional and performance characteristics of the system at all levels of definition and\ndesign, but at the same time this information can be used to predict the costs in time and money\nrequired to develop, implement, operate, and maintain a proposed system. Other benefits derived\nfrom this information include the direct generation of system and environment models used in the\nanalysis of design solutions, direct generation of test criteria to be used during the test and integration phases of system development and the providing of a vehicle for maintaining configuration\ncontrol throughout the life cycle of the system. "System" refers to not only software systems\ndeveloped with "Software Development Methodologies", it also refers to the methodologies\nthemselves.\n1.\n\nMOTIVATION\n\nAccording to a number of articles written recently [4,6] the costs of software development are\nbecoming dominant (i.e., 50 to 90 percent of the cost of future data processing systems). In spite\nof the proliferation of programming languages [ 1 ] and software development techniques devised\nduring the past 15 to 20 years, progress in reducing the costs of software has been disappointing.\nOne source has indicated a decrease in productivity over this same period [3].\nAfter a cursory analysis of major software developments, it appears that the industry has been\nattacking the wrong problem. A very large percentage of software development costs are associated\nwith the definition, design, testing, and integration activities. The development of programming\nlanguages and techniques has been directed mainly toward the coding activity which represents\nonly a small percentage of software development (as low as 17% for a large 7.5 year project [6]).\nIf the software industry is expecting to see large reductions in the cost of software, it must attack\nthose problems connected with definition, design, testing and integration activities representing\nanywhere from 45 to 85 percent of most data processing development costs.\nThe first step in attacking the cost of these activities appears to be the development of a precise,\nyet convenient, system requirements specification and analysis language. Teledyne Brown Engineering has been actively involved in this type of development since 1971 and has devised a\nrequirements language called IORL (Input/Output Requirements Language) which claims the\nobjectives of the preceding discussion.\n\n107\n\nC. Everhart\nTeledyne Brown Eng.\nPage 1 of 13\n\n2.\n\nIORL\n\nIORL is a formally defined language (syntactically and semantically [2,5] which uses a combination of both graphic symbols and mathematical notation to express system definition and design ideas. Block diagrams (analogous to those used in control theory) organized in a hierarchical manner identify the parts of a system and the interfaces between these parts at all levels of\nsystem definition and design.\nDescriptions of each interface identified are contained in a set of tables called lOPT\'s (Input/\nOutput Parameter Tables). Another diagram called in "IORTD" (Input/Output Relationships\nand Timing Diagram) is used to define the total transformation function from input to output\nas well as the response time requirements for each and every block in the hierarchy. These\ndiagrams (analogous to^a "Transfer Function" in control\' theory )~provide the symbols for specifying the sequential, simultaneous, logical, mathematical and time requirements between inputs\nand outputs of each given block. The elements of IORL and hierarchical structure of requirements information are characterized in Figures 1 and 2.\n3.\n\nIORL STORAGE AND RETRIEVAL FACILITY\n\nStorage, retrieval and modification of IORL diagrams and tables has been implemented on a standalone PDP/11 based graphics terminal (GT44 and GT46) with 16K memory. The interactive\ngraphics system includes a 17-inch refresh type graphic screen with lightpen capability as well\nas an electrostatic printer plotter which produces 8 . 5 x 1 1 inch copies of the screen. In edit mode,\nIORL information is entered by pointing the lightpen at a location on the screen and then pressing the keyboard button associated with the desired symbol. In display mode, system details\nare accessed by directing the lightpen to points of interest on the higher level diagrams of the\nhierarchy. This results in the subsequent display of these details on the screen. Requirements\ndiagrams are stored on and retrieved from disk packs which are also a part of the facility.\n\xe2\x80\xa24.\n\nBALLISTIC MISSILE DEFENSE (BMP) PARTITIONING STUDY EXAMPLE\n\nNot only is a formal requirements language necessary in specifying precisely the functional and\nperformance characteristics of the system at all levels of definition and design, but at the same time\nthis information can be used to predict the costs in time and money required to develop, implement, operate and maintain a proposed system. Other benefits derived from this information\ninclude the direct generation of system and environment models used in the analysis of design\nsolutions, direct generation of test criteria to be used during the test and integration phases of\nsystem development and the providing of a vehicle for maintaining configuration control throughout the life cycle of the system.\nIn an attempt to determine the feasibility of the preceding thesis, a study entitled "BMD Partitioning Study", was performed. The objective of this study was to demonstrate that certain\nquantitatiave characteristics, related to system development and operation costs, could be derived directly and mechanically from formally defined system requirements specifications. IORL\nwas used as the language for specifying the definition and design requirements.\nThe demonstration consisted of four basic steps. First, the BMD system requirements and its\nenvironment were defined using the complete set of IORL symbols, tables and diagrams. This\ninformation, which represented the first level in the system hierarchy, was the only infor108\n\nC. Everhart\nTeledyne Brown Eng.\nPage 2 of 13\n\nmation used in the subsequent requirements analysis and design activities. After checking the\nfirst level specification for completeness and consistency, the second step involved designing two\ndifferent solutions to the BMD requirements, again expressing these solutions in IORL and placing this information in the second level of the system hierarchy. The purpose in specifying two\ndesign solutions was to compare the total system costs which resulted from each of the solutions.\nIn the third step, each completely specified solution was validated against the BMD requirements\nby exercising the environment, BMD, and solution models (all written in IORL) and then comparing responses at the BMD/environment interfaces.\nIn this manner it was established that each solution responded to the environment exactly as required by the BMD requirements (model). If not, the design solution was corrected. In the final\nstep, each solution was evaluated to determine its effect on total system costs. This evaluation,\nwhich was a combination of static and dynamic analysis of only that information contained in\nthe IORL specifications, produced the summary partition evaluation results shown in Figure 6.\nThese summary results were derived from a series of intermediate results which plotted for example bandwidth for each interface as a function of time, storage required as a function of time,\nfunctional speed required,, etc.\nOur experience with this study has resulted in the following conclusions:\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\nThe requirements language used to specify system definition and design facts is the\nkey factor in the success of the preceding demonstration (i.e., the language must have\ncertain characteristics and enforce certain disciplines).\n\n\xe2\x80\xa2\n\n5.\n\nQuantitative measures related to the costs of a system can be determined from an\nanalysis of system definition and design requirements.\n\nThe proper specification of definition and design requirements can provide information\nnecessary to all phases of a system development (definition, design, implementation, test\nand integration).\n\nFUTURE R&D ACTIVITIES\n\nTeledyne Brown Engineering has plans to continue the development of IORL related techniques and\ntools. The immediate future calls for the development of the following computer utility packages:\n\xe2\x80\xa2\nAn extensive IORL diagnostic package (syntax analyzer)\n\xe2\x80\xa2\n\nA set of configuration management tools\n\n\xe2\x80\xa2\n\nAn expended set of graphic editing features for the storage and retrieval system\n\n\xe2\x80\xa2\n\nA utility program library\n\n\xe2\x80\xa2\n\nA set of functional and analytic simulation compilers which will transform IORL information into FORTRAN or PASCAL simulation statements.\n\n109\n\nC. Everhart\nTeledyne Brown Eng.\nPage 3 of 13\n\nWe have also experimented with the direct generation of assembler source code (Marco-II\nAssembler) from IORL information and have determined that the information content of IORL\nwill support the development of a set of IORL compilers. The major problems associated with this\nlast activity are the implementation of mathematical functions so easily represented in IORL.\n\n110\n\nC. Everhart\nTeledyne Brown Eng.\nPage 4 of 13\n\nREFERENCES\n1.\n\nShea, William E., "DOD-1, A Common Language", ISRAD in Touch, Volume 2, No. 1, February\n1978.\n\n2.\n\nEverhart, C. R., "IORL Analysts Users\' Manual", Section 1 - Syntax, Teledyne Brown Engineering, May 1977.\n\n3.\n\nDolotta, T. A., et al, "Data Processing in 1980-1985", John Wiley and Sons, 1976.\n\n4.\n\nBoehm, B. W., "Software and Its Impact: A quantitative Assessment", Datamation, pp. 48-59,\nMay 1973.\n\n5.\n\nEverhart, C. R., "IORL Analysts Users\' Manual", Section 2 - Semantics, Teledyne Brown Engineering, May 1977.\n\n6.\n\nRamamoorthy, C. V., et al., "Software Requirements and Specifications: Status and Perspectives", Engineering Research Recommendations, Draft Appendix A, August 12, 1977.\n\nIll\n\nC. Everhart\nTeledyne Brown Eng.\nPage 5 of 13\n\nIORL ELEMENTS\n1 \xe2\x80\x9e\n\n1\nx\n\n\xe2\x80\xa2+\n\nt \\\n\n""3\n\n* 2\n\n2\n\n\xc2\xab 4\n\nSBD\n1f\n\n6\n\n2\n\nI OPT 1\nG PARAMETER VALUES\n\n<\n\n3\n\n5\n\n4\n\nI OPT 6\nUNITS\n\nlOPT\'S\n\nIORTD 4\n\nIORTD 1\n\nI GRID\'S\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nFIGURE\n\n1.\n\nIORL ELEMENTS\n\n112\n\nC. Everhart\nTeledyne Brown Eng.\nPage 6 of 13\n\n13\n\nC. Everhart\nTeledyne Brown Eng.\nPage 7 of 13\n\nQ\n\n<z\nI\xe2\x80\x94(\n>IE\nC\xc2\xa3.\nLiJ\n\ncr\no\n\nCURRENT CAPABILITIES - STORAGE AND RETRIEVAL\nOF REQUIREMENTS USING INTERACTIVE GRAPHICS\nBASIC STORAGE AND RETRIEVAL OF INFORMATION\nDISK PACKS (1200 PAGES/PACK)\nCLASSIFIED FACILITY\nON LINE EDITING\nA\nA\nA\n\nCRT\nLIGHT PEN\nFUNCTION KEYS\n\nHARDCOPY\nREPORT QUALITY\nDOCUMENTATION AUDIT\nMERGE SYSTEM PAGES\nAUTOMATIC ACCOUNTING\nFigure 3. Current Capabilities \xe2\x80\x94 Storage and Retrieval\nof Requirements Using Interactive Graphics\n\n114\n\nC. Eveihart\nTejedyne Brown Eng.\nPage 8 of 13\n\nSYSTEM CONFIGURATION\n\n\xe2\x80\xa2\n\nPDF-11 /40 WITH 16K MEMORY\n\n\xe2\x80\xa2\n\n17" GRAPHIC DISPLAY WITH LIGHTPEN\n\n\xe2\x80\xa2\n\nTELETYPE\n\n\xe2\x80\xa2\n\n2 DISK DRIVES\n\n\xe2\x80\xa2\n\nELECTROSTATIC PRINTER/PLOTTER (8% X 11 FAN FOLD)\nFigure 4. System Configuration\n\n15\n\nC. Everhart\nTeledyne Brown Eng.\n. Page 9 of 13\n\nCO\n\nCO\nCO\n\nCJ)\n\nCO\n\no\nCO\n\no\n\nLU\nM\n\nCO\n\nco <:\n>- z\nco <;\n\n^\nC_> ^_\nUJ \xe2\x80\x94 >-\n\n^ CO O" UJ S\nO >- UJ d- _\n\ncj co o: co i\n\n116\n\nC. Everhart\nTeledyne Brown Eng.\nPage 10 of 13\n\nCO\nCO\n\nce\nQ.\nCO\n>\xe2\x80\x94I\nCO\n\nQ\n\nQ.\n\nO\n\nLU\n\nin\n\n00\n\nPARTITION 2\nPARTITION 1\n\nCO\n\no:\nO\n\nU-J\nCO\n\nZ\n\nCO\n\nooo\n\n\xe2\x80\x94\xc2\xb1\nco\n2 Q\xc2\xb1 ceL\n\n\xe2\x80\x94\'\n\nO\n\no\n\n1\xe2\x80\x94\n\nUJ\nCO\n\nCO\n\nO\n\n(\xe2\x80\x94\nCO\n\nGNDSYS\n\n\xe2\x80\xa2\n\nO\n\nC3\nOO\n\nO\n\no\n00\n\nO\n\n\xe2\x80\xa2\n\n00\nf*"N\n^T\n\nr+1\n\nCNI\n\n\'T\nOO\nCM\n\nod\n\nO\nOO\n\no\'\n\n*=T\n\nOO\n\nO\n\n\xc2\xbb\xe2\x80\x94i\n\nC3\n\nLT\\\n\n.\n\noo\n^^\n\n*T\n\xe2\x80\xa2\xe2\x80\x94\xe2\x80\xa2\n\no\n\n\xe2\x80\xa2\xc2\xab=\xe2\x80\xa2\n\n^H\nO"\n\n-3^-<\n\no\n\nIT\\\n\nirC\n\ni/\\\n\n\xe2\x80\xa2\xe2\x80\xa23\'\n\nVf^\n\ncvj\n\n^J1*\n\nC3\n\nITN\n\n.\n\nro\n^O\nCNJ\n\ntr\\\n\nCO\n\n\xe2\x80\x94\n\no*\n\n.\nCZ7\nC\\J\n\ncvj\n\n^\n\n\xc2\xb0\xc2\xb0 \xc2\xbb7>\n\nro\nCM\n\nO\n\nS \xc2\xb1! s\n\n^ X O < - * ^ >\n\n-C \xe2\x80\x94\n\ni^ \xe2\x80\x94\n<;CQ\niTi g:\nD^\n\nO^\n\ng^^\n\nco\n\nO\xc2\xb0-Z\nOS<r\nC\xc2\xa3O\xc2\xab>\nQ_ <_}\n\nC. Eveihart\nTeledyne Brown Eng.\nPage 11 of 13\n\n^UULU\nOLU^O\nQiD-.\nQ. CO .s\n\n^3\n\nS^~\nOm\n\xc2\xbb^S\nCO C^\n\n^ co\n\n\xe2\x80\x94" L L J\n\n00\n\n<\n\xe2\x80\x94J\n1.1\nQ\xc2\xa3\n\n117\n\n00\n\nLU\n\nCO\n\no:\n\n01\n\n<c\n\nQ-\n\nQi\n\nGO\nCO\n\nGO\nGO\n\nCO <\n\nto\nr to\nu>\ni- _i\nCO ^\n>z\n\n^\n\n/p\nCO\n\nu\n\nCO\n\no\nz\n\n/\n\\\n\n/\\\n1-\n\n-^ a:\n\nM U\n\nI O\nJ- u.\n\n>\ni-\n\n^\n\n\xc2\xab\n_i r-.\n10\n\nD U.\n\n(fl\n\n\xe2\x80\xa21 UJ\n\n< < Di\n\nto 11 a: uj o\n\n\xe2\x80\xa2\n\nC3\n\no a: (o co OQ a\n\n1- _J O U Z >\nCO UJ >- (L < bJ\n\no\n\n18\n\ns"^.\n\nZ.\n\nto\n1\n\nCO\nUI\nK\n\nRESUL1\n\n^\n\nC. Everhart\nTeledyne Brown Eng.\nPage 12 of 13\n\nCO\n\nM\n\nz\no\nCO\nUI\n\nUJ\n\no\no\n\nFUTURE IORL RESEARCH AND DEVELOPMENT\nDIAGNOSTICS PACKAGE (SYNTAX ANALYZER)\nCONFIGURATION MANAGEMENT TOOLS\nEXPANDED EDITING FEATURES (GRAPHICS)\nUTILITY PROGRAM LIBRARY (STATIC ANALYSIS)\nSIMULATION COMPILER\nA\n\nFUNCTIONAL: "IORL" TO "MODELER" TRANSLATOR\n\nA\n\nANALYTIC: "IORL" TO "FORTRAN" TRANSLATOR\n\nCOMPILER\nA\nA\n\n"IORL" TO "FORTRAN" TRANSLATOR\n"IORL" TO "PDP-11" MACRO-ASSEMBLER" TRANSLATOR\nFigure 8. Future IORL Research and Development\n\n119\n\nC. Everfiart\nTele#yne Brown Eng.\nPage 13 of 13\n\n'