{"copyright": {"disclosedInvention": false, "licenseType": "NO", "containsThirdPartyMaterial": false, "containsIndication": false, "determinationType": "PUBLIC_USE_PERMITTED", "thirdPartyContentCondition": "NOT_SET"}, "subjectCategories": ["Computer Programming and Software"], "keywords": ["Floating-Point Arithmetic", "Round-off Errors", "Formal Verification", "Theorem Proving", "Static Analysis", "Formal Methods", "Software Verification"], "exportControl": {"isExportControl": "NO", "ear": "NO", "itar": "NO"}, "distributionDate": "2020-09-12T04:00:00.0000000+00:00", "fundingNumbers": [{"number": "340428.02.20.07.01", "type": "WBS"}, {"number": "NNL09AA00A", "type": "CONTRACT_GRANT"}], "title": "Automatic Generation of Guard-Stable Floating-Point Code", "stiType": "CONFERENCE_PAPER", "distribution": "PUBLIC", "submittedDate": "2020-06-23T20:05:13.2105960+00:00", "authorAffiliations": [{"organizationId": "d3417fa4ba295161bac9b0da8844d4a2", "sequence": 0, "submissionId": 20205003811, "meta": {"author": {"orcidId": "", "name": "Laura Titolo"}, "organization": {"name": "National Institute of Aerospace", "location": "Hampton, Virginia, United States"}}, "id": "b4cae1a2a4bd4dc38716927093d7a7d4", "userType": "CONTRACTOR_GRANTEE", "userId": "e014c120bbf045a7b3d0a1c2e51d712e"}, {"organizationId": "d3417fa4ba295161bac9b0da8844d4a2", "sequence": 1, "submissionId": 20205003811, "meta": {"author": {"orcidId": "", "name": "Mariano Miguel Moscato"}, "organization": {"name": "National Institute of Aerospace", "location": "Hampton, Virginia, United States"}}, "id": "eea1d923f3df4e9d8cdb5ced986897c8", "userType": "CONTRACTOR_GRANTEE", "userId": "90fa6448a86a48aaa47ace9d96555137"}, {"organizationId": "d3417fa4ba295161bac9b0da8844d4a2", "sequence": 2, "submissionId": 20205003811, "meta": {"author": {"orcidId": "", "name": "Marco A Feliu"}, "organization": {"name": "National Institute of Aerospace", "location": "Hampton, Virginia, United States"}}, "id": "f580d5705c9d4ba38a707ae0d330d324", "userType": "CONTRACTOR_GRANTEE", "userId": "ea75bb866fab4a508d1a6adccaf124e9"}, {"organizationId": "68603dff261e5d2d9de5a550aa9e6b30", "sequence": 3, "submissionId": 20205003811, "meta": {"author": {"orcidId": "", "name": "Cesar A Munoz"}, "organization": {"name": "Langley Research Center", "location": "Hampton, Virginia, United States"}}, "id": "35b09f894ea0469cbbdf6154bf595aa5", "userType": "CIVIL", "userId": "630eb81df9a9407d9aff052d33108767"}], "stiTypeDetails": "Conference Paper", "technicalReviewType": "SINGLE_EXPERT", "modified": "2020-11-24T02:24:44.1711970+00:00", "id": 20205003811, "sourceIdentifiers": [], "created": "2020-06-23T19:22:49.9436990+00:00", "center": {"code": "LaRC", "name": "Langley Research Center", "id": "1e229fe5b7284965a153b0f761643383"}, "onlyAbstract": false, "sensitiveInformation": 2, "abstract": "In floating-point programs, test instability occurs when the control flow of a conditional statement diverges from its ideal execution under real arithmetic. This phenomenon is caused by the presence of round-off errors in floating-point computations. Writing programs that correctly handle test instability often require expertise on finite precision computations and rounding errors. This paper presents a fully automatic tool chain that generates and formally verifies a test-stable floating-point C program from its functional specification in real arithmetic. The generated program is instrumented to soundly detect when unstable tests may occur and, in these cases, to issue a warning. The proposed approach combines the PRECiSA floating-point static analyzer, the Frama-C software verification suite, and the PVS theorem prover.", "isLessonsLearned": false, "disseminated": "DOCUMENT_AND_METADATA", "meetings": [{"country": "US", "submissionId": 20205003811, "endDate": "2020-11-16T05:00:00.0000000+00:00", "sponsors": [{"organizationId": "f5f1ecf517c455e79d10206bd094f3b6", "meta": {"organization": {"name": "Universita della Svizzera Italiana", "location": "Lugano, Ticino, Switzerland"}}, "meetingId": "4ae80670742e4aba9bdeaeaefa431518", "id": "35ce5d612d7a4bb6bc0da617052aa7c1"}], "name": "16th International Conference on Integrated Formal Methods", "location": "Virtual", "id": "4ae80670742e4aba9bdeaeaefa431518", "url": "https://ifm20.si.usi.ch/", "startDate": "2020-11-16T05:00:00.0000000+00:00"}], "status": "CURATED", "related": [{"disseminated": "DOCUMENT_AND_METADATA", "id": 20205009218, "type": "SEE_ALSO", "title": "Automatic Generation of Guard-Stable Floating-Point Code", "stiType": "PRESENTATION", "distribution": "PUBLIC", "status": "CURATED"}], "downloads": [], "downloadsAvailable": true, "index": "submissions-2022-09-30-06-07"}