b'Cyber Safety and Security for\nReduced Crew Operations (RCO)\nKevin R. Driscoll\nHoneywell International, Inc.\n1985 Douglas Drive North\nGolden Valley, MN 55422\n763-954-6789\nKevin.Driscoll@Honeywell.com\n\nAloke Roy\nHoneywell International, Inc.\n7000 Columbia Gateway Dr\nColumbia, MD 21046\n410-964-7336\nAloke.roy@Honeywell.com\n\nAbstract\xe2\x80\x94NASA and the Aviation Industry is looking\ninto \xe2\x80\x9creduced crew operations\xe2\x80\x9d (RCO) that would cut\ntoday\'s required two-person flight crews down to a single\npilot with support from ground-based crews. Shared\nresponsibility across air and ground personnel will\nrequire highly reliable and secure data communication\nand supporting automation, which will be safety-critical\nfor passenger and cargo aircraft. This paper looks at the\ndifferent types and degrees of authority delegation given\nfrom the air to the ground and the ramifications of each,\nincluding the safety and security hazards introduced, the\nmitigation mechanisms for these hazards, and other\ndemands on an RCO system architecture which would be\nhighly invasive into (almost) all safety-critical avionics.\nThe adjacent fields of unmanned aerial systems and\nautonomous ground vehicles are viewed to find problems\nthat RCO may face and related aviation accident\nscenarios are described. The paper explores possible data\ncommunication architectures to meet stringent\nperformance and information security (INFOSEC)\nrequirements of RCO. Subsequently, potential challenges\nfor RCO data communication authentication, encryption\nand non-repudiation are identified. The approach\nincludes a comprehensive safety-hazard analysis of the\nRCO system to determine top level INFOSEC\nrequirements for RCO and proposes an option for\neffective RCO implementation. This paper concludes\nwith questioning the economic viability of RCO in light of\nthe expense of overcoming the operational safety and\nsecurity hazards it would introduce.\n\nDenise S. Ponchak\nAlan N. Downey\nNASA Glenn Research Ctr\nCleveland, OH, USA\nDenise.S.Ponchak@nasa.gov\nalan.n.downey@nasa.gov\n\n1. INTRODUCTION\nDuring the latter half of the past century, advances in avionics\nand related technologies have: (1) reduced the total workload\nof aircraft flight crews and (2) allowed for the reduction of\naircraft crew from five-person flight crews in the early 1950s\nto two-person flight crews in the 1990s. Today, there are\nresearch efforts underway for \xe2\x80\x9cReduced Crew Operations\xe2\x80\x9d\n(RCO) or \xe2\x80\x9cSingle-Pilot Operations\xe2\x80\x9d. These phrases, when\ntalking about research, usually relate to FAR (Federal\nAviation Regulations) Part 121 operations or equivalents.\nSome FAR Part 135 operations already are approved for\nsingle-pilot operations. The \xe2\x80\x9creduced crew operations\xe2\x80\x9d\nphrase can be read in one of two ways (1) reduced crewoperations or (2) reduced-crew operations, relating\nrespectively to the reduction trends of the past half-century.\nThe Advanced Cockpit for Reduction of Stress and Workload\n(ACROSS) study, which is funded, in part, by the European\nCommission under its Seventh Framework Program, is\ntypical of efforts in this area [1]. It includes objectives\ncovering both interpretations of the \xe2\x80\x9creduced crew\noperations\xe2\x80\x9d phrase. Similarly, this report summarizing\nHoneywell\xe2\x80\x99s research into cyber safety and security for RCO\ncovers both interpretations of the \xe2\x80\x9creduced crew operations\xe2\x80\x9d\nphrase. However, given the increased safety and security\nissues of the latter interpretation, this research focused more\non the latter interpretation.\nAn apparently logical extension to the reduced-crew\noperations trend would be to reduce today\xe2\x80\x99s two-person flight\ncrew down to a single person crew. Significant safety and\nsecurity hazards will be introduced in the system for RCO\nwhen the traditional, two-pilot cockpit is transformed into\none pilot operation with support from another person on\nground. Shared responsibility across on-air and on-ground\npersonnel will require a highly reliable data communication\nsystem that offers very low latency and jitter, as well as high\ndata integrity. In addition, effective protection of the end-toend information system will be critical to ensure the safety of\npassengers for passenger aircraft and the survival of the\naircraft, crew, and cargo for cargo aircraft.\n\nTABLE OF CONTENTS\n1. INTRODUCTION................................................................ 1\n2. LEVELS OF AUTHORITY DELEGATION ........................... 2\n3. RCO AUTHORITY QUESTIONS........................................ 3\n4. RCO INTERFACE TO ONBOARD SYSTEMS...................... 4\n5. RCO AIRBORNE SYSTEM ARCHITECTURE .................... 6\n6. RELATED RESEARCH AND DEVELOPMENT..................... 7\n7. CONTROL HAND-BACK PROBLEMS ................................ 7\n8. ARE COMMUNICATION THREATS REAL? ....................... 8\n9. COMMUNICATION ENCRYPTION ..................................... 9\n10. SUMMARY .................................................................... 12\nREFERENCES ..................................................................... 13\nBIOGRAPHY ....................................................................... 14\n\n1\n\nauthority to take over from the loss of AC capability. This\nautomated ability to detect incapacitated crew and effect the\nelevation of GC authority must be a full-time capability.\nNote that it is incorrect to assume that the dependability\nrequirements for an RCO system can be reduced based on an\nargument that it is called into play only after the AC has been\nincapacitated. Even at this lowest level of authority\ndelegation, an RCO system must have the full-time capability\nof assuming authority over the aircraft. Thus, while an RCO\nsystem can be argued to have lower availability requirements\ndue to this argument, the integrity (commission failures)\nrequirements for an RCO system are just as stringent as for\nany other full-time safety-critical aircraft system. More\ndetailed descriptions of these dependability requirements are\ngiven later in this report.\n\n2. LEVELS OF AUTHORITY DELEGATION\nThe types and degree of safety and security hazards\nintroduced by an RCO system will depend heavily on the\ndegree of authority that an airborne system relinquishes to the\nground and any of its supporting automation. The following\nsubsections describe different degrees of this authority\ndelegation and the ramifications of each, including the\nhazards introduced, the mitigation mechanisms for these\nhazards, and other demands on an RCO system architecture.\nOne thing to keep in mind for these various levels of authority\ndelegation is: what does cockpit resource management\n(CRM) mean when some of the cockpit resources aren\xe2\x80\x99t in\nthe cockpit or anywhere near the cockpit? Much of the\nexisting RCO research has been aimed at questions like this\nthat deal with the human part of potential RCO systems. This\nreport won\xe2\x80\x99t revisit this previous research. It will focus\nmainly on the safety and security aspects of hardware and\nsoftware; it will cover only the human parts of RCO that\nhaven\xe2\x80\x99t been well explored in other research and are tightly\ntied with the hardware and software. Something that falls\ninto the latter category and is another thing to keep in mind\nfor these various levels of authority delegation is handover\neffects during changes of authority delegation and whether\nthe airborne crew (AC) or the ground crew (GC) is the pilotin-command. What exactly happens when more authority is\nshifted toward the AC or toward the GC? Is there a time\nperiod during the handover when neither have control of the\naircraft? A more detailed look at this question and related\nproblems for the case of authority being unexpectedly\nreturned to the AC is given in the \xe2\x80\x9c7. Control Hand-Back\nProblems\xe2\x80\x9d section below.\n\n2.2. AC is pilot-in-command, GC is active second pilot\nAt this level of authority delegation, the GC is another \xe2\x80\x9cpair\nof eyes\xe2\x80\x9d, sharing the \xe2\x80\x9csee and avoid\xe2\x80\x9d responsibility with the\nAC. In addition, the AC may delegate some specific subduties to the GC. Again, this calls into question the meaning\nof RCO CRM. What are the GC\xe2\x80\x99s \xe2\x80\x9ceyes\xe2\x80\x9d? Adding multiple\nvideo cameras would require high-bandwidth and potentially\nsafety-critical communication from the aircraft to the ground.\nThere is a question of whether there will be sufficient\navailable bandwidth to support this video traffic. Papers have\nbeen written showing that L band communication has\ninsufficient capacity and that C-band would be required.\nGiven that many of the arguments for RCO envision its\ngreatest use in transoceanic flight, this would mean C-band\nsatellites. However, there are no C band satellites. And, there\nare no plans to create any C-band satellites.\n2.3. GC is pilot-in-command, AC is active second pilot\n\nIn the following subsections, it should be understood that the\nterms \xe2\x80\x9cground crew\xe2\x80\x9d and \xe2\x80\x9cGC\xe2\x80\x9d refer not only to the totality\nof the ground component of an RCO system, but also to any\nairborne automation that supports the ground crew interface.\n\nAt this level of authority delegation, the GC has immediate\nfull authority over the control of aircraft. In addition to the\ncommunication requirements of the previous section, the\ncommunication for this level of delegation has an additional\nrequirement for low round-trip latency and jitter (the\nvariation in latency). This communication is also now fully\nsafety-critical.\n\nA possible variation for each of those authority delegation\ndegrees in which the GC is in command includes the addition\nof an untrained or lesser-trained person in the cockpit who\njust carries out commands from the GC. This does not\nrepresent any difference in the level of authority allocation.\nSuch a variation is best viewed as a \xe2\x80\x9cbiology-based actuator\xe2\x80\x9d\nfor the GC.\n\nThis level of authority delegation begins to raise the AC\nrecovery time issue. This issue is the amount of time it takes\nan AC to resume control of the aircraft if GC communications\nor onboard systems fail. During this time, neither crew is in\ncontrol aircraft. Again, a much more detailed discussion of\nthis issue can be found in the \xe2\x80\x9cControl Hand-Back Problems\xe2\x80\x9d\nsection below.\n\n2.1. AC is pilot-in-command, GC is just standby redundancy\nThis is the minimal level of authority delegation. The GC\nactually has no immediate authority over the aircraft, but the\nGC has the capability of having its authority elevated to one\nof the following levels of delegation. An issue here is how\nthat elevation is performed. For RCO operations with a\nsingle AC member, this elevation must be able to be\nperformed after the single AC member has become\nincapacitated. See the \xe2\x80\x9cShould the GC be able to take over\nfor an incapacitated AC?\xe2\x80\x9d section below for a more detailed\ndiscussion of incapacitated crew considerations. It is clear\nthat some form of automation would have to be used to detect\nthat the AC has become incapacitated and to elevate the GC\n\n2.4. GC is pilot-in-command, AC is just standby\nAt this level of authority delegation, the AC is further \xe2\x80\x9cout of\nthe loop\xe2\x80\x9d. The AC would require more recovery time if GC\ncommunications or onboard systems fail. There are varying\ndegrees of the AC being \xe2\x80\x9cout of the loop\xe2\x80\x9d. These include\nbeing in the cockpit: eating, doing logbook, working on\nschedule, napping, etc. or being out of the cockpit: lavatory,\nsleeping, checking on abnormalities, etc. Example scenarios\nfor many of these situations are given in the \xe2\x80\x9cControl HandBack Problems\xe2\x80\x9d section below.\n2\n\n2.5 GC is pilot-in-command, AC is incapacitated/unavailable\n\nauthority is the ultimate authority. The decision as to\nwho/what has the ultimate authority must be made at the\nRCO system design time and is fixed for the life of the design.\nThis means that any RCO system design that has a solution\nfor the \xe2\x80\x9cGC is pilot-in-command, AC is an adversary or is\nsuicidal\xe2\x80\x9d scenario is mutually exclusive to any RCO system\ndesign that has a solution for the \xe2\x80\x9cAC is pilot-in-command,\nGC is an adversary\xe2\x80\x9d scenario. There are no exceptions to this\nmutual exclusion. One cannot design an RCO system that\ncan handle both of these scenarios; it has to be one or the\nother.\n\nAt this level of authority delegation, the GC has full authority\nover the aircraft, with the AC being incapacitated or\notherwise unavailable to share in any cockpit duties.\nSometimes overlooked when considering AC incapacitation\nis the fact that the AC\xe2\x80\x99s incapacitation may be of a type (for\nexample, seizure or dementia) that would cause them to\nperform some action(s) that are indistinguishable, at least in\npart, from the suicidal case described in the next subsection.\n2.6 GC is pilot-in-command, AC is an adversary or is suicidal\n\nObviously, the ultimate authority would have to be the GC if\nwe want RCO to have the capability for the GC to override\nthe AC. But, why should a GC be any less prone to being\nrogue than an AC? One can argue that there is a greater\nprobability for a GC going rogue. They don\xe2\x80\x99t have to face\ncertain death and they can crash more than one aircraft.\n\nAt this level of authority delegation, the GC has full authority\nover the aircraft and has to deal with an AC that may be an\nadversary, such as a hijacker, or an authorized AC member\nthat has become suicidal. After the suicidal hijackings of\n9/11, the German wings suicide, and the potential Malaysian\nMH370 suicide, there have been calls to prevent these kinds\nof aircraft loss by creating some mechanism for the control\nof aircraft from the ground. However, there are huge\n(probably insurmountable) problems with trying to do this.\nOne of these is the fact that the system would have to prevent\nall the possible ways that an adversarial or suicidal AC could\nprevent an aircraft from safely completing its flight; and,\nthere a lot of ways that this could be done. Details of this are\ngiven in the section below called \xe2\x80\x9cRCO Interface to Onboard\nSafety-Critical Systems\xe2\x80\x9d. Another problem is that any\nsolution to this scenario creates a new, and probably more\ndangerous, scenario described in the next subsection.\n\nOne could envision a redundant GC. But, each member of\nredundant GC set would have to be totally independent from\nall other members of that set, including independent\ncommunication channels to the aircraft. For this level of GC\nauthority to be viable, the RCO system would have to\nprevent/mitigate:\n\xe2\x80\xa2 All the possible ways that a rogue AC could make the\nflight unsafe\n\xe2\x80\xa2 All the failure modes described in section 4\n\xe2\x80\xa2 All the security intrusions that could have a severe safety\nimpact\n\n2.7 AC is pilot-in-command, GC is an adversary\nAt this level of authority delegation, one can argue that the\nGC has been given too much authority. If a GC can wrest\ncomplete control of an aircraft away from an AC, such a\ncapability could be subverted by someone (inside or outside\nthe system) or a component failure. This could lead to an AC\nthat wants to safely continue the aircraft\xe2\x80\x99s flight, but would\nnot be able to do so.\n\nShould the GC be able to take over for an incapacitated AC?\nIt is highly likely that this will be required for single-person\nAC. It is not uncommon to have an incapacitated crew\nmember. In the UK, there are 30 to 40 such incapacitations\nin a typical year (e.g., 32 in 2009 and 36 in 2004). That is\nabout one for every 10 days. For the number of pilots in this\npool, this gives an incapacitation probability of\napproximately 0.25% per year. This probability is better than\nthe typical requirement for passing a flight physical, which is\nthat a pilot\xe2\x80\x99s health should be such that there is no more than\na 1% probability that the pilot will suffer an incapacitating\nhealth event within a year. One can make a reasonable\nassumption that other airspaces have similar incapacitation\nprobabilities among its pilots and the number of\nincapacitation events would be proportional to the number of\npilots. Of course, in determining the probability of the\nincapacitation of an AC in an RCO equipped aircraft, one\nwould have to take into account the fraction of the aircraft in\nan airspace that are RCO equipped (and for design decision\npurposes, the number of aircraft that potentially would be\nRCO equipped).\n\nSuch a design would violate the \xe2\x80\x9cdo thy patient no harm\xe2\x80\x9d\nprinciple by creating a new cyber-attack pathway into the\naircraft and another source of natural failures that could\nadversely affect all safety-critical systems on an aircraft!\n\n3. RCO AUTHORITY QUESTIONS\nShould the GC to be able to override a \xe2\x80\x9crogue\xe2\x80\x9d AC?\nWe can group adversarial crew, suicidal crew, and crew that\nhave incapacitation indistinguishable from the latter together\ninto a set called \xe2\x80\x9crogue pilots\xe2\x80\x9d. An important design decision\nfor an RCO system is to determine if that system should have\nthe ability for the GC to override an AC in case the latter\nbecomes a rogue pilot.\n\nThere are many ways that an incapacitation can cause, and\nhas caused, an AC to inadvertently activate some control that\nis adverse to safety. These are more than just the Hollywood\nclich\xc3\xa9 of an AC having a heart attack and falling onto the\nstick. There\xe2\x80\x99ve been a number of instances of seizures, which\nhave caused limb extension; for example, doing a hard-over\n\nProviding the ability for the GC to override the AC leads to a\ntroubling question: \xe2\x80\x9cWho has the ultimate authority, the AC\nor the GC?\xe2\x80\x9d The answer to this must be the same for all\nsituations. Otherwise, who has the authority to decide what\nthe situation is? Whoever/whatever has that decision\n3\n\npush on the rudder pedal and then having the foot slip off the\nrudder pedal and jam it in the hard-over position. There have\nalso been instances of dementia where an aircrew member\nwas unaware of what they were doing.\n\nit is controlling Level A functions, it would have to be what\nis euphemistically called \xe2\x80\x9cLevel A+\xe2\x80\x9d.\nThose who are not well-versed in the way that things can fail\nusually assume that failures are somewhat benign, often\nconsisting only of omission failures. But, when we get down\nto the low levels of failure probability allowed for safetycritical aviation functions, failure modes can happen that are\nunbelievable until we find out that they actually do occur.\nExamples of these can be found in the Real System Failures\narea of the NASA DASHlink webpages [2].\n\nGiven these types of \xe2\x80\x9cactive incapacitation\xe2\x80\x9d, solving the AC\nincapacitation problem is not significantly easier than the\nmalicious rogue AC problem. In fact, we can just duplicate\nthe following bullet list from the above subsection:\nFor this level of GC authority to be viable, the RCO system\nwould have to prevent/mitigate:\n\xef\x82\xb7 all the possible ways that a rogue AC could make the flight\nunsafe\n\nThe design of the RCO system interface into the rest of the\naircraft safety-critical systems must be able to tolerate\nfailures of commission (an integrity issue) as well as failures\nof omission (an availability issue). The same consideration\nalso must be given to the communication link from the GC to\nthe aircraft. We need to find the proper balance between\nintegrity and availability. The reason for this is that faulttolerance mechanisms that promote one of these\ncharacteristics typically is detrimental to the other. To\nillustrate this, we can look at a simple dual-redundant\ncommunication link. Two versions of this link are shown in\nfigure 4-1 below, one designed for availability and the other\ndesigned for integrity.\n\n\xef\x82\xb7 all the failure modes described in section 4\n\xef\x82\xb7 all the security intrusions that could have a severe safety\nimpact\nThus, we are left with the following implication chain for the\ndesign of an RCO system: single person AC \xe2\x86\x92 tolerate\nincapacitation \xe2\x86\x92 assume some adversarial AC action(s)\n\n4. RCO INTERFACE TO ONBOARD SYSTEMS\nMurphy and Satan\nThe points at which an RCO system integrates with\ntraditional aircraft systems and the control paths that this\nintegration needs to intercept will depend on the types and\ndegree RCO authority. A failure of a component within an\nRCO system or a successful external attack into the RCO\nsystem can be coupled into traditional safety-critical aircraft\nsystems via this RCO integration. These two sources of\nRCO-introduced safety hazards can be characterized as\n\xe2\x80\x9cMurphy and Satan\xe2\x80\x9d (random naturally occurring failures\nand failures induced by humans with malicious intent,\nrespectively). Protections must be provided for both and\nthese protections must provide dependability commensurate\nwith the highest criticality level aircraft function that it could\nadversely affect.\n\nFigure 4-1 Availability versus Integrity\nFor the highest levels of safety-criticality, in-line integrity\nmechanism such as checksums and CRCs are insufficient in\nthemselves (see the FAA report DOT/FAA/TC-14/49\n\xe2\x80\x9cSelection of Cyclic Redundancy Code and Checksum\nAlgorithms to Ensure Critical Data Integrity\xe2\x80\x9d, the 2005\nDependable Systems and Networks paper \xe2\x80\x9cCoverage and the\nUse of CRCs in Ultra-Dependable Systems\xe2\x80\x9d, or the web\npages at checksumcrc.blogspot.com).\nFor these dual\ncommunication link examples, the only fault detection\nmechanism with sufficient coverage is the comparison of the\ntwo messages arriving via the two independent\ncommunication paths. What the receiver does with the\nmessages when the messages miscompare depends if the\nsystem is designed for availability or integrity. If it needs\navailability (strive to continue operation), the receiver will\narbitrarily select one of the two messages as its input. If it\nneeds integrity (only do correct operation), it will reject both\nmessages. Thus, a dual system designed for availability will\naccept either message (an OR function) and a system\ndesigned for integrity needs to have both messages (an AND\nfunction). Note that integrity does not imply safety. For this\nto be the case, taking no action must be safe. In general, it is\nnot always possible to design a system that has a \xe2\x80\x9cfailsafe\xe2\x80\x9d\n\nWhen dependability requirements restrict the probability of\nfailure to be less than 10-7 for a one hour exposure\n(approximately the failure probability of a single integrated\ncircuit), Murphy is indistinguishable from Satan. That is, the\nworst possible human adversary attack also could be\nproduced by Murphy with help from Mother Nature, with one\nmajor exception. This exception is that we assume\nindependent components of a system will fail independently\nfrom natural sources, but humans can mount coordinated\nattacks against multiple components. However, the RCO\nsystem interface into existing aircraft safety-critical systems\nis an exception to this exception. That is, a failure of this\ninterface can appear as a coordinated attack against multiple\naircraft safety-critical systems, which had been independent\nuntil coupled through the RCO system interface! Thus, the\nRCO system interface not only would have to be Level A if\n4\n\nstate and no type of dual-redundant architecture could be\ndesigned that would be safe for such systems. A simple dual\nredundancy can give you availability or integrity, but not\nboth. If both of these characteristics are needed, the system\nneeds to be at least triplex.\n\nto this, we are faced with the extreme demand of finding\nlocations for six antennas on the aircraft.\nTraditional Three Layers of Aircraft Control Automation\nWhen looking at suitable locations for where an RCO system\nwould connect into existing safety-critical onboard systems,\none likely would begin by looking at the traditional three\nlayers of aircraft control. These can be roughly broken into:\n\xef\x82\xb7 Flight Management System (planning, source-todestination profile)\n\xef\x82\xb7 Auto Pilot (altitude, heading, speed)\n\xef\x82\xb7 Flight Control (stick and rudder \xe2\x80\x93 attitude control,\nstability) and Engine Control\n\nThis availability vs. integrity observation holds for RCO\ncommunications from the ground to the aircraft and its\ninterface into aircraft safety critical systems. First, we need\nto determine the degree of availability and/or the degree of\nintegrity needed. With sufficient onboard automation, the\navailability requirements for communication would not be\nvery stringent. The need for this communication is\nconditional on those events with sufficiently high workload\nor for AC incapacitation. The probability of this \xe2\x80\x9con-demand\navailability\xe2\x80\x9d working correctly when called upon need not be\nvery high if the probability of it being called upon is low\nenough. On the other hand, the integrity requirements are not\nconditional. The ability of the RCO system to contain\nintegrity failures must be full-time. One cannot make an ondemand argument for RCO system integrity, similar to\narguments that can be made for systems like autoland. We\ncannot rely on the AC to turn off the RCO system interface\n(thus preventing integrity failures) for all times except when\nthey become incapacitated. And, then, when they are\nincapacitated turn the RCO system on. If an RCO system is\ndesigned to detect AC incapacitation, then it must be on all\nthe time.\n\nThis list is in \xe2\x80\x9ctop-down\xe2\x80\x9d order, in which each of the upper\nitems in the list provide inputs into the next item lower down\nthe list. Providing RCO inputs into systems only near the top\nof this list requires less stringent communication latency and\njitter requirements than for RCO inputs that are closer to the\nbottom of this post. However, trying to take advantage of\nlower communication latency and jitter comes as a trade off\nwith respect to control authority. That is, as the RCO inputs\nintercept signals in systems toward the lower end of the above\nlist, the greater the authority the RCO system has for taking\ncontrol away from an AC that may be adversarial or\nincapacitated. Any design for an RCO system will have to\ndeal with this authority vs. latency trade-off.\n\nEven with just these high-level qualitative observations of\navailability and integrity requirements, we can make some\nstatements about redundancy for RCO communication from\nthe ground.\n\nRegardless of where the RCO system interfaces into these\nexisting safety-critical systems, the expected dependability\n(integrity) requirements for the RCO control will be the\nhighest levied on any aircraft system.\n\nFor availability, simplex (no redundancy) may be sufficient,\nexcept for placement of redundant antennas on the aircraft to\nprevent \xe2\x80\x9cshadowing\xe2\x80\x9d of the antennas during certain\nmaneuvers where parts of the aircraft may block the RF\nsignal. The final determination of whether simplex is\nsufficient will depend on the specific demands placed on the\nRCO system. If communication redundancy is required for\navailability, each of the redundant communication paths must\nhave sufficient bandwidth to carry the entire RCO\ncommunication demand.\n\nOther Potentially Safety-Critical Systems\nWhile the three layers of aircraft control described in\nprevious section are the most often studied and cited locations\nfor an RCO system to interface with other aircraft systems,\nthere are many other controls typically used by an AC that an\nRCO system may have to control and many of them are\nsafety-critical. Here is a partial list of such controls:\n\xef\x82\xb7 Power\n\xe2\x80\x93 Conversion (AC/DC, DC/AC) and\nDistribution (tie relays and switches)\n\xe2\x80\x93 Circuit breakers (there are a lot of them)\n\xef\x82\xb7 Fuel distribution (center of gravity control, jettison)\n\xef\x82\xb7 Flight-control surface trim\n\xef\x82\xb7 Landing gear\n\xef\x82\xb7 Spoiler, thrust reverse, and braking systems\n\xef\x82\xb7 De-icing and pitot heat\n\xef\x82\xb7 Radio tuning and audio\n\nOn the other hand, integrity requirements would demand at\nleast dual communication redundancy, with the redundant\npaths possibly being asymmetric. That is, one of the\nredundant paths would have to carry the entire RCO\ncommunication demand, but other paths could just be some\ncompressed version of the entire RCO communication\ndemand and the equivalent of an \xe2\x80\x9cenable\xe2\x80\x9d. This latter\ncapability would be particularly useful when using redundant\nGC. Note that for asymmetric communication paths, the\npath(s) with lower demand possibly could be accommodated\nwithin existing communication equipment.\n\nEach of the items in this list has been implicated as a\ncontributing factor to incidents in which their misuse has led\nto a catastrophic event. Thus, it should be clear that an RCO\nsystem must be able to control all of these. However, these\nlevels of pervasiveness and invasiveness of the RCO\ninterface have not been adequately addressed by previous\n\nOf course, if the system needs redundancy for both\navailability and integrity, the communication path would\nhave to be triplex. When the shadowing requirement is added\n5\n\nRCO and SPO studies (for Part 121) which typically have\nconcentrated on the traditional three levels of aircraft control.\n\nsubsystems. The only difference between this Remote\nAgents architecture and the Porcupine architecture is the\nstructure of the signal interconnects.\n\n5. RCO AIRBORNE SYSTEM ARCHITECTURE\nThe Ground Override boxes are shown as triplex. This is\nbecause many of the places where the other subsystems must\nbe intercepted have no always-safe state. Therefore, a dualredundant control is insufficient. One example of this is the\nlanding gear. The gear must be up for high-speed flight and\ndown for landing. Neither state (up/down) is safe in the other\nsituation. It should be clear that many of the other safetycritical controls have no universally-safe state.\n\nDepending on the requirements for handling rogue pilots, an\nRCO system may need to intercept all signals/systems that\ncould possibly cause an aircraft to not continue safe flight\n(including systems not in the three traditional control layers\nof FMS, autopilot, and flight control). Even without a rogue\npilot (i.e., just \xe2\x80\x9cbenign\xe2\x80\x9d loss of AC) many signals/systems\nwill need to be intercepted to provide a ground override. A\ncouple of possible on-aircraft RCO system architectures are\nshown in the figures below. Both are expensive, safetycritical, and highly disruptive to many current aircraft\nsystems. These characteristics are unavoidable; they would\nbe true of any RCO airborne system architecture.\n\nOne set of safety-critical controls might not be so obviously\nlacking of universally-safe states, but actually is likely to be\nthe set of controls which will make it prohibitively expensive\nto retrofit an RCO system into an existing aircraft. This set\nof controls is the circuit breakers. There are a lot of them. If\nsome downstream electrical malfunction could cause a fire,\nthe safe state for the circuit breaker is off. This is the main\nreason that circuit breakers exist. On the other hand, there\nare a number of electronic/electrical subsystems on the\naircraft for which the safe state is having one or more circuit\nbreakers on. So, dual redundancy isn\xe2\x80\x99t enough. And, it\xe2\x80\x99s not\nfeasible to make circuit breakers, switches, and relays failoperational\n(providing availability and\nintegrity,\nsimultaneously) using triplex.\nThe common way of\nproviding fail-operational capability in circuit breakers,\nswitches, and relays is the quad configuration shown below.\n\nFigure 5-1 Centralized \xe2\x80\x9cPorcupine\xe2\x80\x9d\n\nFigure Error! No text of specified style in document.Quad\nCircuit Breaker, Switch, or Relay\nThis configuration is single fault tolerant to any single stuckclosed or stuck-open component. But, this configuration\npresents the problem of how to connect a triplex controller to\nthese quad components. The easiest solution is to make the\ncontroller quad instead of triplex. Then, each member of the\nquad controller would independently control one component\nof the quad circuit breaker. In the Porcupine architecture, the\nGround Override boxes would have to be quad and there\nwould have to be four independent control signals from these\nboxes to each of the quad circuit breakers. In the Remote\nAgents architecture, the agents would have to be quad and\nhave a triplex-to-quad conversion voting plane between it and\nthe triplex dependable network, or the entire system would\nhave to be quad.\n\nFigure 5-2 Remote Agents\nIn the \xe2\x80\x9cPorcupine\xe2\x80\x9d architecture shown in Figure 5-1,\nindividual signals go out from the RCO interface boxes that\nprovide the GC ground override capability to all the points in\nall the other subsystems where the RCO must intercept some\nexisting signal. The name \xe2\x80\x9cPorcupine\xe2\x80\x9d comes from the fact\nthat there might not be enough surface area on the Ground\nOverride boxes to accommodate all the possible signal lines.\n\nIn addition, it is quite likely that many of these intercept\npoints will need to have their actions coordinated. As soon\nas any type of coordination is required among redundant\nelements, the possibility of a Byzantine fault is created [3].\nTo tolerate one Byzantine fault, a minimum of four fault sets\n\nIn the Remote Agents architecture shown in Figure 5-2, the\nmass of Porcupine wires are replaced by a new highdependability network that connects the Ground Override\nboxes to remote agents within each of the other aircraft\n6\n\nis needed [4] Thus, the Ground Override boxes may need to\nbe quad to cover these faults.\n\nis shared between an autonomous digital driving system and\nhuman drivers, can\xe2\x80\x99t be done safely. The problem is the\nhandoff from the digital system back to the human driver\nwhen something unexpected happens. Designers can\xe2\x80\x99t\nanticipate every possible situation a vehicle can encounter.\n\n6. RELATED RESEARCH AND DEVELOPMENT\nPrevious RCO and SPO R&D\n\n\xe2\x80\x9cRight now, there\xe2\x80\x99s no good answer, which is why we\xe2\x80\x99re\nkind of avoiding that space.\xe2\x80\x9d \xe2\x80\x94 Dr. Ken Washington,\nFord\xe2\x80\x99s VP of research and advanced engineering\n\nWhile safety, security, and certification issues for the\nhardware and software that make up the nonhuman parts of\nan RCO or SPO system haven\xe2\x80\x99t been totally neglected in\nprevious studies, these issues certainly have taken a backseat\nto studying the human parts of these systems. This could be\nan example of \xe2\x80\x9cdesign procrastination\xe2\x80\x9d where the difficult\nand uninteresting parts of a design problem are delayed to the\nend of the process. What little publication has been created\nfor these areas of RCO and SPO was consulted for this effort.\n\nThis problem of control being handed back to a human when\nautomation fails is already an emerging problem for cockpit\nautomation systems. Introduction of RCO and/or SPO will\nexacerbate this problem.\n\n7. CONTROL HAND-BACK PROBLEMS\n\nTo \xe2\x80\x9cnot reinvent the wheel\xe2\x80\x9d and \xe2\x80\x9cnot look under rocks that\nhave already been examined before\xe2\x80\x9d, previous R&D in fields\nadjacent to RCO and SPO were also examined. The two most\napplicable adjacent fields are unmanned aerial systems\n(UASs) and autonomous ground vehicles. Both of these\nareas are currently hotbeds of R&D activity looking at some\nissues that could be applicable to RCO.\n\nNASA\xe2\x80\x99s Paul Schutte, in his paper \xe2\x80\x9cHow to Make the Most\nof Your Human: Design Considerations for Single Pilot\nOperations\xe2\x80\x9d12 has the following discourse on \xe2\x80\x9cIs Automation\nthe Hero?\xe2\x80\x9d\n\xe2\x80\xa2\n\nOne reason why computers are so reliable at what they are\nprogrammed to do is because they give up at the first sign\nof trouble.\n\nR&D Done In Adjacent Fields\n\n\xe2\x80\xa2\n\nWhen the autopilot reaches its maximum authority, it\nthrows up its hands and tosses control back to the human,\nwhether the human is ready for it or not.\n\n\xe2\x80\xa2\n\nPilots routinely must intervene whether it\xe2\x80\x99s simply\nresetting a circuit breaker or turning off the automation.\n\n\xe2\x80\xa2\n\nThe main reason why humans are still on the flight deck\nis to manage risk by dealing with or avoiding the\nunexpected, unanticipated, or complex situations\n\n\xef\x82\xb7 Unmanned Aircraft Systems (UAS)\nWhile unmanned aerial systems have some issues with\navailability, safety, and security for remote control of aircraft,\nthere is no AC to share control responsibility and the\ndependability requirements are much less stringent than for\ncivil transport operations. A few pieces of information from\nthis field are incorporated in subsequent sections of this\nreport.\n\nThe same things can be said about the RCO communication\npath from a GC to the aircraft, the path into the aircraft\xe2\x80\x99s\nsafety-critical systems, and any of its onboard supporting\nautomation. The issue is that there may be nobody/nothing\nin control of the aircraft between the time that the\ncommunication or automation fails and the time that the AC\ncan retake control of the aircraft. The duration of this time\ndepends on how \xe2\x80\x9cout of the loop\xe2\x80\x9d AC is at the time of the\nfailure. The following subsections describe these varying\ndegrees of being \xe2\x80\x9cout of the loop\xe2\x80\x9d and include illustrative\nevents from actual aviation incidents and accidents.\n\n\xef\x82\xb7 (Semi-)Autonomous Ground Vehicles\nWhile ground vehicles don\xe2\x80\x99t fly (yet), and they aren\xe2\x80\x99t\nremotely controlled (yet), and their dependability\nrequirements are much less stringent than for aircraft (largely\nbecause crashes of ground vehicles don\xe2\x80\x99t cause potential\ndrivers and passengers to avoid these vehicles as much as an\naircraft crash causes potential passengers to avoid flying), the\nrecent research and development into (semi-)autonomously\ndriven ground vehicles covers an important aspect of RCO\nsystem design not present in unmanned aerial systems. This\naspect is the large degree of control authority that an invehicle person relinquishes to automation and/or remote\npersons. This degree of control authority delegation is much\nlarger than previous systems (e.g., aircraft autopilots and\nground vehicle adaptive cruise control). In fact, we are now\nlooking at situations where the automation/remote control\nauthority supersedes that of the in-vehicle person and that\nperson may not even have the ability to take back some\nportion of that control.\n\nTime needed to get to the controls, when out of the cockpit\nOn a commuter flight, the captain got stuck in the lavatory\ndue to the door latch being broken. This flight had only one\ncabin crew member, who had to go into the cockpit when the\ncaptain left it. The captain yelled for a passenger to tell the\ncockpit what was going on. The passenger banged on the\ncockpit door and yelled through it trying to explain the\nsituation. The problem with this was he had a thick Middle\nEast accent. The people in the cockpit weren\xe2\x80\x99t going to open\nthe door under those circumstances. The captain had to\nbreakdown the lavatory door. The flight continued on\nwithout further incident after the AC rescinded their radio\nmessage that they were potentially in a hijack situation.\n\nOne of the hot topics in (semi-)autonomously driven ground\nvehicle R&D is the issue of full autonomy versus shared\nresponsibility. Ford says that the possible interim step to\nfully autonomous vehicles, where the driving responsibility\n7\n\nThe cognitive delay due to the \xe2\x80\x9cstartle effect\xe2\x80\x9d is present even\nwhen the crew is fully awake.\n\nA common reason for leaving the cockpit is to investigate an\nabnormal situation (e.g., smoke). One can argue this is\nprecisely the wrong time to leave the cockpit unattended. The\nabnormality being investigated could be something that\nwould cause the loss of RCO communication or its interface\nto critical systems. For example, a half-hour into a scheduled\n12-hour flight from SEA to PEK, a cockpit crew member\nrushed to the rear of the airplane to investigate the smell of\nsmoke, which is never a good sign. On an RCO flight, this\nwould have been the entire crew (!), away from the cockpit\nfor a significant amount of time. The airplane returned to\nSeattle (see Figure 7-1) for over-night repairs, which replaced\na cabin air recirculation fan and one third of the cabin seats.\n\nAudi says its tests show it takes an average of 3 to 7 seconds,\nand as long as 10, for a driver to snap to attention and take\ncontrol, even with flashing lights and verbal warnings.\n\xe2\x80\x9c\xe2\x80\xa6anyone who gets behind the wheel [of a semi-autonomous\ncar] must be properly trained. For Audi, this means learning\nto be a better than average driver\xe2\x80\xa6if you need to grab the\nwheel, the odds are something\xe2\x80\x99s gone terribly amiss\xe2\x80\x9d [7].\nThe Air France Flight 447 crash is now well known. It was\na scheduled passenger flight from Rio de Janeiro to Paris,\nwhich crashed in 2009. The Airbus A330 entered an\naerodynamic stall from which it did not recover and crashed\ninto the Atlantic Ocean, killing all 228 persons aboard the\naircraft. When the airspeed indicators failed, the autopilot\nsounded the caution alarm (startle effect) and threw the\ncontrol immediately to pilots (who were unprepared).\n\nSo, this had to be a nontrivial fire. Such events are not\nuncommon. Some have said [5] that SPO would require\nautomation that has no hand-back mode (no auto-pilot trip) if\nthe crew has to leave the cockpit.\n\nAnother crash in which the startle effect was cited as a\nsignificant contributing factor was Colgan Air Flight 3407,\nmarketed as Continental Connection under a codeshare\nagreement with Continental Airlines. It was a scheduled\npassenger flight from Newark, NJ, to Buffalo, NY, which\ncrashed in 2009. The Bombardier Dash-8 Q400 aircraft\nentered an aerodynamic stall from which it did not recover\nand crashed into a house in Clarence Center, NY, killing all\n49 passengers and crew on board, as well as one person inside\nthe house.\nFigure 7-1 Fire trucks surround an aircraft at SEA\nRecovery time can be even longer if diagnosis is required\nTime needed to get to the controls, when in the cockpit\n\nThe crew of Qantas Flight 32, in which an A380 engine\ndisintegrated [8], needed 50 minutes to sort out all the\nECAM warning messages (the crew had no time for ACARS)\nand assess the aircraft damage. It was lucky that this flight\nhad five cockpit crew members (three normal crew plus a\nCheck Captain and a Supervising Check Captain). So, they\nhad the luxury of having an extra person they could send aft\nto look out the windows and assess damage. Dealing with\nabnormal situations may require additional AC, versus a\nreduction in crew. Richard Woodward (a Qantas A380 pilot\nand deputy president of the Australian and International\nPilots Association) said that the \xe2\x80\x9cnumber of failures is\nunprecedented [\xe2\x80\xa6] There is probably a one in 100 million\nchance to have all that go wrong\xe2\x80\x9d [9]. But, there have been\nover a half-dozen previous similar incidents. The Sioux City\nDC-10 crash is well known. Again, they were lucky to have\nadditional crew on board, which prevented the crash from\nbeing worse than it was.\n\nThe first corollary of Murphy\xe2\x80\x99s Law is: When things do go\nwrong, they will go wrong at the most inopportune time. On\nan Aeroflot Flight 593 (an A310), the captain allowed his two\nchildren to sit in the front two cockpit seats. The son\naccidently disengaged the autopilot lateral control. While\nthere were two members of the cockpit crew in the cockpit,\nhaving the children in the way plus the g-forces caused by the\nlack of the autopilot lateral control prevented crew getting\nback into their seats and at the controls in time. All 63\npassengers and 12 crew members died in the crash.\nOnce at the controls, time needed to regain situational\nawareness under normal conditions\nIn the Air Canada\xe2\x80\x99s Incident Report [6] on Air Canada Flight\n878 (a B767) had the following to say: \xe2\x80\x9cUnder the effects of\nsignificant sleep inertia (when performance and situational\nawareness are degraded immediately after waking up)\xe2\x80\x9d a\npilot mistook the planet Venus as lights of another airplane\non a collision course and he dove to avoid it. While this\nmaneuver managed to avoid a collision with the planet, 14\npassengers and two crew members were injured because they\nwere not wearing seatbelts.\n\n8. ARE COMMUNICATION THREATS REAL?\nWhen a capability is created to remotely control an aircraft,\nthe security of the communication used for this control is an\nobvious concern. But, would someone really try to interfere\nwith the flight of an RCO aircraft or is this just a\n\xe2\x80\x9cHollywood\xe2\x80\x9d fantasy? It turns out that the answer is: \xe2\x80\x9cJust\nbecause you\xe2\x80\x99re paranoid, that doesn\xe2\x80\x99t mean that they are not\n8\n\nout to get you.\xe2\x80\x9d We have to assume there will be bad actors\nthat are out to get us because there have been a number of\ninstances in the past where radio communications to aircraft\nhave been attacked. Some of these instances are described\nbelow in subsections grouped by the type of perpetrators.\n\nUnderlying the use of encryption is a cryptographic key\nmanagement infrastructure. There are two aspects to key\nmanagement, trust and logistics.\nTrust involves three questions:\n1. Who do you trust?\n\nIndividuals\n\n2. With what?\n\nOfficially called a \xe2\x80\x9cphantom controller\xe2\x80\x9d (a.k.a., \xe2\x80\x9cbogus\xe2\x80\x9d,\n\xe2\x80\x9cfake\xe2\x80\x9d, or \xe2\x80\x9cphony\xe2\x80\x9d controller), there are individuals who like\nto pretend that they are air-traffic controllers. In the UK,\nthere were 18 in 1999. The U.S. will only say that it happens\n\xe2\x80\x9cseveral times a year\xe2\x80\x9d. It has been said that these instances\nhave been underreported in order to prevent copycats. This\nis hard to verify, but from reasonable sources. Jim Epik has\nwritten a book on the subject, called \xe2\x80\x9cPhantom Controller\xe2\x80\x9d.\nHe also has created a petition to encrypt ATC\ncommunications.\n\n3. To do what?\nFor example:\n1. Can an airline trust the U.S. government?\n2. With its cryptographic keys?\n3. Not to reveal these keys (to North Korea, UK, Israel?)\nNote that specifics are important. In the last element of the\nexample, some airlines might view the U.S. revealing\ncryptographic keys to Israel as trustworthy; where as other\nairlines would consider that to be untrustworthy. Most\nairlines would expect that the U.S. would not reveal its\ncryptographic keys to North Korea.\n\nAd Hoc / Transitory Groups\nDuring the 1981 PATCO strike, some of the striking\nmembers became phantom controllers.\n\nKey management logistics are the mechanisms to enforce the\ntrust. This includes the creation of keys with their ownership\nassociation, key distribution, and revocations.\nKey\nmanagement allows only authorized users to have possession\nof private or secret keys, often only for a set period of time.\nThese cryptographic keys can have an ordinary use (e.g.,\nRCO communications) and an extraordinary use (e.g., a\ngovernment investigation).\n\nOpposing factions in civil wars would like to wrest control of\nthe airspace over their contested country from others\ninvolved in the war. And thus, they will interfere with the\nother factions\xe2\x80\x99 communication with aircraft.\nNation-State Sponsored\nAn Air France captain said that his aircraft received bogus\nair-traffic control instructions during a flight back to France\nfrom Japan. He believed that his aircraft was targeted\nbecause he had transmitted a PAN PAN message indicating\nthat an electrical problem had caused half of his cockpit\navionics to be inoperative and the crew would be under a\nheavy workload. The attacker (indications were that it was\nNorth Korea) made six attempts to cause the aircraft to fly\ninto an unsafe situation. The captain suggested that\nencrypting the PAN PAN message for secrecy may have\nprevented this attack.\n\nThe laws governing cryptography in many countries require\nthat some arm of the country\xe2\x80\x99s government have access to the\n\xe2\x80\x9cplaintext\xe2\x80\x9d that has been encrypted. The cryptographic\nliterature uses the term \xe2\x80\x9cplaintext\xe2\x80\x9d to mean anything that will\nbe encrypted or has been decrypted and the term \xe2\x80\x9cciphertext\xe2\x80\x9d\nis used to mean the equivalent of the plaintext after it has been\nencrypted but before it has been decrypted.\nUsually, the easiest way to give a government access to the\nplaintext is to allow them access to the cryptographic keys\nused for the encryption. This will allow the government to\ndecrypt the cipher-text. But, this still can complicate the key\nmanagement infrastructure.\n\n9. COMMUNICATION ENCRYPTION\nThe only really viable current method to protect aircraft\ncommunications is the use of encryption. However, there are\na number of problems to overcome when employing\nencryption to protect RCO communications. These problems\ninclude each nation\xe2\x80\x99s laws governing cryptography, the\nlatency introduced by encryption, and other ways that current\nencryption algorithms are ill suited for use in real-time cyberphysical systems.\n\nMuch of the literature covering future encryption systems for\naircraft communications assumes that just saying an X.509based public key infrastructure (PKI) will be used for key\nmanagement is a sufficient explanation for how the key\nmanagement problems will be solved. But, full PKI is heavy\nweight and doesn\xe2\x80\x99t solve all the problems by itself.\nPKI doesn\xe2\x80\x99t answer the trust questions. The trust questions\ninclude the question of whose keys will be used for a\nparticular flight. As a complex example to illustrate the\npoint, let\xe2\x80\x99s say that an aircraft manufacturer includes some\ncryptographic equipment manufactured by some avionics\nsupplier; the aircraft manufacturer sells the aircraft to a\nleasing company; the leasing company leases the aircraft to a\n\n(Inter)National Cryptography Laws\nThere are laws in almost every country that place some form\nof restriction on the export, the import, and/or the domestic\nuse of encryption technology. These laws may prohibit the\nuse, limit the use, and/or require licensing for the use of\nencryption within its territories.\n9\n\nscheduled airline; the airline rents the aircraft to a charter\ncompany at times when the airline isn\xe2\x80\x99t using that aircraft;\nand, the charter company hires a crew that normally works\nfor some other rival airline. Whose keys should be used for\nthe encryption? Should the cryptographic equipment have\nsoftware with a dedicated link to some key management\ninfrastructure owned by the avionics company? the aircraft\nmanufacturer? the leasing company? the airline? Or, should\nthe crew load keys as part of preflight? If so, what keys\nshould be used? the charter airline\xe2\x80\x99s keys? the crew\xe2\x80\x99s\npersonal keys? the keys they use as employees of the rival\nairline? Should there be one set of keys for all systems on the\naircraft that want to communicate with the ground? Or,\nshould some systems have keys (or use a key infrastructure)\nthat is different from other systems? For example, the\nmanufacturer of engines that are leased in a \xe2\x80\x9cpower by the\nhour\xe2\x80\x9d arrangement might like to have engine performance\ndata transmitted to them using their own key. Should the\nkeys used for RCO communication be the same as used for\nCPDLC?\n\neach). These latencies depend on communication speed (the\nslower the link, the longer these latencies) and they have to\nbe added to the cryptographic computation latencies. The\nsum of these latencies doubles if handshakes (e.g.\nACK/NAK) are used and are encrypted.\nUASs try to mitigate this cryptographic latency problem by\nusing very high-speed (e.g., 10 Gbps) communication links\nand special hardware encryption (e.g., KG-340 encryptors\nand Single-Chip Crypto field programmable gate arrays). It\nis unlikely that RCO communications can find such a wide\nbandwidth for its use and adding additional high-speed\nencryption hardware can be expensive.\nProblems with general-purpose cryptography in cyberphysical systems\nAn RCO system is an example of a cyber-physical system\nwith real-time and other constraints not seen in generalpurpose processing. While latency and jitter may be the main\ndifferences in requirements/constraints between generalpurpose processing and cyber-physical system processing,\nthere are a number of other problems with employing\ngeneral-purpose cryptographic algorithms in cyber-physical\nsystems. Many of these problems compound the latency and\njitter problems.\n\nEncryption can be used to provide secrecy and/or\nauthentication. These two properties don\xe2\x80\x99t need to be tied\ntogether.\nOften glossed over in discussions of key\nmanagement is the fact that key distribution needs secrecy\nprotection for private and secret keys, even if these keys are\nonly used for authentication (not secrecy).\nPopular\nauthentication schemes need private keys (for public-key\nsystem signatures) or secret keys (for message authentication\ncodes). The need for secrecy in the distribution of these keys\ncomplicates the key management infrastructure and can\ncause problems with national laws that restrict encryption\nused for secrecy, when an encrypted channel is used to\nprovide secrecy for key distribution rather than using\nphysically secure communication path for the key\ndistribution.\n\nThe remainder of this subsection deals with symmetric\nencryption algorithms implemented in software, possibly\nwith hardware support in the form of instructions in the\nprocessor\xe2\x80\x99s instruction set architecture (ISA) or an adjunct\ncrypto field programmable gate array. The temporal\nperformance of asymmetric (public key) algorithms is not\ncritical for RCO communications. This is because the use\nasymmetric cryptography can be restricted to the exchange of\nkeys that will be used in symmetric encryption algorithms to\nachieve secrecy, continuing authentication, and/or integrity\n(via message authentication codes); and, the key exchange\ncan be perform during pre-flight or at other times when\ntemporal performance is not important. Also not discussed\nare stand-alone encryption \xe2\x80\x9cboxes\xe2\x80\x9d, because their added costs\nin terms of cash outlay, size, weight, power, and latency\nmakes them less desirable.\n\nThere are current uses of PKI for aircraft communication.\nHowever, it is unknown whether this PKI can be used for\nRCO communication.\nDuring the course of this study, an invention was created to\nmitigate some of the issues for key management logistics and\npotential legal problems for aircraft communication\nencryption.\nEncryption Latency\nOne problem encountered by UAS operations is\ncommunication latency. The sum of the communication\nlatencies can be on the order of a couple seconds, which can\nmake closed-loop remote control of an aircraft difficult.\nEncryption of this communication can be an aggregating\nactor in these latencies. The communication for each\niteration around the closed loop incurs the latency of two\nencrypts and two decrypts (the four arrows in Figure 9-1).\nIf AES (or similar block cipher) is used to provide secrecy\nand integrity, a block (e.g., 128 bits) of store-and-forward\nlatency has to be added, plus the latency for any added\ninitialization vector (IV) and/or integrity data (e.g., 32 bits\n10\n\nmeans that cyber-physical system communications have less\ndata over which to amortize startup costs.\nWith the cryptography speed propaganda focused on peak\nthroughput, average throughput and worst-case throughput\nare ignored. However, in cyber-physical systems, typically\nonly the worst case timing counts, average is unimportant and\npeak is even less important. A missed real-time deadline\ncannot be helped by finishing early at other times. For cyberphysical systems, latency and jitter are both usually more\nimportant than throughput. Often, jitter is more important\nthan latency because control algorithms can better deal with\na known latency rather than with instances of unknown jitter.\nAll known general-purpose crypto algorithms need to store\nsome data in memory while they\xe2\x80\x99re executing. Cyberphysical software generally makes heavy use of multitasking\nwith many context switches per second that can cause each\ntask\xe2\x80\x99s cache entries to be evicted (replaced with some other\ntask\xe2\x80\x99s data). To guarantee timing performance, one must\nassume that most memory accesses will cause cache misses.\nBut, existing crypto performance propaganda assumes a \xe2\x80\x9cprewarmed\xe2\x80\x9d cache. That is, timing performance measurements\nare done only after making sure that all the data the algorithm\npossibly could use are in the cache. Not only does the\ndependence on cached data adversely affect temporal\nperformance, it also can be (as has been) a path that leaks\ninformation that can be used to \xe2\x80\x9cbreak\xe2\x80\x9d the encryption. Even\nif all needed data are in the L1 cache, cache hits can be\nexpensive (equivalent to about a half-dozen instructions in an\nIntel i7 processor). The only solution to these cache problems\nis to not use cache, which means not using any data during\nthe execution of an algorithm that does reside totally with the\nregister set of the processor.\n\nFigure 9-1 Encryption Latency\nOne of the problems with employing general-purpose\ncryptographic algorithms in cyber-physical systems is the\nslow startup for each key change. The startup delay is due to\n\xe2\x80\x9ckey scheduling\xe2\x80\x9d being done. Key scheduling is the\nconversion of the cryptographic key into data that the\nencryption algorithm uses internally. When the encryption is\nnot used for real-time cyber-physical systems, it makes sense\nfor key scheduling to be made expensive. The rationale is\nthat legitimate users incur these startup delay costs a\nrelatively small number of times. On the other hand, an\nattacker that uses some form of brute force key-related search\nwould have to try a huge number of different keys and incur\nthe startup delay cost a vastly greater number of times. This\nis one of the reasons why general-purpose cryptographic\nalgorithms have been designed with key scheduling that is\nslow. Another reason that general-purpose cryptographic\nalgorithm key scheduling is slow is that they have been\noptimized for peak throughput performance, which is usually\nmeasured in clock-cycles-per-byte. In the \xe2\x80\x9cmy algorithm is\nfaster than your algorithm\xe2\x80\x9d speed propaganda wars, startup\ndoesn\xe2\x80\x99t count. Therefore, to game the system, algorithm\ndesigners can put more work into the startup to make the rest\nof the algorithm run faster.\n\nA cryptographic algorithm characteristic closely related to\nlow-latency is \xe2\x80\x9ckey agility\xe2\x80\x9d. This is the ability of an\nalgorithm to easily and quickly change from one key to\nanother. There are two types of key agility: the first is the\nability to switch to a new key and/or a key with a new IV that\nhasn\xe2\x80\x99t undergone any key scheduling, the second is the ability\nto switch to a key and IV pair that has undergone any required\nkey scheduling. Of course, the former requires that key\nscheduling be done and algorithms needing good key agility\nmust minimize the time and effort required to do key\nscheduling. The second type of key agility depends on the\namount of data that the algorithm must use during its\nexecution, therefore, algorithms needing good key agility\nshould minimize the amount of data it needs while executing.\nFor avionics in general, good key agility may be required if\ndifferent subsystems and/or applications within the aircraft\nneed different keys and there is a centralized provider of\nencryption services for these subsystems and/or applications.\nGood key agility also may be required as an aircraft crosses\nboundaries that delineate jurisdictions where different keys\nmust be used and the keys must be quickly changed at the\nboundary in order to avoid a communication \xe2\x80\x9cdead zone\xe2\x80\x9d\nwhere encrypted communication can\xe2\x80\x99t be performed.\n\nAs another point of comparison, communications in cyberphysical systems typically use smaller messages and sessions\nthan communications in general-purpose systems. This\n\nGeneral-purpose crypto algorithms increase the sizes of the\nmessages they encrypt. This increase can include data\n11\n\nneeded as an IV, padding, and integrity check data. This need\nis amplified by the small sizes of many cyber-physical system\nmessages, where even small per-message overhead due to\ncryptography can be a large burden. This may require more\ncommunication bandwidth than is available. A design goal\nfor a real-time cyber-physical cryptographic algorithm is to\nminimize or eliminate message expansion. This requirement\neliminates the use of those block cipher modes that round\nmessages up to the next block size.\n\ngreater aircraft:GC ratio). A potential GC structure would be\nto have the number of GC be: number-of-aircraft-to-becontrolled / 5 + 1. This assumes that no more than one\naircraft within the set of aircraft to be controlled would need\ncontinuous control at the Flight Control level at any point in\ntime. If a GC center is designed to control 20 aircraft\nsimultaneously, the GC complement would have to be 20/5 +\n1 = 5. To this number, we need to add another GC to allow\nfor breaks. This ignores any additional personnel needed to\nprotect against adversarial GC. With 6 GC under RCO\nreplacing 20 AC First Officers under today\xe2\x80\x99s two person\nACs, this is a reduction of crew cost of $70,000 plus 70% of\nbenefits per year per aircraft.\n\nIn order to provide the properties of continuing\nauthentication, secrecy, and integrity, most existing\ncryptographic systems use separate secrecy and integrity\nalgorithms or use an added integrity mode that is wrapped\naround a secrecy algorithm. Compared to an authenticating\nencryption (AE) (a.k.a., integrity-aware) algorithm, which\nintrinsically provides continuing authentication and integrity\nalong with secrecy, these approaches exacerbate the\nproblems discussed here.\n\nThe cost of completely redesigning and replacing most of the\ncockpit avionics and adding a quad-redundant (or better)\nGround Override system, that has tentacles into many\nlocations within most of these systems (many of which will\nalso have to be at last quad redundant), will be more than the\ncost for original avionics and will have fewer aircraft over\nwhich to spread the development cost. This development\ncost also will be higher than the original development cost\ndue to the Ground Override system needing to be,\neuphemistically, \xe2\x80\x9cLevel A+\xe2\x80\x9d because of its potential to be a\nsingle point of failure for all of the critical avionics. In\naddition to these aircraft costs, we must add the development,\ndeployment, and operation cost for the ground segment.\nThese \xe2\x80\x9cground\xe2\x80\x9d costs could be very large when they include\nthe development, deployment, and operation costs of a Cband satellite system. The amortization of all these large\ncosts (including time value of money) must be less than the\ncrew labor cost saved.\n\nThese are the reasons, we created an AE algorithm (called\nBeepBeep) specifically for real-time cyber-physical and/or\nretro-fit applications. This algorithm was created in 1999 and\npublished in 2002 [10]. It has a low code size, zero working\ndata memory, low latency, good key agility, and provides\ncontinuing authentication, secrecy, and integrity in a single\npass. In the last couple of decades, there have been several\ncompetitions and initiatives to create new encryption\nalgorithms, e.g. AES [11], CRYPTREC [12], eSTREAM\n[13], and NESSIE [14]. But, none of them had explicitly\nstated goals that addressed the problems discussed here.\n\n10. SUMMARY\nThe RCO concept does not seem to be economically viable\nfor Part 121 operations, at least in the short term where\nexisting aircraft would have to be retrofitted for RCO\ncapability. This follows from the observation that: single\nperson AC \xe2\x86\x92 tolerate incapacitation \xe2\x86\x92 assume some\nadversarial AC action(s) \xe2\x80\xa6 and, the very high cost of\nimplementing an RCO system that can safely and securely\nprovide the capability of controlling an aircraft in which some\nactions by an incapacitated crew could be similar to that of\nan adversary.\n\nIt should be noted that some sources believe that RCO/SPO\nmay have some cost benefit. For example, the account of Dr.\nR. Mike Norman\xe2\x80\x99s presentation at NASA\xe2\x80\x99s Single-Pilot\nOperations Technical Interchange Meeting [15] includes:\n\xe2\x80\x9cSPO may have economic benefit, but once again, new costs\nassociated with SPO were not addressed\xe2\x80\x9d. The latter half of\nthis quote indicates that the magnitude of the cost to provide\ncoverage for the safety and security problems identified in\nthis report were not accounted for in this assessment.\nThe inclusion of RCO within future aircraft designs would\ncost less than for retrofit. There are two reasons for this. The\nfirst is that some avionics developments will make it easier to\nadd RCO functionality, just as a byproduct of their creation\nfor other reasons. A good example of this is the replacement\nof individual circuit breakers with an integrated \xe2\x80\x9celectronic\nfuse box\xe2\x80\x9d. This will make it a lot easier for an RCO Ground\nOverride interface to control the equivalent of circuit\nbreakers. The second reason is that future avionics can\nanticipate the possible addition of RCO. However, the degree\nto which creators of avionics would be willing to add \xe2\x80\x9chooks\xe2\x80\x9d\nfor an RCO option is unknown, given that these \xe2\x80\x9chooks\xe2\x80\x9d\nwould add some cost for all same-type aircraft, including\naircraft that don\xe2\x80\x99t use RCO. It is unclear if the reduced cost\nfor RCO in future aircraft would make RCO economically\nviable.\n\nThe cost calculus assumes that the AC to be replaced will be\na First Officer, costing a typical salary of just over $100,000\na year plus benefits. However, 100% of that cost cannot be\neliminated. There must be some GC costs. If there is a 1:1\nreplacement of AC with GC, obviously, there is no labor cost\nsavings. There have been estimates that a GC can handle five\naircraft simultaneously. But, that must be for benign\nconditions and the GC intercepting the aircraft systems at the\nFMS level (possibly, the Autopilot level). If the GC has to\nintercept the aircraft systems at the Flight Control level\n(required for adversarial or incapacitated AC), it is hard to\nimagine that the aircraft:GC ratio can be better than 1:1. This\nsuggests that an RCO system installation on an aircraft must\nhave interception points at the lowest level (for full control)\nand at a higher level (to ease latency constraints, reduce the\nnumber of crew actions that need to be taken, and allow a\n12\n\nREFERENCES\n[1] European Union. http://www.across-fp7.eu\n[Accessed Sept 30, 2016]\n[2] K. Driscoll. http://c3.nasa.gov/dashlink/resources/624\n[Accessed Sept 30, 2016]\n[3] K. Driscoll et al. \xe2\x80\x9cThe Real Byzantine Generals.\xe2\x80\x9d Proc.\nof the 23rd Digital Avionics Systems Conference (DASC).\n2004, pp. 6.D.4-1 - 6.D.4-11\n[4] L. Lamport et al. \xe2\x80\x9cThe Byzantine Generals Problem.\xe2\x80\x9d\nACM Transactions on Programming Languages and\nSystems, Vol.4, No.3, July 1982, pp.382-401.\n[5] D. Learmount.\nhttps://web.archive.org/web/20100715144540/http://www\n.flightglobal.com/blogs/learmount/2010/06/the-lonelyairline-pilot.html [Accessed Sept 30 2016]\n[6] Air Canada Aviation Investigation Report A11F0012\n[7] A. Davis. www.wired.com/2015/01/rode-500-miles-selfdriving-car-saw-future-boring [Accessed Sept 30, 2016]\n[8] Australian Transport Safety Bureau, Aviation Safety\nInvestigations & Reports, AO-2010-089\n[9] K. Schneider. http://www.news.com.au/travel/travelupdates/qantas-jet-could-have-exploded/story-e6frfq801225956388231 [Accessed Sept 30, 2016]\n[10] K. Driscoll. \xe2\x80\x9cBeepBeep: Embedded Real-Time\nEncryption.\xe2\x80\x9d Fast Software Encryption 2002 / Lecture\nNotes in Computer Science, 2002, Vol. 2365 pp164-178\n[11] https://en.wikipedia.org/wiki/AES_process\n[Accessed Oct 30, 2016]\n[12] http://www.cryptrec.go.jp/english\n[Accessed Oct 30, 2016]\n[13] http://www.ecrypt.eu.org/stream\n[Accessed October 30, 2016]\n[14] https://www.cosic.esat.kuleuven.be/nessie\n[Accessed Oct 30, 2016]\n[15] Section 5.6.2 of NASA/CP\xe2\x80\x942013\xe2\x80\x93216513 \xe2\x80\x9cNASA\xe2\x80\x99s\nSingle-Pilot Operations Technical Interchange Meeting:\nProceedings and Findings\xe2\x80\x9d April 2013.\n\n13\n\nBIOGRAPHY\nMs. Denise S. Ponchak is the Deputy\nBranch Chief of the Communications\nArchitectures, Networks and Systems\nBranch at the National Aeronautics\nand Space Administration\xe2\x80\x99s (NASA)\nGlenn Research Center at Lewis Field\nin Cleveland, Ohio. The Branch is\nresponsible for designing advanced\nnetworking concepts, architectures, technologies and\nsystem integration for aeronautics and space applications.\nPrior to becoming a supervisor, Ms. Ponchak was an\nAeronautical Communications Project Manager focusing\non increasing the National Airspace System\xe2\x80\x99s\ntelecommunications capability, and a communications\nresearch engineer supporting future satellite-based\ncommunications. She holds a Bachelor\xe2\x80\x99s of Electrical\nEngineering and a Master\xe2\x80\x99s of Science in Electrical\nEngineering from Cleveland State University in 1983 and\n1988 respectively. Denise is a Foodie who likes to hike, ski\nand travel.\n\nMr. Kevin R. Driscoll is a Fellow in\nHoneywell\'s Research Labs with over\n40 years\xe2\x80\x99 experience in safety and\nsecurity critical systems. He was the\nchief avionics architect for NASA\'s\nOrion CEV and co-architect for the\nBoeing 777 cockpit. He was a\nprincipal designer of the SAE AS4710\nPI-bus and the ARINC 659 SAFEbus, the only two\nbackplane bus standards with significant fault tolerance.\nHe helped design the bus that became the IEEE 1149 JTAG\ntest bus. He led the effort to create the FAA "Handbook\nfor Data Network Evaluation Criteria".\nHe also\ncontributed to the digital architecture of the U.S. National\nAerospace Plane (NASP), Space Defense Initiative (SDI),\nAdvanced Launch System, and Honeywell\'s Vetronics\nprograms and unmanned underwater vehicles. Prior to\njoining Honeywell, he worked in the areas of voice and\ndata cryptography for the U.S. Army Security Agency and\nhas developed cryptography specifically for real-time\nsystems. Mr. Driscoll has 50 patents issued or pending\ncovering safety and security critical real-time systems. He\nis a member of the IEEE/IFIP WG 10.4 on Dependable\nComputing and Fault Tolerance. He was the U of MN\nCSci Distinguished Alumnus for 2011-2012.\n\nMr. Aloke Roy is a Senior\nProgram\nManager\nwith\nHoneywell Advanced Technology\norganization.\nHe\ncurrently\nmanages data communication,\ninformation security and radio\ntechnology\ndevelopment\nprograms supporting Honeywell\nAerospace. Previously, Mr. Roy was Director of Programs\nat Flextronics Corporation managing several major\ntelecommunications OEM accounts. In this role, Mr. Roy\nwas responsible for business development, outsourcing,\nand globalization of hardware design activities supporting\nlarge volume contract electronic manufacturing. His prior\nexperiences include various positions at AT&T Bell\nLaboratories and ARINC Aviation Systems Division. As\nSystems Engineering Director at ARINC, Mr. Roy oversaw\ndevelopment of SATCOM, HF, VDL, ATIS, and PDC\nstandards and services. Currently, Mr. Roy chairs ICAO\nACP Working Group \xe2\x80\x98S\xe2\x80\x99 and RTCA Special Committee\n223, which are developing the Aviation Internet Protocol\nand Aeronautical Mobile Airport Communication System\nrequirements and operational performance standards.\nMr. Roy holds several patents on aeronautical, wireless\nand secure communications.\n\n14\n\n15\n\n'