{"copyright": {"licenseType": "NO", "determinationType": "PUBLIC_USE_PERMITTED", "thirdPartyContentCondition": "NOT_SET"}, "subjectCategories": ["Documentation and Information Science"], "exportControl": {"isExportControl": "NO", "ear": "NO", "itar": "NO"}, "distributionDate": "2019-07-12T00:00:00.0000000+00:00", "title": "Identifying Executable Plans", "stiType": "CONFERENCE_PAPER", "distribution": "PUBLIC", "submittedDate": "2013-08-23T16:56:00.0000000+00:00", "authorAffiliations": [{"sequence": 0, "submissionId": 20060018395, "meta": {"author": {"name": "Bedrax-Weiss, Tania"}, "organization": {"name": "NASA Ames Research Center", "location": "Moffett Field, CA, United States"}}, "id": "091e7a78616345e68b7bf7dae1aece41"}, {"sequence": 1, "submissionId": 20060018395, "meta": {"author": {"name": "Jonsson, Ari K."}, "organization": {"name": "NASA Ames Research Center", "location": "Moffett Field, CA, United States"}}, "id": "af30e652d7a7461095e5a679235ae048"}, {"sequence": 2, "submissionId": 20060018395, "meta": {"author": {"name": "Frank, Jeremy D."}, "organization": {"name": "NASA Ames Research Center", "location": "Moffett Field, CA, United States"}}, "id": "8932f4abd2524bda898a09e866a60571"}, {"sequence": 3, "submissionId": 20060018395, "meta": {"author": {"name": "McGann, Conor"}, "organization": {"name": "NASA Ames Research Center", "location": "Moffett Field, CA, United States"}}, "id": "f91334ed9fc14ba3b1a866404eaa8a05"}], "stiTypeDetails": "Conference Paper", "technicalReviewType": "TECHNICAL_REVIEW_TYPE_NONE", "modified": "2013-04-09T00:00:00.0000000+00:00", "id": 20060018395, "created": "2013-08-23T16:56:00.0000000+00:00", "center": {"code": "ARC", "name": "Ames Research Center", "id": "4540cd94d24c4bf29f8773a27faf96b2"}, "onlyAbstract": false, "sensitiveInformation": 2, "abstract": "Generating plans for execution imposes a different set of requirements on the planning process than those imposed by planning alone. In highly unpredictable execution environments, a fully-grounded plan may become inconsistent frequently when the world fails to behave as expected. Intelligent execution permits making decisions when the most up-to-date information is available, ensuring fewer failures. Planning should acknowledge the capabilities of the execution system, both to ensure robust execution in the face of uncertainty, which also relieves the planner of the burden of making premature commitments. We present Plan Identification Functions (PIFs), which formalize what it means for a plan to be executable, md are used in conjunction with a complete model of system behavior to halt the planning process when an executable plan is found. We describe the implementation of plan identification functions for a temporal, constraint-based planner. This particular implementation allows the description of many different plan identification functions. characteristics crf the ~xec~~tieonfvii r~nm-enft,h e best plan to hand to the execution system will contain more or less commitment and information.", "isLessonsLearned": false, "disseminated": "DOCUMENT_AND_METADATA", "meetings": [{"country": "Italy", "submissionId": 20060018395, "name": "Plan Execution Workshop - 13th International Conferece on Automated Planning and Scehduling", "location": "Trento", "id": "ee2117abe2974a2b9b6d0f9ce7aa9923", "startDate": "2003-06-01T00:00:00.0000000+00:00"}], "publications": [{"submissionId": 20060018395, "id": "f75153f04dd54105a5fd901d35f1ecfc", "publicationDate": "2003-01-01T00:00:00.0000000+00:00"}], "status": "CURATED", "related": [], "downloads": [{"draft": false, "mimetype": "application/pdf", "name": "20060018395.pdf", "type": "STI", "links": {"original": "/api/citations/20060018395/downloads/20060018395.pdf", "pdf": "/api/citations/20060018395/downloads/20060018395.pdf", "fulltext": "/api/citations/20060018395/downloads/20060018395.txt"}}], "downloadsAvailable": true, "index": "submissions-2022-09-30-06-07"}