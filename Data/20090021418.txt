b'EFTS Command Controller\n\nFrom Concept to Operational System\nDennis Arce\nBourne Technologies, Inc.\n\nScope of Brief\n\xe2\x80\xa2\xe2\x80\xaf Provide a short EFTS CC Introduction\n\xe2\x80\xa2\xe2\x80\xaf Describe the evolution of the CC and\nits functions\n\xe2\x80\x93\xe2\x80\xaf Phase 1: Prototype Capability\n\xe2\x80\x93\xe2\x80\xaf Phase 2: NASA Dryden Initial Operating\nCapability (IOC)\n\nBourne Technologies, Inc\n\n2\n\nDevelopment TimeLine\n2005\n\n2006\nConcept\nDefined\n\n2007\n\nEncoder\nTesting\nCapability\n\n2008\n\nCTEIP\nDemonstratio\nn\n\nEFTS CC Prototype\n\n2009\nDryden Initial Operating\nCapability\n\nEFTS CC SVDI\nSVDI= SINGLE VEHICLE DISCRETE\nINPUT\n\n3\n\nBourne Technologies, Inc\n\nCurrent System Status\n\xe2\x80\xa2\xe2\x80\xaf NASA Dryden: EFTS CC SVDI\xe2\x80\x99s design has been\nvalidated against its requirements.\n\xe2\x80\xa2\xe2\x80\xaf EFTS CC SVDI has been integrated into the NASA\nDryden infrastructure and has passed functional testing.\n\xe2\x80\xa2\xe2\x80\xaf EFTS System Wide Testing is being conducted at NASA\nDryden in preparation for an EFTS Initial Operating\nCapability (IOC).\n\xe2\x80\x93\xe2\x80\xaf Testing Plan has been approved in concept\n\xe2\x80\x93\xe2\x80\xaf Pre-flight operations cards are being refined to include EFTS Mission\ntypes\n\xe2\x80\x93\xe2\x80\xaf EFTS System Testing Procedures have been developed and are being\nironed out as part of a larger effort to include the EFTS system as a are\nbeing worked out.\n\nEFTS Transmit System Block\nDiagram\nVehicle System\nTransmit System\n\nANT\nMonitor\nTriple Data\nEncryption\nStandard Unit\n\nEncoder\nCommand\nController\n\nRSO\nCommand\nPanel\n\nModulator/\nExciter\n(Legacy)\n\nHigh -Power\nAmplifier\n(Legacy)\n\nModulator/\nExciter\n(Legacy)\n\nHigh -Power\nAmplifier\n(Legacy)\n\nEncoder\nCommand\nController\n\n5 Dec 2006\n\nTriple Data\nEncryption\nStandard Unit\n\nANT\n\nTriple Data\nEncryption\nStandard Unit\n\n5\n\nSimplified EFTS Transmit Logical\nFlow\nHuman\nAction\nAntenna\nBuild 64 Bit\nUnencrypted EFTS\nMessage\nBased on Human\nAction\nEvery 20 ms\n\nEncrypt the\nMessage with\na Triple DES\nKey\n\nEncapsulate\nwith Forward\nError\nCorrection and\nFrame Sync\n\nEvery 20 ms\n\nEvery 20 ms\n\nConvert Bits to\nBi-Phase L\n\nLevel\nAdjustment\n\nFM\nModulation\n\nAmplify\n\n7200 bps\n\nCommand\nEncoder and TDU\nController\nLocal Error Detection Using L3 CE defined Protocol (CRC-32)\n\nBourne Technologies, Inc\n\nExisting RF Exciter and HPA\n\n6\n\nEFTS Time Division Multiplexing\nEFTS Frame\n\nEFTS Frame\n\nEFTS Frame\n\nEFTS Frame\n\n20 ms\n\xe2\x80\xa2\xe2\x80\xaf\n\nEFTS Frame\n\n20 ms\n\n20 ms\n\n20 ms\n\n20 ms\n\nTime Division Multiplexing\n\xe2\x80\x93\xe2\x80\xaf One Transmitter continuously transmits to all vehicles on one frequency\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\nRF is continuously keyed.\nPackets are continuously sent to keep FTR link synchronized.\nIf no command needs to be sent, a benign command (No Op) is sent.\n\n\xe2\x80\x93\xe2\x80\xaf Each Frame is a complete message that is authenticated at the receiver.\n\xe2\x80\x93\xe2\x80\xaf Frames are Continuously sent\n\xe2\x80\xa2\xe2\x80\xaf\n\nKeeps Receiver Synchronized to the Ground\n\n\xe2\x80\x93\xe2\x80\xaf Each Packet:\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\nAddress a single vehicle for Commands (E.g. Arm)\nAll Vehicles for Link Integrity (Check)\n\n\xe2\x80\x93\xe2\x80\xaf No Provision for Multiple Simultaneous Transmitters at same Frequency\n\xe2\x80\xa2\xe2\x80\xaf\n\nMake before Break or Break before Make must occur when geography mandates it.\n\nBourne Technologies, Inc\n\n7\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nL3 EFTS\nEncoder\nDeveloped by EFTS L3 CE as\n\nan operational product.\n\xe2\x80\xa2\xe2\x80\xaf Accepted and Qualified for\nGeneral Use\n\xe2\x80\xa2\xe2\x80\xaf CSI Port for Configuration\nSoftware\n\nL3 EFTS TDU\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n5 Dec 2006\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nTDU= Triple DES Unit\nDES= Data Encryption Standard per\nFIPS PUB 81\nDeveloped by EFTS L3 CE as an\noperational product for use with NSA\nGenerated Key\nControlled Cryptographic Device\n(CCI)\nAccepted and Qualified for General\nUse\n50 Keys Each\nCSI Port Configuration Software\nthrough Encoder Interface\n8\nDownload Keys using DS-102, DTD\n\nDevelopment Phase 1\nCTEIP Prototype\n\nReason for Prototype\n\xe2\x80\xa2\xe2\x80\xaf EFTS Program Developed several items for the EFTS\nsystem. The ground system interface for these device is\nthe L3 CE EFTS Encoder/TDU combination.\n\xe2\x80\x93\xe2\x80\xaf Ranges decided to keep the development of the user interface\nportion for themselves to develop\n\xe2\x80\xa2\xe2\x80\xaf Each Range has a different way of doing business\n\xe2\x80\x93\xe2\x80\xaf Test Ranges Typically test one vehicle at a time\n\xe2\x80\x93\xe2\x80\xaf Training Ranges may test multiple vehicles, or one at a time\n\xe2\x80\x93\xe2\x80\xaf Launch Ranges focus on single vehicle with wide area applications\n\n\xe2\x80\x93\xe2\x80\xaf EFTS Program needed to develop a device that would test the\nL3 CE Encoder prior to accepting it.\n\xe2\x80\xa2\xe2\x80\xaf Development needed to be concurrent with Encoder so that interface\napproach could be independently verified. Development was based on an\nICD.\n\n\xe2\x80\x93\xe2\x80\xaf EFTS Program needed to develop a device that could be\nintegrated into various ranges for a CTEIP demonstration\n\xe2\x80\xa2\xe2\x80\xaf Selection of the demonstration test range (Eglin/Tyndall) did not come until\nafter requirements had been defined and development was under way.\n\xe2\x80\xa2\xe2\x80\xaf Design needed to be flexible.\nBourne Technologies, Inc\n\n10\n\nEFTS CC Interconnections\nTo Existing\ntone\nGenerator\n\nEFTS Command\nController\n\n\xe2\x80\x9cY\xe2\x80\x9d Cable\n\nRange\nTone\nController\n(2.1.2)\n\nRS-232\n\nRange\nCommand\n\nEFTS\nEncoder\n\nL3 CE\nEFTS\nEncoder\nRS-232\n\nC&S\n\n5 Dec 2006\n\nEncoder Simulator\nSoftware\n\nCC CSI\nSoftware\n\nWindows XP\nComputer\n\nDiscrete Test Jig\n\nEncoder\nSimulator\n\n11\n\nFunctional Allocation\n\xe2\x80\xa2\xe2\x80\xaf\n\nCommand Controller-\n\n\xe2\x80\x93\xe2\x80\xaf Brief Description: Develops the 64-bit unencrypted EFTS message based on discrete\ninputs and hands message off to command controller every 20 ms using serial\ninterface.\n\xe2\x80\x93\xe2\x80\xaf RS-232 Control and Status Interface (CSI)\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nAllows Configuration of Mission Parameters (Range ID, Qty of Encoders and TXIDs, Qty of Vehicles\nand VIDs, Encoder Baud Rates)\nCommand Interface to Range Matrices (Which Tones equate to which commands).\nProvides Error and Status Reporting (Encoder Link Errors, CC Errors)\nAccessed through Windows GUI for Demo\nEncoder Interface defintion\n\n\xe2\x80\x93\xe2\x80\xaf Interfaces with the Range I/O- Twenty Discrete Inputs\n\xe2\x80\x93\xe2\x80\xaf Interfaces with Encoder- RS-232 using Encoder Req/Send protocol\n\xe2\x80\x93\xe2\x80\xaf Develops 64-bit EFTS Message based in real-time based on rules.\n\nEncoder/TDU\n\n\xe2\x80\x93\xe2\x80\xaf Brief Description: Encrypts 64 bit message using internal TDU, and develops full 144\nbit message. Can hand off message to remote encoder or output on local BB output.\n\xe2\x80\x93\xe2\x80\xaf RS-232 CSI\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\nAllows Architecture Configuration (Central vs. Remote Encoders, Baud Rates, Where TDU is\ncontained)\nError and Status Reporting\nAccessed through Windows GUI for Demo\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nProvides Encryption at CE or any Remote based on Architecture\n\n\xe2\x80\x93\xe2\x80\xaf Contains and Communicates with TDU\n\n\xe2\x80\x93\xe2\x80\xaf Message Router: provides single interface to Command Controller to drive up to 5 local or\nEncoders.\n\xe2\x80\x93\xe2\x80\xaf Interfaces with Command Controller using RS-232 Req/Send protocol\n\xe2\x80\x93\xe2\x80\xaf Baseband Output provides level adjustment and filtering to drive FM Modulators.\n5 Dec 2006\n\n12\n\nSelection of a platform\n\xe2\x80\xa2\xe2\x80\xaf Technical Need: Encoder Simulator and command\nController\n\xe2\x80\xa2\xe2\x80\xaf Initially developed windows based software\n\xe2\x80\x93\xe2\x80\xaf Few weeks of development indicated that it was not\npractical.\n\xe2\x80\x93\xe2\x80\xaf 1-2 ms timing was a problem (for me) on XP\n\xe2\x80\x93\xe2\x80\xaf If a problem with Windows occurred, could it be\nfound?\n\xe2\x80\x93\xe2\x80\xaf Blue screen of death!\n\n\xe2\x80\xa2\xe2\x80\xaf Decided on dual approach\n\xe2\x80\x93\xe2\x80\xaf Embedded Device for Command Link\n\xe2\x80\x93\xe2\x80\xaf Windows based software for status and\nBourne Technologies, Inc\nconfiguration.\n\n13\n\nEFTS Command Controller\nPrototype\n\nFront View\n\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\n5 Dec 2006\n\nRear View\n\nDeveloped by Bourne Technologies, Inc.\n2 Units in 1 RU Chassis\n115 VAC Input- Wall Unit\nCSI Port for Configuration Software\n\n14\n\nCommand Controller Approach\nDiscrete\n115 On/Off\nEncoder Control\nVAC Breaker C&S\nA\nA\n\nDiscrete\nOn/Off\nControl Encoder\nC&S Breaker 115 VAC\nB\nB\n\nPower\nSupply #1\n\nPower Supply\n#2\n\nI/F\nBoard\n\nMicro-Controller\nCard #1\n\nPower\nLED\n\n115 VAC\nFan\n\nI/F\nBoard\n\nMicro-Controller\nCard #2\n\n115 VAC\nFan\n\nPower\nLED\n\nFront\nPanel\n\nMicro Controller Card\n\xe2\x80\xa2\xe2\x80\xaf Use COTS Card\n\xe2\x80\x93\xe2\x80\xaf Atmel AT91SAM7S64-IAR.\n\xe2\x80\x93\xe2\x80\xaf Based on the Atmel AT91SAM7S64 microcontroller\n\xe2\x80\x93\xe2\x80\xaf Kit comes with a USB flash programmer\n\xe2\x80\x93\xe2\x80\xaf Kit comes with an evaluation version of a\ndevelopment system for this microcontroller\n\xe2\x80\xa2\xe2\x80\xaf IAR Embedded Workbench, no royalties.\n\xe2\x80\xa2\xe2\x80\xaf Evaluation of alternative development system was also\nbriefly conducted (Keil uVision3)\n\xe2\x80\xa2\xe2\x80\xaf others\xe2\x80\xa6\n\nEFTS Command Controller\nGUI\n\n5 Dec 2006\n\n17\n\nResults of Prototype\nDevelopment\n\xe2\x80\xa2\xe2\x80\xaf Unit was developed on Schedule and worked as\ndesigned\n\xe2\x80\xa2\xe2\x80\xaf Tested various configurations including\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nSingle Vehicle Test\n2 vehicles test\nMultiple-Sequenced Vehicle Test (1 at a time)\nCommand Priority Test\nArm/Terminate sequencing, failover, etc.\nVarious Captive Carry and 1 Live Fire Test\n\n\xe2\x80\xa2\xe2\x80\xaf Complete Success in support of Encoder Development\nand CTEIP-AMRAAM Demo\n\nPhase II- NASA Dryden IOC\n\nIOC= Initial Operating Capability\nEFTS= Enhance Flight Termination System\nCC= Command Controller\nSVDI= Single Vehicle Discrete Input\n\nBourne Technologies, Inc\n\n19\n\nPrimary Purpose of CC SVDI\nCommand Activation\n\nCommand Translation\n\nCommand Encryption and Formatting\n\nTo FM\nExciter, HPA\nand Antenna\n\nRSO @ BWB Panel\n\nEFTS CC SVDI\n(2 Per Chassis)\n\nL3-CE Encoder with TDU\n\n\xe2\x80\xa2\xe2\x80\xaf The CC SVDI is primarily a Command Translator\xe2\x80\x93\xe2\x80\xaf Translates RSO\xe2\x80\x99s Button Presses to EFTS Message for\nFlight Termination\n\xe2\x80\x93\xe2\x80\xaf Interfaces with RSO Panel and L3-CE Encoder\n\xe2\x80\xa2\xe2\x80\xaf RSO Interface: Command Input are dry relay contacts that\nprovide +5V when button is being pressed\n\xe2\x80\xa2\xe2\x80\xaf L3-CE Encoder interface is 3 Wire RS-232Serial 115.2kbps\n8N1. Protocol defined by L3 CE. \xe2\x80\x9cSee L3-CE Encoder IDC,\nRev J, dated 31 March 2006\xe2\x80\x9d\nBourne Technologies, Inc\n\n20\n\nSimplified Dryden Transmit\nArchitecture\nExisting\nTone\nSystem\n\nRSO Panel\nOR\n\n4 Buttons\nand 4\nindicators:\nCheck\nDearm\nArm\nTerminate\n\nComm\nSystem\nAnd\nRelays\n\nOR\nEFTS\nComman\nd\nController\n\nEFTS\nEncoder\nand TDU\n\nOnly One Site\nTransmits at a\nTime\n\nExisting\nTone\nSystem\nOR\n\nOR\nEFTS\nComman\nd\nController\n\nEFTS\nEncoder\nand TDU\n\nBourne Technologies, Inc\n\nTo\nExciter,\nHPA and\nAntennal\nSystem A\n\nTo\nExciter,\nHPA and\nAntennal\nSystem B\n\n2 Flight\nTermination\nReceivers on\nVehicle\n\n21\n\nHow Each CC SVDI Sees the\nWorld\nErrors and BIT\nL3CE\nEFTS\nEncode\nr\n\nTo FTRs\n(Somehow\n)\n\nAny\nWindows\nDrive\n\nUHF\nTransmitte\nr\n\nWindows\nCSI\nExe\n\nBourne Technologies, Inc.\nEFTS CC SVDI\n\nEFTS Message\nRequest\n\nDiscrete\nInterface\ns\n\nResponses\nCarrier\nOn/Off\n\nSerial\nInterface\n\nSignal Pass\nThrough\n\nStatus\n\nConfiguration\nReque\nst\nRespons\ne\nAuto\nStatus\n\nLocal\nControl\nPanel\n\nStatus\nDiscrete\nInterface\ns\n\nButton\nPress\nes\n\nRSO\nPanel\n\nRange\nSafety\nUser\n\nSerial\nInterface\nDisplay and Discrete\nInterfaces\nStatus\n\nCSI User\n\nLocal/\nRemot\ne\nControl\n\nControl\nFront\nPanel\nUser\n\nBourne Technologies, Inc\n\n22\n\nEFTS CC SVDI Internal Design\nDISPLAY-A\n+5V LED (OFF/GRN)\n+3.3V LED (OFF/GRN)\nSTATUS OK(OFF/GRN/RED)\nENC LINK(OFF/GRN/RED)\nENC OK(OFF/GRN/RED)\nINPUT CHECK(OFF/GRN/RED)\nOUTPUT CHECK (OFF/GRN)\nINPUT DEARM(OFF/GRN/RED)\nOUTPUT DEARM (OFF/GRN)\nINPUT ARM(OFF/GRN/RED)\nOUTPUT ARM (OFF/GRN)\nINPUT TERM(OFF/GRN/RED)\nOUTPUT TERM (OFF/GRN)\nCNTR RST SW (YLW SQ COV)\nAUDIO OFF (BLUE SQ)\nLAMPCHECK (WHITE SQ)\nCONFIG LOCKOUT SW (GFE KEYLOCK)\nBUZZER(2.7kHz at 70 dB)\nDISPLAY-B\n+5V LED-B (OFF/GRN)\n+3.3V LED-B (OFF/GRN)\nSTATUS OK-B (OFF/GRN/RED)\nENC LINK-B (OFF/GRN/RED)\nENC OK-B (OFF/GRN/RED)\nINPUT CHECK-B (OFF/GRN/RED)\nOUTPUT CHECK-B (OFF/GRN)\nINPUT DEARM-B (OFF/GRN/RED)\nOUTPUT DEARM-B (OFF/GRN)\nINPUT ARM-B (OFF/GRN/RED)\nOUTPUT ARM-B (OFF/GRN)\nINPUT TERM-B (OFF/GRN/RED)\nOUTPUT TERM-B (OFF/GRN)\n\nCA3\nCA8\n\nJ12\n\n5V IN J6\nCA12\n\nJ3\n\nJ\n1\n\nDBGU J24\nSER0 J25\n\nJ19 5V Input- A (2.1mm)\n\nCA6\n\nPower Switch-A\nCircuit Breaker-A\n\nCA7\n\nCA9\n\nJ6 CSI-A (DB9F)\nJ5 ENCODER- A (DB9M)\n\nJ11\nCA10\n\nJ13\n\nCA5\n\nLCL CTRL J8\nTX CXX J4\nRANGE IN 2 J2\nISO\nRANGE IN 1 J7\n\nCA4\nCA2\n\nCA10\nCA3\n\nJ12\n\nJ2 RANGE INPUT 2 (DB37F)\n\nCA1\n\nJ7 ISO GND CXX (BANANA)\nJ1 RANGE INPUT 1 (DB37F)\n\nRANGE IN 1 J7\nRANGE IN 2 J2\nLCL CTRL J8\n\nCA8\n\nJ3 RANGE CXX (DB37M)\nCA6\n\nJ\n1\n\nJ3\n\nJ9 TX CXX (DB15F)\n\nCA11\n\nBOARD CXX J9\n\nJ13\n\nJ8 LOCAL CTRL (DB15M)\n\nDBGU J24\nSER0 J25\n\nJ16 CSI-B (DB9F)\nJ15 ENCODER-B (DB9M)\n\nCA7\n\nJ19 5V Input- B (2.1mm)\nPower Switch-B\n\nCA12\n\nCA9\n\n5V IN J6\n\nJ11\n\n23\n\nCircuit Breaker-B\n\nConfiguration and Status\nSoftware\n\nDevelopment Challenges\n\xe2\x80\xa2\xe2\x80\xaf\n\nRequirements Definition\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nTeam was familiar with both EFTS and IRIG\nAgreement on User Interface and Range Interface\nDocumented in an FPRD that was reviewed at SDR/PDR and finalized at CDR\n\nTechnical\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nNot too many Technical Risks- Low Tech, High Reliability Approach\nAtmel/ARM Processor Learning Curve- Simplified by Examples\nSimple Opto-isolator interface to RSO Panel\nSimple Serial Interfaces (RS-232 to Encoder and RS-232 to Control/Status Interface)\nUses \xe2\x80\x9cC\xe2\x80\x9d the premier language of embedded system\n\xe2\x80\xa2\xe2\x80\xaf\n\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nSubset to meet MISRA-C requirements for safety critical systems\n\nAll Static Memory Allocation- No dynamic memory allocated during operations\nSmall ARM based microcontroller at 18.432MHz can meet timing requirements.\nNo operating system means that programmer is in control!\n~5K Lines of embedded code (All independently reviewed)\n\nVerification and Validation\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nHurdle of Validating EFTS CC SDVI has been passed\nHurdle of EFTS on Range is current step\nAided by :\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nUse of No Operating System, Use of MISRA \xe2\x80\x9cC\xe2\x80\x9d\nGetting Agreement on what level of validation is necessary\n\nDocument! Document! Document!\nTest! Test! Test!\n\nReviews and Documents\n\xe2\x80\xa2\xe2\x80\xaf External Reviews:\n\xe2\x80\x93\xe2\x80\xaf SDR/PDR:\nRequirements and initial\ndesign\n\xe2\x80\x93\xe2\x80\xaf CDR: Prototype was\nready for production\n\xe2\x80\x93\xe2\x80\xaf Code Walkthrough\n\n\xe2\x80\xa2\xe2\x80\xaf Internal Reviews:\n\xe2\x80\x93\xe2\x80\xaf NASA set up a Review\nboard to independently\nvalidate that the\ndocumentation and\ntesting has been\nproperly conducted.\n\n\xe2\x80\xa2\xe2\x80\xaf Documents:\n\n\xe2\x80\x93\xe2\x80\xaf Requirements for System\n\xe2\x80\x93\xe2\x80\xaf Functional and Performance\nRequirements Document (FPRD)\nfor all EFTS components of\nsystem\n\xe2\x80\x93\xe2\x80\xaf Software Requirements\nSpecification (SRS) for CC\n\xe2\x80\x93\xe2\x80\xaf Analysis of Alternatives (AoA) for\nSystem\n\xe2\x80\x93\xe2\x80\xaf Design Review Packages for all\nEFTS equipment\n\xe2\x80\x93\xe2\x80\xaf Training Guide for EFTS\nequipment\n\xe2\x80\x93\xe2\x80\xaf Software Design Document\n(SWDD) for CC\n\xe2\x80\x93\xe2\x80\xaf Software Hazard Analysis for CC\n\xe2\x80\x93\xe2\x80\xaf User\xe2\x80\x99s Guide for CC\n\xe2\x80\x93\xe2\x80\xaf System Verification Plan\n\xe2\x80\x93\xe2\x80\xaf System Verification Report\n\xe2\x80\x93\xe2\x80\xaf Reliability Analysis for System and\nCC\n\xe2\x80\x93\xe2\x80\xaf COMSEC Briefing (CSOP-13,\ndated 14 Feb 2007)\n\xe2\x80\x93\xe2\x80\xaf Acceptance test reports, user\xe2\x80\x99s\nguides for EFTS hardware\n\xe2\x80\x93\xe2\x80\xaf EFTS ConOps\n\nDevelopment Support Items\n\nRange I/F Test Jig for Eglin/\nTyndall\n\n5 Dec 2006\n\n28\n\nEncoder Simulator\n\xe2\x80\xa2\xe2\x80\xaf Simulates Electrical\nRS-232 CC interface of 2\nL3 CE Encoders.\n\xe2\x80\x93\xe2\x80\xaf\n\nEncoder Simulator\nBased on\nL3 CE Encoder\nInterface Control\nDocument (ICD)\n\nTiming is same\n\n\xe2\x80\xa2\xe2\x80\xaf Can Generator Errors that\nReal Encoder cannot\ngenerate without failure\n\xe2\x80\xa2\xe2\x80\xaf Used COTS Arm Card\nfrom Same Family as the\nCommand Controller\n\xe2\x80\x93\xe2\x80\xaf\n\nATMEL ARM PROCESSOR\n\nRange Interface Test Box\n\nBackup Slides\n\nWhat is ARM?\n\xe2\x80\xa2\xe2\x80\xaf ARM is a Reduced Instruction Set Computing (RISC) processor that is\nthe becoming one of the more popular processors in the world.\n\n\xe2\x80\x93\xe2\x80\xaf The RISC architecture is widely used in embedded systems because of it\xe2\x80\x99s\nsimplicity, predictability, and very low cost.\n\xe2\x80\x93\xe2\x80\xaf Smaller instructions often have data and logic embedded in them.\n\n\xe2\x80\xa2\xe2\x80\xaf The ARM company holds the rights to it\xe2\x80\x99s implementation, and sells\nintellectual property to chip manufacturers such as:\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nIntel\nAtmel\nTexas Instruments\nRF MicroDevices\n\n\xe2\x80\xa2\xe2\x80\xaf ARM processors are very inexpensive compared to general purpose\nprocessors like the Intel x86\n\xe2\x80\xa2\xe2\x80\xaf ARM processors are used in the iPod from Apple, and the Gameboy\nAdvance from Nintendo, and the soon to be released Google Android\nNetbook.\n\xe2\x80\xa2\xe2\x80\xaf Use of 32 bit processor over a 8 or 16 bit processor streamlined some\ncalculations, including the 32-bit CRC that is calculated each 20 ms\n\xe2\x80\xa2\xe2\x80\xaf Many processors, including ARM, have no built in support for division\n\xe2\x80\x93\xe2\x80\xaf \xe2\x80\x9cC\xe2\x80\x9d software libraries are available for integer division\n\xe2\x80\x93\xe2\x80\xaf There is no division used in the application\n\nMicroController\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\nAT91SAM7S64\nArm7TDMI Processor\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\nBuilt in Flash\nBuilt in SRAM\n2 USARTS for RS-232\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nLimits processor interrupt cycles required for\ntransfers between Memory and I/O\n\nI2C (or Two Wire Interface) for EEPROM\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nFor OptoIsolated Control Input\n\n11 Channel Peripheral DMA Controller with\nMemory Controller\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nCommand Controller\nConfiguration Port\n\nUp to 32 Digital I/Os for Discrete Inputs\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nBuilt in ICE\nThumb Mode\n55 MHz\n\nFor Command Counter Values\n\nFuture\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nUSB Device [alternate interface]\nA/D Converters [Instrumentation]\nAtmel family has more similar devices based on\nthe ARM family and similar peripheral controls.\n\nSystem Interconnect Diagram\nQuad-Mode\nRequires 4\n5V Signals\n\nBWB\nPanel\n\nCommand Controller Chassis\nPWR\nJ7/\nJ17\n\nCommand Controller Chassis\n\nJ8 LCL CTRL\n\nJ8 LCL CTRL\n\nJ1 Range I/O 1\n\nJ1 Range I/O 1\n\nJ7 ISO GND\nSide A\nProvides\n+5V A on J1\n\nJ7 ISO GND\n\nJ2 Range I/O 2\n\nCSI\nJ6/\nJ16\nWindows\nComputer\n\nEnc\nJ5/\nJ15\n\nJ3 Range Out\n\nJ4 TX Out\n\nL3 CE\nL3 CE\nEncoder\nEncoder\n\nSide A\nProvides\n+5V A on J1\n\nJ2 Range I/O 2\n\nJ3 Range Out\nSide B\nProvides\n+5V B on J1\n\nPWR\nJ7/\nJ17\n\nJ4 TX Out\n\nTo UHF\nTransmitter\nsCarrier\nKey\n\nBourne Technologies, Inc\n\nL3 CE\nL3 CE\nEncoder\nEncoder\n\nEnc\nJ5/\nJ15\n\n5V 2A Wall\nTransformer\n\n5V 2A Wall\nTransformer\n\nLocal\nControl\nPanel\n\nE&M Signal\nDistribution\n\nComm\nSystem\n\nCSI\nJ6/\nJ16\n\nSide B\nProvides\n+5V B on J1\n\nWindows\nComputer\n\n34\n\nInterface Board Layout\n\nDevelopment Tools\n\xe2\x80\xa2\xe2\x80\xaf\n\nEmbedded Software\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nLanguages MISRA C and ASSEMBLY for ARM\nEmbedded Software- IAR EMBEDDED WORKBENCH for ARM\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\xe2\x80\xa2\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nMS Visual Studio 2008 for CSI\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nSubversion (SVN) Server on Windows XP (Raid 5 System)\nTortoise SVN for Client\n\nDocuments:\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nFront Panel Express\n\nSource and Document Control\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nExpress PCB Schematic\nExpress PCB Layout\n\nChassis Panels\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nC# and .NET 3.5SP1\nSome Win API Calls for RS-232 Serial Port\n\nPCB Design\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\n\xe2\x80\xa2\xe2\x80\xaf\n\nC Compiler\nAssembler\nLinker\n\nMS Word for Development and Production Documents\nMS Powerpoint for Presentations\nMS Excel for Parts Lists and Bill of Material\nAny can be provided in \xe2\x80\x9c.pdf\xe2\x80\x9d form for deliverable\n\nHardware Debugging\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nLogic Analyzer (HP 1672D)\nOscilloscope (Instek GOS-620)\nOthers (multimeter, adjustable power supply\xe2\x80\xa6)\n\n36\n\nEmbedded Software\ndevelopment\n\n\xe2\x80\xa2\xe2\x80\xaf Software is written in \xe2\x80\x9cC\xe2\x80\x9d and \xe2\x80\x9cAssembly\xe2\x80\x9d\n\xe2\x80\xa2\xe2\x80\xaf Tool->IAR Embedded Workbench\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\xe2\x80\x93\xe2\x80\xaf\n\nMulti-File Editor and Source Object Browser\nProject Builder and Linker\nARM \xe2\x80\x9cC\xe2\x80\x9d Compiler\nARM Assembler\nIntegrated JLink USB/JTAG debugger allows in circuit emulation to\ndebug the processor.\n\xe2\x80\x93\xe2\x80\xaf Integrated Help\n\xe2\x80\x93\xe2\x80\xaf Optional MISRA \xe2\x80\x9cC\xe2\x80\x9d Compiler was used for CC SVDI\n\n\xe2\x80\xa2\xe2\x80\xaf Documentation\n\xe2\x80\x93\xe2\x80\xaf Atmel has extensive documentation on the product\n\xe2\x80\x93\xe2\x80\xaf ARM Processor is very well documented\n\xe2\x80\x93\xe2\x80\xaf IAR Support is excellent\n\nSummary of Embedded Software\nFootprint\nLatest Build Results:\n\xe2\x80\xa2\xe2\x80\xaf 23 460 bytes of readonly code memory (Onboard Code)\n\xe2\x80\xa2\xe2\x80\xaf\n128 bytes of readwrite code memory (Onboard Code for CRC\nstorage at factory only)\n\xe2\x80\xa2\xe2\x80\xaf\n1 482 bytes of readonly data memory (Onboard Data Constants)\n\xe2\x80\xa2\xe2\x80\xaf\n25 531 bytes of readwrite data memory (Onboard Data)\nEstimated Code Size:\n~ 5000 Lines of Code in .c files + header definitions.\n\n38\n\n'