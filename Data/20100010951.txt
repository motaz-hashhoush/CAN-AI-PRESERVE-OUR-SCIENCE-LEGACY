b'Displaying Properties of PDFs\nAmes Research Center, Moffett Field, California\nPDFVis is a computer program that assists in visualization of uncertainty as\nrepresented by a probability density\nfunction (PDF) located at each grid cell\nin a spatial domain. PDFVis performs\nthe following functions:\n\xe2\x80\xa2 Creates maps of first-, second-, and thirdorder statistics of the PDFs, displaying\nthe maps simultaneously in one image;\n\xe2\x80\xa2 Provides an interactive probe that displays various forms of density estimates\n(e.g., histogram or kernel density estimator) of the PDF at a grid cell or\n\nlarger region selected by the user;\n\xe2\x80\xa2 For grid cells in a row or column selected by the user, it displays surfaces\nof the PDFs as shaded walls and as\ncolor-mapped wall according to a\nscalar variable selectable by the user;\n\xe2\x80\xa2 Displays the modality (basically, the\nnumber of peaks) and the locality of\nthe peaks of the PDF in each grid cell;\n\xe2\x80\xa2 Provides a capability for querying the\nmodalities of the PDFs on the basis of\nranges and other criteria specified by\nthe user; and\n\n\xe2\x80\xa2 Facilitates interactivity by providing\nsimple user command keys.\nThis program was written by David Kao\nand Jennifer Dungan of Ames Research Center and David Kao of The Regents of the\nUniversity of California Santa Cruz. Further information is contained in a TSP (see\npage 1).\nInquiries concerning rights for the commercial use of this invention should be addressed to the Ames Technology Partnerships Division at (650) 604-2954. Refer to\nARC-15039-1\n\nModular Filter and Source-Management Upgrade of RADAC\nGoddard Space Flight Center, Greenbelt, Maryland\nIn an upgrade of the Range Data Acquisition Computer (RADAC) software, a\nmodular software object library was developed to implement required functionality for filtering of flight-vehicle-tracking\ndata and management of tracking-data\nsources. (The RADAC software is used to\nprocess flight-vehicle metric data for realtime display in the Wallops Flight Facility\nRange Control Center and Mobile Control Center. This software is part of the\nRange Control/Range Safety System\nused to contain impacts of debris from\n\nflight-vehicle operations.) The library includes implementations of tracking-dataediting and -filtering techniques that can\nbe readily found in the literature and was\nconstructed to facilitate future incorporation of implementations of other, moreexotic filtering techniques. A pragmatic\ntechnique is used to maintain statistics on\ndifferences between measurements and\nestimates of positions in order to compute a figure of merit for each radar,\nGlobal-Positioning-System, or inertialnavigation-system source of tracking data.\n\nAn automatic source-qualification technique is implemented to enable optional\nreplacement of a pre-existing manual\ndata-qualification function. The library\nwas written in the C++ language and was\ndesigned to be hosted within an application program running on virtually any\ncomputing platform.\nThis program was written by R. James\nLanzi and Donna C. Smith of Goddard Space\nFlight Center. Further information is contained in a TSP (see page 1).\nGSC-14974-1\n\nAutomatic Command Sequence Generation\nNASA\xe2\x80\x99s Jet Propulsion Laboratory, Pasadena, California\nAutomatic Sequence Generator (Autogen) Version 3.0 software automatically generates command sequences\nfor the Mars Reconnaissance Orbiter\n(MRO) and several other JPL spacecraft operated by the multi-mission\nsupport team. Autogen uses standard\nJPL sequencing tools like APGEN, ASP,\nSEQGEN, and the DOM database to\nautomate the generation of uplink\ncommand products, Spacecraft Command Message Format (SCMF) files,\nand the corresponding ground command products, DSN Keywords Files\n(DKF). Autogen supports all the major\nmulti-mission mission phases including\nthe cruise, aerobraking, mapping/science, and relay mission phases.\nAutogen is a Perl script, which functions within the \xe2\x80\x98mission operations\xe2\x80\x99\n\nNASA Tech Briefs, September 2007\n\nUNIX environment. It consists of two\nparts: a set of model files and the autogen Perl script. Autogen encodes the\nbehaviors of the system into a model\nand encodes algorithms for contextsensitive customizations of the modeled behaviors. The model includes\nknowledge of different mission phases\nand how the resultant command products must differ for these phases. The\nexecutable software portion of Autogen, automates the setup and use of\nAPGEN for constructing a spacecraft\nactivity sequence file (SASF). The\nsetup includes file retrieval through\nthe DOM (Distributed Object Manager), an object database used to store\nproject files. This step retrieves all the\nneeded input files for generating the\ncommand products.\n\nDepending on the mission phase, Autogen also uses the ASP (Automated Sequence Processor) and SEQGEN to generate the command product sent to the\nspacecraft. Autogen also provides the\nmeans for customizing sequences\nthrough the use of configuration files.\nBy automating the majority of the sequencing generation process, Autogen\neliminates many sequence generation\nerrors commonly introduced by manually constructing spacecraft command\nsequences. Through the layering of\ncommands into the sequence by a series\nof scheduling algorithms, users are able\nto rapidly and reliably construct the desired uplink command products.\nWith the aid of Autogen, sequences\nmay be produced in a matter of hours instead of weeks, with a significant reduc-\n\n61\n\ntion in the number of people on the sequence team. As a result, the uplink\nproduct generation process is significantly streamlined and mission risk is significantly reduced. Autogen is used for\noperations of MRO, Mars Global Surveyor (MGS), Mars Exploration Rover\n\n(MER), Mars Odyssey, and will be used\nfor operations of Phoenix. Autogen Version 3.0 is the operational version of Autogen including the MRO adaptation for\nthe cruise mission phase, and was also\nused for development of the aerobraking\nand mapping mission phases for MRO.\n\nThis program was written by Forest Fisher,\nRoy Gladded, and Teerapat Khanampompan\nfor NASA\xe2\x80\x99s Jet Propulsion Laboratory.\nThis software is available for commercial\nlicensing. Please contact Karina Edmonds\nof the California Institute of Technology at\n(626) 395-2322. Refer to NPO-43638.\n\nGenerating Scenarios When Data Are Missing\nNASA\xe2\x80\x99s Jet Propulsion Laboratory, Pasadena, California\nA computer program implements the\nalgorithm described in \xe2\x80\x9cHypothetical\nScenario Generator for Fault-Tolerant Diagnosis\xe2\x80\x9d (NPO-42516), NASA Tech Briefs,\n\nVol. 31, No. 6 (June 2007), page 71. To recapitulate: the Hypothetical Scenario\nGenerator (HSG) is being developed in\nconjunction with other components of\n\nEnd-to-End Prognostic Architecture uses existing diagnostic models to generate predictions.\n\nartificial-intelligence systems for automated diagnosis and prognosis of faults\nin spacecraft, aircraft, and other complex\nengineering systems. The HSG accepts,\nas input, possibly incomplete data on the\ncurrent state of a system (see figure).\nThe HSG models a potential fault scenario as an ordered disjunctive tree of\nconjunctive consequences, wherein the\nordering is based upon the likelihood\nthat a particular conjunctive path will be\ntaken for the given set of inputs. The\ncomputation of likelihood is based partly\non a numerical ranking of the degree of\ncompleteness of data with respect to satisfaction of the antecedent conditions of\nprognostic rules. The results from the\nHSG are then used by a model-based artificial-intelligence subsystem to predict realistic scenarios and states.\nThis program was written by Mark James\nand Ryan Mackey of Caltech for NASA\xe2\x80\x99s Jet\nPropulsion Laboratory. Further information\nis contained in a TSP (see page 1).\nThis software is available for commercial\nlicensing. Please contact Karina Edmonds of\nthe California Institute of Technology at\n(626) 395-2322. Refer to NPO-43097.\n\nCASPER Version 2.0\nNASA\xe2\x80\x99s Jet Propulsion Laboratory, Pasadena, California\nThe Continuous Activity Scheduling\nPlanning Execution and Replanning\n(CASPER) computer program has been\nupdated to version 2.0. A prototype version was reported in \xe2\x80\x9cSoftware for Continuous Replanning During Execution\xe2\x80\x9d\n(NPO-20972), NASA Tech Briefs, Vol. 26,\nNo. 7 (April 2002), page 67. To recapitulate: CASPER is designed to perform\nautomated planning of interdependent\nactivities within a system subject to requirements, constraints, and limitations\non resources.\nIn contradistinction to the traditional\nconcept of batch planning followed by\n\n62\n\nexecution, CASPER implements a concept of continuous planning and replanning in response to unanticipated\nchanges (including failures), integrated\nwith execution. Improvements over\nother, similar software that have been incorporated into CASPER version 2.0 include an enhanced executable interface\nto facilitate integration with a wide\nrange of execution software systems and\nsupporting software libraries; features to\nsupport execution while reasoning\nabout urgency, importance, and impending deadlines; features that enable\naccommodation to a wide range of com-\n\nputing environments that include various central processing units and random-access-memory capacities; and improved generic time-server and\ntime-control features.\nThis program was written by Steve Chien,\nGregg Rabideau, Daniel Tran, Russell\nKnight, Caroline Chouinard, Tara Estlin,\nDaniel Gaines, Bradley Clement, and Anthony Barrett of Caltech for NASA\xe2\x80\x99s Jet\nPropulsion Laboratory.\nThis software is available for commercial\nlicensing. Please contact Karina Edmonds of\nthe California Institute of Technology at\n(626) 395-2322. Refer to NPO-41987.\n\nNASA Tech Briefs, September 2007\n\n'