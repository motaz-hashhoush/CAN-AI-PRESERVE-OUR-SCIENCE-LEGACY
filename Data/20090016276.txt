b'NTB GPO_0608.qxp:Layout 1\n\n5/29/08\n\n12:46 PM\n\nponents that identify anomalies or that\nsearch for past instances of similar behavior.\nThis software supports NASA\xe2\x80\x99s Software,\nIntelligent Systems, and Modeling element in the Exploration Systems Research\nand Technology Program by augmenting\nthe capability of human flight controllers\nto make correct decisions, thus increasing\nsafety and reliability. It was designed specifically as a tool for NASA\xe2\x80\x99s flight controllers\nto monitor the International Space Station and a future Crew Exploration Vehicle.\nThis program was written by Joseph Jacob,\nMichael Turmon, Timothy Stough, and Herbert\nSiegel of Caltech and Patrick Walter and Cindy\nKurt of United Space Alliance for NASA\xe2\x80\x99s Jet\nPropulsion Laboratory. Further information is\ncontained in a TSP (see page 1).\nThis software is available for commercial licensing. Please contact Karina Edmonds of\nthe California Institute of Technology at\n(626) 395-2322. Refer to NPO-43952.\n\nMars Reconnaissance Orbiter Uplink Analysis Tool\nThis software analyzes Mars Reconnaissance Orbiter (MRO) orbital geometry with respect to Mars Exploration\nRover (MER) contact windows, and is\nthe first tool of its kind designed specifically to support MRO-MER interface coordination. Prior to this automated tool,\nthis analysis was done manually with\nExcel and the UNIX command line. In\ntotal, the process would take approximately 30 minutes for each analysis. The\ncurrent automated analysis takes less\nthan 30 seconds.\nThis tool resides on the flight machine and uses a PHP interface that does\nthe entire analysis of the input files and\ntakes into account one-way light time\nfrom another input file. Input flies are\ncopied over to the proper directories\nand are dynamically read into the tool\xe2\x80\x99s\ninterface. The user can then choose the\ncorresponding input files based on the\ntime frame desired for analysis. After\nsubmission of the Web form, the tool\nmerges the two files into a single, timeordered listing of events for both spacecraft. The times are converted to the\nsame reference time (Earth Transmit\nTime) by reading in a light time file and\nperforming the calculations necessary to\nshift the time formats. The program also\nhas the ability to vary the size of the\nkeep-out window on the main page of\nthe analysis tool by inputting a custom\ntime for padding each MRO event time.\nThe parameters on the form are read in\n\n16\n\nPage 16\n\nand passed to the second page for analysis. Everything is fully coded in PHP and\ncan be accessed by anyone with access to\nthe machine via Web page.\nThis uplink tool will continue to be\nused for the duration of the MER mission\xe2\x80\x99s needs for X-band uplinks. Future\nmissions also can use the tools to check\noverflight times as well as potential site\nobservation times. Adaptation of the\ninput files to the proper format, and the\nwindow keep-out times, would allow for\nother analyses. Any operations task that\nuses the idea of keep-out windows will\nhave a use for this program.\nThis program was written by Teerapat\nKhanampornpan, Roy Gladden, Forest\nFisher, and Pauline Hwang of Caltech for\nNASA\xe2\x80\x99s Jet Propulsion Laboratory.\nThis software is available for commercial licensing. Please contact Karina Edmonds of\nthe California Institute of Technology at\n(626) 395-2322. Refer to NPO-44222.\n\nProblem Reporting System\nThe Problem Reporting System (PRS) is\na Web application, running on two Web\nservers (load-balanced) and two database\nservers (RAID-5), which establishes a system for submission, editing, and sharing of\nreports to manage risk assessment of anomalies identified in NASA\xe2\x80\x99s flight projects.\nPRS consolidates diverse anomaly-reporting\nsystems, maintains a rich database set, and\nincorporates a robust engine, which allows\ntracking of any hardware, software, or paper\nprocess by configuring an appropriate life\ncycle. Global and specific project administration and setup tools allow lifecycle tailoring, along with customizable controls\nfor user, e-mail, notifications, and more.\nPRS is accessible via the World Wide Web\nfor authorized user at most any location.\nUpon successful log-in, the user receives a customizable window, which displays time-critical \xe2\x80\x9cTo Do\xe2\x80\x9d items (anomalies requiring the user\xe2\x80\x99s input before the\nsystem moves the anomaly to the next\nphase of the lifecycle), anomalies originated by the user, anomalies the user has\naddressed, and custom queries that can\nbe saved for future use. Access controls\nexist depending on a user\xe2\x80\x99s role as system\nadministrator, project administrator, user,\nor developer, and then, further by association with user, project, subsystem, company, or item with provisions for businessto-business exclusions, limitations on\naccess according to the covert or overt nature of a given project, all with multiple\nlayers of filtration, as needed. Reporting\nof metrics is built in. There is a provision\n\nfor proxy access (in which the user may\nchoose to grant one or more other users\nto view screens and perform actions as\nthough they were the user, during any\npart of a tracking life cycle \xe2\x80\x94 especially\nuseful during tight build schedules and\nvacations to keep things moving). The\nsystem also provides users the ability to\nhave an anomaly link to or notify other\nsystems, including QA Inspection Reports, Safety, GIDEP (Government-Industry Data Exchange Program) Alert, Corrective Actions, and Lessons Learned.\nThe PRS tracking engine was designed as a very extensible and scalable\nsystem, able to support additional applications, with future development possibilities already discussed, including Incident Surprise Anomalies (for anomalies\noccurring during Operations phases of\nNASA Flight projects), GIDEP and\nNASA Alerts, and others.\nThis work was done by Don Potter, Charles\nSerian, Robert Sweet, Babak Sapir, Enrique\nGamez, and David Mays of Caltech for\nNASA\xe2\x80\x99s Jet Propulsion Laboratory.\nThis software is available for commercial licensing. Please contact Karina Edmonds of\nthe California Institute of Technology at\n(626) 395-2322. Refer to NPO-40202.\n\nG-Guidance Interface Design for Small Body Mission\nSimulation\nThe G-Guidance software implements a\nguidance and control (G&C) algorithm\nfor small-body, autonomous proximity operations, developed under the Small Body\nGN&C task at JPL. The software is written\nin Matlab and interfaces with G-OPT, a\nJPL-developed optimization package written in C that provides G-Guidance with\nguaranteed convergence to a solution in a\nfinite computation time with a prescribed\naccuracy. The resulting program is computationally efficient and is a prototype of an\nonboard, real-time algorithm for autonomous guidance and control.\nTwo thruster firing schemes are available in G-Guidance, allowing tailoring of\nthe software for specific mission maneuvers. For example, descent, landing, or\nrendezvous benefit from a thruster firing\nat the maneuver termination to mitigate\nvelocity errors. Conversely, ascent or separation maneuvers benefit from an immediate firing to avoid potential drift toward\na second body. The guidance portion of\nthis software explicitly enforces user-defined control constraints and thruster silence times while minimizing total fuel\nusage.\n\nNASA Tech Briefs, June 2008\n\n'