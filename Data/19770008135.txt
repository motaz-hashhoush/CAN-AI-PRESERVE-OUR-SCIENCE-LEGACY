b'General Disclaimer\nOne or more of the Following Statements may affect this Document\n\nThis document has been reproduced from the best copy furnished by the\norganizational source. It is being released in the interest of making available as\nmuch information as possible.\n\nThis document may contain data, which exceeds the sheet parameters. It was\nfurnished in this condition by the organizational source and is the best copy\navailable.\n\nThis document may contain tone-on-tone or color graphs, charts and/or pictures,\nwhich have been reproduced in black and white.\n\nThis document is paginated as submitted by the original source.\n\nPortions of this document are not fully legible due to the historical nature of some\nof the material. However, it is the best reproduction available from the original\nsubmission.\n\nProduced by the NASA Center for Aerospace Information (CASI)\n\n\t\n\n.y^\nReport No. 76-0084\nContract No. NAS8-32047\n,I\n3\n\n\'\n\n1\n\nPAYLOAD SOFTWARE TECHNOLOGY\nMIDTERM REPORT\n(NASA-CR-150 168) PAYLOAD SOFTWARE \t\nTECHNOLOGY Midterm .Report WS Co.m,puting,\n\nN77- 15078\n\nInc., Huntsville, Ala.) 84 p HC A05/MF A01\nCSCL 09B\t\n\nDecember 24, 1976\n\n.I\n\nPrepared for:\nGeorge C. Marshall Space Flight Center\nNASA\nMarshall Space Flight Center, Alabama 35812\n\n.i\n\n._.\t\n\n(E& S OMPUTING, INC.\nD\n\ncs t\n\nti\t\n\n^n\n\nWEIVED\nCH\n\nUnclas\nG3/16 12516\n\nTABLE OF CONTENTS\n\nPage\n\nSection\nLIST OF FIGURES\n\niii\n\nLIST OF TABLES\n1.\n\nINTRODUCTION\n\n1\n\n2.\n\nSTUDY SUMMARY\n\n3\t\n\n2.1\t\n\nObjectives\n\n3\n\n2.2\t\n\nApproach\n\n3\n\n2.3\t\n\nResults Su =nary\n\n5\n\n3.\n\nPAYLOAD SELECTION\n\n4.\n\nSPACE TECHNOLOGY FORECASTS REVIEW\n\n9\n13\n\n4.1\t\n\nSoftware and Software Technology\n\n13\n\n4.2\t\n\nPayload Scenario\n\n13\n\n4.3\t\n\nSoftware Technology Categories\n\n15\n\n4.4\t\n\nSoftware Emphasis Areas\n\n15\n\n4.4.1\t\n4.4.2\t\n4.4.3\t\n\nSoftware Development Technology\nSoftware Systems Architecture\nSoftware Application Technology\n\n16\n16\n17\n19\n\nObjectives\n\n19\n\n5.2\t\n\nScope\n\n20\n\n5.3\t\n\nExperiment Analysis Task Flow\n\n22\n\n5. 3. 1\t Payload Element Analysis\n5. 3.2\t Software Function Analysis\n5.3. 3 SAMM Matrix\n-\n\nEXPERIMENT ANALYSIS\n5.1\t\n\n5.\n\n-\xe2\x96\xba\n\n22\n25\n27\n\ni\n\n-\n\nf\n\ne\t\n\nf\n\nTABLE OF CONTENTS\n\nPage\n\nSection\n5.4\n\nResults Summary\n\n27\n30\n\nSoftware Development\n\n30\n\n6.2\n\n.\t\n\nTECHNOLOGY DRIVER SELECTION\n6. 1\n\n6.\t\n\nSoftware Systems Architecture\n\n32\n\n6.2.1\t\n6.2.2\t\n6.2. 3\t\n\n"\n\nFunctional Distribution of Processing\nFault Tolerant Systems\nHuman/System Interface\n\n34\n35\n36\n\n7.\t\n\nSoftware Applications\n\n37\n\n6. 3. 1\t\n6.3.2\t\n6. 3. 3\t\n\n6.3\n\n38\nAl\n44\n\nPattern Recognition and Image Processing\nData Compression\nAutomated Intelligence\n\nFUTURE PLANS\n\n46\n\n7.1\n\nPhase 1\n\n46\n\n7. 2\n\nPhase 11\n\n46\n\n7.3\n\nPhase IH\n\n46\n\n7.4\n\nAdded Effort\n\n46\n\nAPPENDIX A - MISCELLANEOUS\n\nA-1\n\nAPPENDIX B - SOFTWARE FUNCTIONS SIZING\n\nB-1\n\nAPPENDIX C - PAYLOAD ELEMENT ANALYSIS SHEETS\n\nC-1\n\nAPPENDIX D - SOFTWARE ANALYSIS MASTER MATRIX\n\nD-1\n\n\t\n\nLIST OF FIGURES\nTitle\t\n\nFigure No.\t\n\nPage\n\n2-1\t\n\nPayload Software Technology Study Plan \t\n\n4\n\n5-1\t\n5-2\t\n5-3\t\n5-4\t\n5-5\t\n\nExperiment Analysis Scope \t\nExperiment Analysis Task Flow \t\nPayload Element Analysis\t\nSoftware Function\t\nSoftware Analysis Master Matrix (SAMM)\t\n\n21\n23\n24\n26\n28\n\n7-1\t\n\nPayload Software Technology Study Plan \t\n\n47\n\nLIST OF \'TABLES\nTitle\t\n\nTable No.\t\n\nPage\n\n1-1\t\n\nMidterm Report Outline\t\n\n2\n\n2-1\t\n\nTechnology Driver Summary\t\n\n6\n\n3-1\t\n\nPayload Elements\t\n\n10\n\n4-1\t\n\nReview of Technology Forecasts - Prime \t\nReferences\n\n14\n\n6-1\t\n6-2\t\n\nReferences - Software Development Technology \t\nData Environment Scenario vs Software Function\t\n(DESF) Matrix\nData Compression.: Requirements and Current\t\nStatus Chart\n\n33\n39\n\n6-3\t\n\niii\n\n43\n\nf\n\n1.\t\n\n3NTRODUCTION\n\nThe purpose of this report is to document the midterm results\nof the Payload Software Technology Study performed by M&S\nComputing for the .Marshall Space Flight Center under Contract No.\nNAS8 -32 447.\n\n\xe2\x80\xa2\n\nDuring the completed part of this study, two main tasks were\nperformed. First, a software analysis was performed of known STS\nsortie payload elements and their associated experiments. This provided\nbasic data for STS payload software characteristics and sizes. Secondly,\na set of technology drivers was identified based on a survey of future\ntechnology needs and an assessment of current software technology.\nDuring the remainder of the study, the results derived to date\nwill be used to evolve a planned approach to software technology development. The purpose of this plan is to ensure that software technology is\nadvanced at a pace and a depth sufficient to fulfill the identified future\nneeds.\nThis report is organized into seven sections as summarized in\nTable 1-1. Section 2 provides the executive summary and is adequate\nto obtain an overview of the results obtained to date. The sequence of\nthe remaining sections generally reflects the sequence of tasks performed\nduring this phase of the study.\n\ni.\n\n-1I\n\nMIDTERM REPORT OUTLINE\nSECTION 1 - INTRODUCTION DESCRIBES THE PURPOSE OF THIS REPORT, THE STATUS OF THE\nSTUDY, AND THE MANNER IN WHICH THIS REPORT IS ORGANIZED.\nSECTION 2 - STUDY SUMMARY IS THE EXECUTIVE SUM11ARY.\n2. 1 OBJECTIVES DESCRIBES THE PURPOSE AND SCOPE OF THE STUDY.\nZ. 2 APPROACH DESCRIBES THE STUDY PLAN USED AND THE ASSOCIATED MAJOR MILESTONES.\n2.3 RESULTS SUMMARIZES THE RESULTS OF THE STUDY.\t\n\n^--\n\nSECTION 3 - PAYLOAD SELECTION DESCRIBES THE RATIONAL FOR SELECTION OF THE SPECIFIC\nCOMPLEMENT OF EXPERIMENTS ANALYZED DURING THE STUDY.\nSECTION 4 - SPACE TECHNOLOGY FORECASTS REVIEW DESCRIBES THE IDENTIFICATION AND\nCLASSIFICATION OF SOFTWARE TECHNOLOGY AREAS SELECTED FOR EMPHASIS.\nSECTION 5 - EXPERIMENT ANALYSIS DESCRIBES THE APPROACH AND MATERIAL USED TO\nPERFORM THE EXPERIMENT ANALYSIS AND SUMMARIZES THE RESULTS.\nSECTION b - TECHNOLOGY DRIVER SELECTION SUMMARIZES THE TECHNOLOGY DRIVERS\nSELECTED AND THE REASONS FOR THEIR SELECTION.\nSECTION 7 - FUTURE PLANS DESCRIBES THE EFFORTS REMAINING TO BE PERFORMED UNDER\nTHIS CONTRACT.\nAPPENDIX A - MISCELLANEOUS\nAPPENDIX B - SOFTWARE FUNCTIONS PROVIDES A COMPLETE DESCRIPTION OF THE DERIVED\nEXPERIMENT SOFTWARE FUNCTIONS AND THEIR SIZING PARAMETERS.\nAPPENDIX C - EXPERIMENT ANALYSIS SHEETS CONTAINS SHEETS FOR EACH ANALYZED PAYLOAD\nELEMENT AND THEIR ASSOCIATED EXPERIMENTS DESCRIBING MAJOR COMPONENTS, DATA\nCHARACTERISTICS, AND FUNCTIONS TO BE PERFORMED. \t\nAPPENDIX D - SOFTWARE ANALYSIS MASTER MATRIX\nTable 1-1\n\nr -^\n\n\t\ni\t\n\nI\t\n\n2.\t\n\nI\t\n\nI\t\n\ni\t\n\nSTUDY SUMMARY\n\nThis section provides a brief review of the study and a summary\nof the results to date. Section 2. 1 describes the intended objectives of the\nstudy. Section 2.2 explains the methods used. Section 2.3 sumrrxarizes\nthe results.\n\n2.1\t\n\nObjectives\n\nThe prime objective of this study is to define programmatic\nrequirements for the advancement of software technology required to\nenhance future space applications. mature space applications are those\nplanned or desired to be operational towards the end of the century.\nAlthough it is recognized that software technology requirements\nare likely to exist for ground. as well as on-board facilities, the scope\nof this study primarily addresses on-board software technology. It is\nexpected that a similar effort will be performed at a later date for groundbased software technology.\nThe technology development plans resulting from this study must\nbe implemeatable during the 1980\'s in order to meet the requirements\nin the 1990\'s. It is assumed, for this study, that the primary development\nvehicle during this time will. be the Space Transpo rtati.oa System. Therefore,\npayload analyses performed during this study will be limited to those payloads\ncurrently planned to be carried on the Space Transportation. System.\n^.\t\n\n-\t\n\nFins31y, it should be noted that we are primarily concerned with\nsoftware technology; not with computer systems technology. No attempt was\n-made to analyze future Data Management Systems, as a whole, to drive\nout technology requirements. Such an effort certainly has merit, and might\nresult in software technology requirements; however, many software\ntechnology requirements can be identified without an end-to-end data\nmanagement analysis, and that is the road which we elected to follow.\n2. 2\t\n\nAg rch\n\nAs shown !a Figure 2-1, the study consists of three consecutive\nphases. The purpose of the first phase was to identify technology drivers,\nL e., major areas of concern and technology problems to be solved. Two\ntypes of analysis were performed during this phase: an analysis of a set\nof known experiments to identify significant software functions with their\ncomplexities and sizing; and, concurrently with that analysis, a technology\nsurvey was performed to identify the potential future technology needs of\nexperiments. The results of these analyses are combined and summarized\ninto a set of Technology Drivers.\n-3V-A\n\ni\n\n\t\n\nPAY UJAIJ\t\nSOFTWARE\nCI-IARACT.\t\nAND SI7.IN\t\n\nL_\t\n\n` REVIE^^IY OF\t\nlTECHNOLOGY\t\nFORECASTS \t\nF^\nI\t\n\nI UZZ/76\nREASSESS\nAND\nCOMPILT^\t\n\nOF\nTECHNOLOGY\nTECHNOLOGY\t\nEMPHASIS\'\t\n\nAREAS\n\nTECHNOLOGY\t\nEMPHASIS\t\nARE AS\n\nI \' PHASE II\n\nMIDTERM\nREPORT\n\nT ECHNO LOGY\nDRIVERS\n\n_\'mASE III\n\nPHASE I.\t\n\n5j20j77\n\nZ/21/77\n\nDETAILED\t\nANALYSIS OF\t\nTECHNOLOGY\t\nDRIVERS\t\n\nI\t\n\nCOST /TIC/\t\n-^ PRIORITY\t\nASSESSMENT\t\n---- -\t\n\nECHNOLOGY\n\nEVELOPMEt \t\n:EMS --\t\n\n\t\n\nTECHNOLOGY\n$^ DEVELOPMENT\t\nANALYSIS\t\n-\t\n\nREPO\nREPORT\n\nTECHNOLOGY\nDEVELOPMED\nPLANS\n\n\t\n\nI\t\n\ni\t\n\nDuring the second phase, \'these Technology Drivers are further\nanalyzed to identify possible Technology Items. A Technology Item is\nan identified technology development program, to resolve one or more\naspects of a Technology Driver.\nOf course, alternate Technology Items may be identified for one\nTechnology Driver. Also, the total number of Technology Items identified\nmay be impossible to implement within the resource constraints.\nTherefore, during this phase, cost estimates and priorities are assigned\nto the Technology Items.\nThe result of the third phase will be a recommended set of\nSoftware Technology Development Plarining Guidelines. These are obtained\nthrough evaluation and selection of the most cost effective set of Technology\nItems. This selection depends upon cost, priority, interrelationships\nbetween the Technology Items, and dependencies on other technologies.\nAdditional detail. for each of these phases is provided in the\nappropriate sections in the remainder of this report.\nZ. 3 Results Summary\nThe set of Technology Drivers resulting from Phase I is listed\nin Table 2-1. At this point, the Technology Drivers associated with\nSoftware Development must be considered the most important. Unless\nsignificant improvements are made ia this area, all other related\ntechnologies will be stunted because the associated software will be too\ncostly and/or too unreliable.\nIn Software Systems Architecture, most of the Technology\nDrivers are related to LSI technology; L. e., the availability of very lowcost processing systems. These systems are particularly suitable for\non-board uas.ge and therefore receive significant emphasis during this\nstudy.\nM,.\t\n\nThe remaining Technology Drivers are primarily based on anticipated\nincreases in on-board processing of image type data, as well as on anticipated increases in the rates of data to be acquired.\nSome other conclusions that can be drawn from the results to date\nare the following:\n1.\t\n\nCurrently planned experiments, with few excepAoas, do not\nproject a significant use of on-board data management\nsystem C?p2\'^\'L li 4J.GS\xe2\x80\xa2\n\n-5-\n\ni\n\nY\nTECHNOLOGY DRIVER SUMMARY\no\t\n\nSOFTWARE DEVELOPMENT: - SOFTWARE DESIGN ENGINEERING\n- TREND TOWARD S/ W DEVELOPMENT BY NON-r A0GRAMMERS\n- FAULT-FREE SOFTWARE\n- APPLICATION ORIENTED LANGUAGE DESIGN METHODOLOGY\n- LOW COST DEVELOPMENT OF AOL COMPILERS\n\na\t\n\nSOFTWARE SYSTEMS ARCHITECTURE: - (DISTRIBUTED) SYSTEM PARTITIONING/\nINTERCONNECTION TECHNIQUES\n- VERY LARGE STORAGE ACCESS SIMPLIFICATION\nSOFTWARE FAULT (OWN OR INDUCED) DETECTION\nSOFTWARE RECOVERY (AFTER FAULT DETECTION)\nHIGH-SPEED BUFFERING TECHNIQUES\nDESIGN AND CONTROL OF ADAPTIVE SOFTWARE\nPROCEDURES.\n\na\t\n\nSOFTWARE APPLICATIONS: - USE OF "NATURAL" COMMUNICATION METHODS\n- EFFICIENT LARGE ARRAY SEARCH AND SORT PROCEDURES\n- PARALLEL PROCESSING TECHNIQUES\n- EFFICIENT LARGE ARRAY MANIPULATION PROCEDURES.\n\no\n\nTable 2 -1\n\ni\t\n\n^\t\n\nI\t\n\nI\t\n\nI\n\nThis is to some extent due to the known limitations of the\nBaseline Spacelab \xe2\x80\xa2 Data Management System, but probably\neven more so it is due to traditional approaches and/or\nfears of integration problems. It does point to a significant\n"application technology gap" between computer system usage\nin the early 80\'s and wi -it is anticipated to be needed in\nthe 90\'s.\n\nZ.\t\n\nThe currently planned Spacelab Data Management System is\nnot adequate for technology development.\n..6..\n\nBecause various cost constraints have been imposed on Spacelab, the data management system is relatively limited\nin its capabilities. This became obvious as we analyzed\npotential uses of on-boars software. These l i mitations will\nprobably not be of significance during support of the early\nyears of flight, but the limitations will create a major\nshortcoming in the late 80\'s because of the constraints\nplaced on technology development.\n3.\t\n\nNo l \'esateric" software technology requirements were\nidentified.\nNo surprising requirements were uncovered during the first\nphase o f the study. Nevertheless, i t will not be a simple\neffort to derive an effective technology development plan.\nMany o f the significant requirements have been under study\nbefore, and technology advancements have been previously\nattempted with little tangible success. The real key to\nsatisfactory results from this study will lie in the recognition\nof imaginative, realizeable technology development items.\n\n_7_\n\nll\t\n\n.\n\n3.\t\n\nPAYLOAD SELECTION\n\nThe purpose of this task was to select applications which, through\nanalysis, could yield information relevant to this study. Advanced space\nmissions are currently not defined in sufficient detail to allow relatively\nquick identification of software technology development requirements.\nTherefore the emphasis of this study is on potential subsets of future\npayloads, i. e. , payload elements.\nCertain practical criteria were established to guide the initial\npayload selection process. These were:\no\t\n\nData availability.\n\no\t\n\nU. S. experiments only.\n\no\t\n\nBroad instrument mix and varied output forms.\n\nTo obtain broad coverage, the Shuttle Sortie Payload Descriptions\n(July 1975), Level B, were selected as the starting point. Data availability\nfor these payload elements is still a \xe2\x80\xa2 major problem but a portion of the\n\nproblem was resolved during the subsequent task through various means\nsuch as comparison to similar instrumentation types, extrapolation of data\nrates for increasing resolution criteria and surveys of state-of-the-art\ndetectors and sensor technology.\nThe payload elements which were analyzed in sufficient detail to\nyield useful data are listed in Table 3-1.\n\n\'PRECI^UING PAGL\nra Nc)T rzr,^zFD\n\n-9-\n\nV^\n\nPAYLOAD ELEMENTS\nPayload\nElement No.\n\nName\n\nAS-01-S\n\n1M Shuttle IR\t Telescope Facility\n\nAS-03-S\n\nDeep Sky UV Survey Telescope\n\nAS-04-S\n\n1m Diffraction Limited UV-Optical Telescope\n\nAS-05-S\n\nVery Wide Field Galactic Ca_-zera\n\nAS-15-S\n\n3m. Ambient Temperature IR Telescope\n\nAS-63-S\n\nSortie Medium Aperture Optical Telescope\n\nHE-11-S\n\nX-Ray Angular Structure\n\nHE-15-S\n\nMagnetic Spectrometer\n\nHE-19-S\n\nLow Energy X-Ray Telescope\n\nHE-25-S\n\nTransition Radiation Detector\n\nSO-01-S\n\nDedicated Solar Sortie Mission\n\nSO-11-S\n\nSolar Fine Pointing Payload\n\nSO-15-S\n\nSolar Activity Early Payload\n\nSO-17-S\n\nSolar Activity Growth Processes\n\nAP-06-S\n\nAtmospheric, Magnetospheric, and Plasmas in Space\n\nAP-08-S\n\nLIDAR System\n\nAP-09-S\n\nElectron Accelerator\n\nAP-10-S\n\nChemical Release\n\nAP-11-S\n\nDiagnostic Payload\nTable 3-1\n-10-\n\nPAYLOAD ELEMENTS\nPayload\n\nElement No.\n\nName\n\nAP-12-S\n\nThrow-Away Detector Satellites\n\nAP-13-S\n\nLow Light Level TV\n\nLS-Oa-S\n\nFree-Flying Teleoperator\n\nLS-09-S\n\nLife Sciences Shuttle Laboratory\n\nLS-10-S\n\nLife Sciences Mini-Laboratory\n\nLS-13-S\n\nLife Sciences First US/ERO Spacelab Mission\n\nEO-01-S\n\nZero G Cloud Physics Laboratory\n\nEO-05-S\n\nShuttle Imaging Microwave System\n\nEO-06--S\n\nScanning Spectroradiometer\n\nEO-19-S\n\nMark II Interferometer\n\nEO-20-S\n\nEarth Resources Shuttle Imaging Radar\n\nEO-21-S\n\nShuttle Imaging Microwave System\n\nEO-22-S\n\nMark 11 Interferometer - Earth\n\nOP-02-S\n\nMultifrequency Radar Land Imagery\n\nOP-03-S\n\nMultifrequency Dual Polarized Microwave Radiometery\n\nOP-04-S\n\nMicrowave Spectrometer\n\nOP-05-S\n\nMultispectral Scanning Imagery\n\nOP-06-S\n\nLaser Altimeter /Profilirneter Experiment\n\nTSP-01-S\n\nSPA No. l - Biological (Manned) Laboratory\nTable 3-1 (Continued)\n\n.-\n\n-I1-\n\n\xc2\xb5,.\n\n\t\n\nPAYLOAD ELEMENTS\nPayload\nElement\t No.\t\n\nName\n\nwSP-14-S\t\n\nSPA No. 14 - Manned/ Automated Laboratory\n\n*SP-15-S\t\n\nSPA No. 15 - Automated Furnace/ Levitation\n\nSP-31-S\t\n\nFirst Spacelab Mission (]Biological and Furnace\nSubelements and Core)\n\nST-08-S\t\n\nIntegrated Real-tune Contamination Monitor\n\nST-31-S\t\n\nDrop Dyaamics\n\nCN-04-S\t\n\nElectromagnetic Environment Experiment\n\nCN-05-S\t\n\nCO2 Laser Data Relay Link\n\nCN-08-S\t\n\nTWT Open Envelope Experirne ats\n\nTable 3-1 (Continued)\n-12-\n\n\t\n\n- 4.\t\n\nSPACE TECHNOLOGY FORECASTS REVIEW\n\nIt was recognized early that analysis of payload elements by itself\nwould uncover only a limited set of technology drivers. Concurrently with\nthe experiment analysis, a technology survey was necessary to uncover\nadditional technology drivers. During this survey, the identification of\ntechnology emphasis areas (i. e. , broad identifications of problem areas)\nwas the main goal. These areas are subsequently anaLyzed for technology\ndrivers as described in Section b, Technology Driver Selection.\nThe major publications reviewed are listed in Table 4-1. The main\t\nemphasis was placed on the Outlook for Space and the OAST workshop results.\nThe publications provide technology requirements on various levels: from\na very broad identification of areas of interest, to specific recommendations\non technology development items. The air of the review was to summarize\nthe indicated technology areas specifically enough to provide clear direction,\nbut broadly enough not to prejudice the results of the study.\n4.1\t\n\nSoftware and Software Technology\n\nIn pursuing the goals of this study, certain definitions and understandings are necessary to communicate the software roles and needs in the\nsystems being analyzed.\n\'\t\n\nA data system is considered to be made up of hardware, software,\nand mathematical. (or system logic) elements. Software represents the\nenabling mechanization of the desired mathematics or logic functions on\nthe computing hardware of that system. Systems concepts may require\ncertain mathematical functions to be performed on data being processed by\nthe system; however, these functions are not software, per se, but rather\nare inputs to the software process.\nSoftware technology is, therefore, that technology which converts\nmathematical or logic requirements into computer pro g rams that can\noperate on the available computer hardware. Software technology advancemeats will be required wherever hardware, space, processing time, or\nresources in general impede or limit this desired conversion.\n4.2\t\n\nPayload Scenario\n\nThe 1980- 1990 payload scenario characteristics which drive the\npayload software technology requirements can be summarized as follows:\no\t\n\nHigh data acquisition rates are probably the main driving\nforce behind the technology requirements. This reflects\nmore data per payload, as well as an increased number of\nconcurrently active payloads.\n-13-\n\n.\xe2\x80\xa2^\n\n1\n\nREVIEW OF TECHNOLOGY FORECASTS\nPRIME REFERENCES\n1.\n\nOUTLOOK FOR SPACE, JANUARY 1976.\n\n2.\n\nA FORECAST OF SPACE TECHNOLOGY 1980-2000, JANUARY 1976,\n\n3.\n\nOAST SPACE THEME WORKSHOP, APRIL 1976 (QUICK-LOOK\nCOMMENTS AND WORKING PAPERS).\n\n4.\n\nSPACE ELECTRONICS TECHNOLOGY SUMMARY, MARCH 1976.\n\n5.\n\nOAST SUM.^tiIA.RY WORKSHOP, AUGUST 1975.\n\n6.\n\nINFORMATION PROCESS NG/DATA AUTOMATION IMPLICATIONS\nOF AIR FORCE COMMAND AND CONTROL REQUIREMENTS IN\nTHE 1980\'s (CCIP\'s), 1975.\n\n7.\n\nFINDINGS AND RECOMMENDATIONS OF THE JOINT LOGISTICS\nCOMNLAINDERS SOFTWARE RELIABILITY WORK GROUP, NOVEMBER\n1975.\n\n8.\n\nKEY DEVELOPMENTS IN COMPUTER TECHNOLOGY: A SURVEY,\nIEEE COMPUTER MAGAZINE, NOVEMBER 1976 (LATE INPUT),,\n\nTable 4 -1\n-14-\n\n\t\n\no\t\n\no\t\n\nReal-time user--system interaction is dictated to perform\nthe real-time data selection and the systems control\nrequired to effectively apply the planned operational systems.\n\no\t\n\nIncreased systems autonomy is dictated through an increased\nemphasis on unmanned exploration, as well as the need to\t\ndecrease the manpower cost required to support long-duration\nmissions and operational systems,\n\no\t\n\n4.3\t\n\nIncreased utilization of software is a logical consequence of\nthe increased sophistication of space systems and the\navailability of relatively low-cost, minaturized processor\nhardware.\n\nData and facility sharing networks are visualized to prevent\na duplication of large processing and very large storage\nfacilities for data common to many diverse users.\n\nSoftware Technology Categories\n\nTo present the information in a somewhat digestible form and to\neventually be able to group related development items, three categories of\nsoftware technology were established:\no\t\n\nSoftware Development Technol.o includes those areas\nassociated with the project management, design, implementation, testing, verification and validation, of software in\ngeneral.\n\no\t\n\no\t\n\n4.4\t\n\nSoftware Systems Architecture contains those areas concerned with software system structures and attributes\nrequired to fulfill g eneral systems concepts and capabilities\nnot solely associated with specific applications.\nSoftware Applications Technology encompasses those areas\nrelated to certain broad classes of applications which operate\nand control experimental or operational equipment. These\nareas are, thus, specifically driven by the type of planned\nspace applications more so than any other category.\n\nSoftware Emphasis Areas\n\nThe review resulted in the identification of lb emphasis areas. Some\nof these do not directly affect on-board software technology, and are not\ndirectly analyzed for technology drivers. These areas are indicated by\nasterisks in the following summary.\n-15-\n\nr\n\n..^.\n\nI\t\n\nI\t\n\nI\t\n\n4\t\n\ni\n\n4.4. 1 Software Development Technology\nTechnology emphasis in the software development category is prime\nto any other significant software technology advancement. Lack of adequate\ndevelopment technology is perhaps the most significant deterrent to\nincreased degrees o\xc2\xa3 automation. Technology areas recognized are:\no\t\n\nCost/time reduction methods.\n\no\t\n\nSoftware reliability.\n\no\t\n\nCost/performance evaluation.\n\no\t\n\nSoftware/hardware standardization.\n\n,,...\n\nThese technology emphasis areas are not unique to space systems;\nhowever, the last two carry far more significance for space applications\nthan for most groundba s ed systems.\n4.4.2 Software Systems Architecture\nThis category contains most of the technology emphasis areas\nidentified and is indicative of the quantum jump in. software utilization\nfor the 1980-1990 space applications. This quantum jump is made feasible\nby the fantastic pace at which processor hardware technology has progressed.\nThe following areas of emphasis were identified.\no\t\n\nFunctional distribution of processing.\n\no\t\n\nFault tolerance systems.\n\no\t\n\nInteLigent instruments.\n\no\t\n\nHurnan/System. interfacing.\n\nTo\t\n\nUtilization of high-rate d.a.ta. processors.\n\nTo\t\n\nData distribution/ sharing networks.\n\nTo\t\n\nVery large data base management.\n\nTo\t\n\nMultidimensional data base systems.\n\nIt is noticeable that many of these areas are interrelated with the\nhardware or systems technology they are to operate with.\n-lb-\n\n\t\n\na. Q. 3 Software Application Technology\nThe line between software technology and other data management\nsystem technologies is even more difficult to draw for the emphasis areas\nidentified here.\no\t\n\nImage processing and pattern recognition..\n\no\t\n\nData compression.\n\no\t\n\nAutomated intelligence.\n\nTo\t\n\nAutomation of ground-support functions.\n\n17-\n\n\t\n\nI\t\n\t5.\t\n\ni\t\n\nI\t\n\nI\t\n\nI\t\n\n?\n\nEXPERIMENT ANALYSIS\n\nExperiment analysis is a basic element of the Payload Software\nTechnology Study. An understanding of instrument function and data\ncharacteristics is required to identify those parts that go beyond the\nstate-of-the-art of software/system technology and, consequently,\ncomprise the technology drivers.\nThis section describes the approach and material used to perform\nthe experiment analysis and summarizes the results.\n5.1\t\n\nObjectives\n\nFive specific objectives were established for the experiment analysis\nactivity0 of Phase 1. These are\t\n\nIdentify significant processing functions associated with\nSTS payloads.\n\no\t\n\nIdentify "next generation" on-board processing functions.\n\no\t\n\nDetermine data management system: technology drivers.\n\no\t\n\nAssess software development load.\n\no\t\n\nProvide the basic method and data for future experiment\nsoftware analysis.\n\nSignificant processing functions are those payload oriented functions\nwhich drive resource utilization into the margin or beyond the capability of\ncurrently defined data management systems. The basic resources against\nwhich the processing functions were measured are:\no\t\n\nProcessor main memory.\n\no\t\n\nProcessor speed (in\n\no\t\n\nInput/output data. rate.\n\na\t\n\nMass memory capacity.\n\no\t\n\nDisplay capability.\n\npRFCP\'DWG\nPAGE $SANK\n\nequivalent adds per second).\n\nNOT PXUVO _19_\n\nThe "next generation" on-board processing functions are those that\nwill be added (or transferred from ground systems) to accelerate the\naccumulation and distribution of more and higher quality data to the end\nuser, at reduced cost, and within the physical limitations of bandwidth,\nground handling, and archival facilities.\nData management system technology drivers are those functions\nwhich are mandatory to enable a mission, enhance a mission, and/or\nreduce overall cost, but for which new technology must be developed.\nSome of this technology is pure hardware, and a lesser amount is pure\nsoftware, but the major part is system technology which synthesizes the\ncomplementary hardware/ software attributes into an optimum mix of\ncost, convenience, and rate of return.\nAssessment of the software development load covers the 1980-1990\ntime frame. The purpose of this objective is two-fold;\no Bound the software development facility requirements-.\no Reveal areas in which software development technology\nitems . could improve software reliability and reduce\ndevelopment co st.\nThe last objective is to provide the form and structure of a data\nbase that would be required to relate software function to experiment,\nto provide a simple tool for combining experiment loads into payload\nelement loads, and payload element loads into mission loads, while\nretaining the flexibility to add new software functions and new experiment\nor payload el\'e=ents without structure redefinition.\n5. 2\t\n\nScope\n\nExperiment analysis includes the evaluation of currently defined\nexperiments, pre-\xe2\x80\xa2operational, and operational prototype systems, and\nencompasses those end-of-the-century operational space system goals\nestablished by NASA and the scientific/industrial community. The scope\nis depicted in Figure 5-1.\nThe first few years of Shuttle Operations are based on currently\ndefined payloads which are primarily payloads or improvements to payloads\t\nthat have flown. before. The main thrust of this period will be toward\nsensor development.\nThe pre-operational and system prototype periods will encompass\nthe development and testing of new concepts and new techniques to enable\ndigestion of orders of magnitude increases in data at drastically reduced costs.\n-20-\n\nN\'\n\nEXPERIMENT ANALYSIS SCOPE\n1985\n\nOPERATIONAL ERA\n\nFIRST FEW YEARS\nOF SHUTTLE\n\t\n\n\t\n\nI\n\nI\n\n1\n\nCURRE N TLY DEFINED\n\t\nEXPERIMEN\'T\'S\n\n`\t\n\n\t\n\nR&D\n\t\nEXPERIMENTS\n\nf\n\n\t\n\nOUTLOOK FOR SPACE\t\nSPACE THEMES \t\n\nDEDUCE/\nEXTRAPOLATE\n\nOPERATIONAL\nSYSTEMS\n\n\t\n\nPRE -OPERATION\nEXPERIMENTS\n\n^^\nri\n\nSYSTEM\nPROTOTYPES. \t\n\nADVANCED\nCIENCE MISSIONS\n\nSENSOR.\t\nDEVELOPMENT\t\n-\t\n\n\'o RAW DATA\t\nDATA SCRUTINY\t\nF\nL.ITTLE AUTOMATION\t\nCALIBRATION\t\nREQUIREMENTS\t\n\n\t\n\nINTO HANDLING\n\nCONCEPT\n\nTECHNIQUES\n\nVE RIFICATION\n\nDATA COMPRESSION\nDATA CALIBRATION\nAUTOMATED CONTROL\n"MANUAL." DATA\nEXTRACTION\nDATA INTERPRETA\'T\'ION .\nCRITERIA\n\nFigure 5-1\n\n\t\n\nSYSTEM\nOPERATIONS\nUSE:\n\nREFINE:\n\na AUTONOMOUS OPERATION \t\na AUTOMATED INFO EXTRACTION\ne DATA DISTRIBUTION METHODS\nr INFORMATION MANAGEMENT\nSYSTEMS\na AUTOMATED DATA INTERPRETATION\n\n-^,-,-\n\nI\nThe operational phase entails full implementation of long-life,\nproduction-oriented satellites and space stations. Routine repair and\nrefurbishment in space will be common activities. Preprocessing by\nthe data collection systems, coupled with final processing and direct\ndistribution of the finished product from space stations, will greatly\nenhance space utilization and reduce traffic to and between ground\nfacilities. Concepts and technologies developed during the early years\nof STS will directly affect the utility and cost of future systems.\n5.3\t\n\nExperiment Analysis Task Flow\n\nThe experiment analysis task flow is shown in Figure 5-2. The\ntask consists of two parts: (1) payload element analysis, and (2) software\nfunction analysis and sizing. These parts are integrated into the Software\nAnalysis Master Matrix (SAMM) from which is derived the Data Management\nSystem concepts and software development sizing analysis for the 19801990 STS era.\nThe July 1975, Level B, SPDA was chosen as the model from which\npayload elements and instrument descriptions would be extracted for the\ntechnology study. Other data pertinent to these selected items was fed into\nthe flow to add a greater level of detail. This data included:\no\t\n\nPayload definition studies.\n\n0\t\n\nIntegrated Mission Analysis Planning (I AP).\n\no\t\n\nUser\'s Inforrx ation.\n\no\t\n\nPrevious Programs,\n\n0\t\n\nPrevious Studies.\n\no\t\n\nIn-house Expertise.\n\n5. 3. 1 Payload Element Analysis\nPayload element analysis consisted of the collection and classification,\nof payload element/experiment data specific to payload software. A\ncompressed form (Figure 5-3) was developed to provide a visible, comprehensive source for future analysis tasks.\nEach payload element contained in the Level B SPDA was broken\ninto individual experiments. The experiment number, objective and instrument\n-22-\n\nt\n\nEXPERIMENT ANALYSIS TASK FLOW\nEXTRACT\t\n,IDENTIFY \t\nPD \t\n\xe2\x80\x94PAYL. ELEME S SENSORt \t\nEV B\nDETIGCTOR\t\n~EXPERIMLNTS\t\n!DATA:]--+\nREQUIREMENTS\t\n\xe2\x80\x94INSTRUMENT\t\n\n^ SPECTRAL. RANGE\nBANDWIDTH\n\xc2\xae SENSITIVITY\nETC,\n\nPAYL. DET. STUDIES J\xe2\x80\x94\nCHARACTE9RIZE\nSCIENCE DATA\nIMAP\n\nPAYL.\n\nw\n\'\t\n\nUSERS INFO.\n\n.DETAIL\nPAYLo E LEME\'.\nCOMPONENTS\n\nELEMENIT\nANALYSIS\nSHEETS\n\nPREVIOUS PROGRAMS\n\nPREVIOUS STUDIES\nSIZE\t\nPROCESSING\t\nIN-HOUSE ECPERTISE\'UNCTION5\t\nFigure 5-2\n\nDEVELOPMENT\nSIZING\nANALYSIS\n\nSOFTWAR\nANALYSIS\nMASTER\nMATRIX\n\nIDENTIFY\nPROCESSING\nFUNCTIONS\n\ni\n\nDMS AND\n\nSOFTWARE\nFUNCTION\nSHEETS\n\n^\t\n\nPAYLOAD ELEMENT ANALYSIS\nDISCIPLINE Astronomy\t\n\nOFS No\t\n\nPAYLOAD ELEMENT AS-0I-S Ins Shuttle Ift Telescope Facility\n\nEXPERIMENT ImM1lER/NAME\n\nOBJECTIVERNSTRUMENT\nCIIARACTERISTICS\n\nINSTRUMENT\nREQUIRisD/\nSENSOR TYPE\n\nINSTRUMENTATION\n\nXAS 004 Polarlmetry, linear\nand circular\n\nObtain complex index of\nrefraction and particle size\n\no AS-001\nTelescope,\n\na Caeaegraln\ntoleacope\n\nIR, E/3,\n\ngather Information on surface of planets, satellites,\n\nr\n\nCaaaegrain,\nIm\n\n}\'\n\no AS - 005\nPolarimetor,\nLinear k\nCircular\n.\n\no Carrie\n\nCarrier /\nSelector,\n[multiple\n\nI\n\nN\n1\n\nInstrument\n\n4f\n\na Polarizing prlama\non polarization\n\nwheel\n\n^ 3 ^=\nQ\t\nQ\n\nParameters measured;\n\na AS -009\nUnit, Elcc-\n\na Neutral density\nfilter\n0\n\no Monitor and data control\no Chockout\n\n-\t Type: Digital\nNo. of 131tas\t b\n\no Calibration\n\n- Sampling Rates\n100 a pe\n- No. of Channolss\n\na Experiment sequencing control\no Command and control\na Painting contrul\n\nField steps\n\no\t Fibre optic eYilssr\n\na Reference frame transformations\n\na Filter wheal\n\no State vector\n\no Beam soloctor\n\na Annotation:\nTime\n-\t Painting\n\na Photovoltaic cell\n\n- Wavelength\n\ntronice,\n\nChockout,\n\nCOMPUTER\nSOFTWARE FUNCTIONS\n\n.ro Radiance polarization\n\noflntars3ellar matter;\n\nasteroids and duet clouds of\ncometa.\n\nSCIENCE DATA\nCHARACTERISTICS\n\n- Polarizor\n\n0 Power supply\n\nTeat, Control\n\na Alphanumorlcs\n\no Electronics\n\n- Display parameters\n\n0 A5-013\n\nItata\n\nComputer,\nDigital\n\n0 Qraphicas\n\n-\t Display intensity\n\no AS-014\n\nversus angle\n\nlAnplay,\nMultifunction\n\na Editing and decommutation\n\no AS-015\n\na Time conversions\n\nPanel, Indicatore/\n\n0 Convert data to onginooring\nunits\n\nSwitches,\nData flow\n\nFigure 5\n\n4\n\n"^\n\ncharacteristics, the instrument(s) required, and sensor type were entered\nonto the payload element analysis form. Sensor/detector requirements\nwere identified, including spectral range, bandwidth, sensitivity, and other\ndistinguishing features leading to the characterization of the data produced.\nThe payload element analysis was completed with the identification\nof software functions applicable to each specific experiment.\nWith this approach, 42 payload elements containing 214 experiments\nwere analyzed and the resulting data was entered onto the payload element\nanalysis sheets.\n5.3.2 Software Function Analysis\nThe software function analysis consisted of identification of standard\nsoftware functions, a function description., and baseline sizing data. This\ninformation is contained in the software function sheets, a sample of which\nis shown in Figure 5-4. Thirty-nine functions have been identified and\ndescribed. Each has been assigned a standard name and identification\nnumber for subsequent use on the SAMM matrix.\nEarly in the study, it was determined that many experiments,\nalthough different in nature, shared common software functions. Due to\nindependent development and lack of standardization, these common functions\nwere often overlooked in the past because of different names for the same\nfunction or because slightly different algorithms accomplished the same end.\nThis study attempts to bring standard functions into view. For instance,\na Fourier transform as applied to an interferometer is no different than a\nFourier transform as applied to data compression.\nThe software functioa descriptions and sizing do not extend to standard\noperating system functions. \'They are strictly experiment- control/monitor/\nscientific-data oriented.\nThe sizing of a software function is based on a typical application which\nis spelled out in the function description where applicable. The sizing criteria\ncenters on main memory requirements, processor speed in equivalent adds\nper second (SAPS), and input/output volume and rate. For a given function,\nthe number of instructions remains -fairly constant; therefore, the main\nmemory requirement is basically dependent on the size of the I/O buffers.\nProcessor speed is dependent on the number of data words to be processed\nin a given amount of time. In either case, the prime variables are the number\nof words per I/O sample and the sample rate. Provision has been made in the\nSAMM matrix to adjust sizing values because the prime variables change from\napplication to application.\n-\'25-\n\nSOFTWARE FUNCTION\n401\t\n\nCalibration [Simple Detectors\n\nCalibration on a one-time-per-mission basis requires operation of the experiment with\nknown reference sources. These may be black-body sources, light sources, or known values of\nvoltage, current, radiation, and other standards. The output of the sensor/detector is used to\ngenerate calibration curves/values with which to modify or correct the source data of interest\nduring operation of the experiment.\nTables - Input Buffer\nOutput Buffer\nData Tables\n\n100 words\n\nInstructions\n\n500 words\n\nExecution Rate\nProcessing Time\nEffectivo, Input Rate\nOutput Rate\n\n1 per mission\n300 sec.\n5 BPS\n5 BPS\n\n50 words\n100 words\n\nN\n;\'%\t\n\n10 BPS\n50\n\nEffective I/O Rate\nEffective SAPS\n\nFigure 5-4\n\n5. 3. 3 SAMM Matrix\nThe SA-MM rnatrix (example shown in Figure 5-5) provides a means\nof correlating experiments to software function.. It was designed to provide\nan input to an automated data base application should the need arise in\nfuture study activities.\nThe vertical columns contain a sequential list of payload elements,\nfurther subdivided into experiments. In many cases, the experiment\nelement serves as an experiment facility (as in AS-01-S); therefore, all\nfunctions common to the facility are allocated at the payload element level,\nand experiment-unique functions are allocated at the experiment level.\nThe horizontal, columns contain the 39 identified software functions.\nThe design intent is that the sizing for each software function would become\na part of the data base mentioned above, and thus permit the summing of\nexperiment loads into payload elements and payload element loads into\npayloads.\n\n--\t\n\nIa the sample matrix, black dots at the matrix intersections indicate\nthe software functions that apply to a given experiment or payload element.\nShould the automated data base be generated, these dots would be replaced\nby numbers representing a complexity factor to be multiplied times the\nsizing data for a given function. The complexity factor (or multiplier) would\nbe dependent on the 1/0 volume and rate (i.e., words per sample and sample\nrate). This approach allows broad flexibility in the combining of payloads\nand calculating the resulting data management system requirements.\nMass memory requirements have not been specifically discussed in\nthe sizing criteria; however, a capacity of 100 million bits will support any\nexperiment or payload element evaluated. The overriding considerations\nwith mass memory are that it should provide rapid random access and\nread/write capability.\n5.4 Results Summary\nExperiment analysis did not generate any real surprises. It did\ntend to confirm what had here-to-for been intuitively understood. In general,\nthe findings were:\no\t\n\nCurrently planned on-board software functions generally do\nnot exceed planned data management system capabilities\n(possible exception is AMPS).\n\n-27-\n\neo\nr?\t\n\n4^\nt-V\n\n\t ^q ,\n\nI sx PER1\xe2\x80\x94\nPAYLOAD ELEMENT Tw1F\n\nI\n\no\n\nt^\t\n\n\xc2\xb0 \t\n\nq\t\n\np! 1\t \t\n\n^f\t\n\nG\t\n\n^^^, r p\n\n^\t\n\n\t\n\n4 s^\t In\n\t\n\nl\n^\xc2\xb0\non\n\nt01\n\n\'^^\t\n\nr^G ^\n`pG ^^\'P\n\'Q\n1<^ ^P r\n\'\t\n`, ^fr ^ ^^ "r^, W +\n\n.e tf\t\n\n^Q\n\nJ\n\n^^,{^,\n\n^c\t\n\n,^ ^G\t\n\nbar\n\n\xc2\xb0ra G o^\t f\nt01+\n`p^^ \xc2\xb0^ ^^^ \xc2\xb0\xc2\xb0\'^\'o\n\nl\t\n\n.lr\t\nL\t\n\nIn9\t\n\n43\n\nfill\t\n\n3n\t\n\n+\n\n70\t\n\nIna\t\n\n`!`\n\n3n.\t\n\nIn.\t\n\n"^\t\n\n)nt\t\n\n^br\n\nC\t\n\n^ c\t\n\n^\'\nIn\t\n\ns^\' ^.I. ry\n\n,^`\t\n\n\xc2\xb0,1\xe2\x80\xa2 rpk\nS\t\n\nG^-^\na^ ^^\'\n\ni\t\n\n^j\n\nIn.\n\n-\n\nI\n\nxA5001\nXASOOZ\n\n1\n\nx.AS0 a 3\n\nCV\n00\n\n1\n\nC4\n\nXAS004\nQ\n\nXASO05\n\nI\t\n\nXAS006\n\nAS-OR-S\n\n^}\n\nXASO41\nXA5042\nI\t\n\nXA5013\nXASO44\n\nAS-05.S\t\n\n1^\'\n\nI\nXAS051\n\nFigure 5-5\n\n66\n\nI\t\n\nI\t\n\nI\t\n\n!\t\n\nI\t\n\no\t\n\n"Next generation" on-board software functions can generally\nnot be acconamodated within planned data management system\ncapabilities.\n\no\t\n\nCurrent generation experiments rely heavily on fil n. Future\ngenerations will use more and more Vidicons and CCD\'s for\ndata collection..\n\no\t\n\nPrime software technology emphasis areas are:\nPattern Recognition.\nImage Processing.\nData Compression.\n\ni\n\n\t\n\n6.\t\n\nTECHNOLOGY DRIVER SELECTION\n\nIn this task, the technology emphasis area identified in Section 4,\nSpace Technology Forecasts Review, and Section 5, Experiment Analysis,\nare further analyzed to identify the associated Technology Drivers. This\nsection summarizes the results of that effort.\nTo ensure a clear understanding, we must first clarify the meaning\nof the term "Technology Driver." Technology is generally defined as the systematic knowledge of, and its application to, industrial processes. A Technology Driver is, then, an incentive, a need to obtain this systematic knowledge, or apply available systematic knowledge to an industrial process. In\nother words, Technology Drivers are, simply, problems for which a solution\nis desired and needed. The idea(s) put forth to solve the problem are, what\nwe call in this study, Technology Items.\nProblems, and therefore Technology Drivers, can occur on many levels\nof detail. For example, the need for a more efficient method of programming\ncomputers (the Technology Driver) resulted in the idea (Technology Item) for\nthe use of higher order languages. Subsequently, the use of high order languages presented an efficiency problem (the Technology Driver), resulting in\ndevelopment of optimization techniques (the Technology Item).\nAlso, a problem may have several aspects, thus requiring multiple,\nrelated Technology Items; or it may have several possible solutions, thus,\nagain, resulting; in multiple Technology Items.\nThe technology emphasis areas described in Section a were divided\ninto three categories. In this section, the results of the analysis are described\nin accordance with those categories. It should be noted, however, that the\nTechnology Drivers do not necessarily fall within the same category as the\nassociated emphasis area. For example, a technology emphasis area within\nthe category of software system architecture may point to a Technology Driver\nassociated with the category of software development. The summary presented in Section 2. 3, Results, lists the Technology Drivers in the appropriate\ncategories as they were recategorized subsequent to the Technology Driver.\nSection discussed here.\n6.1\t\n\nSoftware Development\n\nDuring the review of Software Development Technology, two major\npoints recurred in various guises:\no\t\n\nThere is no facet of software development that is considered\nto be satisfactorily performed in a production mode. That is,\n_34-\n\n\t\n\nmajor shortcomings are identifiable in every step of the development process (with the possible exception of coding). There\nis a general feeling of inadequacy, dissatisfaction, and a lack\nof confidence in the merits of proposed solutions.\no\t\n\nThere have been only two major breakthroughs in the history\nof software development. The first one was the use of higher\norder languages, and the second was the identification of structured programming techniques. The former is now practically\nand generally implemented and has resulted in tangible improvements. The latter is only sporadically applied and, therefore,\nis not yet generally used in a production mode.\n\nAlmost every facet of software development can., therefore, be a Technology Driver. Further investigation into the problems, proposed solutions,\nand status of technology development revealed, however, a common cause of\ndifficulties. The key to this common cause is the lack of Software Design\nEngineering technology. software Design Engineering is conceived to corer\ninterpretation of requirements and creation of a design, but not the physical\nimplementation of the software.\nas\n\nThis software design problem is an even more difficult problem in the\narea of payload software than it is inmost other areas. Payload Software is\ngenerally part of an "embedded" system, that is, a computer system that is\nonly part of, and integrated into, an equipment complex such as an avionics\nsystem.. The software design problem itself is difficult enough, but in the\n"embedded" system, these difficulties are multiplied by the external constraints\nimposed by the total system.\nWe will not try to describe here all the facets of Software Design;\nhowever, some of the issues are discussed below:\no Visibility of Design; for example, how early in the cycle can\na design be made visible so that proper planning can be performed? How should a software design be described so that\nis provides sufficient direction for the next level of design\nor so that is can be evaluated against level of design? (Note\nthat a design becomes a requirement for the next lower level\nof design.) This brings as to the even more basic questions\nof: what should be specified in a software requirements document, what is really essential, and how it should be described?\nHow is traceability maintained? There are, or course, many\nother questions.\no\t\n\nORrGJJ^\n\nOp \'PooQ^ ,7Z\n\nDesign Techniques; for example, how should a software system be structured to be ma nageable? ...Testable? ..._Mo d"dab l.e ?\n-31-\n\nI\t\n\nI\t\n\nI\t\n\nI\t\n\nI\t\n\nl\t\n\ni\t\n\ni\n\nIt is generally believed that no hard and fast rules can be\nderived. We are therefore looking for principles that can be\napplied to a specific system to derive the rules and standards\nfor a particular project. Furthermore, they must be usable\t\nin a normal production environment.\t\no\t\n\nDesign Evaluation; for example, how can a design be realistically evaluated before the full implementation is started?\nAssuming that we can describe the design and have used sound\nprinciples of design, how caii we establish that the physical product\nwill be satisfactory? A satisfactory software produce, must have\ndesirable qualities with respect to its man-machine interface;\nit must be relevant to the system functions it purports to serve;\nand it must be reliable in its operation.\n\nAs can be seen from such issues, Software Design Engineering has\nmultiple interrelated. facets. Current and past technology developments\nhave primarily addressed the development cycle from the point that a complete design specification is available. Some effort has been made in formalizing the design specification. (Ref. Table 6-1); however, only recently has\nrecognition been given to the fact that all successes and failures of systems start\nwith the proper design principles or lack thereof. The interrelationships between\nthese facets axe not yet well understood.\nWe made an atter..apt to subdivide Software Design Engineering into\nmultiple Technology Drivers. However, because this area is so undeveloped.\nthis seemed to be presumptuous. We have to analyze/understand Software\nDesign Engineering as a whole before we can se and develop the parts.\n6.2\t\n\nj\n[\n\nSoftware Systems Architecture\n\nWithin this category are grouped those areas concerned with software\nsystem structures and attributes required to fulfill general system concepts\nand capabilities not solely associated with specific applications.\nNote that this technology is closely associated with other technologies\nthat relate to the system as a whole. This is particuarly true of onboard data\nmanagement systems where the computer and its software have a more\nsubordinate role than in most groundbased computer applications.\nFour emphasis areas were previously identified within this category\nwhich could affect onboard processing:\no\t\n\nFunctional distribution or processing.\n\no\t\n\nFault\'\xe2\x80\xa2ToleraiafSystems.\t\n-32-\n\n\xe2\x80\x94\n\n\t\n\n^\t\n\n4\n\nI\t\n\nREFERENCES - SOFTWARE DEVELOPMENT TECHNOLOGY\n1.\t\n\nENGINEERING OF QUALITY SOFTWARE SYSTEMS - SOFTWARE\nFIRST CONCEPT, MITRE CORP., JANUARY 1975, NTIS AD-AO07\n768.\n\n\tZ.\t\n\nSTRUCTURED PROGRAMMING SERIES. VOLUME XI - ESTIMATING\nSOFTWARE PROJECT RESOURCE REQUIREMENTS, IBM FSD,\nNTIS AD-AO16 416.\n\n3.\n\nSOFTWARE AND ITS IMPACT: A QUANTITATIVE ASSESSMENT,\nBARRY W. BOEHM, DATAMATION, MAY 1973.\n\n4.\n\nIS SOFTWARE DESIGN "WICKET"?, LAWRENCE J. PETERS AND\nLEONARD L. TRIPP, DATAMATION, MAY 1976.\n\n5.\n\nHOW MANY DIRECTIONS IS TOP-DOWN?, DENNIS P. GELLER,\nDATA.MA.TION, JUNE 1976.\n\n6.\n\nSOFTWARE DEVELOPMENT MANAGEMENT, DR. ALVIN E.\nNASHMAN, IEEE EASCON 1974 RECORD.\n\n7.\n\nTHE ARCHITECTURE OF SOFTWARE, DR. FREDERICK M. HANEY,\nSOURCE PUBLICATION NOT KNOWN.\n\nS.\t\n\nSOFTWARE TECHNOLOGY PRESENT AND FUTURE, BOBBY HODGES,\n14TH ANNUAL SOUTHEAST REGIONAL ACM CONFERENCE, APRIL 23,\n1976.\n\n9.\n\nTHE PROGRAM DEVELOPMENT PROCESS, PART 1, THE INDIVIDUAL\nPROGRAMMER, JOEL D. ARON, ADDISON - WESLEY, 1974.\n\n10.\n\nTHE MYTHICAL MAN-MONTH, ESSAYS ON SOFTWARE ENGINEERING,\nFREDERICK P. BROOKS, JR., ADDISON - WESLEY, 1975.\n\n11.\n\nTHE SYSTEMATIC EVOLUTION OF A NASA SOFTWARE TECHNOLOGY.\nAUERBACH ASSOCIATES, NTIS N73-14191, AUGUST 1972.\n\n12.\n\nINFORMATION PROCESSING/DATA AUTOMATION IMPLICATIONS OF\nAIR FORCE COMMAND AND CONTROL REQUIREMENTS IN THE\n\n\xe2\x80\xa2 \xc2\xb0\t\n\n1980\'s (CCIP-51s).\n\nTable 6 -1\n_33-\n\n!\t\n\n1\t\n\n1\t\n\no\t\n\n^\t\n\n^\t\n\ni\n\nIntelligent instruments.\t\n\no\t\n\nI\t\n\nHuman-system interface.\n\n-\n\nThe area of "Intelligent Instruments" turned out to be a subset (as far.\nas its software implications are concerned) of the more general area of "Func-_\ntional Distribution of Processing" and is therefore not analyzed by itself.\nThe remaining areas are each briefly discussed in the following\nparagraphs.\n\n6.2. 1 Functional Distribution of Processing\nA distributed system, as the term is used here, it a system which\ncontains multiple processors, each with its own executive, performing dedicated functions as part of a single partitioned system, usually each housing\nits own main memory. The concept is not particularly novel. However, it\nis only recently, through the advent of microcomputers, that is has become\neminently practical.\nA distributed system has two major advantages, within the context of\nthis study:\n\n1.\n\nSimplified development/modification of the system.\n\n2.\n\nAbility to perform parallel processing.\n\nSimplified development/modification of the system comes about through\nthe relative independency of the subsystems. That is, the computer process\nbecomes a more integral part of the subsystem t is assigned to and thus it\ncan be designed, adapted, and verified almost independent of the other subsystems. Particularly note, however, that the system design as a whole does not\nbecome any simpler, only more .flexible. The very flexibility may make the\nsystem design, or the choice of system design, more difficult. Any network\nof computers has, for the software as well as the hardware, the inherent problem of selecting interprocess communication techniques and selection of functions to be or not to be distributed. This is, generally, an ill-defined area.\nIt thus results in a Technology Driver entitled "System Partitioning/interconnection\nTechniques. 11\nThe ability to perform parallel processing is of particular advantage\nin "hard real-time" systems such as process control systems and payload\ncontrol systems. These systems are often characterised by the requirement\nto very rapidly respond to randomly (and therefore possibly simultaneously)\noccurring external events. This is classically a major problem in the use of\ncentralized systems and often becomes a trivial problem in distributed systems.\n_3a_\n\nA\n\n^\t\n\nI\t\n\nI\t\n\ni\t\n\nI\t\n\nI\t\n\n!\t\n\nI\t\n\nThe availability of low-cost processors has, in fact, a stronger effect\nthan just the distribution of processes that previously were performed in a\ncentral processor. It has the additional effect of "computerizing" processes\nthat previously were hardwired. This is particularly noticeable in current\ninstrument development. A natural consequence of this intensified usage\nof computers is that an increasing number of programs are being written by\nengineering personnel rather than professional programmers. This eliminates the problems associated with the classical engineer/programmer\ncommunication gap, but forces a significant need for truly user-oriented\nsoftware development systems and methods. This trend toward software\ndevelopment by non-programmers must therefore be considered a Technology\nDriver.\nA hardware technology that is associated with the availability of lowcost computers, but currently lagging, is the availability of low-cost, large,\nrapid-access storage. Accessing such memories and using them. effectively\nis currently a specialized software area. To enable engineering personnel\nto use such storage devices on a routine basis requires some method of\nsimplifying the use. This is another Technology Driver.\nTo su= arize, "the Functional. Distribution of Processing Technology"\nemphasis area has three Technology Drivers directly associated with it:\n1.\n\nSystem partitioning/ interconnection techniques.\n\n2.\n\nThe trend toward software development by non-progra =n.ers.\n\n3.\n\nVery large storage access simplifications.\n\nb. 2.2 Fault Tolerant Systems\nThe most all-encompassing definition of a fault tolerant system is that\nwhich is normally used in the IEEE publications: "A Fault Tolerant System is\na system that has the ability to execute specified algorithms correctly, regardless of hardware failures, system flaws, or program fallacies.\'T\nThis has been a fascinating, much-studied subject for a considerable\nperiod of time. There is, however, no system in existence that completely\nmeets the definition, and, in fact, one may never e. dst. Nevertheless, a\ni\nclose, cost-effective approximation of such a system may EMU a real need\nfor many applications.\nA major stumbling block for many designs has been the high cost of\nthe redundant hardware which is a basic requirement for such a system. This\nstumbling block is now being removed through the current advances in LSI\ntechnology.\n-35i- ;\n\nI\n\nThe ideal fault-tolerant computer system would be a system in which\nhardware failures are totally masked by instantaneous correction. Assuming\nthat such a system is technically feasible, the next stumbling block is the low\nreliability of the software. Minimizing the number of faults that are introduced into the software is a developmental problem that has been previously\naddressed under that category (Section 6. 1). What we are concerned with is\nproving that there are no software faults left in a particular software package.\nAs this is still beyond the state-of-the-art, it must be considered a Technology\nDriver.\nIt may, for various reasons, never be truly feasible to provide absolute\nproof of software correctness. It therefore behooves us to study an alternate\nmeans of preventing the software from causing a systemfailure. This\napproach is detection of software failures during execution. It is not clear\nif and how this is truly feasible; nevertheless, it is the only currently known\nalternate and roust therefore be listed as a Technology Driver.\nAssociated with the problem, of fault detection is the problem of fault\ncorrection and recovery. In many hardware schemes, and in all known software schemes of fault detection, one or more instructions have been executed\nby the time a fault is detected. Recovery from such unwanted instruction\nexecution is still an unsolved problem and must therefore still be considered\na Technology Driver.\nTo summarize, there are three highly significant software Technology\nDrivers associated with the feasibility of fault-tolerant systems:\n1.\t\n\nFault:-free software.\n\nZ.\t\n\nSoftware fault detection.\n\n3.\t\n\nSoftware recovery.\n\n6.2.3 Human/System Interface\nThis area is concerned with the ease and effectiveness of the communication of instructions and information between humans and computer systems.\nThis has been a fruitful area for technology development for a long time, and\nit remains to be a high-priority emphasis area.\n\nAs noted in the above paragraph, two distinct types of interfacing can\nbe distinguished. The first one deals with the, essentially one-way, communication that takes place when a user is instructing, i.e., programming, the\ncomputer. The second one deals with the interaction which may take place\nbetween a human and a computer system. as the system is executing an\napplication.\n-36-\n\nt\n\nE\n\nWith the increased utilization of computers, a new type of user, i.e.,\nthe non-programmer, is starting to dominate software development (as pointed\nout in Section 6.2. 1). With this, a shift to an increased emphasis on application-oriented languages (as apposed to General-Purpose Higher Order Languages)\nmust be anticipated. Language design is one of those typical software areas\nwhich have no real guidelines, standards, or evaluation criteria which can aid\nin the quick development of high order languages. Language design is frequently a costly process of long duration. Therefore, the development of an\napplication-oriented language design methodology must be considered a\nTechnology Driver.\nA compiler is needed for each language which will be designed and for\neach computer the language will be used for. Although considerable research\nand development effort has been expended, compilers remain as very expensive items. The potential proliferation of languages and computer systems\nobviously requires that these developmental costs be decreased significantly.\nThis Technology Driver, in this context, is separately identified, but actually,\nit is closely related to the preceding Technology Driver.\nWe will not elaborate here upon the need for and uses of interactive\ncomnzunicati.on between users and computer systems. This has been well\ndescribed in many other publications. We believe, however, that spaceborne\napplications are more likely to need more "natural s \' interactive communication\nmethods than most groundbased- applications. This belief is based on the\nsevere constraints placed on numbers of personnel, time, utilization, training, etc., for manned space vehicles. Much emphasis is being placed, within\nthe industry, on the development of interactive methods. The technology\ndriver, as fas as NASA is concerned, is the development of rmre natural\ncommunication methods,, such as voice, patterns, etc., which can complement\nindustrial developments.\nTo summarize, the Technology Drivers within this emphasis area which\nare of particular importance to spaceflight are:\n1.\n2.\n\n6.3\t\n\nLour-cost development of AOL compilers.\n\n3.\n\n1-\n\nApplication-oriented language design methodology.\n\nUse of "natural" communication methods.\n\nSoftware Applications\n\nThe software applications category encompasses those areas which\noperate and control experimental or operational equipment. These areas\nare driven by the type of planned space utilization more so than any other\ncategory.\n-37-\n\nI\t\n\n{\t\n\nI\t\n\nI\t\n\nI\t\n\nI\n\nThe natural emphasis has been on the feasibility of onboard implernentation of the state-of-the-art software available \xc2\xa3or these applications. Each\napplication area calls for a unique set of software functions. However, some\nof these functions are common to more than one application area and represent a set of basic functions which are performed onboard; for example, the\nfunctions associated with monitor, control, sequencing, and other housekeeping chores. Other functions are more specialized but still need to be performed\nonboard (such as pointing control., reference frame transformation, and scanning\ncontrol). There are yet other functions which could conceivably be performed\nonboard, depending on cost/benefit ratios. Some typical functions belonging\nto this category are pattern classification, image enchancement, registration\nand geometric correction, and filtering and noise removal.\nThree emphasis areas have been previously defined within this category\nthat could affect onboard processing:\no\t\n\nPattern recognition and image processing.\n\no\t\n\nData compression.\n\no\t\n\nAutomated intelligence.\n\n6.3. 1 pattern Recognition and IYnage Processing\nThis encompasses all the necessary processing involved in deriving a\nclassified (recognition) map which has been geometrically corrected to fit a\nreference map (or image). Generally, this involves processing of multidimensional data such as those obtained from m.ultispectral scanners and,\nconsequently, the computational demands are far more severe.\nThe classification or recognition activity involves three distinct phases:\no\t\n\nFeature selection.\n\no\t\n\nLearning.\n\no\t\n\nClassification or labeling.\n\nEach phase involves a variety of software functions, the choice of which\nis heavily dependent on the data environment and its characteristics. This is\nillustrated for a few typical cases in the Data Environment Scenario versus\nSoftware Function Matrix depicted in Table 6-2. A study of this matrix and\nunderlying concepts shows that classification, which is repetitively deployed\nto derive the labels of all the input data samples, is the single most important\nand common function. Accordingly, optimization of the computational needs\n-38-\n\nDATA ZNV q .IONME CT SCE:tA_atR VS. SCI \'i \'N,ti, 4 x U.,CT :C:1 {Ds5c1\n\ny\n\n-\n\n5L I] 5CaT1t?..RE : L\',SCT:C`t\n\n_\n\nI\n\n\',\n?A T 4:. R:1\tF\n\nI\t\n\n^L\n\nry\t\n^\n\nI\n\nI\t\n\ntf`\n\nlI\n\n^C.Ccm.1C. f\n\n3\t\n\nZNVLLC;11Iati T\t\n\n\'\t\n\n1\t ^\n\nu\n\nu\n\n^\n\n`c\n\nu\n\na\na\n\nu\n\nfk\n\n\xc2\xbb\n\ni\'\n\ns\t\n\ns\n\nu\n\no\t\n\n^\'\n\n^\n\nG\t\n\n.y\t\n\n1\t\n\nn\t\n\n\'\n\nL\n\nc\t\nG\t\n\nw\n\n^\n\n3\n\nx.21\t\n\n7.\n\n~\n.-r.\n\nM1uL u= =^ tber Af\nfeatttrss,\n\xe2\x80\xa2 Kaawn mbar of\neiass\xe2\x80\xa2s.\no\t Know= probabilistic\n\nL\n\nI\t\n^\t\ni\t\n\nde3e:iptiaiii.\n\nI\t\n\nI \xe2\x96\xba\t :Sanwa d:st _:buan\n\xe2\x82\xacI \taxruxietsrs.\n\n!\t\n\ni\t\nr\t\nI\t\n^\t\nI\t\n\nI\t\n\nI\t\nI\t\n\xc2\xb0\t\n\nI\t\nj\t\nI\t\n\ns\t\n\n4\n\nI\t\n\nI\t\nI\t\nI\t\n\nI\t\n\nI\t\n\n1\t\n\nI\t\n\nE\t\nI\t\nI\t\n\nI\t\nI\t\nI\t\n\n^\t\n\n\xe2\x80\xa2\t\n\nw\t\n\n^\n\nti\t\n\nis\t\n\nz\n\nH\t\n\n.ors.\n\nV\n\nh\t\n\nSn\n\nI\t\n\nt\n\nI\n\nI\n1\n\ni\t\n[\t\n!\t\nI\t\n\nI\n\nI\n1\n\ni\n\nI\t\nI\t\nI\t\n\nI\nI\n(\n\nldes3. Caso. Tl:sarvtiCady asxt :tuss ciss3E"carioa efficieacy\nj\n_ i\tI steaf :i $ L4.\t i3a:dlt\n1\npraetteai doss 4avtroaI\t I t:t$nt :Can ari\na.\n\nI\t\n1\t\nI\n\nI\n\'\n\n\\\n\nMost Cr? esi Case.\n4L{.a\xc2\xbb stsm i :or: anon\n\nl\n\n^ a ysiIsols.\t \'.his :mealy\n\n{\t\n\nE\n\nloads.\t RaUahlUtr of\nraduies has very ht;6\n\nI\t\n\n]\n\nI\t\n\n?to probabilistic\n\ndesezipticas,\n\na3\n\n^\n\nI\n\nI\n\nhigh cc-=tcaclana[\n\nI\n\n1\n\nI\n\nI svailialal.\n\n+\n\n\xe2\x80\xa2 "-gs at , = or of\n\nI\t\n\n1\n\n+\n\n+\t\n\nI\n\nI\nI\t\n\nI A Typical Casa\n\nI\t\nI\t\n\nt\n\nI\n\nI\t\n\nt\n\nr\n\nj\t\n\nI\n\nrtcagai_aa systorts.\n\nk\n\nKnown nurber of\n\nciasse3.\n\n1\n\nI\t\n\nfa0.ts:ss,\n\n3\n\nI\n\ni\n\nE Oaiyr tits 3=01 A..a I\nawait.\ncl.s.ssilizzdoa\n\n\xe2\x80\xa2\t\n\n^I\n\nI\n\n^\n\neia3sed.\n\nins\n\n\xe2\x80\xa2\n\nz\n\nI\n\n\xe2\x80\xa2\t 1,"eS^soaa ac-=acr ai\n2\n\n-1\n\n4\n\n+^.\t\n\nI\n\nI\t\n\nLarg\xe2\x80\xa2 nez. sber of\nfeatured,\n\n^LZNMxRXS\n\ny\n\nI\n\nI\t\n\nI\t\n\nI\n\n^.33t^ p^A4s. mat\n\nKnown cfistri l ucE..3.\nb\n\ns\t (3ekaowa disr--iaut:am\npar2=13tsr3.\nI\no\t ?_eiiab17 Labeled Trat,a,\n\n1\n\nD(l\n\n^\n\no\n\nk\t\n\n1\t\nI\t\nt\t\ni\t\n\nI\t\n\nI\n\na\t\n\nI\n\n\xe2\x80\xa2\n\nI\n\nl\nV\n\nEI\n\nV\n\nw\'I\t\n\n^k,\n\nL\n\nv\t\n\nd\n\nCr\n\n4\n\nn\n\na\n\n\'\t\n\n3\n\nv\'^\n\n^\na\n^\n\nai\n\na\n\n-\n\n^\n\n^\n\nTYPECAL C.1Sa5\n\nI\t\n\na\n\nt7\t\n\n.\t\n\nt\n1\n\nO\n\n=\n\n%+\t\n\nDESCRLM =445 -\n\nR\n\nI\n\nM\n\ny\n\ni 7\t\n\nY\t\n\nI-\n\nI\t\n\ns\n\n1\t\nI\t\nt\t\n\nI\n\nI\n\nI\t\n\nI\n\nr\n\nE\t\n\nI\t\nI\t\nI\t\nI\t\n\nI\n\n1\t\n\n4 asavmad is roast smdLes and axis .ag pacto"\n\nI\n\nI\n\nI\n\nalws x re t.Usd\'c. roads\n1 for r ya\t emacical\ncaavea\xc2\xb1 anew.\n\nLag sxraplss.\n1\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n.^\n\n^\\\n\nI\t\n\nI\n\nof\n\n1\t\nI\t\n\nI\n\nsawa ammber of\n\nr\t\n\nI\n\nLarge\n\nCC= a r\n\nfsata:esV\n\nc4ssas.\n\nE\t\n\ni\t\nI\n\nk\n\n{\t\n\n\'\nmiair==a nt,Snb*r ai\nfsatares.\n\n\xe2\x80\xa2\t Largs narnho r\n\ne\t\n6\n\nof\nof\t\n\n\xe2\x80\xa2\t Known distributions \t\n\xe2\x80\xa2\t Unknown dlst:ihution\t\npsranata : s.\t\ns\t t.ab\xc2\xa2lad T:3issi g\nSasttplex.\t\n\xe2\x82\xac \xe2\x80\xa2\t RolEabillty of IabaLs\nunknowns.\t\nI\n\nI\nI\t\n\nI\t\n\nI\t\n\nfessihLa =der\n\nsore\n\n^ araefxads.\nI A fairly pawarfui\naograaci to a rather\n13\xe2\x80\xa2vcra clash of _\n\nI\n\nl aeoble.^td_\n\n1\t\n\n: to as Learsi. g wit.% a\n\nI!\n\nF\t\n\nI\n\n1\n\ni loads t.%aa La C.c SC 3.\n\ne\n\nI\n\n\xe2\x80\xa2 rial4baU4 T rii:i;y\n\nSam}+lsA.\n\nI\t\n\n^\nI\t\n\nI\n\nps.:%meters.\n\nclasses.\n\n^\n\ni\n\n\xe2\x80\xa2\t KnowA distributions.\n\xe2\x80\xa2\t :\'n[taawn dint=hntioc\n\nKnown hrr:tber\n\nr\n\nreauLiant r: st:adoLaglai\n\n^ Less GAtazutatioaal\n\nt\n\nI\n\nclasses.\n\nE44tr y es.\t\n\nI\n\nI\t\n\nj\n\n\xe2\x80\xa2 c{4ana --umber of\n\nr\n\ni\n\nk\t\n\n3\n\nI\t\n\nI\t\n\ne\t\n\nI\n\nI\n\n:r=lafag Sarrnl\xe2\x80\xa2x.\n\nbacked by a Large tur:t-\n\ni\n\nI\t\n\n\xe2\x80\xa2\t Reliably Labeled\n\nI ?, =Ora -e&LEatic case\nbar of 3mdies and\n\nI\n\n\xe2\x80\xa2\t Unknown disc bcztioasr\n\n^\n\nI\n\na\n\n^\t\n\nE\n\n{\t\n1\t\n\nI\n\nZafsr. t_\n\nI\n`\n\n!\nI\n\n^\t\n\nI\t\n\n!!I\n\n1\n\nI\n1\n{\n\n]\t\n\nf\nI\n\n!\t\n!\t\ni\n\nr\n\n1\n\n^\n\ni\n\nTable 6-2\n\n(\nI\n\nprobabillsde m4cher.\n\nSEgni^c;%rdy :core\nversatiia apprasch\ncatering co a highly\n\nra2ltsde Class ai see-\n\nI csxr\'. os.\t Ra :srre<1 to :s\nI a umdlcd aoaroach to\n^\nfeatare salec t on and\nleaxetiag in Unixn`=IEa.taaehor savi.-Cameets.\n\nI\t\n\ni\t\n\nI\t\n\ni\n\nof this phase is of considerable significance in the context of the constraints of\nonboard processing. The actual classification method to be employed depends\nto a large extent on the data environment. Some of the commonly encountered\nclassification concepts are "the nearest neighbor, " "maxiinum. likelihood, "\nand "linear and piecewise linear. " There are, of course, numerous variations,\nboth conceptual and computational. A commonly employed computational alternative is the so-called "table Lookup" approach which is based on a trade-off\nof memti.ry versus computational time. It should be noted that, actually, the\ntable lookup approach is not an independent classification method, but only an\nimplementation scheme which can be used in conjunction with the maximum\nlikelihood concept or any other parametric classification concept. Table\nlookup schemes appear feasible only for relatively low resolution or limited\nchannels because of the memory requirements associated with this approach.\nThis problem may be overcome by a recently proposed alternative\ntable lookup scheme, wherein only the table corresponding to a set of prototypes\nneed by stored. These prototypes are derived through a multidimensional\nhistogram analysis. However, in this histogram analysis process, the\ncritical factor is the CPU time. This is mainly due to the associated large\narray search. Therefore, crucial to the onboard implementation of many of the\nsoftware functions associated with pattern recognition and image processing\nactivities, is the need for efficient software procedures for performing large\narray searches and sorting, which is accordingly viewed as a software Technology\nDriver. In addition, the classification processing of individual picture elements\nor samples can be carried out independently for each pixel and hence there is\na natural \'incentive for considering parallel processing as a means of reducing\nthe computational demands of this function. This can be achieved by restructurin\nand/or modifying the presently available software towards obtaining the maximum.\nbenefits of parallel processing. Parallel processing techniques are also viewed\nas an important Technology Driver arising from this emphasis area.\nIn another area of pattern recognition and image processing, the process of correcting the image to fit a reference neap or frame of coordinates\nmust be considered. This process involves two major software functions:\nregistration, defined as the task of deriving the transformations (rotation,\ntranslation as scale changes) needed for obtaining the best fit; and geometric\ncorrection, defined as the task of applying these transformations to derive\nthe transformed or corrected image. These operations, especially registration, involve a certain, amount of human interactions. The high computational\nloads associated with the geometric correction function can again be viewed as\na problem calling for more efficient large array manipulation procedures. Also,\nviewing the large image as a set of smaller images, the advantages of parallel\nprocessing may be realized.\nJa summary, the software Technology Drivers associated with the area\nof pattern recognition and image processing, are:\nr\n\n-40 -\n\no\t\n\nEfficient large array search and sortprocedures.\n\no\t\n\nParallel processing techniques.\n\n6.3.2 Data Compression\nBoth the Outlook for Space (OFS) report and, to a greater extent, the\nOAST Sumner Workshop Data Processing and Transfer report recognize the\nkey role of data compression technology in the advancement of the state-ofthe-art space-related information management systems. In particular,\nimagery data from a variety of multispectral scanners, as well as radar\nexperimental packages, are expected to dictate the demand levels to be met\nby these systems. Of course, each applicatioa calls for a different minimum\nlevel of fidelity in the data as it is received on the ground. Neglecting, for\nthe present, communication, channel (downlink) noise, and considering only\nthe fidelity in terms of level of detail required in the data by the different\napplications, at least four distinct categories of applications can be identified\nas those requiring:\nCategory 1: Exact reconstruction of the multispectral imagery at\neach point or picture element (pixel) in each of the\nscanned frequency ranges.\nCategory 2: A good approximation of the imagery at each point and\nin each frequency range with little visually perceptible\ndegradation.\nCategory 3: A single recognition map (derived by, say, multispectral classification onboard of the scanned imagery\ndata) which leads to lower data rates as compared to\ntransmission of the entire set of raw multispectral\nimagery data.\nCategory a: Identification of only a limited number of special\nfeatures or changes in the image resulting in further reduced data rates.\n\n..a1-\n\nH .c\n\nThe vast number of data compression techniques reported in the Utdrature can be categorized into two groups:\no\t\n\nRedundancy-reduction-oriented and information-preserving\nencoding schemes such as run coding, block coding, etc.,\nwhich result in a relatively low level of data compaction,\nbut which retain all of the information contained in the\noriginal picture.\n\no ITIgh-compaction-oriented approximate approaches which\nresult in significantly higher levels of data compressions,\nbut which sacrifice some of the information.\nThe needs of categories III and DT applications are not of much concern\nhere because the onboard recognition processing (cluster coding) envisaged for\nthese applications automatically brings down the data rates to reasonable levels.\nOf course, in these applications, the problem of concern is the feasibility of\nsuch onboard recognition processing in real time.\nHowever, the compre- ssion ratios attainable under the present state-ofthe-art, *i.thout exceeding tolerable Levels (3 percent) of degradation of the lma gery,\nfall short of the requirements of categories I and 11. - As is illustrated in Table 6-3\nthe first category of applications calls for approache.s which are essentially\ninformation.-preserving approaches, such as encoding schemes. While the\nactual compression ratios attainable under any approach is application, or data\ndependent, the ratios generally achieved by these encoding schemes are rather\ntoo low to be of significance in the context of- the data rates expected in future\nmissions. Thus, the needs of applications requiring exact reconstruction of\nimagery represent a technology driver at a basic level.; this calls for communications technology advancements and/or advancements in data compression\nalgorithms. The needs of the category II applications, which require an approximate reconstruction of imagery, can perhaps, however, be met through more\nefficient implementation of presently known techniques or combinations thereof.\nAs discussed above, transform coding (possibly in conjunction with\npredictive coding schemes such as DPCM or projection schemes) is viewed as\none of the more promising approaches for onboard implementation of imagery\ndata compression,. This technique can provide a compression ratio of up to\n5:1 when combined with variable length encoding. However, this is still insufficient to meet future demands, and, therefore, more complex combinations\n\n-42 -\n\nb\n\nr^r\n\nDATA COMPRESSION: REQUIREMENTS AND CURRENT :. TATUS CHART\n\n^b\nOF8 PRO J ECTED*\n\n^M\n\nCLASS OF\nAPPLICATIONS\n(REQUIRING)\n\nc%I\n\n113Y THE\nYEAR 2000)\nCOMPRESSION\nRATIO\n\nCURRENTLY\nAVAILABLE\nAPPROACHES\n\nASSOCIATED\nRANGE OF\nCOMPRESSION\nRATIOS\n\nIMPLEMENTATION\nCOMPLEXITY\nRATING\n\nREMARKS\n\nr\n\nEXACT RECON\xe2\x80\x94\nSTRUCTION OF\nTIIE ORIGINAL\nIMAGE IN EACH\nCIIANNEL ( I\n\n8\n\nENCODING\nSCIIEMES\n\n1.2 - x\n\n1\n\nCOMPRESSION RATIOS\nCURRENTLY ATTAINABLE\nTOO SMALL, MAJOR CON\xe2\x80\x94\nCEPTUALITECIINOLOGICAL\nADVANCEMENTS NEEDED\n\n16\n\nDI\'JCM AND OTHER\nAPPROXIMATE\nAPPROACIIES IN A\nSTANDALONE\nMODE\n\n1.4-3\n\nZ\n\nTUESE APPROACHES BY\nTHEMSELVES FALL FAR\nSHORT OFTHE REQUIRE\xe2\x80\x94\nMENTS OF TIIIS CATEGORY\n\nI-D TRANSFORM IN\nSPECTRAL DOMAIN\nCOMBINED WIT II\nDPCM ANSI HUFF\xe2\x80\x94\nMAN CODING\n\n3\xe2\x80\x945\n\n3\n\nMOST PROMISING APPROACH\nAS PER TRW STUDY WIUCII\nSTILL DOES NOT LEAD TO\nDESIRED COMPRESSION\nRATIOS\n\n7\n\n6\n\nNEEDS DETAILED ASSESSMENT AND FURTHER STUDY\nTO DETERMINE THE EFFECTIVE COMPRESSION RATIOS\nAND IDENTIFY PROBLEMS (IF\nANY) IN THEIR ONBOARA\nIMPLEMENTATION\n\nI0 OR MORE\n\nFAIRLY HIGH COMPRESSION\nRATIOS ATTAINABLE. HOWEVER, OTIIEII ONBOARD\nIMPLEMENTATION PRODLEMS ARISE\n\nCATEOORY)\n\nI\n\nr(a\n\nW\ne\n\nGOOD APPROXIMATION OF\nTHE ORIGINAL\nIMAGE WITH\nLITTLE VISU\xe2\x80\x94\nALLY PI:RCEPTILILE f)iSTOitTION IN EACH\nCHANNEL ( 11\nCATEGORY)\n\nUTIIER ALTERNATIVES, SUCH AS Z\nAI4D 3DTRANSFORMS\nIN SPATIAL ( AND\nSPEC \'T\'RAL) DOMAIN\nFOLLOWEDBY DI\'CM\nAND ENCODING\nTECIINIQUES, NOT\nEVALUA \'T\'ED BY THE\n\nTilly STUDY\nONLY A REC\xe2\x80\x94\nOGNITION MAP\n1111 CATEGORY)\nOlt ONLY CER\xe2\x80\x94\nTAIN KEY FEA\xe2\x80\x94\nTUBES OR\n\n400 - 2000\n\nCLUSTER CODING,\nCLASSIFICATION.\nCHANGE DETECTION\nMETHODOLOGIES\n\nto\xe2\x80\x94 100\n\nCHANGES IN\nTIIE SCENE (IV\nCATEGORY)\nOFS PROJECTIONS OF "WHAT WILL BC\' $ FALL SHORT OF "WHAT IS DESIRED" (IN VIEW OF TIIE EXPECTED DATA RATES IN\nFUTURE MISSIONS) IN THE FIRST TWO CATEGORIES OF APPLICATIONS.\n\nTable 6-3\n\n(including possibly two three-dimensional transforms of the multispectral\nimagery), along with adaptive concepts, have to be investigated. Also,\nimplementation involving two-dimensional transforms in the spatial domain\ndo not need, a priori, band-to-band registration and are of value when individual band imagery is needed separately, possibly by different users. The\nscope of this approach for onboard implementation has not been explored\nfully in view of the inherent computational complexities. As for example;\nconsider a 1024 by 1024-pixels image. It is obvious the image cannot\nreside in the core of the onboard processor, even with the projected\nadvancements in hardware technology. Thus, the process of matrix manipulations, such as transpositions, which are essential to application of the \t\ntwo-dimensional transform to the image matrix, pose a. software implementation problem. Preliminary assessments derived by an awareness of the\nresource requirements has brought out the existence of a possible Technology\nDriver in terms of a need for improved software procedures for matrix transposition of large matrices. The other Technology Driver of importance to this\narea is high-speed buffering techniques which arise in view of the very high\ndata rates expected in future missions.\nIn summary, the major Technology Drivers associated with the area of\ndata compression are:\na\t\n\nEfficient large-array (two-dimensional) manipulation procedures.\n\no\t\n\nHigh-speed buffering techniques.\n\nb. 3.3 Automated Intelligence\nThe area of automated intelligence is still in an embryonic stage, and\nas such, the system concepts are not yet fully developed. While it has different\nconditions to different disciplines, in the context of space exploration,, automated\nintelligence can be viewed as the ability of systems to automatically adapt their\nbehavior to the environment and its characteristics. As for example, it could\nbe the ability to make decisions, based on the results of preliminary experiments about the design of further experiments. In effect, it extends the range\nof human facilities such as sensing, recognition, and decision making to remote\nenvironments wherein direct real-time manual control is not feasible. Basic\nto such capabilities are the fields of development generally referred to as scene\nanalysis and adaptive and learning control systems. Technology associated with\nautomated intelligence systems covers many disciplines, and, accordingly, the\ndrivers are at different levels; conceptual, algorithmic, and software pr ocedares. Even with scene analysis, there are distinct hardware and software\nrelated problems. The software functions associated with automated scene\nanalysis, a requisite to automated intelligence, are numerous and still in the\ndevelopmental. stage. They range in complexity from simple functions, like\n-44-\n\na.,. -\n\na\n\nthe smoothing of an image, to complex functions of three-dimensional object\nrecognition and total scene descriptions using picture grammars and related\nlanguages. There is a growing body of literature on techniques and algorithms\nto perform these functions. Thus, one can visualize an impressive array of\nindividual pieces of software being available for the analyst. However, the\nmajor problem would be to develop an efficient system which will be capable\nof adaptive selection and deployment of these individual functions to suit the\nenvironmental needs and constraints. While the interest in the individual\ndisciplines ensure progress in all those areas related to automated intelligence, the requirements of the space-related activities require coodination\nof these developments. In terms of software technology, this translates into\npursuing the design and control of adaptive procedures.\nIn summary, the major Technology Driver associated with automated\nintelligence is the design and control of adaptive software procedures.\n\ni\n\n-\t\n\ni\n\nF\t\n\nrye:.\n\n5\n\n-43-\n\n\t\n\nI\t\n\nI\t\n\t7.\t\n7.1\t\n\nI\t\n\nI\t\n\nI\n\nFUTURE PLANS\nPhase I\n\nCompletion of Phase I has established the data base and background\ninformation required to begin the final phases of the payload software study.\nFigure 7-1 depicts completed activities (crosshatched area) and the activities\nyet to be performed.\nCoordination of activities and sharing of results with the NASA\nCenters, as well as interfacing with other on-going studies within MSFC,\nwill be a continuing effort. Travel during the final phases will be dictated\nby needs.\n7.2\t\n\nPhase 11\n\nPhase II was initiated the last week of November 1976. Phase TT\nrepresents a consolidation and evaluation of the large amount of data\naccumulated in Phase I as preparation for the final Phase III activity which\ncenters on generation of technology development plans. Specifically,\nPhase TT will. consist of the following items:\n0\t\n\no\t\n\nDerivation/evaluation of Technology Items.\n\no\t\n7,3\t\n\nDetailed analysis of Technology Drivers.\n\nMerging unique automated payloads data into the data base\nas it becomes available.\n\nPhase III\n\nPhase III is the culmination of the current study. Activities for this\nphase will be:\no\t\no\t\n\nTechnology development analysis.\n\no\t\n\nTechnology development planning guide preparation.\n\no\t\n7.4\t\n\nCost/time/priority assessment of software Technology\nItems.\n\nPublication of final report.\n\nAdded Effort\n\nAnother effort, not originally part of the Payload Software Technology\nStudy but closely related, is an analysis of the Spacelab flight I and 2 AO\nresponses for additional software Technology Items.\n-46-\n\niI\n\n\':\'AYLOAD SOFTWARE TECHNOLOGY STUDY OVERVIEW\n\nPHASE III\n\nPHASE II I\nDETA11,E1)\nANALYSIS OF\nTECHNOLOGY\nDRIVERS\n\nCOST.\'/TIME/\t\nPRIORITY\t\nASSESSMENT\t\nTECHNOLOGY\t\nDEV E LOPME N\'1\t\nI\'I EMS\t\n\nTECHNOLOGY\t\nDEVELOPMENT\t\nANALYSIS\n\nFIN A1,\n--^ REI\'Olt\'l\n\nTECHNOLOGY\nDEVE LOPMENT\nPLANS\n\nFigure 7-I\n\nr\n\n` J\n\nYJ\n\nY\n\nAPPENDIX A - MISCELLANEOUS\n\n>\n\n\t\nw.\n\nDEFINITION OF TERMS\n\nm\t\n\nEXPERIMENT\nA CONTROLLED PROCEDURE CARRIED OUT TO DISCOVER, TEST,\nOR DEMONSTRATE THROUGH THE USE OF A GROUP OF RELATED OR\nCOMPLEMENTARY INSTRUMENTS, USED IN VARIOUS COMBINATIONS\nAND OPERATING MODES, TO COLLECT DATA PERTAINING TO SPECIFIC\nASPECTS OF THEIR DOMAIN.\nINSTRUMENT\n\xe2\x80\x94\t\n\nA DEVICE FOR MEASURING AND SOMETIMES RECORDING THE\nVALUE OF A QUANTITY UNDER OBSERVATION.\n\nINSTRUMENTATION\nTHE HARDWARE COMPONENTS USED FOR DETECTION, OBSERVATION, DATA\nCOLLECTION MEASUREMENT, AUTOMATIC CONTROL, AUTOMATIC COMPUTATION, COMMUNICATION OR DATA PROCESSING IN SUPPORT OF OUR\nEXPERIMENT OBJECTIVE.\n\n\xe2\x80\x94\t\n\nSENSOR\nTHE GENERIC NAME OF A DEVICE THAT SENSES EITHER THE ABSOLUTE\nVALUE OR A CHANGE IN A PHYSICAL QUANTITY (E. G., PARAMETERS\nSUCH AS TEMPERATURE, PRESSURE, OR THE INTENSITY OF LIGHT,\nSOUND, OR RF) AND CONVERTS THAT VALUE OR CHANGE INTO A USEFUL\nINPUT SIGNAL FOR AN INFORMATION GATHERING SYSTEM.\n\nm\t\n\nDETECTOR\nDETECTS THE PRESENCE OR ABSENCE OF A PHYSICAL QUANTITY,\nSUCH AS RADIATION, CHEMICALS, ETC.\n\n--\t\na\n\n-,^--_.\nDEFINITION OF TERMS (CONTINUED)\ne\t\n\nPAYLOAD ELEMENT\nA RELATED COMPLEMENT OF INSTRUMENTS, SPACE HARDWARE AND\nSOFTWARE CARRIED TO SPACE TO ACCOMPLISH A MISSION OR DISCRETE\nACTIVITY. CAN CONTAIN ONE OR MORE EXPERIMENTS.\n\nw\t\n\nINSTRUMENT FACILITY\n-- A GENERAL-PURPOSE DEVICE CONTAINING MULTIPLE SENSORS AND\nDETECTORS TO SUPPORT THE PURSUIT OF SCIENTIFIC DATA WITHIN\nA GIVEN DISCIPLINE,\n\nw\n\nr\t\n\nPAYLOAD\n\nONE OR MORE PAYLOAD ELEMENTS, EITHER AUTOMATED OR SORTIE,\nCARRIED TO SPACE BY THE SPACE TRANSPORTATION SYSTEM.\nFLIGHT\nTRANSPORT OF ONE PAYLOAD TO SPACE.\n\xc2\xae\t\n\nMISSION\nTHE PERFORMANCE OF A COHERENT SET OF INVESTIGATIONS OR\nOPERATIONS IN SPACE TO ACHIEVE PROGRAM GOALS OR OBJECTIVES (ONE\nOR MORE FLIGHTS). .\n\nEXPERIMENT ANALYSIS TASK PLOW\n\nSPDA\t\nLEVEL B \t\nDATA\t\n\nEXTRACT\t\nIDENTIFY\t\n-PAYL. ELEME S SENSOR/- \t\nDETFCTOR\t\n-\'EXPERIMENTS\t\nRE QUIRE\n,\n-INSTRUMENT\t\n\nSPECTRAL, RANGE\nBANDWIDTH\na SENSITIVITY\'\'\n\ta ETC.\n\nPAYL. DET. STUDIES\nCHARACTERTZE\nSCIENCE DATA\n\n\xe2\x80\xa2\t\n\nIMAP\n\nP\n\nUSERS INFO.\n\nDETAIL\nPAYLoELEMEI\nCOMPONENTS\n\nPAYL.\nELEMENT\nANALYSI-S\nSHEETS\n\nDMS AND\n-DEVELOPMENT\nSIZING\nANALYSIS\n\nPREVIOUS PROGRAMS\nSoFTWAR\nANALYSIS\nMASTER\nMATRIX,\n\nIDENTITY\nPROCESSING\nFUNCTIONS\nPREVIOUS STUDIES\nSOFTWARE\nFUNCTION\nSHEETS\n\nSOFTWARE FUNCTION SIZING\nCORRELATED WITH AVAILABLE DATA WHERE POSSIBLE.\nNEXT GENERATION ON--BOARD PROCESSING FUNCTIONS SIZED WITH ASSUMED\nLIMITATIONS MAY DIFFER FROM GROUND PROCESSES SIZING.\nk\n(71\n\nn\t\n\nFUNCTION SIZING INFORMATION IS "TYPICAL. k \' SAMM ENTRIES PROVIDE\n"COMPLEXITY FACTOR\' S WHERE APPROPRIATE.\nOPERATING SYSTEM FUNCTIONS AND FUNCTION; UNIQUE (BUT RELATIVELY\nMINOR.) TO SINGLE EXPERIMENT NOT INCLUDED.\n\nn\nEXPER.ES+S a ANA L^ YSIS\nDATA MANAGEM ,\'STEM ASSUMPTIONS\nEST\n0\n\n\t\n\nCOMP,V*_ A.`!RJN CAPABILITY\nI COMPUTER PLUS BACKUP, 64K OF MAIN MEMORY EACH - I28K 16-BIT WORDS\n-\t\nA US -CYCLE TIME, 340K EQUIVALENT ADDS PER SECOND PER COMPUTER\n\t\n\n0\n\nr\t\n\nMASwTOR.AGE\nTAPE OR EQUIVALENT\nREAD/WRITE CAPABILITY\nRAPID ACCESS STORAGE\nDRUM, DISK, OR ADVANCED TECHNOLOGY DEVICES (CCD, BUBBLE,\nELECTRON BEAM)\n-\t\nMIi\'+xM UM 1100 MEGABITS CAPACITY\n\nREAD/WRITE\n^,\t\nol\n\n\xc2\xae\t\n\nDISPL.Ai YS\n-\t\n1`40 NITOR/FOV COLOR CRT WITH-REFRESFI\nALPHANUMERIC/GRAPHICS DISPLAY (COLOR CRT WITH REFRESH)\nINPUT./OUTPUT\nDA.\'XA. BUS IMB (440KB EFFECTIVE)\n\t NUMBER OF ;RAU\'S\n13UF- 11"\n--\t\n\nDMA\n\nINPUVOU`IFUT LIMITATIONS ARE RECOGNIZED, BUT IT IS ASSUMED THAT\nADVANCING TECHNOLOGY WILL REDUCE OR EVEN REMOVE THESE LIMITATIONS\nTHROUGHt-\t\nDISTRIB f ED SYSTEMS\nHIGE;ER --RATE BUS\n-\t\n* NOT NOW AVAIL\xe2\x82\xacABLE ON SPACELAB\n\n\t\n^- :.\n\n.\xe2\x80\xa2\t\n\n-\t\n\n_.\t\n\n^\t\n\n^\t\n\n_,\t\n\nON \xe2\x80\x94BOARD APPLICATION SOFTWARE FUNCTIONS \xe2\x80\x94 TYPICAL\n\n0\t\n\nCOMMAND AND CONTROL, DISPLAY, AND DATA ROUTING.\n\na\t\n\nPOINTING AND SCANNING.\t\n\nQ\t\n\nTABLE\xe2\x80\x94ORIENTED SEQUENCE AND MONITOR (INCLUDING C&Vie\').\n\nm\t\n\nANNOTATION AND ENGINEERING UNIT CONVERSION.\n\n\xc2\xae\t\n\nSENSOR ORIENTED GEOMETRIC CORRECTIONS (IMAGE).\n\na\t\n\nDETECTOR CALIBRATION AND CORRECTION.\n\nm\t\n\nVIDICON FILTER AND CORRECTION.\n\n\xc2\xae\t\n\nSPECIAL COORDINATE OVERLAYS ON FOV MONITOR.\n\n0\t\n\nENHANCEMENT AND FALSE COLOR FOR ANY IMAGING EXPERIMENT.\n\ne\t\n\nREGISTRATION FOR MULTISPECTAL IMAGES (BAND TO BAND).\n\n0\t\n\nCLASSIFICATION FOR MULTISPECTRAL IMAGES (SCIENCE AND E.O. ).\n\n0\t\n\nFOURIER ANALYSIS FOR INTERFEROMETERS, SAR, ETC.\n\n0\t\n\nTRANSFORMS AND DPCM FOR DATA COMPRESSION.\n\n^ --\n\nON-BOARD PARTIAL. IMAGE PROCESSING\n\nFO V /\xe2\x80\xa2MO N ITO R\n\nFIELD\nOF\nVIEW/\nMONITOR\nCURSOR-,\n\nSENSOR\t\nDATA\n\nOR\n\n\t\n\no ENHANCE\na FALSE COLOR\no REGISTER\n\nw CLASSIFY\n\nt\n\nDATA ENVIRONMENT SCENARIO VS. SOFTWARE FUNCTION (DESF) MATRIX\n\nS I.\n\nSOfTMAKE rUNCTIQM\n\nall.\n\nSOFTWARE JUi1CTI0M\n\ni\nii\n\nN\n\n^\n\nPw T\'t ^ tl n\n\n^\n\n^\n\n^\ng\n\nU\n\n$\n\n^\n\n\'^j\nt\n\n1\n\nRECOGNITION\t\nENVIRON/.IENT\n\'\n\n\xe2\x96\xba1\nB\n\n.^\n\n1\n\nw\n\nuESCnlI Tlor +s -\n\n^\n\n^,^,\n\n^Ti\n\nY\n\n\xe2\x99\xa6\n\ng\n\nRc \xe2\x96\xba(ARlle\n\n0\n\ntNYtt(Rlld[t1T\nIDLe011UP\t\n\nz\n\nX\n\n(\t\n!\t\n\nKnuwn numb.../\n\nI\n\n1\t\n1\t\n\nc!r\xe2\x80\xa2.. @.\n\n.\t KnY..n troh.Nllst!@\n\nd.@u1{.t{noes\nKnn+vn dLlrlbullw\n\n1\n\n+\t\nI\t\n\nI\t1\t\n\n1\t\n\n1.\t\n1\t\n\ni\t\n\nI\t\nt\t\n\nparani.len.\n\n7\n\n1\t\n\n1\t\nI\t\n\nclea..a.\n\nI\t\n+\t\n\n1\n1\t\n\n1\t\n\n\\\t\n\nKnor-n dletrllft/teat.\nUnhriu\t\n\nn dl.trltwNae\n\nL\n\nr\n\n^\n\nIL\n\n\\\n\n1\t\nI\n\n^\n\n1\t\n\ni\n\n\\\n\n\\\n\n`\n\n1\n\ni\t\n\n1\n\nI\t\n\n1\ny.\t\n\n-sees..\n\n{.-\n\nI\n\n^\n\n}\n\n(\n\nI\n\nA Typlcal CArg\n\nrecegalt/o\xe2\x80\xa2 ayaMrtra.\n\nAaau uptlooa. dN\n\n.Irraya nallatic,\t wa1.\n\n!ur sn.th.re ,.l{c al\n\ncoa^.n!@uc\xe2\x99\xa6.\n^\n\nYw...^\n\nL\xe2\x99\xa6 tg \xe2\x96\xba number of\n(@alvr.Y.\nt\t Known r_n.het ad\nclaa.a/.\n\xe2\x99\xa61\t KOO\t d111rliArtlna\xe2\x80\xa2.\n\n\'\n\nUalpo.\xe2\x80\xa2n dlaerll.uH \xe2\x99\xa6a\n1\t Ilbtfid TrAINh+\n^lrm^k38.\nP1rIm \xe2\x96\xba Ua@.\n\nt\t ItlNlbltlty d! I \xe2\x96\xba t.tl/\n\n\xe2\x80\xa2nhioAlft.\n\n1^v\n\n\'I^i of\n\na\n\nI\n;\n1S\n\n`\n\n\\\n\\\n\n\\\n\n\\\n\n\\\n\\\n\n1\t\n1\t\n;\t\n1\n\n\\\n\n\\\n\n\\\'\n\\\n\n\\\\\n\n\\\\\n\\\n\n\\\n\nL.rg\xe2\x80\xa2\n\nnWn-\n\nlee.la\xe2\x80\xa2 under darn\xe2\x80\xa2\nmetLnd..\n\n1\n\n1\nI\nI\n1\n\nA fairly po..rlYl\n.ppr\xe2\x80\x94k to a raAr\xe2\x80\xa2t\n\n,.rrr\xe2\x80\xa2 tided rf\t\nprabl\xe2\x80\xa2rna.\t P.l\xe2\x80\xa2rrell\nin ar\t feat @lag rill. a\nlrroL\xe2\x80\xa2b111+r+e t\xe2\x80\x94her.\n\n1\n\n!\n\n\\\n\n\\\n\nI\nt\n^\n\nt\ni\t\n\nrr.11rttc cps.\n\nLear nI .wdl.\xe2\x80\xa2 @nd\nruYllant m.ILar.lsku^lea\nle.@ \xe2\x80\xa2Drupes\t taonal\nload 0,.0 In Case 1.\n\n;\n\n,^\n\n\\\n\n\\\n\na\n\nmere\t\n-I .0 ^\xe2\x80\xa2\xe2\x80\xa2 try \xe2\x80\xa2\n\n^\n\nI\n\nulebilid Tralnla/\n\n11\t\n\nled and erleLtnj Falter:\n\n;\n\nI\nl\t\n\n\\\n\n^atarnaE.re.\n\nueYrnad in mual alul-\n\n1\n\n1\t\n\n\\\n\naerrl.l. ^.\n\n;]\n\n_\n\n\'\n\n\xe2\x96\xba\t\n\nt\n\nQaramet\xe2\x80\xa2ra.\n\\\t\na\t RUI \xe2\x96\xbablr tabboA Trala \\\n:ng Si,rnplla,\n\nrd.alla wot eery high.\n\nt\n1\nI\n\n1\n\n\\\n\nclaala@.\n\xe2\x80\xa2\t ^Cn o+n dl@trllnrtloea.\n/\t Uot, \xe2\x99\xa6 o-a distribution\n\n\\\n\n=\n\n;\n\n\\\t\n\nIdddr.\t Ralliblllty r\n\n1\n\n\\ ^\t 1\t\n\\\n^\t\n1\t\n\\\n\n\xe2\x80\xa2 Walrnum w\xe2\x80\x94ber +d\nl@ahue@.\n\xe2\x80\xa2\t Itnuwa number el\n\nhigh cor"pulallnnal\n\n\\\n\n\xe2\x99\xa6\t Keu.\xe2\x80\xa2 \xe2\x80\xa2vnd+e! rl\ncla.e.a.\n\xe2\x80\xa2\t Vahae\xe2\x80\xa2ra dlalrlhstk@\xe2\x80\xa2e\n\xe2\x80\xa2\t hollatily lobaled\nTraWng S/n,plea,\n\n\\\n\n\'\n\nI\n\n_\n\n\\\n\n\'1\n\ni\n\nr\n\n\\\n\n1\n\nI\n\nT\n\n\\\n14001 Critical Oats.\n\\ \\ Ltlnlmrrs In\t /eratlr.\ntr\nrn\n\\\n\xe2\x80\xa2ta11e17a.\t Ralallrrly\n\n\\\n\nI\t\n\nf\xe2\x80\xa2.tY/e1.\n\nnuns acd aitlY.\n\n1\n\n1\n\nKno-n numb\xe2\x80\xa2t of\n\nPtactit.l dtl. \xe2\x80\xa2\xe2\x80\xa2slro^-\n\n1\n\n1\n\n(\n\n1\t1\t\n\nelulua Lle.\t 11./81y\n\n1\ni\nI\n\n(\n\n\xe2\x80\xa2\t cl \xe2\x96\xba @.\xe2\x80\xa2a.\n\nO\n\nA\na\n\n\xe2\x80\xa2\t Large WwA*r 64\n\noily mialnfrna rlaralIlcatlon .inci.acy\n\n1\n\ni\n\nIf. probablll.l{.\n\nI\xe2\x80\xa2elur...\n\n!\n\nj\t\n1\n}\t\n1\t\n\n\\\n\nI\nI\n1\n\nt\n1\n1\t\n\nI\t\n\nIOnly the ra"I.\xe2\x80\xa2 d_.ikIn 1 cleeelncatSrw are\n.rell.hldl.\n\ni\t\nL\t\n\nr\n\nr\n\n1.. Ideal C,aatt.\t Thtarail.\n\nI\t\n\nI(\t I1\nI _I\n\n1\t\nI\t\n\nY \xe2\x80\xa2\t I.argr nurnh\xe2\x80\xa2 \xe2\x96\xba .l\n\ny\ny\n\nJl\n\nU\n\n1\t \xe2\x80\x94 l\n\nVerge number of\nfaaturaa.\n\xe2\x80\xa2\t th, lann..n nuadNt of\n.\t\n\nz\n\n\\\n\n1\n\n(\t\n\n1\t\n1\t\n(\t\nI\t\n\nd\xe2\x80\xa2+crIpllY.a.\n\n--\n\na\n\nPKMARRII\nx\n\nVkl\n\nMlnlnrum rwnr q \xe2\x80\xa2t.f\n!..turd@.\n\n\xe2\x80\xa2\t\n\nw\nV\n:\n\nw\nC\nYY\n\njr,\n\n33\n\nt\n\nk\n\nTTPICAL CASES\n\na\n\nI ^D\n\n10113 _\n\nIL\n\nTYPICAL. CASES\n\n1\n\nr\n\nMICLONInotl\n\ng\n\ntt\n\no\n\nrATTEIM\n\nTl\n\nQ\n\n^\n\n^\n\nM\n\n1\n\n1\t\nI\t\n1\t\nj\t\n1\t\n\nI\n(\nI\nI\ni\n\nI\nI\ni\t\nI\n1\t\n\nI\n\nI\n\ni\nI\n\n\'ilgniflcrndy more\n^\xe2\x80\xa2t.atlle\t .t/roeclr\n. at.rl \xe2\x80\xa2 .g\t I. a highly\n...IL.114\t .l..e\t of \xe2\x80\xa2[-@,iarYn@.\t IRehrrel t\xe2\x80\xa2 ae\n. untfled .ppruch II..Irrr \xe2\x80\xa2e lecrlon and\n\nL.\t rj In unlrrnllter\n"\n\nuaa4@ran.lro\xe2\x80\x94nante.\n\n1\n\nr\t\n\n,\n\n/I--DATA COMPRESSION: REQUIREMENTS AND CURRENT STATUS CHART\n\nCLASS Or\nAPPLICATIONS\n(RECIUIRING)\n\nOF5 PROJECTED*\n(BY TIIE\nYEAR 2000)\nCOMPRESSION\nRATIO\n\nCURRENTLY\nAVAILABLE\nAPPROACHES\n\nASSOCIATED\nRANGE OF\nCOMPRESSION\nRATIOS\n\nIMPLEMENTATION\nCOMPLEXITY\nRATING\n\nREMARKS\n\nEXACT RECONSTRUCTION OF\nTIIE ORIGINAL\nIMAGE IN EACH\nCHANNEL (I\nCATEOORY)\n\nC7\n\n0\n\nENCODING\nSCIIEMES\n\n1.2 - 2\n\nI\n\nCOMPRESSION RATIOS\nCURRENTLY ATTAINABLE\nTOO SMALL. MAJOR CON_\nCEPTUAL/TECIINOLOGICAL\nADVANCEMENTS NEEDED\n\nGOOD APPROX1MATION OF\nT111. ORIGINAL\nIMAGE WIT11\nLITTLE VISUALLY PERCEPTIDI,E DISTORTION IN EACH\nCIIAN14EL (II\nCATEGORY)\n\n16\n\nDPCM AND OTHER\nAPPROXIMATE\nAPPROACIIES IN A\nSfANDALONS\nMODE\n\n1.4 - 3\n\n2\n\nTHESE APPROACHES I3Y\nTHEMSELVES FALL FAR\nSIIORT OF THE REQUIREMENTS OF THIS CATEGORY\n\n1-D TRANSFORM IN\nSPECTRAL DOMAIN\nCOMBINED WITH\nDPCM AND IIUFFMAN CODING\n\n3-S\n\n3\n\nMOST PROMISING APPROACH\nAS PER TR1Y STUDY WIIICII\nSTILL DOES NOT LEAD TO\nDESIRED COMPRESSION\nRATIOS\n\nOTlILR ALTERNATIVES, SUCII AS 2\nAND 3DTRANSFORMS\nIN SPATIAL (AND\nSPECTRAL.) DOMAIN\nFOLLOWED BY DPCM\nAND ENCODING\nTECHNIQUES, NOT\n}EVALUATED BY TIIE\nTRW STUDY\nONLY A REGOGNITION MAP\n(111 CATEGORY)\nOlt ONLY CERTAIN KEY FEATUR ES OR\nCHANGES IN\nTHE SCENE (IV\nCATEGORY)\n\n400 - 2000\n\n7\n\n6\n\nNEEDS DETAILED ASSESSMENT AND FURTHER STUDY\nTO DETERMINE THE EFFECTIVE COMPRESSION RATIOS\nAND IDENTIFY PROBLEMS (IF\nANY) IN THEIR ONBOARD\nIMPLEMENTATION\n\nCLUSTER CODING,\nCLASSIFICATION,\nCIIANGE DETECTION\nMETHODOLOGIES\n\n10 - 100\n\n110 Oil MORE\n\nFAIRLY IIIGII COMPRESSION\nRATIOS ATTAINABLE. HOWEVER. OTIIER ONBOARD\nIMPLEMENTATION PROBLEMS ARISE\n\nOFS PROJECTIONS OF "WIIAT WILL PG" FALL S[IORT OF "WIIAT IS DESIRED" (IN VIEW OF TIIE; EXPECTED DATA RATES IN\nFUTURE MISSIONS) IN TIIE FIRST TWO CATEGORIES OF APPLICATIONS.\n\nI\n\nSPACELAB MISSION 1 (STRAWMAN)COMMON FUNCTIONS\n\nINST.\n\nDATA\n\n630\n300\n350\n400\n500\n\n576\n562\n432\n576\n1024\n\n2180\n\n3170\t\n\nCheckout\nScanning Control\nPointing Control\n\n500\n520.\n600\n\n550\n1024\n\nCheckout\nCalibration\nOpe ration\nGraphic Display\nOperation\nCheckout\nOperation\nGraphic Display\nCalibration\nOperation;\nGraphic Display\n\n500\n500\n\nCommand and Control\nAnnotation and Time Tag\nDisplay\nMonitor\nConvert to Engineering Units\n.AP-09-S\t\nAP-13-S\t\nLO-01-S\t\n\n>\t\n\'-`\t\n\nLS-13-S\t\nAPE-01\t\nAPE-07\t\nSPE-01\nSPE-80/85\t\nSTE-10\t\n\nOperation\nOperation\n\n36\n550\n250\n250\n2048\n150\n550\n20\n2048\n250\n72\n2048\n--72\n\n1200\n400\n270\n500\n430\n400\n500\n360\n400\n--310\n780\n\n82\n2048\n\nGraphic Display\n\n400\n----\n\nOperation\n\n730\n\n206\n\n11480\n\n15424\n\n,ASE -01\n\nEOE-01\t\n\n---\n\nTotal.\n26904\n\n^--\n\nSPACI;LAB MISSION 2 (STRAWMAN)\n\nCOMMON FUNCTIONS\n\n\t\n\nDATA\n\nINST,\t\n\nCommand and Control\nAnnotation and Time Tat;\nDisplay\n\n630\n300\n350\n400\n500\n2180\n\n576\n562\n432\t\n576\n1024\n3170\n\n500\n600\n1200\n400\n500\n600\n520\n\n550\n36\n250\n2048\n550\n36\n1024\n\n1200\n\n250\n\n400\n500\n600\n\n2048\n550\n36\n\n1200\n\n250\n\nCheckout\n\n560\n\n550\n\nPointing Control ( Minimount)\nOperations\n\n600\n\n11/^U311tOr\n\nConvert to Engineering Units\nSO-01-S/SO- I I -S/54\n\nCheckout:\nPointing Control (IPS)\nOperation\nGraphic Display\nCheckout\nPointing Control (IPS)\nScanning Control\nOperation\nGraphic Display\nCheckout\nPointing Control\nOperation\n\nSO-01-SISO- I I -S/S-3U\n\nSO-52\nSO-01-S/8-5\n\n36---\n\n\t\n\n550\n\n1200\n\n250\n\n14400\n1\n\n500\n\nOperation\nTotal\t\n\n1200\n\n250\n\nCheckout\n\nG-VII\n\n^.---\n\n12134\n26834\n\nOAST TECHNOLOGY ITEMS\t\n(WORKSHOPS 75/76)\nSOFTWARE DEVELOPMENT:\n\n-\t\n-\t\n-\t\n-\t\n-\t\n-\t\n--\t\n-\t\n-\t\n-\t\n\nSOFTWARE SYSTEMS\nARCHITECTURE:\n\nCOORDINATION OF NASA R&D IN COMPUTERS AND\nINFORMATION SCIENCE\nSOFTWARE GENERATION AND HUMAN-MACHINE INTERACTION\nSOFTWARE MANAGEMENT\nSOFTWARE VERIFICATION AND VALIDATION\nOPERATIONS LANGUAGES\nEVOLUTIONARY SOFTWARE\t\nPROGRAMMING METHODOLOGY\nSOFTWARE COMMONALITY\nPROGRAMMING LANGUAGE AND TRANSLATORS\nSIMULATION\nEFFICIENT EMULATION\nAUTOMATED PROGRAMMING\n\n-\t\n-\t\n-\t\n-\t\n-\t\n\nNETWORKING FOR NASA COMPUTER FACILITY AND SOFTWARE\nSHARING\nMULTIDIMENSIONAL DATA SYSTEMS\nSOFTWARE FOR SYSTEMS INTEGRITY\nINTELLIGENT EXECUTIVE PROGRAMS\nHIGH-VOLUME DATA BUFFERING\t\nSYSTEM SECURITY SOFTWARE\n\n-\t\n-\t\n-\t\n\n- -- -\n\nAUTOMATION OF GROUND SUPPORT FUNCTIONS\nINFORMATION EXTRACTION AND DATA COMPRESSION\nRECOGNITION PROCESSING OF IMAGE TYPE DATA ON-BOARD\n\n-\t\n\n^\n\nSOFTWARE APPLICATIONS:\n\n,^ _---\n\n\'TM\n\nSPACECRAFT\n-\t\n\nON-BOARD- PREPROCESSING OF MULTISPECTRAL SCANNER\n\nDATA\n-\t\n-\t\n-\t\n-\t\n-\t\n-\t\n\nMODULAR PARALLEL PIPELINE PROCESSOR \t\nMISSION PLANNING AND SCHEDULING TOOLS\nPATTERN RECOGNITION\nAUTONOMOUS SYSTEMS WITH ARTIFICIAL INTELLIGENCE\nALGORITHMS/NUMERICS\nAUTOMATED INTELLIGENCE SUPPORT\t\n\n^----\n\n-- - "\n\nMIDTERM REPORT OUTLINE\nSECTION I - INTRODUCTION DESCRIBES THE PURPOSE OF THIS REPORT, THE STATUS OF THE\nSTUDY AND THE MANNER IN WHICH THIS REPORT IS ORGANIZED.\nSECTION Z - STUDY SUMMARY IS THE EXECUTIVE SUMMARY.\n2. I OBJECTIVES DESCRIBES THE PURPOSE AND SCOPE OF THE STUDY.\n2.2 APPROACH DESCRIBES THE STUDY PLAN USED AND THE ASSOCIATED MAJOR MILESTONES. \t\n2. 3 RESULTS SUMMARIZES THE RESULTS OF THE STUDY.\nSECTION 3 -- PAYLOAD SELECTION DESCRIBES THE RATIONAL FOR SELECTION OF THE SPECIFIC\nCOMPLEMENT OF EXPERIMENTS ANALYZED DURING THE STUDY.\n\nSECTION 4 - SPACE TECHNOLOGY FORECASTS REVIEW DESCRIBES THE IDENTIFICATION AND\nCLASSIFICATION OF SOFTWARE TECHNOLOGY AREAS SELECTED FOR EMPHASIS.\nSECTION 5 - EXPERIMENT ANALYSTS DESCRIBES THE APPROACH AND MATERIAL USED TO\nPERFORM THE EXPERIMENT ANALYSIS AND SUMMARIZES THE RESULTS.\nSECTION b -- TECHNOLOGY DRIVER SELECTION SUMMARIZES THE TECHNOLOGY DRIVERS\n\nSELECTED AND THE REASONS FOR THEIR SELECTION.\nSECTION 7 - FUTURE PLANS DESCRIBES THE EFFORTS REMAINING TO BE PERFORMED UNDER\nTHIS CONTRACT.\nAPPENDIX A - SOFTWARE FUNCTIONS PROVIDES A COMPLETE DESCRIPTION OF THE DERIVED\nEXPERIMENT SOFTWARE FUNCTIONS AND THEIR SIZING PARAMETERS.\nAPPENDIX B -- EXPERIMENT ANALYSIS SHEETS CONTAINS SHEETS FOR EACH ANALYZED PAYLOAD\nELEMENT AND THEIR ASSOCIATED EXPERIMENTS DESCRIBING MAJOR COMPONENTS, DATA\nCHARACTERISTICS, AND FUNCTIONS TO BE PERFORMED.\n\n--^ \xe2\x80\x94\n\n\t\n\nREFERENCES - SOFTWARE DEVELOPMENT\t\n\n+\n\n1.\t\nZ.\t\n\nSTRUCTURED PROGRAMMING SERIES. VOLUME XI - ESTIMATING SOFTWARE\nPROJECT RESOURCE REQUIREMENTS, IBD FSD, NTIS AD--AO16 416.\n\n3.\n\nSOFTWARE AND ITS IMPACT: A QUANTITATIVE ASSESSMENT, BARRY W. BOEHM,\nDATAMATION, MAY, 1973.\n\n4.\n\nIS SOFTWARE DESIGN "WICKED"?, LAWRENCE J. PETERS AND LEONARD L.\nTRIPP, DATAMATION, MAY, 1976.\n\n5.\n\nHOW MANY DIRECTIONS IS TOP-DOWN?, DENNIS P. GELLER, DATAMATION,\nJUNE, 1976.\n\n6.\nt"\n\nENGINEERING OF QUALITY SOFTWARE SYSTEMS - SOFTWARE FIRST CONCEPT,\nMITRE CORP., JANUARY, 1975, NTIS AD-AO07 768.\n\nSOFTWARE DEVELOPMENT MANAGEMENT, DR. ALVIN E. NASHMAN, IEEE\nEASCON 1974 RECORD.\n\n7.\t\n\nTHE ARCHITECTURE OF SOFTWARE, DR. FREDRICK M. HANEY, SOURCE PUBLICATION NOT KNOWN.\n\n8.\n\nSOFTWARE TECHNOLOGY PRESENT AND FUTURE, BOBBY HODGES, 14TH ANNUAL\nSOUTHEAST REGIONAL ACM CONFERENCE, APRIL 23, 1976.\n\n9.\n\nTHE PROGRAM DEVELOPMENT PROCESS, PART 1, THE INDIVIDUAL PROGRAMMER,\nJOEL D. ARON, ADDISON-WESLEY 1974.\n\n10.\n\nTHE MYTICAL MAN-MONTH, ESSAYS ON SOFTWARE ENGINEERING, FREDERICK\nP. BROOKS, JR. , ADDISON-WESLEY 1975.\n\n11.\n\nTHE SYSTEMATIC EVOLUTION OF A NASA SOFTWARE TECHNOLOGY. AUERBACH\nASSOCIATES, AUGUST, 1972, NTIS N73-141.91.\n\n12.\n\nINFORMATION PROCESSING/DATA AUTOMATION IMPLICATIONS OF AIR FORCE\nCOMMAND AND CONTROL REQUIREMENTS IN THE 1980\'s (CCIP-- 51s).\n\n4\n\nREFERENCES - SOFTWARE SYSTEMS ARCHITECTURE\n1.\n\nMEMORIES: SMALLER, FASTER, AND CHEAPER. GEORGE C. FETH.\nIEEE SPECTRUM, JUNE 1976\n\n2.\n\nSYSTEMS- ON-A- CHIP PART I AND 2. DAN M. BOWERS, MINI-MICRO\nSYSTEMS, MAY/JULY 1976\n\n3.\n\nA TUTORIAL ON SATELLITE GRAPHICS SYSTEMS, JAMES D. FOLEY.\n\nIEEE COMPUTER, AUGUST 1976\n4.\nON\n\nSPECIAL ISSUE ON FAULT-TOLERANT COMPUTING IEEE TRANSACTIONS\nON COMPUTERS, JUNE 1976\n\n5.\n\nINSTRUMENTATION. RONALD K. JURGEN. IEEE SPECTRUM, APRIL 1975\n\n6.\n\nFAULT-TOLERANT COMPUTING: AN INTRODUCTION AND A PERSPECTIVE.\nCHARLES R. KIME, IEEE TRANSACTIONS ON COMPUTERS, MAY 1975\n\n7.\n\nON THE FEASIBILITY OF SOFTWARE CERTIFICATION, STANFORD\n\nRESEARCH INSTITUTE, HTIS PB-245213, JUNE 1975\n8.\n\nFINDINGS AND RECOMMENDATIONS OF THE JOINT LOGISTICS COMMANDERS\nSOFTWARE RELIABILITY WORK GROUP, NOVEMBER 1975\n\n4\n\nL\n\nREFERENCES - SOFTWARE APPLICATIONS\n1.\n\n"STUDY OF ON-BOARD COMPRESSION OF EARTH RESOURCES DATA, EXECUTIVE SUMMARY,\nTRW SYSTEMS CORPORATION, CALIFORNIA, NASA-CR-137751, SEPTEMBER 1975.\n\n2.\n\n"SATELLITE ON-BOARD PROCESSING FOR EARTH RESOURCES DATA," SUMMARY REPORT,\nWINTEK CORPORATION, LAFAYETTE, INDIANA, NASA-CR-137751, SEPTEMBER 1975.\n\n3.\n\nBRUDERLE, E., ET AL, "STUDY ON THE COMPRESSION OF IMAGE DATA ON-BOARD OF AN \t\nAPPLICATIONS OR SCIENTIFIC SPACECRAFT, " VOLUME 1, ESRO-CR (P)-770, APRIL 1976.\n\n4.\n\nROSENFELD, A., "PICTURE PROCESSING BY COMPUTER, " ACADEMIC PRESS, NEW YORK, 1969.\n\n5.\n\nKASITYAP, R. L., AND MITTAL, M. C., "PICTURE RECONSTRUCTION FROM PROJECTIONS,\nIEEE TRANS. ON COMPUTERS, VOLUME C-24 ; 1975, PP. 915-9Z3.\n\n> 6.\t\nH\n\'\t\n\nCHOW, C. K., DEEKSHATULU, B. L., AND LOH, L. S., "SOME COMPUTER EXPERIMENTS\nIN PICTURE PROCESSING FOR DATA COMPACTION, " COMPUTER GRAPHICS AND IMAGE\nPROCESSING, VOLUME 3, 1974, PP. 203-214.\n\n7.\n\nANDREWS, H., AND CASPARI, K. , "ORTHOGONAL TRANSFORMATIONS, " COMPUTER\nTECHNIQUES IN IMAGE PROCESSING, ACADEMIC PRESS, INC., 1970, CHAPTER 5, PP. 73-102.\n\n8.\n\nWEE, W. G.. AND HSIEH, T. T., "AN APPLICATION OF THE PROJECTION TRANSFORM\nTECHNIQUE rri: IMAGE TRANSMISSION, " IEEE TRANS. ON SYSTEMS, MAN AND CYBERNETICS,\nVOLUME SMC-6, NO. 7, JULY 1976, PP. 486-493.\n\n9.\n\nHARALICK, R. M., "AUTOMATIC REMOTE SENSOR IMAGE PROCESSING, It IN DIGITAL PICTURE\nANALYSIS, ED. A ROSENFELD, SPRINGER-VERLAG, N. Y., 1976, CHAPTER 2, PP. 5-63.\n\n10.\n\nHO, Y. C., AND AGRAWALA, A. K., " ON PATTERN CLASSIFICATION ALGORITHMS INTRODUCTION AND SURVEY, " IEEE TRANS; AUTOMATIC CONTROL, VOL. AC-13, DECEMBER\n1968, PP. 676-690.\n\n--^-\n\nAPPENDIX B\nSOFTWARE FUNCTIONS SIZING\nto\n\n(AVAILABLE ON REQUEST)\n\nw\n\nAPPENDLX C\nn\t\n\nti\n\nPAYLOAD ELEMENT ANALYSIS SHEETS\n(AVAILABLE ON REQUEST)\n\nAPPENDIX D\nb\n\n\t\n\nSOFTWARE ANALYSIS MASTER MATRIX\n\nZEO-GVX\nKo-svx\n9-EO-91\n\ngoo-svx\nsvx\n\nmo-syx\nEOO-SVX\nzoo-svx\nToo-svx\n\n-F1\n\nFill F\n\nG-To-sl\n0 A\n0 1-\n\nNt\n\n-w, -svxr-vxl\n---Fs\t\n\nqvjz\n\nI\n\xe2\x80\x94,-F \xe2\x80\x94 T \xe2\x80\x94 --\n\nT I I I\n\nI\n\nI\n1 suz.9\xe2\x80\x94\n\xe2\x80\x94\nvx\n\nIry\n\n9-90-SV\n\nEv\n\n,a-E;V)r\n\nILI\n\nF\n\nn\n\nF;vx\nq-t-o-sv\n\n410\n\n\t\n\n1\n\n\xe2\x80\x94 \xe2\x80\x94\t\n\n\xe2\x80\x94 15i-Mix\n\nL I T r-,\nS-Fi -;iii\n11\t\n\n1 ti\t\n\n1\t\n\nIt\n\nt\nNP\niE9-SVX ^^ Q\n\n--1\nI t\t\n\n9 l\t\n\nI S -E9\n\n-5v\n\nn\n^\nsor^or^ f lol ^^l ^^ `` ` V^^\nTotsd fool! ar\n\n^\n\n\'\n\n^\n\ni\n\n\t\n\n^x\n05;\n130 OSK\n\xe2\x80\x94LOIF05M\nosx\nsx\n--FWo\xe2\x80\x94\n\ncoo-osx\n\nwiOsx\n\nTFI\'\t\nIz-\t6p\nO ^^,ti^^\'\'f.\t\n\n1J^^^ ^ J^.11i^^v?`w^.,\xc2\xa2i, ^^^`[[?^^^\nr^J^sw^\',-,^^ ^o^\n\n\\\t\n\n0 -0\n\n-,I\n\n9-It\n\nC)7\n\n^`^k ^^\'Ip\\^^J\xe2\x80\xa2^.? \'..^!(?^\'r^^lid.^[+n^lo\'^`^-,} ^7 ^\'pJ ^a\'ir\' \\v+\n\nI ()I -0!;x\n\nuto-oF;x\nC\n\xe2\x80\x94 fu7M\n\no-osx\n\nT-oo-osx\nEOO-09X\n\nI\t\n\n00\n\n\\0"",\nW., X-1\n\nCoE-OSX\n\n-.2o\n^C)sx\n-Ogx\n\n----------------\n\nT\n\nI )\n\n.\t\n\n.\t\n\n.\t\n\n=\n\nyx\n\n-\n\n.\n^\n\n--~--\n\n|--|-T-^^^-|--T--)-l-l-\n\nv3^0 !\n\n`\n\n^\n\n^\n\n.~.\n\n7 7-\n\noot-SIX\n\n\\\'^ dt Q`U\'t^^ O} t^ ^\' v^\n\n?^r t\t\n\n\'^\' \\ R\'\n\n\t\n\nL\n\ns-so-a3\n\n-\n\n----\t\n\n-\t\n--- --\t\n\n--\n\n-\t\n\n_____- ^\t\n\n----\t\n\nOPL\n\n\xe2\x80\x94\n-- O-CL-s\xc2\xb0tx#--\t\n___s\n------ \xe2\x80\x94 OZL-s\'t I\ni\n\t\n\n--\t\n\n^-- --\t\n- ---- -\t\n\n.9\n\ns\n\n`^\n\nJ\t\n\'Ir Y\t\n\nv^\t\nu? `rd\xe2\x80\xa2 P `^\t\n\n\xc2\xb0lpUJ\n\nU\t{r\t\n^ ^7^\n\nc j ! ?bA\t\n`tb1\' .]\t\n\n+S\xe2\x80\xa2^r\t\n\n^^o\t\n\nL\n\n^^\t\n\n^ ^ J Jid\nI\n^\nO\nJ rr__s\'b . \'$\'^,L_ Jt- ! \\fr V^^ ^jt. a^ C 3^ .^^ l^\' ipJ \t\nt^`^ J `^ O. `\' ^ , .^ r^U ! 4 r ! ^k^ p^ `:s,\t\n\'l fy^, 0 ^b ^^\t\n.^ ^\'\t\nv\'v.)^\n\nlr^^o ^l^^b\xe2\x80\xa2\n\t\n,S}^\n^^J\tf\t r ^\'\t^r\t r^;o^t `^t\\r.,^ ^[\xe2\x80\xa2 ^\t S"QW\t\n,^ ^p b?\nd,^\t\npbOJ ^\t\ns,^\t\n?6.. `\nr\\^? ^^ .I.\n\n^w\n\nPa, b^, ^^\t\n\n^,^. ^\' ^l\t\n\nu?^,\t\n\n^fti^\tv^o\t\n\nI s-S:t-si\t\n\n\xe2\x80\x94 I r i l\t\n\nM\to\t\no\' . \\\n^\' s^ 17\xe2\x80\xa2\'^ 90\t r\t\nt\np\t\nS. o r\t\niJ i7 \xe2\x80\xa2 a\' J\t\n\' \'^r^OIOW^\xe2\x80\xa2^ ^ ls^, ^, ^ \' V^\n.ir\t\ns\nr S3, \'r S .^,\nU\t J\t^r J\tr^, Mo 4 a\'r`^,^,^`^\'\xe2\x80\xa2 irb\xe2\x80\xa2 \xe2\x80\xa2tr ^ !\' k P\t\npf\'^,^ (IG^`I(7. `y^7 3\' b1\n^J `^^ 4^yJ{^. fJ C b\naJdr^`^^^ . to ^\n1}o Y J^ si r\tutYa\nli\n^I. b J ^, b^ \t\n^\n^ ^\t\n\'I\'.,\t\na!\t\n^-^ b ^^.w\t\n!tl\t\n`Ca, P ^\t\nP\t\nr\t\n^^w\t\n\'1v?\n\nsir ^,.?\t^\'\t\nt^\t\n^\t\nJ^\\- ^`^\t\n/fi\n\n!,\n\n^oJr\'i^,o ^ ^\'s^ ^,^s b\xe2\x80\xa2 few\t\n\n,^ f^ -^o\t\n^ .^ tj.\t\n\nP\n\nW\t\n\nl\nr\n\nd\'^.li\n\nw,ro ^ ^^\t\n\n.i, .Ir f\t\n\n--\t\n\nl\t\n\nv\'^, \xc2\xa2 ^\'\t\n\nl^r^rl k^^\t\n\n-\t\n\n^\t\n\ny?l\t\n\nrr\n\ni\t\n\n^\n\nt - 9 S tt 1\'tt lt ttt\t 6p dipf!Dt p Spl .t Fl\t \' l O -\t\nlei^ \\;6QdY\nt\nt t pj pf pl p\ntj tj tt\ns^ ?U ^. t\t\nJ\nf \xe2\x80\xa2 `^} Ma ^ ?o d\t\n?o\t\n.^\n\\^ ^`y\nd\'\t\n1 S\' SC\t ^\'\t r s\t^\t li? \\? `^?. \'\n^J n\t a\'\t O ^\tO\t\n1\na1\'l^Jt\xe2\x80\xa2 ^ld\'\t\n\nC\nSFp ^ r\' lr, C1 1,\t , dtt t jCt\na3^\nl O, d 8 C 9 S ^t F ? t U\t\npp Fp r^ 1\nS\np ^^ ^tU Fp rb t\np^ O O, Cj\nF\nn R ti n ^t ^ . F F F pf.pp fir\' cry f2 tc\' ? r\' ^^ r ^\xc2\xb0 ^^ ^ ^^ !^, U, p, O^ p\nr \xe2\x80\xa2r . M ^v\' ^\n`^^. v^ ^ ^,\t\n10 \'1r ^ v\' ^ r % ,.\n!^. g.\t\n^\t\nl+IJ Ul^\'j\'^`7^. i^\n!P ^O\t\nW^ \'^1:^ ^O^\'I r .7 v? r O \'^\tl\t\nr\n`^^, , f , l} _\t\n.^ .t ^\',^\t\nt `?\' `\n^?}\xe2\x80\xa2\t^.\t \'^^ `Y^^v\' ^\'^>\\ ^ .9`^r? ^ r^^ P o^^o^\tO\t\n^^^ \t \' .\t\n3 ^^. ,^\t\nf\n`\'ct `^i ^ r\t\nr .^ a\nn\nt\nIt ^ .f v\t\ni Y O\nl\np w S^\xe2\x80\xa2 b` tr^^q \xe2\x80\x9e^ I? \xe2\x80\xa2\t7 9 ? \xe2\x80\xa2\td. q v , \xe2\x80\xa27 J\t\nr ? ,\t\nb\t\n\nr\'\n`\nS\n\n-s\'txl\n\n------ \xe2\x80\x94\t\n\nw l\t\n\n\xe2\x80\x94 \xe2\x80\x94\t\n.[\n\tQ d\' fb.\'}\xe2\x80\xa2O\t\nF\xe2\x80\xa2\n\n\t^\n\n--\n\n-\t\n\n-------------N\n0\n-- \xe2\x80\x94 - - \xe2\x80\x94\t\n----\t\n\n----\t\n\xe2\x80\x94 --\t\n\n---\t\n\n- ----\t\n\n---\t\n\n^ ^\'Ynr ^ Ic^ ^ ^rlr ^^^^ \t\n^ .^\t\n^^\t\nJ\n\nMai(>p\n\n,J\n\n^`\n\n^.\n\n^\n.\n\nCPU-oax\n\nF\nB-IZ-09\n\n(-5-0z-03.\n\nLPO-OSXI\ns-61-03\n\n91.0-C)SX F\t\n\nT I\n\ne\n\nt\n\nH IE\nT\n\nI\n\nQ\n\n/--1 - -\n\n,6\\\t I:t\nY\\\n\n............\n\nO-AL XOP- 001\n\nOP-03-S\n\n-- \xe2\x80\x94 \xe2\x80\x94 \xe2\x80\x94 \xe2\x80\x94\n\n---2io P\t -o I I\n-\n\no^- o^ -s^\xe2\x80\x94\n\nI l\n\nI I !\n\n1\n\n-\n\nI _ I\n\n-\n\nI 1 - ^ - ^ ^ - --\n\nI -I\n\nI\n\n-\n\n--\n\nXOP-00\n\nMOV-612\n\n-LU\n\nI\n\nI\n\nI I\n\nI-\n\n. _ ^\t\n\n^\xe2\x80\xa2 ^\n.^\n\n\t\n\nry^%t\n\n^yO\t\n\t\n\nr\t\n\n..ff\n^\n.^ ^ ^r r^l \xe2\x80\xa2\tro,^^TO\t\n!\n\nfi^.0\t\n^n\t\n\nc ^ .yy1.\t\nd \t\n^+`\n\nrj\t\n\n^^;t\xe2\x80\xa2\tr\xe2\x80\xa2\t\n\n^r^\tr^\t\n\n^,\t\n\ni. ^r^\'!r\t\n\nran\t\n\ntr\n\nr\nt\t\n^fio !\xe2\x80\xa2o I-^\'^^^AT yr^\t\nr `\nly O T oar\n\nr\n\nL\n\n,y\n\nT\t\n\n^^\'\t^\'r ,\t\n\nC\n^Lr&\n\n^ ^ k- O by\t\n\nP\n\n`^^,1y^d\n\nO\n^\t\n^r ^\' ^\'\t \t\nc\t\nn` y ! a\t\n.y\tT\t\no\t\n^r ^1\xe2\x80\xa2 \'y\n.r,\nol. d oc)\t\nr\' TY\t\n\' O ,\t^r \' I\'y rj\t\nr\nd\nC\t\n^fi\t\n`^!\t\n!r a\nIi\n.r.\t Q Y\t[\'\t\n.\n\xe2\x80\xa2 ^\n.rin\'!\xe2\x80\xa2 C\t\nE .\n\t .?\'^\'\'\t\n^^\\s\' ^ +^^ ^+, I fr ,n4\nc\nrn N\t\na;"^!^. ^\' \xe2\x80\xa2yt:ln C^, \'! n y ;p\t T rf=^s,\t\nfir tr\n`t ^, d`n \t\n^^s\t\n1^C`^^t`p\n^^:r\t\nIfs^^ ^`\n`\' d \'y r p r, rO\t\n\xe2\x80\xa2 1\t\n^n\t\ny\n4,\t-r,.),*^j\\`rC^T .o d\' .p^\t !-, C { G\t ^\t\nr\t\nri\n\'s\'n\nr\ny^^, .\nlbr ^! ^f! .p , ^\'\t ^ r r .G\t t" r\t\nI \xe2\x80\xa2 U y T L ^1 C `[\' \xe2\x80\xa2s1\t\n\t p\t t:rt C\xe2\x96\xba Rr^\t\nY \xc2\xa2\' ^P j !\nr ,s\t\nI Y ,\t I c\t\n^T\nr d ^^ E.\ns r ^\'o\n\\ O\xe2\x80\xa2fr O\t\nr\n^\' T\n^^ CC\t ^, cy ^rt^^ \xe2\x99\xa6 fr - I r 1. ^ ry\' . ^5,\t\n^ I. lr^j, l \' n\nr\t\n^C \xc2\xb01r\t\nC\n^l^\t\n1\t\nto ^Y ^^7ti^t^>^^.s`.^s,`Ur a \xe2\x80\xa2t .tr ^^ ^ r\n^.\nO\t\nT ` \xe2\x80\xa2 .r .\nc; 4,\no d\t\n^\nc\' ^- F d 4 t ;^ ``^^ - ^^!\xe2\x80\xa2 r y , I . r^,\t\nOl O O 3r^^\t \xe2\x80\xa2. ^ r\t \t `^i- ,n L L rC ^\xe2\x80\xa2i\t\n^\t ^\t -\t ^r\t a ^, ^+\t.^\xe2\x80\xa2 ro \' r\n$.\', 7 ^ 1\t ^\t\nG ^\'\t\n\' - (,1. +p ^l\xe2\x80\xa2\n.? \xc2\xa2\xe2\x80\xa2\n^^ \\E\'\t\nrd\t 1 ^, ^\' U\t\n\xe2\x80\xa2\t\ni^ T C\t\n^\'\t\n^ O O \\$; "j s`U\t.f j `\t\nG ,c, C\nt y 3\'`"r\t\nc, \' I\xe2\x80\xa2 y \' Y\t.p\t\na ^ ^+ l 4 r - Yd`O C\n1\t\n0.y\n0\t\n1A\t^,\t\nfi\t\n{^ ^.y T\\i<YT\'1\n,^^ f\xe2\x80\xa2s; i.,\xe2\x80\xa2\nJ^ICJ1 0,6, 1" r 1^:1 y^,^^ l\xe2\x80\xa2 ^t^ r^ ar\t^\'sr T^, dr\t\n^O\nA \\ ^,\t\n.8 T\nT \'\t\n\xe2\x80\xa2^rrl?fo sE\nit\t\n` t \\o?` ^ ^ o\xe2\x80\xa21 r\t\nr .IS,\n^n\t\n-y^\xe2\x80\xa2^ q^ i^^ ^ t.^ GT.^l\n1^ !.\nT \'cn i\nc. I> >\'\'^ ^^\t^ s ^^1 1^^ ^\xe2\x80\xa2 a a a a {I\'a\t\n\\,\n.l ^. , b}r\t\ncr\t\n^\' p P\t\nY\na\nU O \xe2\x80\xa2 O,U\xe2\x80\x94 xO YD YxOS,\n^`a tat\t\nY Y\ns\n>\n1\t\na\t\n^!i^q\t\nrtn\t\nI\' ^J !\t\n1\t\n11 ^1 1 x-\t 1\t Ir,1^\t t i\tU \'\xc2\xb0t U,`p v},` u^ putip ^u,\xe2\x99\xa6 ^\t lp `r1. `1 ^\t 1Y S o\t\n1\np\n1 1\tv U t p 1 U, .^ Y s u U\xe2\x80\x94t .P U\nU U -1\t\nt\nl^ ro\n1^ ry\t\nS\'\na ` ^ ,f\\ ,`\' - > d\\4\\ `l a .I `t\t\nt t ^,r 1 J\xc2\xb0 t 4l r l\t\nr y\t\n^-\t\nU\nF^-0\\ T\t\nUU \xc2\xb0r ^-_uJ Q^ -r p) \xc2\xb0^ 09 1 `^^ l\nr\t\n^\' \'!\t\nntriT\t\n\nH_us s\t\nc\xe2\x80\xa2\nd_1\n\nXCN-035\t\n\n-- -\t\n\n-\t\n\n- - - -\t\n\n- -- - - - - - -\t\n\n^\'\t\n\n1\t\n\n- ^ _\t\n\n1 .-1 i I I I - _ _._ _ _ l - _ - -^ --- -^ -- - - - _- - _ -- _ - _. _ . _ - I _-^-^ ^- ^. - -\n\n-\n\n-\t\n\nI I\t\n\n- --- - ^ t -- -- -\n\n-\n\n- - -\t\n\nI\n\n1 X CN- 037\t\n\n_\t\n\n-\t\n\n-\t\n\nI XCN-038\t\n\n- -- -\t\n\nI XGN- O39\t`\n\' CN-a\xc2\xa9-\t\n\n1\t\nxcs!-026\nIXCN -027\t\n\n1\nI\n\n- - - - - - - --\t\n\n;\t\n\n_\t\n\n- -\t\n\n- - - -\t\n-\t\n\n-- - - -\t\n\n- -\t\n\n-\t\n\n- - - -- - - - - - -- - - - -- - - - - - - \t\n\n- -\n\n-\t\n\n- - - - -\t\n\n-\n\n-\n\n-\n\n-\n\n- --\t\n\n- --\t\n\n-\n\n- -\t\n\n-\t\n\n-\t\n\n- -- -\t\n\n- - -\t\n\n- - - -\t\n\n- - - - - - - - - - -- \t\n\n- -\t\n\n-\t\n\n-\t\n\n- -\t\n\n_--\n\n1\n-\t\n\n-- - --\t\n\n-\t\n\n- - -\t\n\n-\t\n\n- - -\t\n\n- -\n\n'