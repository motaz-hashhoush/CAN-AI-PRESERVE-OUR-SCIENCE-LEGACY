b'DYNAMIC STORAGE EXPANS I O N I N NASTRAN\nEdwin N. Wess\nLockheed E l e c t r o n i cs Co\n\n., Inc .\n\nSUMMARY\nSome f u n c t i o n s o f NASTRAN r e q u i r e a l a r g e b l o c k o f w o r k i n g s t o r a g e t o\nexecute. The method o f m e s t i n g t h i s requirement, because o f i n s u f f i c i e n t d a t a ,\nhas been t o s p e c i f y i n advance an e x c e s s i v e amount t o a v o i d a f a t a l e x i t . A\nmethod has been developed a t the Lyndon B. Johnson Space Center (JSC) t o c a l c u l a t e t h e amount o f wnrking space needed f o r t h e a n a l y s i s and t o i n f o r m t h e\na n a l y s t of t h i s data o r , i n t h e case o f UNIVAC cumputers, t o a c q u i r e t h i s e x t r a\ns t o r a g e and c o n t i n u e t h e a n a l y s i s .\nINTRODUCTION\nThe d e s i g n p h i 1osophy o f NASTRAN d i c t a t e d a cfi111p1t e l y open-ended des-ign\ne\nwhenever p o s s i b l e . The use o f a \'ixed dirnensicn f o r l a r g e a r r a y s was outlawed\ns i n c e t h i s l i m i t e d t h e s i z e o f t h e a n a l y s i s t h a t c o u l d be s o l v e d . I n s t e a d ,\nmodules were programmed t o ?,l l o c a t e space as r e q u i r e d and t o use s p i l l l o g i c t o\nt r a n s f e r d a t a t o s c r a t c h f i l e i f w o r k i n g space was l i m i t e d .\nThe f i r s t pub1 i c r e l e a s e o f NASTRAN f o r t h e UNIVAC 1100 computers\n( l e v e l 11) hssurned a l i m i t a t i o n o f d i r e c t a d d r e s s i n g o f 65,535 words. The\nHICORE system, which a l l o w e d i n d i r e c t a d d r e s s i n g o f up t o 262,143 words, was\ndeveloped on l e v e l 12 NASTRAN a t JSC. The UNIVAC computers were t h e n competit i v e . As s t r u c t u r e s became l a r g e r and more complex, l a . 1.2r amounts o f s t o r a g e\na r e r e q u i r e d . The amount o f working space f o r a p a r t i ~ u i a ra n a l y s i s has been\n1e f t t o the a n a l y s t , w i t h d i s a s t r o u s r e s u l t s . E i t h e r t h e r e was " i n s u f f i c i e n t\ncore", l e a d i n g t o system f a t a l message 3008, or more w o r k i n g space t h a n t h a t\nr e q u i r e d was a t t a c h e d and computer t h r o u g h p u t and t u r n a r o u n d t i m e su*FPrred.\n\nA t JSC, f a t a l message 3008 has been changed t o r e f l e c t t h e amoun: s f wurkGoing beyond t h i s , t h e branch\nt o message 3008 was changed t o branch t o i n c r e a s e t h e space dynamicallJt, and\nc o n t i n u e processing. The e x t r a working s t o r a g e r e q u i r e d by a p a r t i c u l a r\ne\na n a l y s i s i s n o t n e c e s s a r i l y t h a t r e q u i r e d t o e l i m i n a t e s p i l l l o g i c . W have\nfound t h a t s p i l l may he economically advantageous i n r e g a r d s t o e x t r a t i n e as\nopposed t o an outrageous amount o f working s t o r a g e .\ni n g space r e q u i r e d by t h e o f f e n d i n g s u b r o u t i n e .\n\nThe s u b r o u t i n e s mentioned w i l l be e i t h e r m a t r i x s u b r o u t i n e s which may be\nused by more t h a n one module o r module s u b r o u t i n e s which a r e an e x c l u s i v e p a r t\no f -the module. U t i l i t y and e x e c u t i v e s u b r o u t i n e s a r e n o t i n c l u d e d except f o r\nchanges necessary f o r t h e a n a l y s t \' s i n f o r m a t i o n . The t e r m "working storage\'\' i s\n\nused instead o f core, and the word "problem" t o mean analysis i s avoided.\n\nA\n\nproblem i s encountered when an a n a l y s i s f a i l s ,\n\nFATAL MESSAGE 3008 ( r e f . 1 )\nS y s t e n i f a t a l messages usual l y consist of three parameters :\n\n1 . The rnessage number\n2. The data block name\n\n3 , The subroutine name\nI n the case o f message 3008, the second parameter i s not used, hut i s always\ns e t t o zero, and t h e message reads:\nSYSTEM FATAL MESSAGE 3008\n\n-\n\nINSUFFICIENT CORE FOR SUBROUTINE NNN\n\nS u b r o u t i n e MSGWRT was a1 tered t o s k i p the FNAME c a l l , which recovers t h e\ndata block name, and the message rewritten t o read:\nSYSTEM FATAL MESSAGE 3008\n\n-\n\nMMM ADDITIONAL CORE NEEDED FOR SUBROUTINE\n\nNNN\n\nMODULE MODIFICATIONS\nMost module and matrix subroutines have a t l e a s t ant? branch t o message\n3008, b u t the majority of these are only safety v a l v e s and will n o t be taken i f\nt h e working storage l e n g t h i s i n the range of 20,000-25,000 words, which i s the\ncase when the UNIVAC i s operating a t the default core s i z e o f 65,536 words.\nMcCorrnick and Redner ( r e f . 2 ) studied the module core requirements and\narrived a t t h e following categories:\n\nModules which have no requirements o f open core\n\nGroup 1\n\n-\n\nGroup 2\n\n-\n\nModules which require space f o r tables\nsize. Spill logic may be provided.\n\nGroup 0\n\nModules which require space for vectors or tables which do not\nexceed eight times the number of grid points i n t h e model and do\nnot provide s p i l l .\n\nor matrices of v a r i a b l e\n\nGroup 3 - Modules f o r which the working space requirements are established\nby one or more matrix routiaes. S p i l l logic i s usually present.\nThis information was used t o determine which subroutines were l i k e l y t o\nneed additional working space. The decomposition subroutines real sy,metric,\n\nr e a l u n s y ~ ~ r ~ ~ e tand ,colr~pl r e q u i r e t h e l a r g e s t space,\nric\nex\nw w e a l s o s t u d i e d as t o t h e w o r k i n g s t o r a g e r e q u i r e d ,\n\nThe group 2 nodules\n\nMost s u b r o u t i n e s have a p r e f a c e s e c t i o n where f i l e assignments and w o r k i n g\nspace a r e c a l c u l a t e d Prom t a b l e and m a t r i x t r a i l e r s . A c a l c u l a t i o n of working\nspace i s niade w\'ith t h e r e s u l t o f a f a t a l message when i t ~ s u f f i c i e n t . A s i m p l e\nchange i n t h e s e s u b r o u t i n e s t o add t h e second paranieter i n t h e c a l l t o subrout i n e message w i l l g i v e t h e a n a l y s t a d d i t i o r a l i n f o r m a t i o n o f c a r e requirements\nf o r subsequent a n a l y s i s . Most o f t h e m a t r i x s u b r o u t i n e s i n group 3 were modif i e d t o s t a t e t h e anlount; o f a d d i t i o n a l w o r ~ , i n g space r e q u i r e d .\nAnother method o f c a l c u l a t i n g w o r k i n g s t o r a g e i s t o read a r a c o r d i n t o\nworking s t o r a g e where t h e f u l l r e c a r d must be i n c o r e . I f t h e number of words\na v a i l a b l e i s f i 1 l e d b e f o r e t h e end o f r e c o r d i s reached, t h e c a l l t o f a t a l\nmessage 3008 i s taken. The f o l l o w i n g branch was added:\n1. Reset t h e address o f s t o r a g e\n2. Read t h e remainder of t h e r e c o r d\n\n3. The number o f words r e a d on t h e subsequent c a l l ( s ) t o r e a d i s the\nan~ounto f i n s u f f i c i e n c y\nT h i s i s necessary i n modules such as TA1 ( s u b r o u t i n e TAIA). T h i s method\ni s a l s o used i n s u b r o u t i n e XSORT as i t prepares t h e c o n t i n u a t i o n c a r d d i c t i o n a r y . A c o r r e c t i o n was made by i n s e r t i n g a count, f r o m which t h e space\nrequirements c o u l d be c a l c u l a t e d , o f t h e c o n t i n u a t i o n cards as t h e y were read\non t h e f i r s t pass t h r o u g h t h e b u l k d a t a cards.\nSome c a r e tnust be t a k e n i h e n u s i n g t h e r e s u l t s g i v e n by t h i s message.\na l a r g e s t a t i c a n a l y s i s we found t h e f o l l o w i n g s t o r a g e r e q u i r e m e n t s :\n\nOn\n\nDeconlposition o f a s y m ~ i ~ e t r im a t r i x i s performed i n s t e p s by rows. The\nc\nrow under c o n s i d e r a t i o n i s c a l l e d a p i v o t a l row. The c o n t r i b u t i o n o f t h e p i v o t\nrow i n t o each row o f t h e rest11t i n g m a t r i x i s dependent upon t h e a c t i v e (nonz e r o ) column elements o f t h a t row and a r e combined w i t h t h e corresponding\ncolumn p o s i t i o n s o f t h e o t h e r rows. A11 computations can o c c u r w i t h o u t s p i l l\nif s u f f i c i e n t space i s a v a i l a b l e t o c o n t a i n a t r i a n g u l a r m a t r i x whose row\ndimension i s equal t o t h e maximum number of a c t i v e columns. When s u f f i c i e n t\nspace i s n o t a v a i l a b l e , t h e s p i l l l o g i c d i v i d e s t h e t r i a n g u l a r m a t r i x i n t o\ns p i l l groups c o n t a i n i n g c o n s e c u t i v e rows which w i l l f i t i n t o t h e a v a i l a b l e\nspace. It i s expected t h a t a reasonable compromise between t i m e and space can\n\nbe r e a l i z e d by r e q u e s t i n g s u f f i c i e n t w o r k i n g storage t o c o n t a i n a t r i a n g u l a r\nm a t r i x w i t h a dimension equal t o t h e average number o f a c t i v e columns. T h i s\nsche~newould a l l o w f o r t h e t t r a j o r i t y o f pr*ocessing t o be c o n t a i n e d i n c o r e and\na l l o w s p i l l f o r t h e l a r g e r p i v o t a l rows :see f i g . 1 ) .\nC u r r e n t p r e f a c e p r o c e s s i n g o f SDCOMP in v a l ves t h e o r g a n i z a t i o n o f w o r k i n g\na\ns t o r a g e and t h e d e t e r ~ in~ i t i o n o f s p i 11 groups. B e f o r e b e g i n n i rig cornputatlonal\nprocessing , s t a t i s t i c s g a t h e r e d d u r i n g t h e p r e f a c e a r e p r i n t e d f o r t h e user\'s\ni n f o r m a t i o n . The s t a t i s t i c s r e p o r t e d i n c l u d e :\no Maximum nu~iibero f a c t i v e columns\n\no Space r e q u i r e d t o e l i m i n a t e s p i l l\no Number o f s p i l l groups\no Average nu~tibero f rows i n each s p i l l group\n\nTests on a Space S h u t t l e a n a l y s i s were made t o d e t e r m i n e t h e c o s t s o f\ns p i l l t o conform t o a v a i l a b l e c o r e , as shown i n t h e f o l l o w i n g t a b l e . A\ndecreasing b e n e f i t was d e r i v e d a f t e r a c e r t a i n p o i n t w h i c h shows e l i n i i n a t i n g\ns p i l l i s n o t b e n e f i c i a l . The f i g u r e f o r a d d i t i o n a l c o r e s h o u l d be t h a t needed\nf o r t h e a v e r a g e column.\nStorage s i z e t o t a l ( K )\n\nPercent i n c r e a s e\n\n"Required t o el i m i n a t e s p i 11\n\nTime i n SDCOMP\n\nPercent decrease\n\n.\n\nThe c h o i c e o f s u b r o u t i n e SDCOMP a s b e i n g t y p i c a l was made because o f t h e\ncon~pletenesso f c a l c u l a t i n g optimum w o r k i n g space. T h i s same method i s used i n\ns u b r o u t i n e GENVEC, which is a s l a v e o f b o t h r e a l unsylnmetric and complex\ndeco~iiposii o n s . S p i l l has n o t been c a l c u l a t e d i n t a requirements of any o t h e r\nt\ns u b r o u t i n e s a t t h i s time.\n\nDYNAMIC CORE ALLOCATION\nThe a b i l i t y t o d y n a m i c a l l y extend main s t o r a g e w i t h o u t t e r m i n a t i n g an\ne x e c u t i o n i s a v a i l a b l e on t h e UNIVAC 1100 computers. T h i s f u n c t i o n has been\ns u c c e s s f u l 1y imp1 emented a t JSC.\nThe c a l l s t o message 3008 were changed t o c a l l a computer dependent subr o u t i n e EXPAND, r e s e t necessary parameters, and r e t u r n t o t h e b e g i n n i n g o f t h e\n\nsubroutine.\nexpansion,\n\nFigure 2 shows the subroutine SDCOMP flow as regards dynamic\n\nThe design requi remen\'ts of subroutine EXPAND were as fol lows :\no Provide f o r 1 eve1 s of expansion\no Access t h e UNIVAC 1100 function MCORE$\n\no Place a 1imit on expansion\no Provide for moving the contents of reserved storage\no Restore the contents of reserved storage\n\no Inform the user of t h e expansion\nLevels of expansion were provided i n case a matrix subroutine (SDCOMP)\nneeded additional working storage a f t e r a module subroutine (INVPWR) had\nrequested additional working storage a n d , as in these cases, the nlodule subroutine reserves a section o f storage n o t available t o t h e matrix subroutine.\nFigure 3 shows a typical map o f working storage area.\nThe limit on main storage i s required by the addressable limit of 262,143\nor by the computer f a c i l i t y .\n\nThe subroutine t h a t requi res additional working space call s EXPAND w i t h\nt h e fol lowing parameters :\no Address of working storage\n\no Addi t:ional storage required\no Length of working space currently available\no The calling subroutine name\n\nAn additional entry into subroutine EXPAND (SHRINK) i s called before\ne x i t i r ~ gt o ~rdovidef o r .the restoration of t h e contents of the reserved area t o\ni t s original position and t o reduce 1:he level index.\nA new call t o the 1100 executive (LCORE$) was made on each reentry into\nthe main Module driver subrodtines XSEMii. This provided for the release of\ncore t o i t s default value following each module.\n\nMODIFICATION TECHNIQUES\nExecutive and Utility Modifications\nThe use of the system data block ( r e f . 3 , sectlon 2.4.1.8)\ns t o r e the following data:\n31\n\nCurrent length o f main storage\n\n35\n\nMaxin~unilength o f main storage\n\n36\n\nDefault length o f main storage\n\n57\n\nwas expanded t o\n\nF i r s t level length or\' assigned rttain storage\n\n58-61\n\nSubsequent level lengths o f assigned main storage\n\nT o functions were added t o the computer dependent subroutine MAPFNS\nw\n( r e f . 3, section 5.4.7) to execute t h e executive requests t o MCORE$ and LCOHE$.\nThese were 1abel ed GETCOR and RELCOR, respectively.\nSubroutine MSGWRT was modified to skip the call t o subroutine FNAME f o r\nmessage 3008 and t o write t h e modified message. This change i s computer\nindependent .\n\nAn additional 1 ine was placed in subroutines X S E M i i t o cal I subroutine\nRELCOR on each return from a module execution.\nMatrix and Module Subroutine Modifications\nWhen a call t o subroutine EXPAND i s necessary, a l l f i l e s must be closed\nbefore returning t o the beginning o f t h e subroutine t o reexecute the preface.\nThe G I N O b u f f e r s will be reassigned. Care must be taken t h a t f i l e s opened\npreviously be closed without rewind and reopened without rewind. This i s the\ncase o f the FG f i l e i n module SSGl ( S t a t i c Solution Generator, Phdse 1 ) . This\nload vector f i l e i s cpened in subroutine SSGl and the load vectors written by\nsubroutine EXTERN for t h e e x t e r n a l load vectors and by subrautine EDTL for the\nelement deformation and temperature load vectors. Either EDTL or EXTERN may\nrequire extra storage.\nIf a matrix subroutine i s denied the use o f a section of upper storage,\nthe additional storage requested must be a t least as large a s the total leagth\nof the GINO buffers to prevent GINO error 1151 (buffer overlaps a previously\nassigned buffer). GINO w i l l remember \'the address of the buffer in the reserved\narea and p r o h i b i t t h i s area t o be used as a buffer a g a i n .\n\nRESULTS\nDynan~icexpansion has been successfully demonstrated i n s t a t i c and normal\nmodes analysis from the following modules and/or subroutines. These subrout i n e s r e f l e c t the s i z e required by the analysis by t h e i r varying needs 2nd\nhence are c a l l s t o t h e prime candiddtes for calculating the required workfng\nstorage and t h e improved nlessage 3008:\nModul e\n\n- nz\nSubrouti\n\nREAD\n\nINVPWR\n\nSSGl\n\nEDTL\n\nThe following subroutines have haa the c a l l t o subroutine MESAGE changed\nb u t have not called for increased storage and are therefore untested.\n\nAMG\n\nTRHT\n\nPART N\n\nFCNTL\n\nTRD\n\nTRNSP\n\nTRDIA\n\nINVP3\n\nGENVEC ( p r e f a c e f o r both DECOMP and CDCOMP)\n\nAll o f the above subroutines should calculate t h e storage requirements and\nrelay t h i s information t o the a n a l y s t on a l l computers.\nCONCLUDING REMARKS\n\nThe improvement i n user f a t a l message 3008 i s a useful tool t o the analyst\nand i s a guide t o total main stor;ge requirements o f zn analysis. After t h i s\nimprovement t o the message, a zero v a l u e of additional storage i s an a l e r t t o\nthe system programmer t h a t t h e minor change in t h e offending subroutine i s\ndesirable.\n\nFor t h e sake ~i the ca~nputer independence, i t i s recommended t h a t\nkeeping\na c a l l t o tile wmputer dependent subroutine EXPAND be made i n a l l cases of\ninsufficfcnt main storage, T h i s subroutine would then d i r e c t l y make t h e call\nt o subroutine MESAGE for those computers where t h e i i i s u f f i c i e l l c y i s f a t a l .\nA l l o f t h e areas o f storage i n s u f f i c i e n c y have n o t been discussed; o t h e r s\na r e a n t i c i p a t e d as t h e str*uctural models g e t l a r g e r and o t h e r paths through\nNASTRAN, p a r t i c u l a r l y d j namic a n a l y s i s , are explored.\nF u r t h e r work on the storage requirements should i n c l u d e e a r l i e r d e t e c t i o n\no f i n s u f f i c i e n t s i z e . Table t r a i l e r s a r e sparsely used and could, i n some\ncases, be used t o cause an e a r l i e r demise o f an a n a l y s i s t h a t has i n s u f f i c i e n t\nniai n storage.\n\nREt\'ERENCES\n\n1\n\n. The\n\nNASTRAN User\'s Manual.\n\nNASA SP 222(03), July 1978, Section 6.2.2.\n\n2 . McCormick, C. W., and Redner, K. H. : Stud.v of M o d i f i c a t i o n s Needed f o r\n~ f f e c t i v eo p e r a t i o n o f NASTRAN on IBM v i r t u a l Storage Computers. NASA\nCR-2527, A p r i f 1975.\n3. The NASTRAN Programmer\'s Manual\n\n.\n\nNASA SP 223 (03), J u l y 1978.\n\nPREFACE\nPHASE\n\n1\n\nCOMPUTE\nSPACE\nAVERAGE\n\nYES\n\n1\nCALL MESSAGE\n\nCOMPUTATIONAL\nPHASE\n\nFigure I,\n\n- Storage\n\nCzlculation K i t h Spill .Optinization CSDCO3PJ.\n\n\'I\n0\n\nP\'\n\n1\n\nPREFACE\nPHASE\n\n1\n\nI\nNO\n\nSPACE REQUIRED\n\nFOR AVERAGE\nACTIVE COLUMN\n\nPRINT\nSTATISTICS\n\n(COMPUTATIONAL I\n\nPHASE\n\nI,-,,,\n\nFigure 2 .\n\nI\n\n- Gynamic\n\nExpansion N i t h S ~ i l O p t i m i a O p t i ~ i z a t i o n (SDCO!-IP) .\nl\n\nEXPANDED\n\nORIGINAL\n\nf\n\nAREA 1\n\nWORK\nOPEN\nCORE\n\nAREA 2\nG I N 0 BUFFERS\nAREA 3*\nRESERVED\n\n-\n\n-m\nGIN0\n\n*This area, if present. must be restored to its\noriginal address before exiting the subroutine\nwhich triggered expansion.\n\nF i g u r e 3.\n\n-\n\nAREA 3\n\nOpcn C o r e Allocation S u b r o u t i n e Any.\n\n'