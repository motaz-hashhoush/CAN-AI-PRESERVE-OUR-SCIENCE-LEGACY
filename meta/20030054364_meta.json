{"copyright": {"licenseType": "NO", "determinationType": "PUBLIC_USE_PERMITTED", "thirdPartyContentCondition": "NOT_SET"}, "subjectCategories": ["Computer Programming and Software"], "exportControl": {"isExportControl": "NO", "ear": "NO", "itar": "NO"}, "distributionDate": "2019-07-12T00:00:00.0000000+00:00", "title": "Commanding Constellations (Pipeline Architecture)", "stiType": "PREPRINT", "distribution": "PUBLIC", "submittedDate": "2013-08-21T04:04:00.0000000+00:00", "authorAffiliations": [{"sequence": 0, "submissionId": 20030054364, "meta": {"author": {"name": "Ray, Tim"}, "organization": {"name": "NASA Goddard Space Flight Center", "location": "Greenbelt, MD, United States"}}, "id": "cd8ac0cd9c3040048c9be3a4a6a60a08"}, {"sequence": 1, "submissionId": 20030054364, "meta": {"author": {"name": "Condron, Jeff"}, "organization": {"name": "Raytheon Co.", "location": "Greenbelt, MD, United States"}}, "id": "993393cb79d2475e9bd275e3308d94ea"}], "stiTypeDetails": "Preprint (Draft being sent to journal)", "technicalReviewType": "TECHNICAL_REVIEW_TYPE_NONE", "modified": "2011-09-08T00:00:00.0000000+00:00", "id": 20030054364, "created": "2013-08-21T04:04:00.0000000+00:00", "center": {"code": "GSFC", "name": "Goddard Space Flight Center", "id": "973fae00c3584b9fb4c762ae9870d0f6"}, "onlyAbstract": false, "sensitiveInformation": 2, "abstract": "Providing ground command software for constellations of spacecraft is a challenging problem. Reliable command delivery requires a feedback loop; for a constellation there will likely be an independent feedback loop for each constellation member. Each command must be sent via the proper Ground Station, which may change from one contact to the next (and may be different for different members). Dynamic configuration of the ground command software is usually required (e.g. directives to configure each member's feedback loop and assign the appropriate Ground Station). For testing purposes, there must be a way to insert command data at any level in the protocol stack. The Pipeline architecture described in this paper can support all these capabilities with a sequence of software modules (the pipeline), and a single self-identifying message format (for all types of command data and configuration directives). The Pipeline architecture is quite simple, yet it can solve some complex problems. The resulting solutions are conceptually simple, and therefore, reliable. They are also modular, and therefore, easy to distribute and extend. We first used the Pipeline architecture to design a CCSDS (Consultative Committee for Space Data Systems) Ground Telecommand system (to command one spacecraft at a time with a fixed Ground Station interface). This pipeline was later extended to include gateways to any of several Ground Stations. The resulting pipeline was then extended to handle a small constellation of spacecraft. The use of the Pipeline architecture allowed us to easily handle the increasing complexity. This paper will describe the Pipeline architecture, show how it was used to solve each of the above commanding situations, and how it can easily be extended to handle larger constellations.", "isLessonsLearned": false, "disseminated": "METADATA_ONLY", "meetings": [{"country": "United States", "submissionId": 20030054364, "name": "Space Mission Challenges for Information Technology", "location": "Pasadena, CA", "id": "fe864db4b48647368e13174d49228847", "startDate": "2003-07-01T00:00:00.0000000+00:00"}], "publications": [{"submissionId": 20030054364, "id": "5c779ff0774443ffbbba4d4a3788438d", "publicationDate": "2003-01-01T00:00:00.0000000+00:00"}], "status": "CURATED", "related": [], "downloads": [], "downloadsAvailable": true, "index": "submissions-2022-09-30-06-07"}