b'LCADS: A COOPERATIVE DECISION MAKING MODEL WITH\nCLIPS EXPERTS\nP\nt\nJens Pohl and Leonard Myers\nCAD Research Unit\nCalifornia Polytechnic State University, San Luis Obispo\n\nAbstract. This paper describes a cooperative decision making model comprising six concurrently\nexecuting domain experts coordinated by a blackboard control expert. The focus application field is\narchitectural design, and the domain experts represent consultants in the areas of daylighting, noise control,\nstructural support, cost estimating, space planning, and climate responsiveness. Both the domain experts\nand the blackboard have been implemented as production systems, utilizing an enhanced version of the basic\nCLIPS package. Acting in unison as an Expert Design Advisor, the domain and control experts react to\nthe evolving design solution progressively developed by the user in a 2-0 CAD drawing environment. A\nGeometry Interpreter maps each drawing action taken by the user to real world objects, such as spaces,\nwails, windows, and doors. These objects, endowed with geometric and non-geometric attributes, are stored\nas frames in a semantic network. Object descriptions are derived partly from the geometry of the drawing\nenvironment and partly from knowledge bases containing prototypicd, generalized information about the\nbuilding type and site conditions under consideration.\n\nINTRODUCTION\nCommencing in 1987 with the participation of an interdisciplinary team of researchers the CAD\nResearch Unit at the California Polytechnic State University, San Luis Obispo, undertook the\ndevelopment of a prototype working model of a computer-based environment supportive of the\ndesign function as it is practised in architecture and engineering. Impetus for the project came\ndirectly from the shortcomings of current CAD systems that focus almost entirely on the\nproduction of drawings rather than the design decisions that produced the artifacts represented by\nthe drawings.\nThe CAD Research Unit team proposed an intelligent computer-aided design system\n(ICADS) model comprising three integrated components: an intelligent CAD DBMS, an Expert\nDesign Advisor, and a Multi-Media Presentation Facility (Fig. 1).\nThe CAD DBMS component provides on-line access to information resources in direct\nsupport of the design function. From the perspective that design involves predominantly the\nrefining, adapting and combining of prototype solutions of previous similar projects, the ICADS\nmodel includes several knowledge bases in the CAD DBMS component. These knowledge bases\nare intended to capture design context experience and serve as a basis for reasoning during the\nearliest decision-making stages.\nWithin the CAD DBMS component the evolving design solution is represented as a\nnetwork of hierarchically related objects. Collectively, these objects provide a comprehensive\ndescription of the current state of the design solution. Individually, the description of each object\nconsists of information units or design entities comprising an integrated set of geometric definitions\nand non-geometric attributes. This information representation drives a network of intelligent design\ntools (IDTs) coordinated within the Expert Design Advisor by a Blackboard Control System.\n\nEXTERNAL\n\n3\nCAD DRAWING\nFUNCTION\n\nCAD SYSTEM\n\nPRESENTATION\nPRODUCTION\nFACILITIEI\n\nSHELL\n\nBASES\n\nI\n\n1\n\n11\n\nEX""\nD E S I G N ADVISOR\n\nII\n\nMULTI-MEDIA\nPRESENT*TION\n\nBASES\n\nI\n\nFigure 1.\nConceptual ICADS Model\n\nFigure 2.\nIntelligent CAD System Shell\n\nThe availability of appropriate design knowledge is central to any computer-based design\nenvironment. In this respect the ICADS model is foremost an information management and\nsynthesizing system, and may be viewed as a shell that binds together an assortment of internal and\nexternal design resources (Fig.2). The drawing function, which dominates existing CAD systems,\nassumes the secondary role of providing a medium for visualizing and communicating the design\ndecisions that have been made within a largely non-graphical problem-solving context.\nThe work described in this paper represents the first version of an ICADS working model\n(Pohl et al. 1988, Myers and Pohl 1989). ICADS DEMOl has been developed mostly with offthe-shelf software systems. Where the necessary tools were inadequate, enhancements were added\nand modifications made. The relational DBMS, SQL-RT (Oracle), was found to be entirely\nadequate for accommodating the Building Type, Sitmeighborhood and Reference elements of the\ndesign knowledge component of the ICADS model. The CLIPS expert system shell, developed by\nthe Artificial Intelligence Section at NASNJohnson Space Center, was used for all parts of the\nExpert Design Advisor (NASA,1989). Availability of CLIPS source code (\'C\' language) allowed\nseveral enhancements to be made to the basic CLIPS package to pennit the Blackboard Control\nSystem to execute in a dismbuted environment with several CPUs.\nThe CAD Research Unit was fortunate to obtain permission from Accugraph Corporation\n(El Paso, Texas) to incorporate its MountainTop computer-aided drawing package in ICADS\nDEMOl. Some modifications were made to this commercially available CAD system to provide\ndirect access to the data structure of the drawing currently displayed on the screen.\n\nTHE ICADS EXPERT DESIGN ADVISOR\nThe principal component of the ICADS DEMOl model is the Expert Design Advisor, consisting of\nsix domain experts (IDTs), the Blackboard Control Expert, two knowledge bases and several\nsources of reference data (Pohl et al. 1989).\n\nQWiGjNfiL Pj!gGE 1\n3\nOF $QQR QUALITY\n\nThe scope of the implementation environment has been restricted in terms of both the\nbreadth of information available to the designer and the range of design functions supported. The\ninformation resources provided by the working model are drawn from the architectural design\napplication area and include Building Type and SiteLNeighborhood knowledge bases, as well as a\nReference database containing material and constructional information.\nA schematic diagram of the ICADS working model is shown in Fig.3. The Expert Design\nAdvisor is responsible for the evaluation of the evolving design solution and the resolution of\nconflicts that may arise when solutions in one domain interfere with solutions in another domain. It\nconsists of advisory components, a control expert and operational components, as shown below:\nadvisory components:\n\ncontrol expert:\noperational components:\n\nf\n\nGeometry Interpreter\nAccess domain expert\nClimate domain expert\nCost domain expert\nLighting domain expert\nSound domain expert\nStructure domain expert\nConflict Resolver\nsemantic network of frames\nMessage Router\nAttribute Loader\nPROTO\'IYPEDATABASE\n\n7\n\nFigure 3.\nICADS DEMO1 System Diagram\n\nCentral to the operation of the Expert Design Advisor is a semantic network of frames that\nrepresent the current state of the design solution within the context of the project. The term\nsemantic network is used here to refer to a classification framework of design object frames. Each\nframe incorporates slots that may contain several types of information, such as values of geometric\nand non-geometric attributes of the current solution model, and relation linkages (Fig.4).\nThe attribute values represent a fact-list that chives the domain experts and the Conflict\nResolver. Indeed, attribute slot names have identical counterparts among the fact names in the\nlatter. This provides a direct interface mechanism that allows the domain experts and the Conflict\nResolver to react quickly to any changes in the current state of the design solution. Values in the\nfact-list are derived from two sources:\n1.\n\nGeometric facts describing the geometry of the design solution are extracted by the\nGeometry Interpreter in terms of the nature, physical dimensions and relative locations of\nthe following seven design objects:\nFLOOR, SPACE, WALL, DOOR, WINDOW, SEGMENT and SYMBOL\nThe SEGMENT object refers to any part of a WALL object that is demarcated either by the\nintersection of another wall or has been drawn by the designer as a distinct wall\ncomponent. The SYMBOL object represents directly by name any closed shape or icon\nwithin a SPACE object (e.g., column, chair, table).\n\n2.\n\nAttribute facts describing the context of the project and the non- geometric characteristics of\nthe current design solution. These attribute facts are derived from the Building Type and\nSite/Neighborhoodknowledge bases, directly or indirectly through the extrapolation of\nseveral information items. Non-geometric attribute values are included in the fact-list in\nassociation with the following five design objects:\nPROJECT, NEIGHBORHOOD, SITE, BUILDING and FLOOR\n\nThe differences between the geometric and non-geometric design object sets are entirely\nconsistent with the nature of the information they contribute to the fact-list. The design knowledge\nbases that support the design process in the ICADS model encompass a much wider view of the\ndesign space than can be represented by any instance of the geomemc design solution. For\nexample, while regional and neighborhood parameters are an important part of the design decisionmaking process they are no longer discernable as discrete information items in the drawing of the\ngeometric model. At that level they are embedded under several layers of synthesis and are\ntherefore an implicit rather than explicit part of the geometry of the artifact.\nIn the ICADS working model the distinction between design context and design solution\nhas led to the separation of the semantic network of design objects into two logical sections\n(Fig.5).\nPROJECT DESIGN OBJECT FRAMES: comprising one frame for each design object\nrepresented in the design program (design specifications), which is a subset of the Building\nType and SitehVeighborhood knowledge bases. Slots in these frames are used to store nongeometric attributes that have either direct equivalents in the Building Type and\nSiteNeighborhood knowledge bases, or are inferred from several values by the Attribute\nLoader.\nSOLUTION DESIGN OBJECT FRAMES: comprising one frame for each (geometric)\ndesign object analysed by the Geometry Interpreter. Slots in these frames represent the\ngeometric descriptions of the particular design object identified by the Geometry Interpreter\nand the solution evaluation results generated by the domain experts under the coordinating\nrole of the Blackboard.\n\n\\\n\nCURRENT STATE\nOF DESIGN CONTEXT\n\nn\n\nn\n\nfl\n\nn\n\nBLACKBOARD\n\nFigure 4.\nSemantic Network of Design Objects\n\nFigure 5,\nLogical Division of Design Objects\n\nIn the current ICADS working model the slot values of the \'project design object\' frames\ncannot be changed by the designer during the design process. They are established by the Attribute\nLoader at the beginning of a design session and remain as static members of the input templates of\nindividual domain experts, and to a lesser extent the Conflict Resolver, throughout the design\nsessio\n\nTHE DESIGN KNOWLEDGE BASES\nThe structure of the Building Type and Site/Neighborhood knowledge bases in the ICADS model\nhave been reported previously (Pohl et al. 1988). These knowledge resources are intended to\ncapture the experience and standard solution strategies associated with a given building type, and\nthe specific conditions of the site and its surrounding environment, respectively. Collectively, they\nprovide views of the design project from several vantage points represented by different interest\ngroups (e.g., owner, user(s), designer, community and government authorities).\nThe Building Type knowledge base is included in the Expert Design Advisor to provide\nprototype information relating to the type of building under consideration. In this context a\nprototype is defined as a body of knowledge relevant to the definition and solution of a related set\nof design problems. The prototype includes generalizations derived from specific instances,\nelements of previously tested solutions, decriptions of typical solution components, and solution\nboundary constraints. The boundaries within which the prototype is applicable is provided by the\nSite/Neighborhood knowledge base, in terms of the requirements and characteristics of the owner,\nand the physical, environmental, social and economic context of the project location.\n\nTHE DOMAIN EXPERTS\nThe current state of the design solution, represented as object descriptions (containing both\ngeometric definitions and non-geometric attributes), drives six domain experts with evaluation\ncapabilities in the areas of space access determination, construction cost projections, daylighting,\nsound control, structural system selection and thermal behaviour. Each domain expert, executing\ncontinuously in background under a separate process, extracts information pertaining to the\nparticular design object under consideration from the available design knowledge bases and\ncommences to evaluate the design solution based on its expertise (Fig.4).\nFor example, the Lighting expert will evaluate the degree to which each space in the current\ndesign solution satisfies the requirement for daylight. The evaluation consists of two components.\nFirst, the requirements are established. This may be a trivial task, requiring only the generation of a\nsimple query to a Reference database to obtain recommended task and background illumination\nlevels for the type of space under consideration. Or, it may be a much more complicated\nundertaking involving the analysis of qualitative and quantitative design criteria such as:\nOWNER considers energy efficiency to be very important;\nUSER GROUP (A) consider energy efficiency to be optional;\nUSER GROUP (B) consider energy efficiency to be desirable;\nDESIGmR considers energy efficiency to be important;\nRecommendations for each SPACE based on past experience:\n\nx% of background illumination by daylight;\ny% of task illumination by daylight;\nSecond, the Lighting expert will estimate the daylight illumination on the workplane at the\ncenter of each space in two parts. The Daylight Factor is estimated based on the geometry of the\nspace, the geometry of windows in external walls and the reflectances of the internal wall, ceiling\nand floor surfaces. This Daylight Factor value is converted into an equivalent illumination level\nsubject to an external daylight availability calculation for a particular month, day and time.\nThe results obtained by each domain expert are added to the appropriate design object\nframes. In the current ICADS working model both the input and output templates of each domain\nexpert are predetermined sets of attributes and only the values of these attributes are variable. The\nConflict Resolver, resident in the Blackboard, examines the values posted by the domain experts\nand arbitrates conflicts. For example, the Sound expert may have generated the requirement that the\nnorth wall of the conference room should have no windows. This is in conflict with the current\ndesign solution (based on the Geometry Interpreter) and the Lighting expert who has determined\nthat the \'% of background illumination by daylight\' for this room is already 15% below the\n\'requirement\'. Based on its own rules the Conflict Resolver determines that the windows in the\nnorth wall should be reduced by 20% and double glazed to minimize noise transmission.\nApparently the reduction in the availablity of daylight is warranted in view of the noise\ntransmission problem\nThe Blackboard posts these new values to the appropriate frames and thereby initiates a\nnew round of evaluations by those domain experts whose previous results are now in conflict with\nthe Blackboard\'s determination. If the Blackboard had decided that the windows must be deleted\nfrom the north wall of the conference room then it would have requested permission for this radical\naction from the designer. The interaction between the designer and the Blackboard is limited to\nextreme circumstances in the current ICADS working model. Such circumstancesmay arise:\n1.\n\nIf the decision of the Blackboard requires a modification of the drawing. In the above\nexample, during the conceptual design stage a 20% reduction in the window area of the\n\nnorth wall can be accommodated without modification of the 2-D representation of the\nspace. However, the deletion of all windows from the wall would require the drawing to\nbe changed.\nIf the Blackboard cannot resolve a conflict set. Again, in the conference room example, it is\nconceivable that certain design specifications could rnandate daylighting and sound control\nrequirements that will not allow a compromise to be made. Under these conditions, the\nBlackboard will interrupt the designer and request guidance.\n\nAt any time during this evaluation process the designer can request to review the current\nconflict state of the Expert Design Advisor (i.e., the interactions of the Conflict Resolver with the\nsix domain experts). This is accomplished through the Design Interface on a second monitor.\n\nTHE CONFLICT RESOLVER\nThe Blackboard Control Expert is primarily implemented as the Conflict Resolver in the ICADS\nDEMO1 model. While it is envisaged that \'planning\' will play an important role in future\nimplementations of the ICADS model, at this time the resolution of conflicts appears to be\nsufficient to coordinate the activities of the advisory components in the Expert Design Advisor.\nThe principal purpose of the Conflict Resolver is to assert \'current value\' frame slots,\nrepresenting the current state of the evaluation process performed by the domain experts, onto the\nsemantic network resident in the Blackboard. To accomplish this the Conflict Resolver requests\nfrom the Message Router all of the \'solution design object\' frames which contain results generated\nby the domain experts. Current values fall into one of three basic categories: values which result\nfrom solutions proposed by a single domain expert; values which result from solutions proposed\nby several domain experts for a common current value; and, values which must be inferred from\nsolutions proposed by several domain experts.\nIn the case of the fmt category, which represents solution values unique to a single domain\nexpert, the Conflict Resolver does not change the values proposed by the expert. The proposed\nsolution values are simply asserted as current values into the appropriate frame slots. In the second\ncategory two or more domain experts propose differing values for the same solution parameter. In\nsuch direct conflict situations it is the responsibility of the Conflict Resolver to either determine\nwhich of the values is most correct or to derive a compromise value. The process of resolution may\ncause the Conflict Resolver to change several current values in addition to those in direct conflict.\nAn example of such a change is given below:\nStructural expert:\nClimate expert:\n\n\'suggested roof material type\' = A\n\'suggested roof material type\' = B\n\nRule 1: i f A == B then\ncurrent value\n\'suggested roof material type\' = A\nRule 2: if A == timber and B =concrete then\ncurrent value\n\'suggested roof material type\' = concrete\nRule 3: if A == concrete and B =timber then\ncurrent value\n\'suggested roof material type\' = concrete\nand\n,currentvalue\n\'suggested roof struct.systemt = concrete plate\nand\n\'required roof struct. depth\' = 4\ncurrent value\nand\ncurrent value\n\'roof insulation thickness\' = 3\n\nThe Conflict Resolver incorporates resolution rule sets which determine the best current\nvalues from those proposed. There is a resolution rule set for each possible direct conflict. In the\ndevelopment of each rule an attempt has been made to achieve a desirable balance between the\nvarious design issues. At this level the Conflict Resolver can be consider an expert whose\nknowledge is the ability to achieve this balanced integration. In the above example, let us assume\nthat the Structural expert proposes \'timber\' (A) and the Climate expert proposes \'concrete\' (B).\nUnder these circumstances the Conflict Resolver recognizes that:\n\n- the solutions for the roof structure proposed by the Structural and Climate domain expens\nare substantiallydifferent;\n\n- the \'concrete\' solution proposed by the Climate expert suggests a need for thermal\nstorage;\n\n- the \'timber\' solution proposed by the Structural expert cannot be readily modified to\nprovide thermal storage;\n- in most cases a structural timber system can be replaced by a concrete system (there are\nexceptions to this rule of thumb (e.g., seismic risk) and the Structural expert should be able\nto recognize such circumstances and, if necessary, refuse to agree with the Conflict\nResolver\'s proposed compromise);\n- the energy conservation savings provided by a passive thermal building are likely to\nexceed the higher capital costs of a concrete roof system.\nIn the third category the Conflict Resolver deals with proposed solution values that are\nindirectly in conflict with other proposed solution values and current values. The resolution rules\nfor this category allow the Conflict Resolver to make the necessary modifications to any of the\nvalues involved. Under these conditions, in addition to changing proposed solution values the\nConflict Resolver may also change current values as shown in the following example.\n=A\ncurrent value \'roof construction system\'\ncurrent value \'roof U-value (B?"U/HR-SF-F)\'=B\n=C\ncurrent value \'roof insulation thickness\'\ncurrent value \'roof thermal lag ( R \'\nH)\n=D\n\nClimate expert: \'suggested roof construction system\' = E\nRule 1:if A o E then\nlook up Reference database and change B, C, D to appropriate values for the suggested\nroof construction system \'E\'\nIn this example the Climate expert has suggested a new roof construction system. The\nConflict Resolver recognizes that several current values must be changed so that they match the\nnew roof construction system. Similar to the direct conflicts discussed under the second category,\neach indirect conflict must also have a set of resolution rules.\nNot all conflicts can be resolved by the system. In some cases, usually those requiring\nchanges to the drawing or \'project design object\' frames, the Conflict Resolver will ask for\nassistance from the designer. Under these circumstances operation of the Expert Design Advisor is\nsuspended until the designer responds.\n\nSOME IMPLEMENTATION ISSUES\nThe model of the ICADS Expert Design Advisor described above presents several issues of\nconcern that are of an operational nature.\nThe first concern is to prevent the Conflict Resolver from entering into an \'endless\nargument\' state that may arise when two domain experts always return with conflicting values for\nthe same solution parameter. For instance, in reference to the previous example the Structural\nexpert may insist for good reasons that the roof construction system should be \'timber\'. For\nreasons that are different but just as persuasive, the Climate expert may be unwilling to deviate\nfrom its original proposal of a \'concrete\' roof system. The two domain experts are now locked into\nan ad absurdum argument. In the current ICADS working model the Conflict Resolver monitors\nthis type of situation by checking for repetitive cycles in current values.\nA second concern is related to the timeliness of the conflict resolution process. In the\nimplemented model of the Expert Design Advisor, the Conflict Resolver will not post a current\nvalue to the Blackboard until it has seen all of the \'solution design object\' frames which are\ninvolved in a given conflict. In a full ICADS implementation it may be desirable for the Conflict\nResolver to post a current value based on partial information (i.e., based on only some of the\nrequired \'solution design object\' frames). This current value could be updated when the Conflict\nResolver receives additional information. In the implemented model the Conflict Resolver waits\nuntil it has all of the necessary values from the domain experts before asserting a new current\nvalue.\nThe potential for a \'cascading\' condition which may arise when a minor change by a\ndomain expert causes a major re-evaluation of the current solution by several domain experts, is\nanother concern. In the DEMOl implementation of the Expert Design Advisor the possibility of\nsuch a condition occurring is exacerbated because domain experts will fue on any change to a\ncurrent value and the Conflict Resolver will respond to any proposed changes posted by the\ndomain experts. An attempt has been made to forsee events that could conceivably lead to this\nundesirable condition. Where appropriate, tests have been included in the rules of domain experts\nto determine whether the current divergence between the most recent suggestion and the\ncorresponding current value (proposed by the Conflict Resolver) is sufficiently large to warrant\nfurther action by the domain expert.\n\nCONCLUSION\nThe implementation of the first prototype working model represents a three-year milestone in the\nICADS project. Although ICADS DEMOl is limited in scope, it will provide a vehicle for the\ncollection of a body of knowledge relating to the performance characteristics of a computer-based\ndesign environment. Extensive explorations can now be conducted to determine the impact of an\nExpert Design Advisor that dynamically responds to the actions of the designer in its continuous,\nunobtrusive evaluation of the evolving design solution.\n\nREFERENCES\nMyers L. and J.Pohl (1989); \'ICADS DEMOl: A Prototype Working Model\'; Fourth\nEurographics Workshop on Intelligent CAD Systems, Paris, France, April 24-7. NASA (1989);\nCLIPS Architecture Manual: Version 4.3; Artificial Intelligence Section, Lyndon B.Johnson Space\nCenter, NASA, USA.\nPohl J., A.Chapman, L.Chirica, R.Howel1 and L.Myers (1988); \'Implementation Strategies for a\nPrototype ICADS Working Model\'; Technical Report: CADRU-02-88, CAD Research Unit,\nDesign Institute, California Polytechnic State University, San Luis Obispo, California.\n\nPokl,J., L.Myers, A.Chapman and J.Cotton (1989); \'ICADS: Working Model Version 1\';\nTechnical Report: CADRU-03-89, CAD Research Unit, Design Institute, School of Architecture\nand Environmental Design, California Polytechnic State University, San Luis Obispo, California.\n\n'