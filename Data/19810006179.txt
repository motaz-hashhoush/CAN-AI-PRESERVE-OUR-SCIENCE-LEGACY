b'.. ..\newN 8 1 - 1 4 6 9 3\n\n.....\n\n...,\n\n......,\n\nA\n\n\xe2\x80\xa2\n\nMESH GENERATION USING ALGEBRAIC TECHNIQUES\nPeter R. Eiseman\nInstitute for Computer Applications in\nScience and Engineering, USRA\nand\nRobert E. Smith\nNASA Langley Research Center\nCoordinate transformations are powerful tools for the solution of the\npartial differential equations which describe physical phenomena.\n\nThe\n\nuse of transformations leads to well ordered discretizations of the\nphysical domain and thereby renders a simplification in a numerical solution\nprocess.\n\nThe discretization is constrained by the underlying physics, the\n\nproblem geometry and the topology of the region where the solution is to\nbe obtained.\n\nThe constraints can be stated in geometric terms.\n\nIn\n\nparticular they can be categorized as boundary constraints, uniformity\nconstraints, and internal constraints.\n\nBoundary constraints include: the\n\nbasic geometry of solid objects, the transmissive junctures between and\naround solid objects, the choice of representation for the boundaries, the\nangles at which transverse coordinate curves intersect boundaries, and the\nrate of entry for such coordinate curves.\n\nUniformity constraints are\n\napplied to either local or global distributions of coordinate curves or\npoints to form a basis from which the curves or points can be redistributed.\n\n73\n\nThis may be based on an a priori specification of a distribution function\nor on a solution adaptive approach.\n\nIn either case, the redistribution\n\nmust not be distorted by the underlying transformation.\n\nInternal con-\n\nstraints are applicable when an interior shape or interior mesh structure\nis to be smoothly embedded within a global mesh to simplify the simulation\nof physical processes in the given region.\nAlgebraic mesh generation techniques are highly advantageous for\nmeeting the constraints described above.\n\nAlgebraic techniques provide\n\nexact control of the mesh properties necessary to satisfy the given\nconstraints.\n\nAlthough other methods have been developed which provide some\n\ndegree of control, the level of control is not in general sufficient to\nsatisfy certain of the constraints.\n\nFor example, the smooth embedding of\n\na Cartesian mesh within a global mesh structure cannot be readily constructed with the application of differential equation techniques.\n\nAlso,\n\nthree dimensional meshes are not in general readily obtained with nonalgebraic techniques.\n\nOn the other hand, algebraic techniques require\n\nmore complex specification of the data to assemble a mesh.\n\nThe purpose\n\nof this paper is to present an overview of algebraic techniques for mesh\ngeneration and set forth the underlying concepts which have been successful.\nBoth two- and three-dimensional domains are considered.\nThe Multi-Surface Transformation\nWhen curvilinear coordinates are employed in the numerical solution\nof a boundary value problem, constraints must often be placed upon the\ncoordinates, in addition to the basic requirement that the bounding surfaces are coordinate surfaces of one or more coordinate systems.\n74\n\nThe\n\n~.\n\nlocations of the constraints can occur anywhere in the problem domain.\nOn the boundaries, a particular pointwise distribution may be needed; in\nregions near boundaries, a particular coordinate form may be advantageous;\nand away from the boundaries, an internal coordinate specification may\nalso be required.\n\nTypically, the constraints will arise either to resolve\n\nregions with large solution gradients or to cause some simplification in\nthe problem formulation and solution.\nIn conjunction with the demand for constraints, the general multisurface transformation [lJ will be examined.\n\nThe multi-surface transfor-\n\nmation is a method for coordinate generation between an inner bounding\nsurface ~l\n\nand outer bounding surface ~N\'\n\nTo establish a particular\n\ndistribution of mesh points on each bounding surface, a common parameterization 1\n\nis chosen for each surface.\n\nThis is equivalent to a coordinate\n\ndescription of the surfaces which yields the desired surface mesh when the\nparametric components of t\n\nare given a uniform discretization.\n\nWith the\n\nparametric description, the inner and outer bounding surfaces are denoted\nby ~l(t)\n\nand ~N(1)\n\nrespectively.\n\nIn continuation, parameterized\n\nintermediate surfaces ~2(t)""\'~N_l(1)\n\nare introduced so that they\n\ncan be used as controls over the internal form of the coordinates.\n\nThe\n\nintermediate surfaces are not coordinate surfaces but, instead, are\nsurfaces which are used to establish a vector field that is composed of\ntangent vectors to the coordinate curves spanning the coordinate system\nto connect bounding surfaces.\nof surfaces ~l(t),\nto bounding surface.\n\nIt is also assumed that the collection\n\n~2(1)""\'~N(1)\n\nis ordered from bounding surface\n\nAn illustration is given in Fig. 1.\n\nFor a fixed\n\n75\n\nI\nI\nI\n\n~,\n\n-+\nPN- 1\n\n,\n\n\\\n\n\\\n\n,\n\nI\n\nI\n\n"\n\n\xe2\x80\xa2\nI\n\n/-+ -+\n\nv2 (t)\n\nORlGn ~ _\\1~ PACE IS\n\nFig. 1 - A piecewise linear curve and its tangent field.\n\nparameter value\n\nt, there is a corresponding point on each surface. The\n\npiecewise linear curve obtained by connecting corresponding points is\ngiven by the dashed curve in Fig. 1.\n\nFrom the figure, it can be observed\n\nthat the tangent directions determined by the piecewise linear curve are\npiecewise constants.\n76\n\nAs t\n\nis varied, the field of tangent directions\n\nio......\n\nobtain their smoothness (level of differentiability) only in\n\nt. To obtain\n\nsmoothness in going from bounding surface to bounding surface, a sufficiently smooth interpolation must be performed.\n\nThe result is a smooth\n\nvector field of undetermined magnitude which gives the desired tangential\ndirections for coordinate curves connecting the bounding surfaces.\nunique vector field of tangents is then obtained by\n\ncorrec~ly\n\nA\n\nchoosing\n\nmagnitudes so that, on integration, the bounding surfaces are fit precisely.\nIn symbols, a vector field tangent to the piecewise linear curves is\ngiven by\n\n(1)\n\nbetween the kth and (k + l)th\n\nsurfaces where\n\nk is taken to vary (if\n\nN > 2) from the first bounding surface to the final intermediate surface.\nThese vectors are indicated in Fig. 1.\n\nThe coefficients\n\nAk\n\nare scalars\n\nwhich determine the magnitude of the vectors but not the directions.\nan independent variable\npartit ion\n\nr\n\n<\n\nl\ntangents of Eq. 1.\n\n<\n\nr\n\nrN l\n-\n\nWhen\n\nis assumed for the spanning direction, a\ncan be specified in correspondence with the\n\nThe partitioned variable can then be used to represent\n\nthe tangents as the discrete vector valued function which maps\n\nr k into\n\nVk for k = 1 ... N-l. A sufficiently smooth vector field V(r,t) is\nthen obtained by a sufficiently smooth interpolation V(rk,t) = ~k(t).\nWith\n\nr\n\nas a continuous independent variable, the r-derivative of the\n\ncoordinate transformation P(r,t)\n\nis equal to the interpolant and is\n\ngiven by\n\n77\n\nClP\n\n~\nor\n\nwhere\n\n~k(rj)\n\n-+\n\n=v =\n\nN,-l\nL ~k(r)Vk(t) ,\n\n(2)\n\nk= 1\n\nis unity at\n\nk\n\nis integrated with an initial\n\nj\n\n=\n\nr\n\nand vanishes otherwise.\n\nWhen Eq. 2\n\n1 value of P1(t), the transformation\n\nbecomes\n\n(3)\n\nwhere\nr\n\n= f I/Jk(x)dx ,\nr\n\n(4)\n\nl\n\nfrom whi ch we observe that the i nterpo 1ants\n\n1Vk must be conti nUOL\'S 1,11\n\ndifferentiable up to an order which is one less than the level of smoothness\ndesired for the coordinates.\n\nThe construction of local controls on the\n\ncoordinates will rely upon the development of suitably smooth interpolation\nfunctions.\n\nIf the magnitudes\n\nAk\n\nof Eq. 1 are chosen so that each\n\nAkGk(r N l ) is unity, then the evaluation of the transformation at\n_\nwill reduce to PN(t)\nEq. 3.\n\nrN-l\n\nby means of a telescopic collapse of terms in\n\nWith this choice, we obtain the general multi surface transformation\n\nof Eiseman [lJ which is given by\n\n(5)\n\n78\n\nOn examination, each interpolation function\n\n~k\n\ncan be rescaled without\n\nchanging the transformation; hence, the original vector field interpolation\nbecomes an interpolation only on vector directions.\nWhen the interpolants\n\n~k\n\nare polynomials in\n\nr, the coordinate\n\ncurves which connect the bounding surfaces are globally defined by polynomials in\n\nr of one greater degree.\n\nThe specification of boundary\n\nproperties for the curves and a global control over their general form are\nobtained by choices of intermediate surfaces and the associated partitions\nof r.\n\nFor notational simplicity, let\n\nr, = 0 and\n\nrN_l = 1.\n\nIn the\n\nsimplest case when there are no intermediate control surfaces, there is\njust one vector field direction\nthe bounding surfaces.\nG,(r) =\n\nr~)l\'\n\nV,(t)\n\nThe interpolant\n\nG,(r)/G,(l)\n\n=\n\nwhich is determined solely by\n~l\n\nis then a constant function,\n\nr, and the polynomial 2-surface transformation\n\nbecomes\n\nwhich is the case of linear coordinate curves connecting boundaries.\n\nThe\n\nlinear case has occurred in many studies including [2J, [3J, and [4J and\nis limited to at most one prescribed coordinate property per boundary\nwhich can be either a pointwise distribution or a distribution of angles\nwith the linear transverse coordinate curves.\n\nTo allow for the prescrip-\n\ntion of an additional coordinate property on one of the boundaries, an\nintermediate control surface is introduced and the polynomial 3-surface\n\n79\n\ntransformation is computed from Eq. 3 with\ncorresponding to directions of Vl(t)\n\n~l\n\n=1\n\nand V2 (t)\n\n- r and\n\n~2 =\n\nr\n\nof Eq. 1 and Fig. 1.\n\nThe integrals from Eq. 4 become\n\n(7)\n\nG (1) =\n2\nis determined by\n\nand since G1(1)\nin\n\nr\n\n=\n\nt. the original vector field which is discrete\n\n(8)\n\nbecause\n\nAk\n\n=\n\nl./Gk(l)\n\nin Eq. 1.\n\nUpon substitution from Eq. 7 the\n\npolynomial 3-surface transformation is given by\n\n(9)\n\nIn continuation, an additional coordinate property can be prescribed\non each boundary when two intermediate control surfaces are used.\n\nThe\n\npolynomial 4-surface transformation is computed from Eq. 3 with interpolants\n\n80\n\n\'-\n\n\\jJ,(r) = (\' - r)(r 2 - r),\n\n( \'0)\n\nwhich respectively correspond to the directions of\n\nV (t)\n3\nr,\n\nV,(t), V(t),\n2\n\nand\n\nwhich, in turn, are respectively associated with partition points\n\n= 0, r 2, and r3 = 1 and which are defined to vanish at all partition\n\npoints except the ones of association for each function.\n\nFor simplicity,\n\n1\nwe will set r 2 = 2 so that the partition is uniform. The nonuniform\ncase is a simple but algebraically more complex extension [lJ. With\n\nr2\n\n=\n\n!, the integrals from Eq.\n1\n\n4 become\n\n3\n1\n4 r 2 +"3 r 3 ,\n\nG,(r) = 2 r -\n\nG2 (r) =\n\n1\n1\n2 r 2 -"3 r 3 ,\n\nG (r)\n3\n\n"3\n\n=\n\n,\n\nr\n\n3\n\n-\n\n1\n4\n\n2\nr ,\n\nand from an evaluation at the endpoint\n1\n1\nG2(1) = 6\' and G (1) = 12\'\n3\ntransformation is given by\n\n( 11 )\n\nr\n\n=\n\n1\n\nBy substitution, the polynomial 4-surface\n\n81\n\nP(r,t)\n\n= Plet) + r(6 - 9r + 4r2)[P2Ct) - P1(t)]\n+\n\n+\n\nwith\n\nr2(3 - 2r)[P3(t) - ~2(t)]\nr2(4r - 3)[P4(t) - P3 (t)].\n\n( 12)\n\nr-derivative\n\n~~ = 6(1 - r)(l - 2r)[P 2 (t) - P1(t)]\n+\n\n6r(1 - r)[P3(t} - P2 (t)]\n\n+\n\n6r(2r - 1)[P4(t) - P (t)] .\n3\n\n(13)\n\nBy direct evaluation\n\nP(O,t)\n\n=\n\nP1(t),\n( 14)\n\nP(1,!)\n\n=\n\nP4 (t) ,\n\nand\n\n~~\n\n(O,t)\n\n=\n\n6[P2(t) - P (t)],\n1\n(15 )\n\n~~\n82\n\n(l.t)\n\n=\n\n6[P4(t) - P3(t)],\n\n~\n\nwhich explicitly shows that in addition to fitting the boundaries (Eq. 14),\nthe intermediate surfaces P2(t)\n\nand\n\nP3(t)\n\ncan be used to control the\n\nangles at which the transverse coordinate curves in\nboundaries (Eq. 15).\n\nr\n\nintersect the\n\nMoreover, the choice of intermediate surfaces can\n\nalso be used to control the shape of the transverse curves and the distribution of the constant\n\nr\n\ncoordinate surfaces.\n\ndiscussion is given in Eiseman [lJ.\n\nThe general derivation and\n\nFor our purposes, the discussion on\n\ncoordinate system controls will be deferred until local methods are presented for our survey of some of the material developed in Eiseman [5J,\n[6J.\n\nAn alternative form of the polynomial 4-surface transformation (Eq. 12)\ncan be obtained from the evaluations of the transformation (Eq. 14) and its\nderivatives (Eq. 15).\n\nWith the evaluations. the intermediate surfaces\n\ncan be expressed entirely in terms of boundary data, which results in\n\n( 16)\n\nand\n\nUpon substitution of Eqs. 14 and 16 into Eq. 12 we obtain\n\n( 17)\n\n+ r(1 - r)\n\n2\n\naP\n3r\n\n7\n\n2\n\n(0,1:) - r (1 - r)\n\naP\n3r\n\n7\n\n(1,1:),\n83\n\nafter grouping terms by boundary type.\n\nBy examination, the coefficients\n\nof the boundary evaluations for the transformation and its r-derivative\ncan easily be identified as just the canonical Hermite cubic interpolants\non the unit interval\n\n0 < r < 1.\n\nWhen the r-derivatives are specified\n\nto be normal to the respective boundaries, we obtain the transformation\npresented by Smith and Weigel [3J.\nIn continuation, polynomial N-surface transformations can be\nsystematically established from Eqs. 3-4 and the interpolants\nN-l\n\n( 18)\n\nIT\n\ni=l\ni1k\nfor\n\nk\n\n=\n\n1,2, ... ,N-l.\n\nIn each case, the transverse coordinate curves are\n\npolynomials of degree N-l in\n\nr with vector valued coefficients which are\n\nfunctions of the surface coordinates\ndefined for all\n\nt.\n\nPolynomials, however, are globally\n\nr, and as a consequence, local mesh properties cannot be\n\ncontrolled without a global effect.\n\nAs an example, suppose that we wish\n\nto smoothly embed a general rectilinear Cartesian system within a global\nmesh structure to obtain a system of the form illustrated in Fig. 2 where\nthe Cartesian region within the mesh is bounded by the darkened curves.\nIn the Cartesian part of the mesh, coordinate curves in\nwhich pass through it at a uniform rate.\n\nr\n\nwould be lines\n\nSince global polynomials in\n\nwould be uniquely determined by the Cartesian region, curved boundaries\ncould not be fitted.\n\n84\n\nr\n\nFig. 2 - A smoothly embedded Cartesian region\nwithin a global mesh structure.\nTo obtain precise local controls which could be successfully applied\nto generate a mesh as illustrated above in Fig. 2, local forms of the\nmultisurface transformation (Eqs.3-4) were established and analyzed by\nEiseman [5], [6], and [7J.\n\nOur discussion will follow the development\n\ngiven by Eiseman in [6] and will focus upon two-dimensional applications\nwith a surface coordinate\n\nt\n\n=\n\nt.\n\nWhen the interpol ants\n\n~k\n\nare\n\nnonvanishing on only a local region, the precise local controls over the\ncoordinates that were obtained will be illustrated with the local piecewise\nlinear interpolants that are depicted in Fig. 3.\n\nFor algebraic simplicity,\n\nthe analysis is restricted to the case with the uniform partition\n\nrk\n\n=\n\nk\n\nwith the clear understanding that nonuniform partitions will follow the\nsame analytic pattern.\n\nSince the multi-surface transformation remains\n\nunchanged when the interpol ants are scaled by any sequence of nonzero\n85\n\n1\n\n2\n\n3\n\nk-l\n\nk\n\nk+l\n\nN-2\n\nN-I\n\nFig. 3 - Piecewise linear local interpolants with partition points\nrk = k for k = 1,2, ... ,N-l .\n\n~k(rk)\n\nnumbers. the height\n\nof each interpolant can be chosen arbitrarily.\n\nIn particular, the form of the multi-surface transformation can be\nsimplified when the heights are adjusted so that each interpolant integrates\nto unity which yields\n\nGk(r N l ) = 1 for all\n_\n\nk.\n\nThe integrals are\n\nobtained from triangular areas, and by direct observation, lead to the\nheight adjustments\n\n~1(r1)\n\n= 2,\n\n~k(rk) =\n\n1, and\n\n~N-1(rN-l) =\n\ncorrespondence with the successive illustrations in Fig. 3.\n\n2 in\n\nAlso. in\n\ncorrespondence, the explicit form of the normalized interpolants are\ngiven by\n\nfor\n\n1\n\n<\n\nr\n\n<\n\n2\n(19)\n\ntJ!,(r)\n\nfor\n\n86\n\n2\n\n<\n\nr\n\n<\n\nN\n\n\'--\n\n0\n\nfor\n\nk- 1 <r <k\n\n(k - r) + 1\n\nfor\n\nk<r<k+ 1\n\n0\n\nfor\n\nk + 1 < r < N- 1\n\nfor\n\n=\n\nl<r<k- 1\n\n(r - k) + 1\ntfJk (r)\n\nfor\n\n1 <r <N- 2\n\n(20)\n\n(21)\n\nfor\n\nN- 2 < r < N\n\nand their integrals defined in Eq. 4, by\n1 - (2 - r) 2\n\nfor\n\n1\n\n<r <2\n(22)\n\nfor\n\n1\n\n2\n\n<\n\nr\n\n<\n\nN- 1\n\n<r <\n\nfor\n\n1\n\n1/2(r - k)2 + (r - k) + 1/2\n\nfor\n\nk - 1 <r < k\n\n-1/2(k - r)2 _ (k - r) + 1/2\n\nfor\n\nk<r<k+ 1\n\nfor\n\nk+\n\n0\n\nGk(r)\n\n1\n\no\n\nfor\n\n1\n\n<\n\nr\n\n<\n\n1\n\nk - 1\n\n<r <N\n\n; (23)\n- 1\n\nN- 2\n(24)\n\n(r -\n\nN + 2)2\n\nfor\n\nN- 2 < r < N- 1\n\nwhich are depicted in Fig. 4.\n\n87\n\n"G\n\nG\n\n1\n\nk\nI\n\nI\nI\n\nI\n\n\'I\n\n11\n\nI\n\n,\n\nI\n\n1\n\n2\n\nr\n\nk-l\n\nk\n\nk+l\n\nN-2\n\nFig. 4 - Integrals of normalized interpolants for the partition rk\n\nOn the i nterva 1 k -< r\n\n<\n\nk + 1, the integrals\n\nG.(r)\n1\n\nN-l\n\n=\n\nk.\n\nwhich correspond\n\nto interpol ants defined over nonintersecting intervals are either unity or\nvanishing depending upon whether the interval of definition precedes or\nfollows the interval under examination.\n\nWhen\n\nis nonvacuous for\n\nGi(r)\n\nk\n\n>\n\n1, the integrals\n\ni\n\n= 1,2, ... ,k - 1 which\nhave been evaluated over\n\nthe entire domain for which the respective interpolant\n\n~i\n\nis nonvanishing;\n\nhence, these preceding integrals are unity by the chosen normalization.\nWhen\n1\n\n<\n\nk + 2, k + 3, ... ,N - 1, the interpolants\n\ni\n\nr\n\n=\n\n<\n\nk + 1; hence, the integrals\n\nconsequence,\n\nG. for\n1\n\ni\n\n=\n\nG.\n1\n\n~i\n\neach vanish on\n\nalso vanish there.\n\nAs a\n\nk, k + 1 yield the only nontrivial contribu-\n\ntions for the multi-surface transformation which reduces to\n\n(25)\n\n88\n\n~\n\nwhich depends upon only the three control surfaces\n\nPk , Pk+ l , P +2\nk\n\nwhich can be arbitrarily selected to our advantage when they are not\nbounding surfaces.\n\nWith substitutions from Eq\'s. 22-24, we obtain the\n\npartition point (r k = k for\n\nk\n\n=\n\n1,2, ... ,N - 1) evaluations\n\n(26)\n\nwhich, in addition to boundary fitting at the end points\nr\n\n=\n\nr\n\n=1\n\nand\n\nN - 1, also shows that the transformation passes through the midpoints\n\nof the lines which connect the intermediate control surfaces for any\nfixed surface coordinate\n\nt.\n\nMoreover, from the general multi-surface\n\nconstruction (Eqs. 1-5 and Fig. 1), the transverse coordinate curves are\n\n.\n\ntangent to the connecting lines at the partition point evaluations.\n\n-"\n\nThe\n\ntangents at partition points can be explicitly obtained from substitutions\n89\n\nof the interpolation functions (Eqs. 19-21) into the r-derivative of\nthe transformation (Eq. 25) and are given by\n\n(27)\n\naP\nor\n\n~\n\n~\n\n(N-l,t) = 2[t\'N(t) - \'"\'N-l(t)].\n\nIn graphical form, this process is depicted in Fig. 5.\n\n90\n\nc-J-\n\nF\nN\n\nFig. 5 - Coor"dinate curve segments for k s r\n\nBetween the control surfaces\nof constant\n~1\n\n~\n\nr\n\nPi\n\nand\n\nP. for i\nJ\n\n<\n\nk+ 1.\n\n> j.\n\nthe distribution\n\ncoordinate surfaces can be controlled for the general\n\nmultisurface transformation (Eqs. 4-5) when uniformity can be specified\nalong a direction of measurement\n\nP;Ct)-PjCt)\n\n(28)\n\nI IP.(t) - P.(t)1 I\n1\nJ\nfor then arbitrary distributions can be applied relative to uniform\nconditions.\n\nAn illustration is given in Fig. 6.\n\n91\n\np\ni\n\np. (t)\n1\n\n~(r,t)\n\nP.\nJ\n\n-\n\n\'-\n\nFig. 6 - Measurement of uniformity.\nTo obtain uniformity, the projected arc length\n\n(29)\n\ndepicted in Fig. 6 must be linear in\nindependent of\nCm(t)\n\n=\n\n[Pm 1(t)\n+\n\nr.\n\nr, or equivalently\n\naSp/ar must be\n\nBut then from Eq. 25 and with the relative projections\n\n- -Pm(t)] \xe2\x80\xa2 ~(t), we have\n\n"\n\n92\n\n-\n\nJ\n\n=\n~\n\nfor\n\nk\n\n=1\n\nfor\n\n1\n\n<\n\nk\n\n_\n-C N 2 (t) + 2C _l (t)\nN\n\n=\n\n-2C l (t) + C2(t)\n-Ck{t) + Ck+l(t)\n\nfor\n\nk\n\n=\n\nN\n\n<\n\nN- 1\n\nr + function of\n\nt,\n\n(30)\n\n1\n\nwhere the last equality comes from Eqs. 19-21.\n\nHence, for\n\nk\n\n= j,\n\nj+l , ... , i-1,\n\nuniformity is obtained if 2C l (t) = C (t) should k = 1, Ck(t) = Ck+,(t)\n2\n_\nshould 1 < k < N - 1, and C _2 (t) = 2C N l (t) should k = N - 1. A more\nN\nthorough discussion on uniformity is available in Eiseman [lJ for the\nglobal case, in Eiseman [5J, [6J for the local case, and in Eiseman [7]\nfor the general cases.\nTo explicitly demonstrate the application of the local controls, and\nat the same time, reveal the basic algorithmic steps, coordinates will\n~\n\nbe obtained for a simple transition from a purely Cartesian system into a\npurely Polar system.\n\nFor\n\n0\n\nspecified below a line Q(t)\ncircular arc\n\n~\n\nt\n\n=\n\n(2t-l,O)\n\n~\n\n12. O(t) where \xc2\xb7u(t)\n\n1, the Cartesian coordinates will be\n\n=\n\nand the Polar coordinates, beyond a\n\n(-cos\n\n0,\n\nsin e)\n\nfor\n\n0\n\n= (2t +\n\n1)n/4.\n\nThe line and the arc are depicted in Fig. 7.\n\n93\n\ny\n\n12\n\nu(t)\n\n(-1,1)\n\n(I,1)\n\nI\n\nQ(t)\n\n\xe2\x80\xa2\xe2\x80\xa2\nI\n\n(-1,0)\n\n\xe2\x80\xa2\n\n(0,0)\n\n~x\n\n( 1, 0)\n\nFig. 7 - Basic curves for the Cartesian to Polar transition example.\n\nTo obtain uniformity near the sides (t\n\n=\n\n0,1) of the transitional region,\n\nthe unit vertical distance will be used as a basis for displacements to\nestablish uniformity below the line and beyond the circular arc.\n\nFor the\n\nline, let\n\n-+\n\nP2(t)\n\n-+\n\n=\n\nQ(t) - (0,2),\n(31)\n\n94\n\n~\n\n-\n\n~\n\nso that for\n\n(32)\n\nwe have\n\nwhich satisfies uniformity for\n\nP(l,t)\n\n1\n\n~\n\nr\n\n~\n\n= P1(t) = Q(t) - (O,~).\n\n3 and yields a Cartesian system from\n\n(34)\n\nup to\n\n(35)\n\nSimilarly, for the circular are, let\n\n(36 )\n\n95\n\nbe the last three surfaces so that for\n\n~ (t)\n\n=\n\nP7(t) - P5 (t)\n\nIIP 7 (t)\n\n- i\'s(t)\n\nII\n\n=\n\nu(t)\n\n(37)\n\nwe have\n\nand\n\nwhich satisfies uniformity for\n\n(38)\n\n5 -< r -< 6\n\nand yields a Polar system from\n\nthe circular arc\n\n(39)\n\nup to the circular arc\n\n(40)\n\nThe entire collection of bounding and intermediate surfaces are depicted\nin Fig. 8.\n\n96\n\nTab 1e 1\n\nMESH\nINDEX\n\nr\n\nk\n\nG\nk\n\n1\n\n1. 00\n\n1\n\n1.25\n1. 50\n1. 75\n2.00\n2.25\n2.50\n2.75\n3.00\n3.25\n\n1\n\n.00\n.44\n.75\n.94\n.50\n.72\n.88\n.97\n.50\n.72\n\n.00\n.03\n.13\n.28\n.00\n.03\n.13\n.28\n.00\n.03\n\nMESH\nINDEX\n\nG +l\nk\n\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n1\n\n1\n2\n2\n2\n2\n3\n3\n\n-\n\n11\n\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\nr\n\nk\n\nG\nk\n\nG +l\nk\n\n3.50\n3.75\n4.00\n4.25\n4.50\n4.75\n5.00\n5.25\n5.50\n5.75\n6.00\n\n3\n3\n4\n4\n\n.88\n.97\n.50\n.72\n.88\n.97\n.50\n.72\n.88\n.97\n1.00\n\n.13\n.28\n.00\n.03\n. 13\n.28\n.00\n.06\n.25\n.56\n1. 00\n\n4\n\n4\n5\n5\n5\n5\n5\n\n~--~~\n\n\'~\n\n/\n\n)r-.~\n\\\n\n\\\\\n\n-rI\n,\n--l-~--,\n\nI\n\nOT\',!,r:"\xc2\xb7 - ,\n\n7\n\nI\n\nI\n\n--:--~---\n\n\\\n\n---\'-._---\n\nFig. 8 - Control surfaces for\npolar-rectangular mesh.\nFor 21 equally spaced mesh points in\n::;\n\nFig. 9 - Polar-rectangular mesh.\n\nr, the evaluation of the\n\nr-dependent functions is given with two decimal places of accuracy\n97\n\nin the table.\n\nFor a given mesh point, the interval\n\nk< r < k+ 1\n\ncontaining it determines the index\nin Eqs. 22-24.\n\nk for G and G + l respectively\nk\nk\nDue to the uniform selection of partition points r k , a\n\nrepetitive pattern in the Gk evaluations can be observed and is\nindicative of translated versions of the same function.\nspaced mesh points are chosen for\n\n0 < t\n\n<\n\nWhen 9 uniformly\n\n1, and when the multi-surface\n\ntransformation of Eq. 9 is evaluated for the 21 x 9 mesh, we obtain the\ncoordinate mesh which is displayed in Fig. 9.\n\nFrom uniformity and\n\nTable 1, the first 8 and the last 5 mesh points in\n\nr\n\nare seen to be\n\nuniformly distributed, and the mesh is respectively purely Cartesian and\npurely Polar for those points.\n\nTo illustrate the computational aspect,\n\nwe shall explicitly evaluate the transformation at the pOint with curvilinear variables\n\nQ(O)\n\nr\n\n=\n\n4.5, t\n\n= O. At t = 0, we have\n\n(2(0)-1,0) = (-1,0),\n\nand\n\n( 41 )\nTI\nTI)\nu(O) -_ ( - cos 4\' s,\'n if\n\nFor r\n\n=\n\n= ( __\n1,\n\n_1 ).\n\n./2 12\n\n4.5, we are at the 15th mesh index in Table 1 where we read\n\nacross to note that we are in the 4th interval (4\nG (4.5) = .88 and G (4.5) = .13.\n5\n4\n(Eq. 25 for k = 4) we obtain\n\n98\n\n~\n\n4.5\n\n~\n\n5) with\n\nBy sUbstitution into the transformation\n\n= (-1,0)\n\n=\n\n.88[i2(- __ __\n1, 1)\ni2 i2\n\n( -1 ,0) J + . 13 (- -1 -1\n, )\n\ni2 /2\n\n(-1,0) + .88(0,1) + (-.09,09)\n\n= (-1\n\n(42)\n\n+ 0 -.09, 0 + .88 + .09)\n\n= (- 1 .09,\n\n~c\n\n+\n\n.97).\n\nIn continuation with local methods, the case with nonuniform parti-\n\n~\n\ntions for the piecewise linear functions is given in Eiseman [5J.\n\nIn\n\naddition, local interpol ants with a higher level of smoothness (derivative\ncontinuity) can be used and are developed in Eiseman [7J.\n\nWith the local\n\ncontrols over the transverse coordinate curves which connect two bounding\nsurfaces, lateral bounding surfaces can also be approximately fit.\n\nA\n\nprecise fit of the lateral boundaries can be obtained with blending\nfunctions which were used by Gordon and Hall [8J to create a global method.\nFurther applications of blending functions will be presented at this workshop by Ericksson [9J, by Forsey, Edwards, and Carr [lOJ and by Anderson and\nSpradley [1l].\n\n99\n\nAlgebraic Mesh Generation - Three Dimensions\nAn algebraic approach to mesh generation in three dimensions results\nin algebraic functions that relate a computational domain to a physical\ndomain.\n~,\n\nand\n\nIf the computational domain is defined by the three variables\ns\n\nr,\n\non the unit cube\n\no<\n\nr < 1\n\n(43)\n\nthen the physical domain in Cartesian (x,y,z) coordinates is given by the\ntransformation\n\nP(r,~,s)\n\n= (x,y,z) where\n\nx = x(r,Cs) ,\n\ny\n\n= y(r,r"s) ,\n\nz\n\n= z(r,t:,l;).\n\nWhen Eq. 44 is nonsingular it has an inverse transformation denoted by\n\n100\n\n(44)\n\nr = r(x,y,z) ,\n\nf, = ~(x,y,z)\n\nr.; =\n\nd x ,y, z)\n\n,\n\n(45)\n\n.\n\nA uniform mesh is defined on the computational domain by constants\n~f"\n\n6s (Fig. 10).\n\n~r,\n\nThis mesh maps using Eq. 44 to a corresponding mesh\n\n~\n\n05-\n\n"?W7\n\n~\n\ndf\xc2\xa3~\n\n--\n\nI\nFig. 10 - Computational domain.\n\nin the physical domain which is not necessarily uniform.\n\nA simple example\n\nfor Eq. 44 is given by\n\n1 01\n\nx\n\n=\nk2r\n\ny =\n\n\xc2\xa3;,\n\nX {tan 8y + Y (e k - 1)},\nL\nL\n\n(46)\n\ne 2 - 1\n\nk3 s\n- 1\n-k--)}\'\n\n(e\n\ne 3 - 1\n\nor\n\n~\n\n1 \xc2\xa3n{1 + (e k1 - 1) x\nX},\nkl\nL\n\n= -\n\nk\n1\n1\nr = - \xc2\xa3n{l + (e 2 - l)(Y - tan 6y ) y}\'\nx\nk2\nL\n\n,\n\nk\n\nS\n\nwhere\n\nk1\'\n\n~O ~ ~ ~\n\n1,\n\n=\n\n(47)\n\n1\nk \xc2\xa3n{l + (e 3 - 1) (~ - tan 8 z ) Z},\nx\nL\n3\n\nk2\'\n0\n\nk3\'\n<\n\nr\n\n8z ,\n\nBy\'\n\n~ 1,\n\n0\n\n~\n\ns\n\nXL\'\n~\n\n\\\'\n\n1 and\n\nand ZL are constants.\n\nFor\n\nY = ZL the uniform computational\nL\n\ndomain maps into a frustrum of a paramid (Fig. 11) and the mesh is\nconcentrated in the physical domain according to the magnitudes and\nsigns of k"\n\nk2\'\n\nand\n\nk3.\nEquation 44 must satisfy the constraints outlined in the\n\nintroduction and which vary from problem to problem.\n\nFor many mesh\n\ngeneration problems, the constraints reduce to having the boundaries\nin the computational domain map to boundaries in the physical\n\n102\n\nFig. 11 - Physical domain for Eqs. 46-47 \xe2\x80\xa2\ndomain and concentrating the mesh in specified regions of the physical\ndomain.\n\nThe polynomial N-surface transformations (Eq. 6-18) are global\n\nalgebraic mesh generation techniques which satisfy the basic boundary\nconstrafnts and result in polynomial functions of degree\nwith respect to one of the independent variables.\npolynomials are particularly simple.\nt\n\n=\n\n(N\n\nFor a small\n\n1)\nN the\n\nIf the surface coordinates are\n\n(~\'s), the transformation P(r,t) = (x(r,t), y(r,t),\n\nz(r,t))\n\n~-\n\n103\n\nI\n\nI\n\n,\n\nI\'\n\nI\nI\n\nI\n\nI\nI\n\ny\n\n,\n\n/\nI\n\nX , Y ,ZB\ng\n1\n\nB1\n\n1\n\n~~z\nFig. 12 - Boundary mapping.\n\nis defined such that\n\nX = x(O,t,;,l;)\nB1\n\nx,O:,d,\n\n:::;\n\nVB = y(O,t;,r;;) = Y1(E.;,r;),\n1\n\nZs 1\n\n:::;\n\nz(O,~,r;) = Zl(E.:,r;),\n\n(48)\n\nX = x(l,E.:,s)\nB\n2\n\n=\n\nX (t;,t;),\n2\n\nY =y(l,E.:,s) = Y2(E;,r;),\nB\n2\nZ = z( 1\n6\n2\n\n,s ,I;;)\n\n= Z2(t;,r;),\n\n-\n\n\\00,;.\n104\n\n~-\n\nd\n\nwhere\n\nP, (~,s)\n\n=\n\n(X B \' Y \' ZB)\nB1\n1\n1\n\nPN(~\'s)\n\nis one boundary and\n\n=\n\n(X B \' Y \' Z[3 ) ;s the other boundary in the physical domain (Fig. 12).\nB\n\n222\nThe polynomial 4-surface transformation (Eq. 12 and 17) allows a\n\nconstraint to be placed on the mesh in addition to that of fitting the\nboundaries.\n\nThis constraint occurs when the physical mesh is required\naX\nto be orthogonal at the boundaries. Since the derivatives ar (o,~,~),\naX\n-ar (1 ,t;,r,) , etc. can be computed from the cross product of the tangential\ndX l\ndX\ndY l\ndY l\nl\nderivatives d~ (s,s), ~ (~\'s), ~ (~\'S), ~ (s,s), etc., we have\n\n--\'t\n\n--\'t\n\n1\n\n~\n\n~\n\nk\n\nJ\n\n~\n\nJ\nK\n\nax \xc2\xa3\ndO;\n\naY \xc2\xa3\n\naf- (s,s)\n\naY \xc2\xa3\na(\n\naz\xc2\xa3\naz- (s,~)\n\ndX\xc2\xa3\n\nar,\n\nwhere\n\n--\'t\n\n1,\n\n-t-\n\nJ, and\n\naz\xc2\xa3\n\n(E~,s) ~ (~,d\n\n(~,~)\n\n-+\n\n(s,d\n\nk are unit vectors and\n-\n\n~,\n\n~\n\n9.- =\n\n1 ,2\n\n(49)\n\nK is the magnitude of the\n\n-\n\nnormal vector, the choice of which can be used to ap~1y cbntrols developed\nin Eiseman [1] for the shape of coordinate curves in\ndistribution of constant r-surfaces.\n\nr\n\nand for the\n\nApplying this procedure will force\n\nthe mesh to be orthogonal at the boundaries but not necessarily anywhere else.\nA globally uniform computational mesh (for linear\n\nSp\n\nin Fig. 6) can\n\nbe mapped onto a physical mesh with the polynomial N-surface transformations\ngiven in Eqs. 6, 9, and 12.\n~\n\nConcentration of mesh points in the\n\ndirection is accomplished by choosing a function\n\nr(r)\n\nr\n\nsuch that\n105\n\no~\n\nr\n\n~\n\n1,\n\n0 < - < 1\nr\n\nand dr > 0 (Fig. 13).\ndr\n\nFor example Smith and\n\nFig. 13 - Grid control.\n\nWeigel [3J used the function\n\n-=\nr\n\n__\n\n(50)\n\nto contract the physical grid toward one boundary or the other.\n\nThe number k\n\nis a free parameter whose magnitude dictates the degree of contraction.\nis replaced by r(r)\n\nWhen\n\nin Eq. 6, the contractive function becomes embedded\n\nin the linear polynomial part of Eq. 6, which results in\n\n(51)\n\n106\n\nr\n\n~ where a uniform partition of\n\nof\n\na< r\n\n<\n\na2\n\nr\n\n~\n\n1 yields a desired nonuniform partition\n\n1 that, in turn, proportionately partitions the linear segments of\n\nthe transformation.\nThe example previously presented can be derived with this approach\nwhere\n\nx(t;;)\n\n=\n\n~ =\n\n-\n\nE.,\n\nk1t;;\n\n- 1\n= ~k---e\n\n,\n\n(52 )\n\ne 1 - 1\n\nand\n\nz\n\n= z(t;;,~),\n\n107\n\nwhere\nr =e\n\nk2r\n-1\nk\n\ne 2 -1\n\nA fundamental constraint of this approach is the representation of\nthe boundaries.\n\nThe boundaries can be represented as analytical functions\n\nor approximate functions based on discrete data from the boundaries.\nIn either case the representation must be in a form where parametric\nvariables which can be normalized to the unit interval are the independent\nvariables.\nsand\n\nIf the parametric independent variables are chosen to be\n\nt, then for the two boundaries\n\n(53)\n\ntmln . <t<t max .\n, 08\n\nThe choice of parametric variables can vary from problem to problem.\n(~,r,)\n\nA relationship between\n\nand (s,t) is\n\n(54)\n\nThis is a linear relation which maps the unit interval onto the parametric\nvariables.\n\nContraction of the physical grid at the boundaries is\n\naccomplished in the same manner as for the internal grid distribution.\n\n~\n-/\n\n-\n\ns\n\n= t(~),\n\n= ~(d\n\ns!L\nd~\n\n>\n\n0,\n\n, ~> 0,\nd(\n(55)\n\no<\n\n<\n~ - 1,\n\no< s\n~proximate\n\n~\n\n1,\n\n<\nO~~ - 1 ,\n\n0\n\n~\n\ns~\n\n1.\n\nBoundary-Fitted Coordinate Systems Using Tension Spline\n\nFunctions\nIt is often the case that boundaries in a physical domain are\ndescribed by discrete sets of points.\nclosed.\n\nThe boundaries may be open or\n\nAn approximate boundary-fitted coordinate system can be obtained\n\nusing the technique described and a tension spline function interpolation\nto the discrete data defining the boundaries.\n\nTension splines are chosen\n109\n\nbecause standard cubic splines and other higher order approximation\ntechniques often result in wiggles in the approximation.\n\nWiggles on a\n\nboundary using the technique propagate into the interior grid.\n\nThe tension\n\nparameter embedded in the tension spline approximation to the curve\nallows control of the IIcurvednessll of the approximation.\n\nA very large\n\nmagnitude of the tension parameter corresponds to a linear approximation,\nwhereas a very small value corresponds to cubic splines.\ncan be applied in two and three dimensions.\n\nTension splines\n\nAn example ;s presented\n\nhere that is applicable to a two-dimensional mesh.\nUsing the tension spline technique, a point set on boundary one is\ndefined by\n\nand on boundary two by\n\nApproximate\n\narc length is used as a parametric independent variable.\n\nThe approximate\n\narc length is:\ns.\n1\n\n=\n\n[(x i +l - xi)\n\n2\n\n2 1/2\n\n+ (Yi+l - y.) ]\n1\n\n+ s. l\'\n1-\n\n2 1/2\ny.)]\nJ\n\n+s\'l\'\nJ-\n\ni = 1. .. n\n\nj\n\n= 1. .. m\n\n(56)\n\no -<\n\no -<\n110\n\ns\xc2\xb7\n1\n\ns\xc2\xb7 - S m\xe2\x80\xa2\nJ <\n\n< S\n\n-\n\nn\n\noJ From the computational coordinate system the unit interval (0 ~ ~ ~ 1)\n\nmust be mapped onto each boundary; that is:\n\ns\n\n= s(~),\n( 57)\n\no<\n\ns\n\n<\n.\n- sm\n\nThis ;s accomplished by letting\n\ns\n\n= ~sn\n\non boundary one and\n(58)\n\ns\n\n= sSm\n\non boundary two.\n\nThe tension spline functions are piecewise continuous hyperbolic\nfunctions on each boundary such that\n\nx\n\n=\n\nsinh[a(s\xc2\xa3+l - s)]\n2\n\xc2\xa3 a s;nh[a(s\xc2\xa3+1 - s\xc2\xa3)]\n\ng"(s )\n\n( 59a)\n\n111\n\n(5gb)\n\nt = i\n\non boundary one,\n\nt =j\n\non boundary two,\n\no = tension parameter.\nThe unknowns in these equations are\nderivatives at the data points\n\ngll(St}\nt=L\n\n{x~\'Yt}t=l\n\nand\n\nhll(st)\n\nwhich are second\n\nand are obtained through enforce-\n\nment of the continuity of the first derivatives at the data points, and\nthe specification of two end conditions.\n\nA tridiagonal system of linear\n\nequations results for each set of unknowns.\nsystems yield\n\ng"(St)\n\nand\n\nThe solutions of the tridiagonal\n\nh"(s~).\n\nA cubic polynomial and the contracting function\n\n_\n\nr =\n\ne kr _ 1\nek - 1\n\nprovide\n\nthe relationship between the computational domain and physical domain.\ndX~\ndY t\nThe derivatives dn and ~ are:\n\n(60)\n\n112\n\n"-\n\nBy defining a grid with constants\n\nand fir\n\nin the computational\n\ndomain a corresponding grid is explicitly defined in the physical domain.\n~-\n\nAn example of an airfoil grid is presented (Fig. 14).\n\nData points on\n\neach boundary, magnitude of the normal derivative, and contract parameter\nvalues define the grids.\nFig. 15.\n\nBoundary data for the airfoil is shown in\n\nAlso, for closed boundaries such as the airfoil, periodic\n\nconditions are applied in the spline functions.\n""_0-__\n\n!\',\'\n\n~\n\n/\n\ni<{\n\n/\n\n(\'\n\nI\n\n\'~_~\'~-B=--:_":----:--~o.-~\n\n~-\n\nFig. 14 - Mesh for Karman Trefftz\nairfoil using splines under\ntension.\n\nFig. 15 - Data definition for\nboundaries of Karman Trefftz\nairfoil domain.\n\nComplex Three-Dimensional Mesh Generation\nThe development of three-dimensional meshes where mesh lines are free\nto move in all three coordinate directions ;s extremely difficult.\n\nThe\n\nreader is directed to reference 9 for examples of such unconstrained three-\n\n!\n\ni\n\ndimensional meshes.\n\nAn expedient approach for complex three-dimensional\n\n.........\n113\n\ngeometries is to attempt to simplify the problem by rendering the threedimensional geometry quasi two-dimensional.\n\nThis is the essence of the\n\nfrustrum pyramid mesh previously present~d.\n\nAlso when there is axis-\n\nsymmetry in a problem, two-dimensional rendering of the geometry ;s\npossible.\nin Fig. 16.\n\nThis is demonstrated with the spike-nosed configuration shown\nFigure 17 shows an algebraic generated mesh for one plane\n\nFig. 16 - Surface for a spike-nosed body.\n\nof the geometry.\n\nThe mesh is made three dimensional by rotating the mesh\n\nin movements about the axis of symmetry.\nFor aircraft surfaces the problem is more difficult.\n\nThere are,\n\nhowever, several good software packages ([12] is a good example) for\nsurface definition of aircraft aerospacecraft geometries.\n\n114\n\nIn [12J\n\n\'-\n\nFig. 17 - Mesh for spike-nosed body.\n\n-----the Harris geometry is used to establish coordinates for Coon\'s surface\ndefinition of a configuration.\nthe derivatives for\n\nt~e\n\nSpline functions are used to compute\n\nCoon\'s surface definition.\n\nFigure 18 shows the\n\ninput description for a wing-fuselage configuration where the wing and\nfuselage are defined separately.\n\nFigure 19 shows an enriched definition\n\nof the configuration using the Coon\'s surfaces.\n\nA part of the available\n\nsoftware described in [12J is the ability to compute the intersection\nof an arbitrarily defined plane anJ the1uiface definition.\n\nat a constant increment in the\n\nFor the\n\nx direction are shown in Fig. 20.\n\nIf an outside boundary is defined the corresponding intersection with the\n\n115\n\nFig. 18 - Data definition for a\n\nconfiguration.\n\nFig. 19 - Enriched surface definition for a wing-fuselage configuration.\n\n116\n\n,.-~.\n\n:\n\n--\\\n\n-)\n\n[\n.~\n\n... .r\'\n\'\\-\n\nc_--. -\n\n~\n\n.\n\n-; >..\n-\n\n_~.\n\n-.\n,\n\n-\n\n:.. :.::. ::,.:.;::-->\n\n.- ,\n\n\':-t\n\n- 4-1\n\n.C>\n\n.----\n\n\'\\\n\n:\' .\'\n\n,-\',\n\n\'-.\n\n......\n\n-/\n\nFig. 20 - Planar intersections with a wing-fuselage configuration.\n\nplanes is computable.\n\nWith an inside and outside boundary the techniques\n\npreviously described can be employed in two dimensions.\n\nComplexities\n\nof multiconnected regions is introduced but this can be attacked with\nbranch cuts (Fig. 21).\n\n//-- - \' ..\n!\n\n\\\n\n\\\n\n... - -------I\n\n,\n\n)\n.--\n\n.....\xe2\x80\xa2\n\n/\n\n\'------_/\n\nFig. 21 - Branch cuts for"mu"ti-c<:fnhected sections.\n\n117\n\nAnother attack on complex three dimensional problems is to define\nseveral computational domains (Fig. 22) with mutual boundaries.\nLZ\n\nThe mapping\n\n\'7777;\n\nn77w.\n\n~\n\n~l\n\nII\nr:r\n\n~~I~\n\nni~ :t1ffi\n/\nili\n\nji1;:\'l\n\n;+~\n\ng\n\n~\n\nW,\nItt\n\nm lt~\n\n"\'\n\nu\nT\n\nlL\n\nm\n\nf,r,tj.\n\n~lij [}~\n\nl\n\nn*t\n\n~J\n\nFig. 22 - Multiple computational domains with mutual boundaries.\n\nfunction transforms the computational domains to parts of the physical\ndomain with mutual intersections.\nConclusions\nAlgebraic methods provide precise controls for mesh generation.\nMethodologies for mesh construction can be based on a parameterized\ndescription of surfaces which consist of bounding surfaces and intermediate\ncontrol surfaces.\n\nThe surface locations determined by the respective\n\nsurface parameterizations determine the nature of the transverse coordinate\ncurves which connect the bounding surfaces.\n\nRelative to uniform conditions,\n\nprecise control over the mesh placement in the physical domain can be\n\n118\n\n~\n\naccomplished by embedding distribution control functions in the surface\nparameterizations or in the transverse direction.\n\nComplex bounding\n\ntopologies, especially in three dimensions, cause mesh construction\ndifficulties.\n\nIt is proposed that whenever feasible, the complex topol-\n\nogy be simplified such as rendering the geometry quasi two-dimensional.\n\nAs\n\na final remark, precise controls are one of the major advantages of algebraic\nmethods:\n\nthey give the capability to prescribe specific desirable and\n\nhelpful mesh formations.\n\n119\n\nReferences\n1.\n\nEiseman, P. R., "A t-lulti-Surface Method of Coordinate Generation,"\n~c?.!I1B-=-~_. 33 (1979), pp. 118-150.\n\n2.\n\nEiseman, P. R., "A Coordinate System for a Viscous Transonic Cascade\nAnalysis," ~2lf1E. Phys. 26 (1978), pp. 307-338.\n\n3.\n\nSmith, R. E. and Weigel, B. L., "Analytical and Approximate BoundaryFitted Coordinate Systems for Fluid Flow Simulation," AIAA Paper\n80-0192 (1980).\n\n4.\n\nMoretti, G. and Abbett, "A Time-Dependent Computational Method for\nBlunt Body Flows," AIAA J., Vol. 4, No. 12 (1966) pp. 2136-2141.\n\n5.\n\nEiseman, P. R., "Geometric Methods in Computational Fluid Dynamics,"\nvon Karman Institute Lecture Series and ICASE Report 80-11 (1980).\n\n6.\n\nEiseman, P. R., "Coordinate Generation with Precise Controls," Seventh\nInternational Conference on Numerical Methods in Fluid Dynamics,\nheld at Stanford Univ. and NASA Ames in June 1980.\n\n7.\n\nEiseman, P. R., "Coordinate Generation with Precise Controls Over\nMesh Properties." lCASE Report 80-30 (1980).\n\n8.\n\nGordon, W. J. and Hall, C. A., "Construction of Curvilinear Coordinate\nSystems and Applications to Mesh Generation," Intl. J. Num. Meth. in\nEngr. 7 (1973), pp. 461-477.\n\n9.\n\nEriksson, L., "Three-Dimensional Spline-Generated Coordinate Transformations for Grids Around Wing-Body Configurations." Numerical Grid Generation Techniques, NASA CP-2166, 1980. (Paper 17 of this compilation.)\n\n10.\n\nForsey, C. R., Edwards, M. G., and Carr, M. P., "An Investigation Into\nGrid Patching Techniques." Numerical Grid Generation Techniques, NASA\nCP-2166, 1980. (Paper 18 of this compilation.)\n\n11.\n\nAnderson, P. G., Spradley, L. W., "Finite Difference Grid Generation by\nMultivariate Blending Function Interpolation." Numerical Grid Generation Techniques, NASA CP-2l66, 1980. (Paper 6 of this compilation.)\n\n12.\n\nCraidon, C. B., "A Computer Program for Fitting Smooth Surfaces to\nan Aircraft Configuration and Other Three-Dimensional Geometries,"\nNASA TMX-3206, June 1975.\n\n120\n\n"-\n\n'