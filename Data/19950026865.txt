b'N95- 33286\n\nDATA\nIT\'S\n\nDennis\n\nM.\n\nA. Peter\n\nDavis =, Waleed\n\nCOLLECTION\n\nNOT\n\nAS EASY\n\nMaswadeh\n\n_, Donald\n\nIN\nAS\n\nIT\n\nIMS:\nLOOKS\n\nB. Shoff _, Charles\n\nS. Harden\n\n=,\n\nSnyder _\n\nIU.S. Army Edgewood Research Development and Engineering Center,\nTeam, Aberdeen Proving Ground, MD 21010-5423,\n2GEO-CENTERS,\nBranch, Aberdeen Proving Ground, MD 21010-5423\n\nLightweight Chemical Detector\nInc., P.O. Box 68, Gunpowder\n\nABSTRACT\nData collection\n\nin Ion Mobility\n\nSpectrometry\n\n(IMS) is not as easy an endeavor\n\nDespite the advent of high speed personal computers and fast analog-to-digital\nmust be taken to ensure that reliable data is obtained in a timely fashion.\n\nas it appears.\n\nconverters (ADC\'s), care\nThis is especially true in\n\nhyphenated techniques,\ne.g. GC-IMS, where the amount of data increases dramatically when gas\nchromatography-ion\nmobility spectrometry (GC-IMS) data is being collected.\nUsing the Graseby GCIMS, with a gate repetition rate of 33 Hz, it is theoretically\npossible to collect 33 spectra per second.\nThis collection rate is not realistically obtained due to a number of factors.\nAmong these factors are\ninaccuracy of the timing signal from the IMS, the necessity to store the data, disk input/output limitations,\ndisk operating system limitations, and program overhead. Taking these factors into account, we have\nachieved a data collection rate of 20 spectra per second.\nThis paper will describe these problems,\ndemonstrate\neffects.\n\nthe practical\n\neffects\n\nthese problems\n\npresent,\n\nand present\n\nmethods\n\nfor minimizing\n\nthese\n\nINTRODUCTION\nOne of the most important aspects of ion mobility spectrometry (IMS) studies, and too often the\nleast understood,\nis data collection and data storage.\nDetection, identification\nand determination\nof the\nconcentration\nof the chemical species present are all affected by the data collection.\nYet, as important\nas data collection is, many researchers\ndo not take the time to collect and store IMS data properly, either\nbecause they use routines written by others, or they are not fully aware of the limitations under which\nthey must operate.\nThe limitations may be classified into one of three categories:\nhardware\nrelated,\nsoftware related, or data related. The limitations which most affect the data collection and data storage\nare as follows:\nHardware\n\nrelated:\n\n(1) inaccuracy of the timing signal from the IMS,\n(2) disk input/output limitations,\n(3) computer limitations,\nsoftware\n\nrelated:\n\n(4) disk operating system limitations,\n(5) program overhead, and\ndata related:\n(6) the necessity to store the data,\n(7) the nature of the data itself.\n\n261\nINTENTIONAl,:r\'w..S\';_,_\n"\nPRECEDING\n\nPAGE\n\nEIL_,.N._(\nNOT\n\n,r,_,\n:_,,-_\n\nEXPERIMENTAL\nHardware.\nFor this work, we used an improved Environmental\n\nVapor Monitor, EVM, (Graseby Ionics, Ltd.\n\nWafford, Hefts, UK). The EVM, a hand-held GC-IMS, is comprised of capillary gas chromatograph,\nGC, integrated with a hand-held ion mobility spectrometer, IMS I. The IMS operates with an internal\nsample gate repetition rate of 33 Hz.\nThe gating pulse has an amplitude\nof 5 volts and is 180\nmicroseconds\nin duration.\nThis gating pulse provides the trigger for the data collection.\nThe\nimprovements include the introduction\nof temperature and pressure sensors inside the IMS cell and the\nconstruction\nof a disposable GC module. The disposable GC module offers some important features: 1)\nan easily replaceable GC module which facilitates changes in column types and lengths,as dictated by the\ncompounds being studied, 2) easy replacement of the GC column when the column is spent, and 3) a GC\ncolumn that can be easily heated from room temperature to 130\xc2\xb0C in two minutes. The improvements\nin the GC-IMS\nsystem design ensure better separation characteristics,\nimproved\ndetection and\nidentification of chemical compounds,\nincreased ease of maintenance of the system, and a more robust\nhand-held detector. Typical experimental conditions used for the hand-held GC-IMS are shown in Table\nI. Sample introduction to the GC column was accomplished by using an Automated Vapor Sampling unit,\nAVS 2. The sample pulse is user controlled with a range of 0.2 seconds to 2 seconds duration.\n\nTABLE\nEXPERIMENTAL\nDisposable GC Module:\nGC Column:\n\nOPERATING\n\nI\n\nCONDITIONS\n\nLiquid Phase:\nTemperature\n(\xc2\xb0C):\nCarrier Gas:\nFlow Rate:\nLength:\n\nSample\n\nInjection:\n\nUser-software\ntypically\n\nIon Mobility Spectrometer:\nIonization Source:\nGating Pulse Repetition\nCell Temperature:\nCell Pressure:\nDrift Gas:\nDrift Gas Flow:\n\nRate:\n\nDB-I\n\nOF THE\n\nGC-IMS\n\n(0.25 micrometer\n\nI.D.)\n\n45\xc2\xb0C/min programmable\nClean dry air\n2.1 ml/min\nlm\n\ncontrolled\n\n0.2 sec duration\n\nzNi\n33 Hz\n30 "C\n640 torr\nClean dry air\n400 ml/min\n\nData was collected on a Dell 486D personal computer operating at a processor speed of 33MHz,\nwith 8 KB of internal cache memory, 32 MB of system memory (RAM), a 230 MB IDE hard disk drive\nwith 16 ms average seek time, and VGA monitor.\nThe data was collected using an AT-MIO-16X\nmultifunction I/O board (National Instruments Corporation, Austin, TX). The AT-MIO-16X\nhas a 10\nmicrosecond,\n16 bit, sampling ADC. Typical data collection parameters are shown in Table II.\n\n262\n\nTABLE\nTYPICAL\n\nDATA\n\nIon Mobility\n\nCOLLECTION\n\nSpectrometer\n\nH.\n\nPARAMETERS\n\nUSED\n\nWITH\n\nTHE\n\nGC-IMS\n\nParameters:\n\nSpectral Mode:\nPoints Per Spectrum:\nSampling Frequency:\nDelay to Start of Sampling:\n\nPositive Ion\n64O\n33Khz\n0 microseconds\n\nGC Parameters:\nGC Delay:\nGC Heating\n\n0 seconds\n30 seconds\nRoom\n100 ms\n\nTime:\n\nAVS Temperature:\nAVS Pulse Duration:\nData Acquisition\nBoard Parameters:\nPC Slot Number:\n\n1\n\nDigital I/O Port Address:\nIMS Analog Input Channel:\nIMS Mode Detect Channel:\n\nA\n0\n0\n\nGC Digital Trigger Channel:\nCell Temperature\nInput Channel:\nAVS Temperature\nInput Channel:\nColumn Temperature\nInput Channel:\n\n1\n4\n$\n6\n\nCell Pressure\n\n3\n\nInput Channel:\n\nSoftware.\nThe data collection algorithms were written using Labwindows\nSoftware Version 2.2 (National\nInstruments, Austin,TX)\nin both C and QuickBasic\nprogramming languages.\nThe programs were\ncompiled using Microsoft C Version 5.1 and Microsoft\nQuickBasic as appropriate.\nThe compiled\nversions of the software were then run under Microsoft DOS Version 6.0. Labwindows versions of the\nexecutable\n\ncode were all created\n\nusing the Labwindows\n\nRun Time System.\n\nDISCUSSION\nHardware\n\nRelated\n\nLimitations.\n\nOf all the limitations, the hardware related limitations are the ones over which the researcher has\nthe least direct control. The most severe limitations are caused by inaccuracy of the timing of the gating\npulse, disk input/output limitations,\nextent, but each extracts a price.\n\nand computer limitations.\n\n263\n\nEach of these may be overcome\n\nto some\n\nInaccuracies\n\nin the timing\n\nsignal from\n\nthe IMS.\n\nThe gating pulse on the IMS is used as the\n\ntrigger to start the data collection.\nThe accuracy of the timing of the gating pulse is directly related to\nthe accuracy of the clock used to time the pulse. While the gating pulse repetition rate of the GC-IMS\nis 33 Hz, there are inconsistencies in the gating pulse rate as shown in Figure 1. These inconsistencies,\nor inaccuracies,\naffect the data collection.\nThe data collection\nis not affected by the gating pulse\nrepetition rate being slower than the 33 Hz as much as it is when the rate is faster than 33 Hz. Since 640\ndata points are collected at a frequency of 33 kHz, the total time necessary to collect one spectrum is\n21.12 milliseconds.\nAt a gating pulse repetition rate of 33 Hz, this leaves 8.88 milliseconds between the\nend of data collection and the start of the next spectrum to write the data to the disk. Slowing of the data\ngating pulse repetition rate provides more time to complete the transfer of data to the disk. Thus, the\neffect of slowing the data rate by a slight amount is negligible.\nHowever, when the data rate is increased\nslightly, the amount of time available to transfer the data to the disk is decreased.\nThus, the chance of\ngetting a trigger pulse to start data collection during the data transfer to disk is increased.\nSince the\nprogram has not issued the commands to initiate the data collection, the spectrum is lost and the program\nwaits for the next trigger pulse. Thus, it is possible to envision a decrease in the sampling rate of 33 Hz\nto 15 Hz without taking other limitations into account.\nA sequence of ion mobility scans is shown in Figure 2 and demonstrates another problem which\nmay be encountered.\nIt is noted that although the repetition rate of the gating pulse and data is\napproximately 33 Hz, there are periods in which no trigger signal, and thus, no data is available.\nThe\nGC-IMS produces eight trigger pulses and spectral data sets, skips four pulses and data sets, then repeats\nthe pattern. The source of this periodicity is internal to the GC-IMS, and therefore beyond control of\nthe experimenter.\nThis problem may be unique to those IMS devices which are designed to provide\naveraged spectra. In actuality, with the GC-IMS, there are at most 24 spectra available for collection per\nsecond.\nThe effect that the non-uniformity of the gating pulse has on the data collection is shown in\nFigure 3, which is a contour plot of the fh\'st 11 spectra collected in a GC-IMS run, with each spectrum\nin Figure 3 being represented by a bar. The GC retention time reflects the inaccuracy in the timing of\nthe gating pulse. There should be consistent spcaing, retention time difference, between consecutive bars\nin Figure 3. This problem may be overcome by issuing the trigger pulse from the computer rather than\nthe IMS. This generally entails a reworking of the IMS electronics.\nIf one uses more than one IMS, the\ntime and energy spent on this solution becomes burdensome.\nDisk inputoutput\nare the disk input/output\ndisk access procedures.\n\nlimitations.\nThe second of the hardware limitations, and the least understood,\nlimitations.\nThese limitations include disk access time, disk cluster size, and\nTypically, disk access times range from 13 to 21 milliseconds,\nwith the time\n\nbeing a function of disk size. Some of the more common drives and their disk access times are given\nin Table HI. The data in Table III was compiled from a variety of sources including manufacturer data\nsheets, computer system documentation, and computer shopper magazines.\nA complete description of\ndrive types may be found elsewhere 3. To improve the speed of the disk drive, one must usually increase\nthe size of the drive, resulting in increased computer costs. However, when speed is of the essence, it\nis a price well spent.\nThe next disk input/output limitation, disk cluster size, is more insidious than the other\nlimitations,\n\nbecause\n\nit is generally\n\nhidden from the programmer.\n\nThe disk cluster size is a function\n\nof\n\nthe disk size, as shown in Table IV. While the disk cluster size does not directly affect the speed of data\ncollection, its effects are nevertheless present. For example, when collecting individual IMS spectra,\nwhich have a typical size of 1300 bytes, collecting a large number of individual spectra on a 200 MB\ndrive results in a waste of disk space of almost 75 percent. Thus, when each subsequent spectrum is\nsaved to disk, there are fewer clusters in which to save data, the clusters are generally scattered across\nthe surface of the disk, and the disk access time slows as free clusters are located. This problem is easily\novercome by collecting all spectra to a single spectral file, thus ensuring that at most 1 disk cluster is lost\n\n264\n\nTABLE\nDISK\nMANUFACTURER\nConner\nConner\nConner\nConner\n\nDRIVE\nSCSI\nSCSI\nIDE\nIDE\n\nSeagate\nSeagate\nMaxtor\nMaxtor\n\nTYPES\nTYPE\n\nIDE\nIDE\nIDE\nSCSI\n\nAND\n\nIH.\nACCESS\n\nTIMES\n\nDRIVE SIZE\n212 MB\n170 MB\n42 MB\n212 MB\n\nDISK ACCESS\n12 ms\n17 ms\n25 ms\n12 ms\n\n43\n245\n213\n213\n\n28\n12\n12\n15\n\nMB\nMB\nMB\nMB\n\nTIME\n\nms\nms\nms\nms\n\nfor a set of spectra.\nThe cost for this solution is simply that individual spectra are more difficult to\naccess.\nThis cost is more than offset by the increased disk storage capacity and time saved in saving\nspectra.\n\nTABLE\nDISK\n\nCLUSTER\n\nDisk Size\nFloppy Disks:\n360\n1.2\n1.44\nHard Disks:\n0-16\n16-128\n128-256\n256-512\n512-1024\n1024-2048\n\nIV.\nSIZES\nDOS Default\n\nKB\nMB\nMB\n\n1024\n512\n512\n4096\n2048\n4096\n8192\n16,384\n32,768\n\nSize\n\nBytes\nBytes\nBytes\n\nMB\nMB\nMB\nMB\nMB\nMB\n\nCluster\n\nBytes\nBytes\nBytes\nBytes\nBytes\nBytes\n\nComputer limitations.\nThe easiest of the hardware limitations to overcome are the computer\nlimitations. The limitations in this category are related to the speed at which instructions may be carried\nout by the computer:\nprocessor speed limitations.\nUpgrading computer facilities is the only solution\navailable. Some of the possible components which may be included in this upgrade are:\n1) install a direct memory access (DMA) board,\n2) install a newer I/O board,\n3) replace the current computer with one which has a faster processor.\n\n265\n\nGenerally,eplacing the computer with one which has a faster processor will have the greatest\nr\nimpact on the speed of accessing and saving data. Installing a DMA board will improve the speed of the\ndata transfer from memory to disk, but has little impact on how fast the other instructions are performed.\nA newer I/0 board will allow faster data collection from the IMS, but it won\'t improve the speed of the\ndata transfer to disk, or perform other instructions faster. Improving the processor speed will improve\nthe speed at which each instruction is performed, which minimizes the total time necessary to complete\nthe task of data transfer and manipulation.\nSoftware\n\noperating\ngenerally\n\nrelated\n\nlimitations.\n\nThere are two basic types of software related limitations.\nThe first are those related to the disk\nsystem, DOS, and the second are those related to program overhead.\nThese limitations are\noutside the control of the researcher.\nDisk operating\n\nsystem Ftmitations.\n\nThe most important function of DOS is the control of access\n\nto the disks in the computer.\nDisk access and file allocation of disk space is performed as requested by\nthe program, with space being allocated one cluster at a time. The allocation algorithm used by DOS is\ncalled the Next Available Cluster algorithm 3. Each time the program sends a command to write to the\ndisk, the algorithm starts at the cluster where the last write occurred, and then searches for the next free\ncluster to begin writing the data. After that cluster is written, the next free cluster is located, and the\nwrite continues until the data is written. Because the next available cluster is used, the data file may be\nspread over a large amount of the disk, depending upon where the next available cluster is located, and\nthe file becomes\nthe pointers of\ndirectory listing\nsame directory,\n\nfragmented. In addition to writing the data, the computer\'s operating system must place\nwhich clusters belong to which files in the File allocation\nTable, FAT, and place a\nfor the file in the proper directory listing. If duplicate filenames are used within the\nthe current directory listing and FAT pointers must be removed from the FAT and the\n\nnew listings and pointers entered.\nThis results in increased time required to write successive files, as\nshown in Table V, where the number of files written in each second is seen to decrease as the number\nof files increases.\nThe solution to this limitation is again to write the data to a single data file for each set of spectra\ncollected.\nThus, the next available duster will often be the current cluster (until it is filled with data).\nThe directory listing must only be made once, and only the FAT listing must be updated.\nProgram\noverhead\nresearcher and programmer\n\nFunitations.\nProgram overhead\nlimitations\nby DOS, as seen above, or by the programmer\n\nmay be imposed upon the\nhimself.\nThe limitations that\n\nthe programmer\nplaces on the data collection are related to such mundane tasks as: reading the system\nclock to determine how much time has expired since the last spectrum was collected, keeping track of\nhow many spectra have been collected to date, monitoring for trigger pulses, and maintaining\na check\non the status of data transfers to the disk. Each of these steps may be eliminated,\nbut the price which\nmust be paid is an increased level of uncertainty as to the nature of the data. For example, failure to read\nthe system clock will result in not knowing when a particular sample was collected.\nThus, its place in\nthe series of spectra which have been collected is unknown.\nNot monitoring\nfor trigger pulses is a\nparticularly\nunpleasant idea when taking GC-IMS data, because the GC retention time is unknown, and\nthe information\ngained from performing\nthe GC separation is lost.\nMonitoring the status of the data\ntransfer to disk is the most dangerous of the program overhead steps to eliminate, because it is not just\ninformation\nyou may lose, you run the risk of losing the data itself.\nThe greatest burden on program overhead is the desire of the researcher to view the data as it is\nbeing collected.\nThis necessitates the programmer putting in graphics routines.\nGraphics routines\ngenerally require additional programming steps related to scaling the data to fit the graphics windows and\n\n266\n\nTABLE\nPARTIAL\n\nDIRECTORY\n\nTIME0000.ACQ\nTIME0001.ACQ\nTIME0002.ACQ\nTIME0003.ACQ\nTIME0004.ACQ\nTIME0005.ACQ\nTIME0006.ACQ\nTIME0007.ACQ\nTIME0008.ACQ\nTIME0009.ACQ\nTIME0010.ACQ\nTIME0011.ACQ\nTIME0012.ACQ\nTIME0013.ACQ\nTIME0014.ACQ\nTIME0015.ACQ\nTIME0016.ACQ\nTIME0017.ACQ\nTIME0018.ACQ\nTIME0019.ACQ\nTIME0020.ACQ\nTIME0021.ACQ\nTIME0022.ACQ\nTIME0023.ACQ\nTIME0252.ACQ\nTIME0253.ACQ\nTIME0254.ACQ\nTIME0255.ACQ\nTIME0256.ACQ\nTIME0257.ACQ\nTIME0258.ACQ\nTIME0259.ACQ\nTIME0260.ACQ\nTIME0261.ACQ\n\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n1334 10-03-94\n133410-03-94\n\nLISTING\n\nFOR\n\nV.\n\nSUCCESSIVELY\n\n1:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\nl:41p\n1:42p\n1:48p\n1:49p\n1:49p\n1:49p\n1:49p\n1:49p\n1:49p\n1:49p\n1:49p\n1:49p\n\nTIME0262.ACQ\nTIME0263.ACQ\nTIME0264.ACQ\nTIME0265.ACQ\nTIME0266.ACQ\nTIME0357.ACQ\nTIME0358.ACQ\nTIME0359.ACQ\nTIME0360.ACQ\nTIME0361.ACQ\nTIME0362.ACQ\nTIME0363.ACQ\nTIME0364.ACQ\nTIME0365.ACQ\nTIME0366.ACQ\nTIME0367.ACQ\nTIME0598.ACQ\nTIME0599.ACQ\nTIME0600.ACQ\nTIME0601.ACQ\nTIME0602.ACQ\nTIME0603.ACQ\nTIME0604.ACQ\nTIME0605.ACQ\nTIME0606.ACQ\nTIME0607.ACQ\nTIME0608.ACQ\nTIME0609.ACQ\nTIME0610.ACQ\nTIME0611.ACQ\nTIME0612.ACQ\nTIME0613.ACQ\nTIME0614.ACQ\n\nCREATED\n\nSPECTRA\n\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n133410-03-94\n133410-03-94\n1334 10-03-94\n1334 10-03-94\n\n1:49p\n1:49p\n1:49p\n1:49p\nl:50p\n1:57p\n1:58p\n1:58p\n1:58p\n1:58p\n1:58p\n1:58p\n1:58p\n1:58p\n1:58p\n1:59p\n2:34p\n2:35p\n2:35p\n2:35p\n2:35p\n2:35p\n2:36p\n2:36p\n2:36p\n2:36p\n2:36p\n2:37p\n2:37p\n2:37p\n2:37p\n2:37p\n2:38p\n\nrefreshing\nthe screen when the next data set is collected.\nThe time necessary to perform these steps\nincreases in direct proportion to the number of points being displayed in the graphics routine.\nWhile it\nis often desirable to monitor the data as it being collected, it is a step which must be eliminated when\nmaximizing the rate at which spectra are collected.\nIt becomes apparent that program overhead has many items which may be eliminated easily, but\nthe price for eliminating these items is steep indeed. It is possible to minimize the number of times that\nyou perform the monitoring procedures,\nbut they cannot be eliminated.\nThey are simply the price that\nmust be paid to collect data.\nA realistic determination\nof what is important to monitor must be made\nbefore finalizing the data collection routines.\n\n267\n\nData related\n\nlimitations.\n\nThe data related limitations\n\nare both the easiest and most difficult limitation\n\nto deal with.\n\nThe\n\nlimitations are the necessity to store the data, and the nature of the data itself. The researcher has total\ncontrol over each of these limitations.\nHe may decide that a particular set of data, or portion of a GC\nrun, contains no useful information, and thus doesn\'t need to be saved.\nHe must accept the fact,\nhowever, that he may be wrong and may lose some important data. This loss of data is dependent upon\nthe researcher\'s knowledge and experience.\nIt is possible that a researcher only wishes to perform a\ncursory scan of the data; to get an idea of what information is available from the sample.\nIt is quite\npossible, even probable, that there is no necessity to store the data; the result being that speed of the data\ncollection is increased.\nThe researcher also has control over the nature of the data. This does not mean that one has\ncontrol over the IMS spectrum, just what information is germane. There may be only a window of data\nthat is of importance\nto collect and save. In the GC-IM$, it may be a window of GC retention times,\na window of IMS drift time, or both. This is dependent upon the nature of the information that the\nresearcher is attempting to obtain. There is other data which may be important to the researcher as well.\nA determination of what additional information is important, whether or not to collect the information,\nand how often to collect the information must be made. Information of this type includes the date and\ntime the data is collected, the GC retention time, the temperature of the locale where the data is collected,\nthe temperature of the GC inlet, the temperature of the GC column, and the temperature and pressure of\nthe IMS cell.\nRESULTS\nAfter taking all of these limitations\n\ninto account,\n\nwe have developed\n\na software\n\npackage which\n\nis capable of collecting up to 20 spectra per second, or 83 percent of the spectra which are produced by\nthe GC-IMS.\nAlong with the spectra, we monitor and collect the information contained in Table VI.\nTo achieve the 20 spectra per second rate, it was necessary do eliminate the graphics procedures.\nUsing graphics displays to view data while it is being collected, reduces the rate at which data can be\ncollected to 7 spectra per second. The elimination of the graphics does not prohibit viewing of the data;\nit only delays the viewing until after all the data has been collected.\nA typical spectrum obtained using\nthis new data collection routine is shown in Figure 4. The spectra in Figure 4 are plotted in contour\nformat to ease in the visualization of the data.\nCONCLUSIONS\nAt first glance,\n\ncollecting\n\ndata from a GC-IMS appears to be a simple task; turn on the computer\n\nand the GC-IMS, then take data. It is possible to collect the GC-IMS data at 33 spectra per second, or\nat least the 24 spectra per second that the GC-IMS produces, but important information\nis lost and other\ninformation is hidden.\nInformation that is hidden is the elapsed time since the AVS sampled the\nenvironment.\nThis information\nis hidden only if there was one sampling pulse at the beginning of the\ndata collection, otherwise it is lost. Information that is lost are cell temperature, cell pressure, AVS\ntemperature, and GC temperature. Thus, the simplistic approach to data collection must be abandoned\nin the face of reality. There are limitations to be addressed at every turn: limitations related to hardware,\nsoftware, and data.\nChoices must be made as to what information is to be retained, and is superfluous\nto the data. The more aware a researcher is of the limitations, the better job he can do on collecting the\ndata.\n\n268\n\nTABLE\nPARAMETERS\n\nCOLLECTED\n\nFREQUENCY\n\nVI\n\nWITH\n\nWITH\n\nWHICH\n\nA GC-IMS\nTHEY\n\nSYSTEM,\n\nARE\n\nAND\n\nTHE\n\nCOLLECTED\n\nParameters\ncollected\nIMS Mode\nComment\nFilename\n\nonly at the beL,i\'nning of the GC-IMS data collection.\n- Positive or negative ions\n- Information\nabout the sample, column type, etc.\n- Name under which the data is stored\n- used to control how data is written to the datafile\nLength of filename\n- used to control how data is written to the datafile\nLength of comment\n- The rate at which data points in a spectrum will be\nRATE\ncollected\n- Number of points in each spectrum collected\nNOSAMP\n\npllrameters\ncollected\nCount\nTEMPAVS\nTEMPCOL\nTEMPCELL\nPRESSCELL\nDURATION\nPULSE\nDISKFULL\n\nor monitored\n\nwith each sm_ctrum\n- How many spectra have\n- Temperature\nof the AVS\n- Temperature\nof the GC\n- Temperature\nof the IMS\n- Pressure inside the IMS\n- GC Retention Time\n- Is the AVS actively\n- Is the Disk full ?\n\nbeen collected\nInlet\nColumn\nCell\nCell\n\nSampling?\n\nREFERENCES\n1. Snyder, A.P., Harden, C.S., Brittain, A.H., Kim, M.-G., Arnold, N.S., and Meuzelaar, H.L.C.\nPortable Hand-Held Gas Chromatography/Ion\nMobility Spectrometry Device. Anal. Chem, 65, 299-306\n(1993).\n2.\n\nDworzanski,\n\nJ.P., Kim, M.-G.,\n\nSnyder, A.P.,\n\nArnold,\n\nN.S.,\n\nand Meuzelaar,\n\nH.L.C.\n\nPerformance\n\nadvances\nin ion mobility spectrometry\nthrough combination\nwith high speed vapor\npreconcentration and sepaeation techniques.\nAnal. (?him. Acta, 293, 219-235 (1994).\n3.\n\nMueller,\n\nS. and Elliot,\n\nA.C.\n\nQue\'s Guide\n\nto Data Recovery,\n\n269\n\nsampling,\n\nQue, Carmel, IN, 1991, pp 76-84.\n\n25061\n\n2990\n\n1508\n\nL\n\n-509_\n8\n\n1666\n\n2009\n\n3660\n\n4969\n\n5069\n\n1669\n\n269D\n\n3660\n\n4996\n\n5099\n\n2469\n\n2666\n\n1206\n\n896\n\n466\n\n6\n\n-466\n0\n\nFigure 1. Two series of IMS spectra showing the inconsistency in the gating pulse rate.\n\n270\n\ni d\n\nI ILII\n\nl l,lili\n\nIGH\n120m\nZ\n\nI\n\n._\n\n;.\n\n; ....\n\n:\n\n:\n\n:\n\n\',\n\n;\n\n:i\n\n_\n\n:\n\n_8.\ni\n\n8888\n\nt_O\n\n24069\n\n32800\n\nDATA POINT NUMBER\nFigure 2. IMS spectra collected\nat a data rate of 30,000 Hz.\n\nover a one second\n\ninterval.\n\n271\n\nThirty\n\nthousand\n\ndata points\n\nwere\n\ncollected\n\nC:_FISH.SPC\nGC/IMS(_1)\n\n6/14/1994\n\n9:32:12\n\nGlode white perch fish IA 27.2,25.6,26.3\n\nFigure 3. GC-IMS contour spectra\nretention times of each spectrum.\n\nshowing\n\nthe inconsistency\n\n272\n\nof the gating\n\npulse,\n\nC (DBS)\n\nas indicated\n\nby the GC\n\n|\n\n\'1!\n\n273\n\n'