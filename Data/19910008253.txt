b'.s7-o\n\nWhat\nDigital\n\nCan Formal\nMethods\nOffer to\nFlight Control Systems Design.*\nFormal Mcthods Workshop\nNASA Langley Research Center\nHampton, VA.\nAugust 20-23,\n\n1990\n\nDonald I. G(xxl\nComputational\nLogic, Inc.\n\nAbstract\nFormal methods research is bcginning to produce methods which will enable mathematical\nmodeling of the\nphysical behavior of digital hardware and software systems.\nThe development\nof these methods directly\nsupports the NASA mission of increasing the scope and effectiveness\nof flight system modeling capabilities.\nThe conventional,\ncontinuous mathematics that is used extensively in modeling flight systems is not adequate\nfor accurate modeling of digital systems. Therefore, the current practice of digital flight control system design\nhas not had the benefits of extensive mathematical modeling which are common in other parts of flight system\nengineering.\nFormal methods research is showing that by using discrete\nsystems is possible. These discrete modeling methods are still\ndeveloped, they will bring the traditional benefits of modeling\nreasoning about accurate mathematical\nm(xtcls of flight control\nrisks of unsafe flight control.\n\nmathematics,\nvery accurate modeling of digital\nin an embryonic stage. But when they are fully\nto digital hardware and software design.\nSound\nsystems can be an important part of reducing the\n\n(\'_/_\n,\n\nWhat Can Formal Methods Offer\nto\n\nDigital Flight Control\nSystems Design?\n\nDonald I. Good\n\nComputational\nLogic, Inc.\n1717 West Sixth, Suite 290\nAustin, Texas 78703\n512-322-9951\ngood@cli.com\n\nJ\n\nnote-82.mss:\n\n1\n\n08/27/90\n\nf\n\n"Formal\n\nMethods" Enable\n\nMathematical\n\nModeling\n\nof\nDigital Systems\n(Hardware\n\nand Software)\n\nNASA Mission Objective: Increase the scope and\neffectiveness of flight system modeling\ncapabilities.-Lee Holcomb, NASA HQ, 1990.\n\n\\\n\nJ\n\nnote-82.mss:\n\n2\n\n08/27/90\n\nWhy Model?\nFor either desicln of a new system or operation\nan old one, modelinq provides...\nBenefits:\n\nof\n\nearly error detection\n\n\xe2\x80\xa2 Saves time\n\xe2\x80\xa2 Saves money\n\xe2\x80\xa2 Saves operational\n\ndisruption\n\n\xe2\x80\xa2 Saves operational\n\nmishaps\n\nRisks: model misrepresents\n\nsystem\n\n\xe2\x80\xa2 Inaccurate\n\xe2\x80\xa2 Incomplete\nKinds of models: physical,\nmathematical.\n\nanalog, schematic,\n\nBlanchard and Fabrycky. Systems\nand Analysis, Prentice Hall, 1990.\n\nEngineerinq\n\nJ\n\nnote-82.mss:\n\n3\n\n08/27/90\n\nWhy a Mathematical\n\nModel?\n\n\xe2\x80\xa2 High abstraction\n\xe2\x80\xa2 High precision\n\xe2\x80\xa2 Simulate\n\xe2\x80\xa2 Represent\n\nby manipulating\n\nsymbols\n\nlarge classes of system states\n\n\xe2\x80\xa2 Use mathematical\n\ndeduction\n\nGet a lot of system simulation\nmanipulation.\n\nfor a little symbol\n\nJ\n\nnote-82.mss:\n\n4\n\n08#27190\n\nOperational Safety\nOperating a system safely requires\n\xe2\x80\xa2 accurate predictions\nof how it will behave.\nAccurate predictions can be obtained from\n\xe2\x80\xa2 sound deductions about\n\xe2\x80\xa2 accurate mathematical models\nof system behavior.\n\nJ\n\nnole-82mss:\n\n5\n\n08/27/90\n\nA Classic\n\nModel\n\nFree Fall Distance:\nf(b,t)\n\n=\n\ng(b)\n=\nelse\n\nif\nif\n\nt\n\nis\n\ntime\n\nf(b,t)\n\nis\n\n[g(b)\n\n* t**2]\n\nb="earth"\nb="moon"\n\n/\nthen\nthen\n\n2\n32\n.. .\n\n(sec)\ndistance\n\n(ft)\n\nSimulation:\nf("earth",\n\n.7)\n\n=\n\n[32\n\n*\n\n.7"\'2]\n\n=\n\n16\n\n*\n\n7.84\n\n2\n\n.49\n\n=\n\n/\n\nft\n\nJ\n\nnote-82.mss:\n\n6\n\n08/27/90\n\nPower of Mathematical\nSuppose\n\n0\n\nle\n\nt\n\nin\n\ntO\n\nle\n\nDeduction\n\ntl.\n\n[tO..tl]\n\nf("earth",\n\nt)\n\nin\n\n(32\n\n*\n\n[tO..tl]**2)\n\nf("earth",\n\nt)\n\nin\n\n16\n\n*\n\n[tO..tl]**2\n\nf("earth",\n\nt)\n\nin\n\n16\n\n*\n\n[tO**2..tl**2]\n(**\n\nis\n\n/\n\n2\n\nmonotonic)\n\nPhysical simulation of this result is impossible\nbecause [to.. tl] contains an infinite number of\nvalues.\n\nJ\n\nnote-82.mss:\n\n7\n\n08/27/90\n\nValidating a Model\n\xe2\x80\xa2 Ultimately, the accuracy of a model of a\nphysical system must be validated by testinQ it\nagainst measured, observed behavior of theactual physical system.\n\xe2\x80\xa2 One cannot construct a mathematical proof that\na model is an accurate representation of a\nphysical system.\n\xe2\x80\xa2 Typically, one iterates through a process of\n\xe2\x80\xa2 statinq a mathematical model\n\xe2\x80\xa2 testing it against physical observations\n\xe2\x80\xa2 adjusting the model\n\nJ\n\nnote-82.mss: 8\n\n08/27/90\n\nf\n\nHardware\n\nModel Observables\n\nA hardware system\nis composed\nof physical switches.\n\nNancy Stern. From ENIAC to UNIVAC: An\nAppraisal of the Eckert-Mauchly\nComputers.\nDigital Equipment Corporation, 1981.\nNext page.\nJ\n\nnote-82.mss: 9\n\n08/27/90\n\nORIGINAL\nBLACK\n\nAND\n\nWHITE\n\nPAGE\nPHOTOGRAPH\n\nORIGINAL PAQE IS\nOF PO0_ QU_L;TY\n\nUse Discrete Mathematics\nto Model Hardware\n\xe2\x80\xa2 Switches by binary digits\n\xe2\x80\xa2 Operation by recursive functions\n\nmllm_un\n\nsO\n\nI 0\n\n1\n\n1\n\n0\n\n0\n\n0\n\n0\n\n1\n\n1\n\n1\n\n1\n\n1\n\nsl\n\nI 1\n\n0\n\n1\n\n0\n\n0\n\n1\n\n1\n\n0\n\n0\n\n0 0\n\n1\n\n1\n\n1\n\n0\n\n0\n\n0\n\ni\n\n0\n\nI\n\n0\n\n1\n\n0\n\n0\n\n0\n\nm_mnmmm_mmm_\n\nS2\n\nI I\n\n1\n\nJ\n\nnole-82.mss:\n\n11\n\n08/27/90\n\nAn MC68020 Machine Model\nMC68020\n\n(s, n)\n\n=\n\nif\n\nhaltp(s)\n\nthen\n\ns\n\nelse\n\nMC68020(NEXT(s),\n\nNEXT\n\n(s)\n\nor\n\nn=0\nn-l)\n\n=\n\nif\n\nevenp\n\n(pc\n\n(s) )\n\nthen\n\nif\n\npc_readp\n\nthen\n\nEXECUTE\n\n(mem\n\n(s)\n\n(FETCH\n\n(pc\n\nupdate_pc\nelse\nelse\nEXECUTE\n...\n\n(s,\n\nhalt(s,pc\n(ins,\n\n[50\n\nhalt\n\npages\n\ns)\n\n, pc\n\n(s))\n\n(s) , s) ,\n(s,\n\n. . .) )\n\npc_signal)\n\nodd\n\nsignal)\n\n=\nfor\n\n90%\n\nuser\n\nins.]\n\nProvides a mathematically\nprecise and consistent\nmachine language reference manual.\n\nYuan Yu. PhD Thesis _\nTexas.\n\nprogress).\n\nUniversity\n\nof\n\nJ\n\nnote-82mss: 12\n\n08/27/90\n\nThe VIPER Machine\nA 32-bit microprocessor\ntotally predictable."\n\n"whose\n\nfunctions\n\nare\n\n\xe2\x80\xa2 Accumulator\n\xe2\x80\xa2 2 index registers\n\xe2\x80\xa2 Program\n\ncounter\n\n\xe2\x80\xa2 Comparison\n\nregister\n\n\xe2\x80\xa2 16 instructions\nAvra Cohn. A Proof of Correctness of the VIPER\nMicroprocessor:\nThe First Level. Technical\nReport 104, University of Cambridge Computer\nLaboratory, January, 1987.\nW. J. Cullyer. Implementing High Inte rgr_\nSystems: The VIPER Microprocessor.\nIn\nComputer Assurance, COMPASS 88. IEEE, June,\n1988.\n\nnote-82.mss:\n\n13\n\n08/27/90\n\nA VIPER Machine Model\nI\nm\n\nNEXT\n(ram, p, a, x, y, b, stop)\nif\nstop\nthen\n(ram, p,a,x,y,b,\nstop)\nelse\n(noinc\n\\/\nillegaladdr)\nif\n\n\\/\n\n(illegalcl\n\nillegalsp)\n\n(illegalonp\n\n\\/\n\n\\/\n\\/\n\nillegalwr)\n\nthen\n\n(ram,\n\nelse\n\n\xe2\x80\xa2 ..\n\nnewp,\n\na, x, y,b,\n\n[about\n\n7\n\npages]\n\nT)\n...\n\nwhere\n\nram\n\n-\n\na\n\np\na\n\n-\n\n20-bit\n32-bit\n\nprogram\naccumulator\n\nx,y\n\n-\n\n32-bit\n\nindex\n\nb\n\n-\n\n1\n\nstop-\n\nmemory\n\nbit\n\nstop\n\nof\n\ncompare\n\n32-bit\n\nwords\n\ncounter\n\nregisters\nresult\n\nregister\n\nflag\n\nJ\n\nnote-82.mss:\n\n14\n\n08/27/90\n\nThe FM8502 Machine\nA 32-bit microprocessor.\n\xe2\x80\xa2 2 address\n\narchitecture\n\n\xe2\x80\xa2 4 addressing\n\xe2\x80\xa2 8 general\n\nmodes\n\npurpose\n\nregisters\n\n\xe2\x80\xa2 219 20-bit instructions\n\nWarren A. Hunt, Jr. FM8501: A Verified\nMicroprocessor,\nPh.D. Thesis, The University\nTexas at Austin, 1985.\n\nof\n\n..... , Microprocessor\nDesign Verification. Journal\nof Automated Reasoning. Vol. 5, No. 4, Dec 1989.\n\nJ\n\nnote-82.mss:\n\n15\n\n08/27/90\n\nAn FM8502\nMachine Model\n\nFM8502\n\n(ms,\n\nm\n\nmn)\n\nif\n\nnot\n\n(listp\n\nthen\n\nms\n\nelse\n\nFM8502\n\n(mn))\n\n(NEXT\n\n(ms)\n\nrest\n\nNEXT\n\n(ms)\n\nlist\n\n,\n\n(mn))\n\n=\n\n(next\n\nmemory\n\n(ms),\n\nnext_register_file\n\n(ms)\n\n,\n\nnext\n\n(ms)\n\n,\n\nnext--overflow_flag\n\n(ms)\n\n,\n\nnext\n\n(ms)\n\n,\n\ncarry_flag\n\nzero_flag\n\nnext--_negative_flag\n\n\xe2\x80\xa2. .\n\n[about\n\ni0\n\npages]\n\n(ms)\n\n)\n\n...\n\nJ\n\nnote-82.mss:\n\n16\n\n08/27/90\n\nAn FM8502\nRegister Transfer Model\nGATES\n\n(gs,\n\ngn)\n\n=\n\nif\n\nnot\n\n(listp\n\nthen\n\ngs\n\nelse\n\n(gn))\n\nGATES(COMB\n\nLOGIC(gs,car(gn)),\n\ncdr\n\nCOMB\n\n(gn))\n\nLOGIC(gs,gn)\n\n\xe2\x80\xa2 . . Ton\n\nbit\n\n=\n\noperators,\n\ne.g.,\n\nb\n\nxor]\n\nwhere\n\ngs\n\n-\n\n[regs,\n\nflags,\n\nregs\n\n-\n\n8\n\n32-bit\n\nflags\n\n-\n\n4\n\nBooleans\n\nmem\n\n-\n\n232\n\nint-regs\n\n-\n\n32-bit\n\nmem,\n\n]\n\nvectors\n\n32-bit\n\nvectors\n\nvectors\n\nregisters,\n\nint-regs\n\nflags,\n\nfor\n\ninternal\nlatches\n\nJ\n\nnote-82.mss: 17\n\n08/27/90\n\nConnecting\n\no\n\nthe Models\n\nfm8502\n\n(ms, mn)\n\n....\n\n>o\n\nI\nI\n\n^\nI\n\nD (ms)\n\nU (gs)\n\nI\nv\n\nI\nI\n\no\n\nTheorem:\n\ngates\n\nH(ms,mn)\nfm8502\nU (gates\n\n(gs,\n\ngn)\n\n....\n\n>o\n\n->\n(ms,mn)\n\n=\n\n(D (ms)\n\n, Kg\n\n(ms,\n\nmn,\n\nmd)\n\n))\n\nUnder the conditions H,\n\xe2\x80\xa2 the fm8502 model is just as accurate as\n\ngates\n\n\xe2\x80\xa2 but with some details suppressed by u.\n\nk.\n\nJ\n\nnote-82.mss:\n\n18\n\n08/27/90\n\nSoftware\n\nModel Observables\n\nProgramming\n\nlanguages provide\n\na wide variety of ways\nof describing them, but\nthe observables\n\nare still switches,\n\nand so are programs!\n\nJ\n\nnote-82.mss: 19\n\n08/27/90\n\nModels of Programmed\n\nMachines\n\n\xe2\x80\xa2 A machine is Droclrammed by settincl the\nswitches which it-will interpret as instructions\nduring its operation. (Before stored-program\nmachines, this process was called "setting up"\nthe machine.)\ng\n\nI011000011111\nI\n\n\xe2\x80\xa2 These switches\nthe su_\n\xe2\x80\xa2 A computer\nmechanism.\n\nI\n\nprog\n\ndata\n\nI\n\nare the program. They control\noperation of the machine.\n\nprogram\n\nis a physical control\n\n\xe2\x80\xa2 The bit string "011000"\nis a mathematical\ndescription of the control mechanism.\n\nk.\n\nJ\n\nnnt_.-82.mss:\n\n20\n\n08/27/90\n\nA Model of\na Programmed\n\nMachine\n\nA model of machine M operating on initial state sO\nfor k (sO) steps under the control of the program\ndescribed by p0 is given by\nM(sO,\n\nk (sO))\n\nwhere\nsO\n\n-\n\na\n\nmachine\n\nprog\n\nprog\n\n(s )\n\n-\n\na\n\nstate\n\n(sO)\n\nfunction\n\nprogram\n\nA model of a machine\noperating requirement\n\nthat\n\n=pO\nthat\n\nextracts\n\ndescription\n\nOperating\n\nR(sO,\n\nsuch\n\nfrom\n\nthe\ns\n\nRequirements\nprogrammed to satisfy an\nR (s0, sk) is given by\n\nM(sO,k(sO)))\n\nJ\n\nnote-82.rnss:\n\n21\n\n08/27/90\n\nA Program Description, p0\n0888\n\n000D\n\n0002\n\n0888\n\n000E\n\n0003\n\n0048\n\n0003\n\n00BT\n\n000Z\n\n0C_)0\n\n004D\n\n0002\n\n0009\n\n0041\n\n0002\n\n000r\n\n10On\n\n0002\n\n0000\n\n31CB\n\n0002\n\n0000\n\n1208\n\n0002\n\n000D\n\n13CB\n\n0002\n\n000E\n\n0CCB\n\n0002\n\n0004\n\n0DCI\n\n0002\n\n0005\n\n0ECB\n\n0002\n\n0006\n\n0rob\n\n0002\n\n0007\n\n0041\n\n0002\n\n0008\n\n50CB\n\n0002\n\nO000\n\n1048\n\n0002\n\n000D\n\n1048\n\n0003\n\n000E\n\n0000\n\n0849\n\n0003\n\n0002\n\n004D\n\n0002\n\n0009\n\n0041\n\n0002\n\n000r\n\n0040\n\n0003\n\n0002\n\n0041\n\n0003\n\n009F\n\n00DA\n\n0003\n\n01DE\n\n0003\n\n0848\n\n0003\n\n0002\n\n0041\n\n0003\n\n0008\n\n188_\n\n0000\n\n0002\n\n3988\n\n0000\n\n0002\n\n1ASB\n\n0000\n\n0003\n\nF849\n\n0007\n\n0002\n\nD849\n\n0006\n\n0002\n\nI_48\n\n0005\n\n0002\n\n984m\n\n0004\n\n0002\n\n7849\n\n0003\n\n0002\n\n5849\n\n0002\n\n0002\n\n0000\n\n000_\n\n0gr3\n\n0049\n\n0003\n\n009r\n\n0001\n\n0_n0\n\n000E\n\n0CCA\n\n000Z\n\n0CA8\n\n0002\n\n0C86\n\n000Z\n\n09F3\n\n0048\n\n0003\n\n00wr\n\n000z\n\n0CD0\n\n000E\n\n0CCA\n\n004D\n\n0002\n\n0002\n\n0041\n\n0002\n\n00D3\n\n00C9\n\n0002\n\n0001\n\n01C9\n\n0002\n\n0000\n\n0002\n\n0C86\n\n000E\n\n09F3\n\n0089\n\n0008\n\n0004\n\n0083\n\n0008\n\n0000\n\n000X\n\n0X98\n\n0083\n\n0008\n\n0001\n\n000A\n\n0ArD\n\n0083\n\n0008\n\n0002\n\n000A\n\n0B6A\n\n0002\n\n0RA5\n\n0849\n\n0006\n\n0002\n\n0049\n\n0008\n\n0010\n\n0849\n\n0007\n\n0003\n\n0048\n\n0003\n\n001Mr\n\n000E\n\n0CD0\n\n0888\n\n000C\n\n0002\n\n0848\n\n0004\n\n0006\n\n0040\n\n0004\n\n0008\n\n0848\n\n0003\n\n0002\n\n0040\n\n0003\n\n0080\n\n0841\n\n0003\n\n0004\n\n0041\n\n0003\n\n01F3\n\n000Z\n\n0CE1\n\n000A\n\n0AE7\n\n0849\n\n0002\n\n0007\n\n000E\n\n0CA8\n\n0849\n\n0003\n\n0006\n\n004D\n\n0003\n\n0002\n\n0041\n\n0003\n\n00D3\n\n00C3\n\n0003\n\n0003\n\n0006\n\n0C96\n\n11C3\n\n0003\n\n000C\n\n0006\n\n0C96\n\n00CB\n\n0003\n\n0000\n\n01CB\n\n0003\n\n0000\n\n0849\n\n0002\n\n0008\n\n004B\n\n0003\n\n009F\n\nO00E\n\nOCA8\n\n0002\n\n0C96\n\n0048\n\n0003\n\n00RF\n\n000E\n\n0CCA\n\nI048\n\n0003\n\n000C\n\n004D\n\n0003\n\n0002\n\n0041\n\n0003\n\n00D3\n\n00C9\n\n0003\n\n0002\n\n0gCB\n\n0003\n\n0006\n\n0002\n\n0C86\n\n0849\n\n0006\n\n0002\n\n0049\n\n0006\n\n0010\n\n004B\n\n0003\n\noowr\n\noooE\n\n0CD0\n\n0889\n\n000C\n\n0002\n\n0849\n\n0004\n\n0002\n\n0040\n\n0004\n\n0008\n\n0840\n\n0003\n\n0006\n\n0040\n\n0003\n\n0080\n\n0841\n\n0003\n\n0004\n\n0041\n\n0003\n\n01F3\n\n000Z\n\n0C_D\n\n000A\n\n0854\n\n000E\n\n0CD0\n\n000E\n\n0CCA\n\nI048\n\n0003\n\n000C\n\n0040\n\n0003\n\n0009\n\n0041\n\n0003\n\n000F\n\n0BCB\n\n0003\n\n0002\n\n0848\n\n0003\n\n0006\n\n0040\n\n0003\n\n0002\n\n0041\n\n0003\n\n00D3\n\n00C3\n\n0003\n\n0002\n\n0006\n\n0C96\n\n11C3\n\n0003\n\n000C\n\n0006\n\n0C96\n\n00On\n\n0003\n\n0000\n\n01CB\n\n0003\n\n0000\n\n0849\n\n0002\n\n0006\n\n0049\n\n0003\n\n00_\n\n000E\n\n0CJ_\n\n0002\n\n0Cg6\n\n0049\n\n0003\n\n00BF\n\n000E\n\n0CCA\n\n1049\n\n0003\n\n000c\n\n0040\n\n0003\n\n0002\n\n0041\n\n0003\n\n00D3\n\n00CB\n\n0003\n\n0003\n\n09CB\n\n0003\n\n0008\n\n0002\n\n0c86\n\n0849\n\n0007\n\n0003\n\n0048\n\n0003\n\n00wr\n\noooz\n\n0CD0\n\n0888\n\n000C\n\n0002\n\n084B\n\n0003\n\n0002\n\n0040\n\n0003\n\n0000\n\n0041\n\n0003\n\n0173\n\n000E\n\n0CEI\n\n000A\n\n0B8F\n\n0849\n\n0002\n\n0007\n\n000Z\n\n0CA8\n\n0096\n\n000C\n\n0006\n\n0cg6\n\n00A6\n\n000C\n\n0002\n\n0C96\n\n0049\n\n0003\n\n00BF\n\n000E\n\n0CCA\n\nI049\n\n0003\n\n000C\n\n004D\n\n0003\n\n0002\n\n0041\n\n0003\n\n00D3\n\n00CB\n\n0003\n\n0004\n\n01CB\n\n0003\n\n0000\n\n0002\n\n0C86\n\n004B\n\n0003\n\n00Br\n\n000E\n\n0CD0\n\n088B\n\n000C\n\n0002\n\n0849\n\n0003\n\n0002\n\n004D\n\n0003\n\n0008\n\n0041\n\n0003\n\nOor3\n\noooE\n\n0CDD\n\n000A\n\n0BCC\n\n000E\n\nOCD0\n\n000E\n\n0CCA\n\n1049\n\n0003\n\n000C\n\n004D\n\n0003\n\n0009\n\n0041\n\n0003\n\nO00r\n\n0BCB\n\n0003\n\n0002\n\n0002\n\n0C96\n\n0049\n\n0003\n\n00BF\n\n000E\n\n0CCA\n\n1049\n\n0003\n\n000C\n\n004D\n\n0003\n\n0002\n\n0041\n\n0003\n\n00D3\n\n00C9\n\n0003\n\n0005\n\n01CIJ\n\n0003\n\n0000\n\n0002\n\n0C86\n\n0089\n\n000A\n\n0c84\n\n0889\n\noooK\n\n0003\n\n0049\n\n0003\n\n00BF\n\n000E\n\n0CgD\n\n000A\n\n0wr7\n\n0089\n\nO00A\n\nOCgF\n\n104B\n\n0003\n\n000z\n\n000=\n\n09r3\n\n1049\n\n0005\n\n0008\n\n004D\n\n0005\n\n0002\n\n0041\n\n000S\n\n00D3\n\n00C3\n\n0005\n\n0005\n\n0006\n\n0C13\n\nI048\n\n0002\n\n000B\n\n0049\n\n0003\n\nooBF\n\noooE\n\n0CA8\n\n00CB\n\n0005\n\n0000\n\n01CB\n\n0005\n\n0000\n\n1041\n\n0003\n\n0008\n\n0040\n\n0003\n\n0008\n\n0041\n\n0003\n\n00F3\n\n000E\n\n0C\xc2\xa31\n\n0006\n\n0CZA\n\ni04B\n\n0002\n\n0009\n\n0041\n\n0002\n\n0100\n\n000Z\n\n0CRA\n\n0082\n\n000A\n\n0092\n\n0008\n\n0006\n\n0C38\n\n1049\n\n0002\n\n000g\n\n0041\n\n0002\n\n0100\n\n000E\n\n0C.A8\n\n0082\n\n000A\n\n1048\n\n0002\n\n0009\n\n000E\n\n0CA8\n\n0082\n\n000A\n\n0088\n\n000A\n\n0C88\n\n0889\n\n000E\n\n0003\n\n0048\n\n0003\n\n00i_\'\n\n000\xc2\xa3\n\n0CDD\n\n000A\n\n0C54\n\n0089\n\n000A\n\n0C9F\n\nI048\n\n0003\n\n000t\n\n000Z\n\n09F3\n\nI048\n\n0005\n\n0009\n\n0040\n\n0005\n\n0002\n\n0041\n\n0005\n\n0003\n\n00C3\n\n0005\n\n0004\n\n0006\n\n0C70\n\n1049\n\n0002\n\n0009\n\n0049\n\n0003\n\n009F\n\n000=\n\n0cA8\n\n00Cs\n\n0005\n\n0000\n\n01CB\n\n0005\n\n0000\n\n104n\n\n0003\n\n0009\n\n004D\n\n0003\n\n0008\n\n0041\n\n0003\n\n0173\n\n000E\n\n0CDD\n\n008A\n\n000.%\n\n000E\n\n0C_D0\n\n088F\n\n0009\n\n0002\n\n000E\n\n0CCA\n\n0082\n\n000A\n\n0049\n\n0003\n\n00Br\n\nO00E\n\n0CDD\n\n000A\n\n0cg5\n\n000E\n\n0CD0\n\n000E\n\n0A29\n\n009A\n\n000B\n\n00A2\n\n0000\n\n0004\n\n0049\n\n0003\n\n009F\n\n000E\n\n0CD0\n\n000E\n\n0A.29\n\n00AE\n\n0000\n\n0048\n\n0003\n\n00BF\n\n000E\n\n0CD0\n\n000E\n\n0A2g\n\n00A2\n\n0000\n\n0848\n\n0004\n\n0003\n\n0041\n\n0004\n\n0004\n\n3841\n\n0004\n\n0003\n\n08CB\n\n0004\n\n0002\n\n021)6\n\n0003\n\n79C7\n\n0003\n\n0003\n\n0000\n\n384B\n\n0004\n\n0003\n\n7845\n\n0004\n\n0003\n\n0841\n\n0004\n\n0003\n\n0041\n\n0004\n\n0004\n\n08CB\n\n0004\n\n0002\n\n0000\n\n0202\n\n0003\n\n78C7\n\n0003\n\n0003\n\n0000\n\n0848\n\n0002\n\n0003\n\n0041\n\n0002\n\n0004\n\n1841\n\n0002\n\n0003\n\n1849\n\n0002\n\n0002\n\n0000\n\n02C3\n\n0003\n\n0000\n\n0000\n\n7&C3\n\n0003\n\n\'\n\n[752 16-bit words]\n\nJ\n\nnote-82.mss: 22\n\n08/27/90\n\nThe Kit Separation\n\xe2\x80\xa2 Uses a modified\n\xe2\x80\xa2 Interrupts\n\xe2\x80\xa2 Process\n\nFM8501\n\n(ms,mn)\n\nKernel\nmachine\n\nfor timer and I/O\nmanagement\n\n\xe2\x80\xa2 fixed number of processes\n\xe2\x80\xa2 process\n\nscheduling\n\n\xe2\x80\xa2 process\n\ncommunication\n\n\xe2\x80\xa2 response\n\n(round robin)\n(message\n\nto error conditions\n\n\xe2\x80\xa2 Device management for character\nasynchronous\ndevices\n\xe2\x80\xa2 Memory\n\npassing)\n\nmanagement\n\nI/O to\n\nuses hardware\n\nprotection\n\nWilliam R. Bevier. Kit: A Study in Operating\nSystem Verification.\nIEEE Transactions on\nSoftware Engineering.\nNovember 1989.\n\nJ\n\nnote-82.mss:\n\n23\n\n08/27/90\n\nKit Operating\n\nRequirement,\n\nR\n\nprocess\n\nabstract kernel\n\ntarget machine\nrunning Kit core image\n\nJ\n\nnote-82mss:\n\n24\n\n08/27/90\n\nThe CLInc Stack\no--\n\nuGypsy\n\n(yx,\n\nyp,\n\nyd,\n\n->o\n\nyn)\n\n/%\n\nI\n-I\n\nI\n\nCompile\n\np_display\n\nYoung\n\nI\nI\n\nI\nV\n\no\n\npiton\n\n(ps, pn)\n\n....\n\n>O\n/%\n\nI\nl\n\nI\n\nLink-assemble\n\nMoore\n\nm\n\ndisplay\nm\n\nt\nI\n\nI\nV\n\no\n\nfm8502\n\n(ms, mn)\n\n....\n\nA\n\nI\nI\nReify\n\n>O\n\nI\ng_display\n\nHunt\n\nI\nI\n\nI\nV\nl\n\ngates\n\n(gs,\n\ngn)\n\n....\n\n>O\n\nWarren A. Hunt, J Strother Moore II, William\nD. Young. Journal of Automated Reasoning. Vol.\n5, No. 4, Dec 1989.\nJ\n\nnote-82.mss: 25\n\n08/27/90\n\nThe Piton Language\nThe Piton language has\n\xc2\xb0 execute-only\n\nprogram space\n\n\xe2\x80\xa2 read/write global arrays\n\xe2\x80\xa2 recursive subroutine calls\n\xe2\x80\xa2 formal parameters\n\xe2\x80\xa2 user-visible stack\n\xe2\x80\xa2 stack-based instructions\n\xe2\x80\xa2 flow-of-control\n\ninstructions.\n\nThe cross assembler produces an FM8502 binary\ncore image.\n\nJ\n\nnote-82.mss:\n\n26\n\n08/27/90\n\nThe Micro Gypsy Language\nThe Micro Gypsy subset of Gypsy has\n\xe2\x80\xa2 types integer, boolean,\n\xe2\x80\xa2 one dimensional\n\ncharacter\n\narrays\n\n\xe2\x80\xa2 procedure calls with pass by reference\nparameters\n\xe2\x80\xa2 sequential\n\xe2\x80\xa2 condition\nThe compiler\n\ncontrol structures\nhandling\n\nif, loop,\n\nsignal..when.\n\nproduces\n\nPiton.\n\nJ\n\nnote-82.mss:\n\n27\n\n08/27/90\n\nThe Stack Theorem\nTheorem:\n\nH\'\n\n(yx,\n\nyp,\n\nyd,\n(yx,\n\nuGypsy\nU\'\n\nyn)\nyp,\n\n(gates\n\n(D\'\nKg\'\n\nProof:\n\nMechanically\n\nUnder the conditions\n\xe2\x80\xa2 the\n\nuGypsy\n\n->\nyd,\n\nyn)\n\n=\n\n(yx,\n\nyp,\n\nyd)\n\n,\n\n(yx,\n\nyp,\n\nyd,\n\nyn,\n\nmd)\n\n))\n\nchecked.\n\nH\',\n\nmodel is just as accurate\n\n\xe2\x80\xa2 but with many details suppressed\n\nBoyer-Moore\n\nas\n\ngates\n\nby u\'.\n\nLogic\n\nRobert S. Boyer, J Strother Moore II. A\nComputational\nLogic Handbook, Academic\n1988.\n\nPress,\n\nMatt Kaufmann. A User\'s Manual for an Interactive\nEnhancement to the Boyer-Moore Theorem\nProver. TR 19, Computational\nLogic, Inc., 1988.\n\nJ\n\nnote-82.mss: 28\n\n08/27/90\n\nf\n\nA Hierarchy of Models\nof a Programmed Machine\nR (yx0,\n\nuGypsy\n\nyp0,\n\nyd0,\n\nydk)\n\n(yx0,\n\nyp0,\n\nyd0,\n\nyk\n\n(yx0,\n\npiton\n\n(ps0,\n\npk\n\n(ms0,\n\nmk\n\ngk\n\n)\n\n(ms0))\n\n(gs0,\n\nyd0)\n\n(ps0))\n\nfm8502\n\nyp0,\n\n(gs0))\n\ngates\n\nCorresponding\nto these is a hierarchy\ndescriptions ....\n\nof program\n\nJ\n\nnote-82.mss: 29\n\n08/27/90\n\nOperating\nprocedure\n\nmult\n\nRequirement\nans:\n\n(var\n\nfm8502\n\nint;\n\ni, j :fm8502--int)\n\n=\n\nbegin\nENTRY\nEXIT\n\nj ge\n0;\nans\n= NTIMES(i,\n\nj) ;\n\npending;\nend;\ntype\n\n{A\n\nfm8502\nint\n=\ninteger[-(2**31)\n\nSimple\n\nfunction\nbegin\nexit\n\nProblem\nNTIMES\n\n(assume\nif Y\nelse\nfi\n\n.. (2"\'31)-i]\n\nDomain\n\nTheory}\n\n(x, y :integer)\nresult\n\ni=fO\n\ny\n\n:integer\n\n=\n\n=\n\nthen\n= 1\n\nelse\nx\nfi) ;\n\n;\n\n+\n\n0\nthen\nNTIMES\n\nx\n(x,y-l)\n\nend;\n\nJ\n\nk_\n\nnote-82.mss: 30\n\n08/27/90\n\nGypsy Program Description\nprocedure\n\nmult\n\nans:\n\n(var\n\nfm8502\n\nint;\n\ni, j : fm8502--int)\nbegin\nENTRY\n\nj\n\nEXIT\n\nans\n\nge\n\n0;\n=\n\nNTIMES\n\nk:fm8502\n\nvar\n\nk\n\n:=\n\n(i, j) ;\n\nint\n\n:=\n\n0;\n\nk\n\nin\n\nj;\n\n:=\n\nans\n\n=\n\n0;\n\nloop\nASSERT\n\nj\n&\n\nif\n\nk\n\nans\n\nge\n\nans\n\nle\n\n=\n\n0\n\n&\n\nNTIMES(i,\n\nthen\n\n-=\nk\n\n0\n\nans+\n\n:=\n\nk\n\n-\n\nleave\n\n[0..j]\nj-k)\n\n;\n\nend;\n\ni;\n1;\n\nend;\nend;\n\nJ\n\nnote-82.mss:\n\n31\n\n08/27/90\n\nf\n\nPiton Program Description\n(MG-MULT\n(K\n\nZERO\n\nONE\n\nBANS\n\nI\n\n;formals\n\nJ)\n\n;locals\n\nNIL\n(PUSH-LOCAL\n(PUSH-CONSTANT\n(CALL\n\n;ans\n\nANS)\n(INT\n\n:=\n\n0;\n\n0) )\n\nMG-SIMPLE-CONSTANT-ASSIGNMENT)\n\n(PUSH-LOCAL\n\nK)\n\n(PUSH-LOCAL\n\nJ)\n\n(CALL\n(DL\n\n;k\n\n:=\n\nj;\n\nMG-SIMPLE-VARIABLE-ASSIGNMENT)\nL-I\n\nNIL\n\n;loop\n;\nb\n\n(NO-OP))\n\n(PUSH-LOCAL\n\nB)\n\n(PUSH-LOCAL\n\n:=\n\nk\n\nle\n\n0\n\nK)\n\n(PUSH-LOCAL\n(CALL\n\nZERO)\n\nMG-\n\nINTEGER-LE)\n;\n\n(PUSH-LOCAL\n\nB)\n\n(FETCH-TEMP-\n\nif\n\nb\n\nthen\n\nleave\n\nSTK)\n\n(TEST-BOOL-AND-\n\nJUMP\n\n(PUSH-CONSTANT\n(POP-GLOBAL\n(JUMP\n\n(NAT\n\nFALSE\n\nL-3)\n\n0) )\n\nC-C)\n\nL-2)\n\n(JUMP L-4)\n(DL\n\nL-3\n\nNIL\n\n(NO-OP))\n\n(DL\n\n5-4\n\nNIL\n\n(NO-OP))\n\n(PUSH-LOCAL\n(PUSH-LOCAL\n\n:=\n\nans+\n\ni;\n\nANS)\n\n(PUSH-LOCAL\n\nans\n\nANS)\nI)\n\n(CALL\n\nMG-\n\nINTEGER-ADD)\n\n(PUSH-GLOBAL\n\nC-C)\n\n...\n\nsupport\n\n[14\n\nmore\n\nroutines]\n\n...\n\nJ\n\nnote-82.mss: 32\n\n08/27/90\n\nFM8502 Program Description\n(M-STATE\n\'(B00000000000000000000001011000000\n\nB00000000000000000000001111100011\n\nB00000000000000000000001111100000\n\nB00000000000000000000010001000111\n\nB00000000000000000000000000000000\n\nBOO000000000000000000000000000000\n\nBOO000000000000000000000000000000\n\nBOO000000000000000000000000000000)\n\nFFFF\nB00000000000011111000000000100010\n\n\'(B00000000000011111000001001000001\nB00e00000000011111000001001011011\n\n1100000000000011111000001001011011\n\nB00000000000011111000000010011000\n\nBOO000000000000000000000000000001\n\nB00000000000000110000000010000010\n\n1100000000000011111000001001101100\n\nB00000000000011111000000010111011\n\nB00000000000000010000000010100101\n\nB00000000000011111000000010011000\n\nB00000000000000000000010001001101\n\nB00000000000011111000000010001100\n\nB00000000000001110000000010000101\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010011000\n\nBOO000000000000000000000000000000\n\nB00000000000000110000000010000010\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010111011\n\nB00000000000000010000000010100101\n\n1100000000000011111000000010011000\n\nB00000000000000000000010001001101\n\nB00000000000011111000000010001100\n\nB00000000000001110000000010000101\n\nB00000000000011111000000110011011\n\nB00000000000011111000000000001000\n\nB00000000000000000000000000011100\n\nB00000000000011111000000001000001\n\nB00000000000011111000000000111010\n\nB00000000000011111000000000011010\n\nB00000000000011111000001001000001\n\nB00000000000011111000000000100010\n\nB00000000000011111000001001011011\n\nB00000000000011111000001001011011\n\nB00000000000011111000000010011000\n\nB00000000000000000000000000000001\n\nB00000000000000110000000010000010\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010011000\n\nB00000000000000000000000000000000\n\nB00000000000000110000000010000010\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010111011\n\nB00000000000000010000000010100101\n\nB00000000000011111000000010011000\n\nB00000000000000000000010001001101\n\nB00000000000011111000000010001100\n\nB00000000000001110000000010000101\n\nB00000000000011111000000110011011\n\nB00000000000011111000000000001000\n\nBOO000000000000000000000000110100\n\nB00000000000011111000000001000001\n\n900000000000011111000000000111010\n\nB00000000000011111000000000011010\n\n1100000000000011111000001001000001\n\nB00000000000011111000000000100010\n\nB00000000000011111000001001011011\n\nm00000000000011111000001001011011\n\n800000000000011111000001001011011\n\nB00000000000011111000000010011000\n\ni00000000000000000000000000000001\n\nB00000000000000110000000010000010\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010111011\n\nB00000000000000010000000010100101\n\nB00000000000011111000000010011000\n\nB00000000000000000000010001001101\n\nB00000000000011111000000010001100\n\nB00000000000001110000000010000101\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010011000\n\nB00000000000000000000000000000010\n\nB00000000000000110000000010000010\n\nB00000000000011111000001001101100\n\nm00000000000011111000000010111011\n\nB00000000000000010000000010100101\n\nB00000000000011111000000010011000\n\nB00000000000000000000010001001101\n\nB00000000000011111000000010001100\n\nB00000000000001110000000010000101\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010011011\n\n_00000000000010110000010101100100\n\nB00000000000010110000000101101011\n\nB00000000000001011000000101111000\n\nB00000000000000000000000000000001\n\ni00000000000011111000000010011000\n\nB00000000000000000000000000000000\n\nB00000000000000110000000010000010\n\nB00000000000011111000001001101100\n\nB00000000000011111000000010111011\n\n...\n\n[10\n\nmore\n\npages]\n\n...\n\n))\n\nJ\n\nnote-82.mss:\n\n33\n\n08/27/90\n\nf\n\nMathematical\n\nRequirements\n\n\xe2\x80\xa2 Unambiguous:\nRequirements have a welldefined interpretation that tells exactly what\nthey do say.\n\xe2\x80\xa2 Analyzable:\nthing?\nR(x,\n\ny)\n\nDo the requirements\n\n->\n\ngood_thing(x,\n\nsay the "right"\n\ny)\n\n\xe2\x80\xa2 Consistency:\nRequirements\ncontradictions.\n\ncontain\n\nno\n\n\xe2\x80\xa2 Enable modeling a program component before\nbuilding it (and thereby save the time and cost\nof designing a poor program.)\nTo get these benefits, the requirements notation\nmust have a rigorous mathematical foundation\n(semantics).\n\n\\\n\nJ\n\nnote-82.mss:\n\n34\n\n08/27/90\n\nDesign >> Requirements\n\xe2\x80\xa2 There is more to designing a digital system than\njust stating and refining mathematical\nrequirements.\n\xe2\x80\xa2 One must still construct\nmachine.\n\na program for some\n\n\xe2\x80\xa2 Mathematical\nmodels of commonly used\nlanguages and machines are still very scarce.\n\nJ\n\nnote-82.rnss:\n\n35\n\n08/27/90\n\nSummary\nFor either design of a new system or operation of\nan old one, mathematical modeling of digital flight\ncontrol systems offers\nBenefits:\n\nearly error detection\n\n\xe2\x80\xa2 Saves time\n\xe2\x80\xa2 Saves money\n\xe2\x80\xa2 Saves operational\n\ndisruption\n\n\xe2\x80\xa2 Saves operational\n\nmishaps\n\nRisks: model misrepresents\n\nsystem\n\n\xe2\x80\xa2 Inaccurate\n\xe2\x80\xa2 Incomplete\n\nJ\n\nnote-82.mss: 36\n\n08/27/90\n\nf\n\nConventional Non-Wisdom\nUse "formal\n\nmethods"\n\n(mathematical\n\nmodeling)\n\n\xe2\x80\xa2 only after a system is built to certify it\n\xe2\x80\xa2 only before a system is built to design it\n\xe2\x80\xa2 to guarantee\n\xe2\x80\xa2 to eliminate\n\nperfect system behavior\nthe need for testing\n\nJ\n\nnote-82.mss:\n\n37\n\n08/27/90\n\n'