b'N93-32130\n\nScheduling\n\nwith\n\nPartial\n\nOrders\n\nand\n\na Causal\n\nModel\n\nMark Boddy\nJim Carciofmi\nGeorge D. Hadden\n{boddy Jc_rciofi hadden}Osrc.honeywell.com\nJ\nHoneywell Systems _ Research Center,MN65-2100\n3660 Technology Drive\nMinneapolis,MN 55418\n\nAbstract\nIn an ongoing project at Honeywell SRC, we are constructing a proto.\ntype acheduling system for a NASA domain using the "Time Map Manqer"\n(TMM). TMM representations are flexlble enough to permit the representation\nof precedence constraints, metric constraintS between activities, and constraints\nrelative to a variety of references (e.g., Mimion Elaimed Time vs. Mhmion\nDay). The TMM also supports a simple form of eausal reasoning (projection),\ndynamic database updates, and monitoring specified database properties u\nchanges occur over time.\nThe greatest apparent advantage to using the TMM is the flexibility added\nto the scheduling process: schedules are constructed by a process of "iterative\nrefinement, I in which scheduling decisions correspond to constraining an activity either with respect to another activity or with respect to some timeline.\nThe schedule becomes more detailed u activities and constraints are added.\nUndoing a scheduling decision means removing a constraint, not removing an\nactivity from a specified place on the timeline. For example, we can move an\nactivity around on the time]ine by deleting constraints and adding new ones,\nand other activities constrained with respect to the one we move will move as\nwell.\n\n1\n\nIntroduction\n\nWe are interested in the solution of large, complex scheduling problems.\nExamples\nof the kinds of domains we are interested in include several NASA scheduling\nproblems (e.g. Spacelab,\nSpace Station operations, Shuttle ground processing),\nand the\nTransportation\nPlanning problem being addressed\nby the joint DARPA/Air\nForce\nPlanning Initiative.\nA "solution"\n\nas we use the term is not simply an implementation\n\nfor solving a particular\nFor many\ninvolve\n\ndomains,\n\nnegotiation\n\nconstraint\n\nconstructing\namong\n\nsatisfaction\nschedules\n\ncompeting\n\nor constrained\n\nis an extended,\n\niterated\n\nagents or organizations,\n\n251\n\nof an algorithm\n\noptimization\n\nproblem.\n\nprocess that may\nscheduling\n\nchoices\n\nmade\n\nfor\n\nreasons\n\nminute\n\nchanges\n\nprocess\n\nby which\n\nprovide\n\nnot\n\na useful\n\nwhen\n\ncreasingly\n\ncomplex.\n\noperations\n\ndomains\n\ninvolve\n\nis divided\nschedule\n\nscheduling\n\nsystem\n\ncomplexities\nIn\n\nongoing\n\nscheduling\nTMM\n\nmust\n\nas well\n\nan\n\nbetween\n\nMission\n\nElapsed\n\n(projection\ndatabase\n\nTime\n\ngreatest\n\nscheduling\nwhich\n\nmeans\n\nremoving\n\ntimeline.\nconstraints\nthe\n\none\n\nand\n\nIn the\nthe\n\nof this\n\napplication\n\n2\nAs\n\nrest\n\npart\n\na prototype\n_ (TMM).\nmetric\n\ncon-\n\nof references\n\nsupports\nand\n\ncausal\n\n(e.g.\n\nreasoning\n\nmonitoring\n\ncertain\n\nadded\n\nof "iterative\n\nto constraining\n\nan\n\nan activity\n\nother\n\nfrom\n\naround\nactivities\n\nactivity\n\neither\n\na specified\n\nwith\n\nbecomes\ndecision\n\nplace\n\non the timeline\nconstrained\n\nto the\n\nrefinement,"\n\nto some timeline.\nThe schedule\nare added.\nUndoing\na scheduling\n\nan activity\nand\n\nis the flexibility\n\non the\n\nby deleting\n\nwith\n\nrespect\n\nto\n\npaper,\n\nwe provide\n\na brief\n\nto scheduling,\n\nintroduction\n\nand\n\ndescribe\n\nto the\nsome\n\nTMM,\n\nrelated\n\ndescribe\n\nwork.\n\nOverview\n\nof the\n\nDAI_PA/I_\n\nimplementation\nin robustness,\n\nis constructed.\n\nconstraints,\n\nalso\n\na\n\ndomain\n\nas well.\n\nof the TMM\n\nTMM\n\nthese\n\nManager\n\na variety\n\nupdates,\n\nthe TMM\n\nnot removing\nones,\n\nMap\n\nby a process\n\ncorrespond\n\nor with respect\nand constraints\n\nnew\n\nsolution,\n\nover time.\n\nare constructed\n\nwill move\n\nappear\n\nor reflect\n\n"Time\n\nTMM\n\nactivities\n\nimplementing\n\nto\n\ntran-\n\nan effective\n\nof precedence\n\nThe\n\nand\n\na power\n\na schedule\n\nare\n\nrelative\n\nto using\n\nwe can move\n\nadding\n\nthe\n\ndatabase\n\noccur\n\na constraint,\n\nwe move\n\nexpression\n\nadvantage\n\nwe\n\nusing\n\nDay).\n\ndecisions\n\nFor example,\n\nby which\n\nless\n\n(e.g.,\n\non where\n\nto represent\n\nSI_C,\n\nand\n\nof activities\n\nstructures\n\nTo provide\n\nin-\n\nscheduling\n\ncontext-dependent\n\nprocess\n\nthe\n\nNASA\n\nto thousands\n\nenough\n\ndynamic\n\nrespect\nto another\nactivity\nmore detailed\nas activities\n\nto\n\nof stan-\n\nare less\n\nmany\n\npreferences\n\nconstraints\n\nschedules\n\nscheduling\n\nuser\n\ndomain\n\nas changes\n\napparent\n\nprocess:\n\nand\n\nMission\n\nvs.\n\nthe\n\nattempt\n\nis becoming\n\nprogramming\n\nresource\n\nas possible=).\n\nthe\n\nlast-\n\nenviroment,\n\napplication\n\n(including\n\ncomplex\n\nand\n\npersistence),\n\nproperties\n\nThe\nin\n\npermit\n\nactivities,\n\nand\n\neffects\n\ncase),\n\nHoneywell\n\nfor a NASA\n\nand\n\nin any\n\nschedule\n\nexample,\n\n(hundreds\n\nexpressive\nat\n\na single\n\nFor\n\ninstances\n\nas supporting\n\nrepresentations\n\nstraints\n\nbe\n\nan\n\nconsidered\n\nas linear\n\nactivity\n\nproject\n\nsystem\n\nsuch\n\n"as late\n\nIn such\n\nbe\n\nby straightforward\n\nproblems.\n\nsub-busses),\n\n(e.g.,\n\nmust\n\nsolvable\n\nas a special\n\ninto\n\nin the final\n\nexpected.\n\nscheduler,\n\ndomain.\n\ntechniques\n\nproblem\n\ntimes\n\ngo as\n\nof generating\n\nmodels\n\ncontext-dependent\n\nor setup\n\nthat\n\nproblem\n\nscheduling\nlarge\n\nnot\n\nfor a given\n\nSimple\n\nto current\n\nbus\n\ndo\n\nin an automatic\n\nis constructed\n\nlimited\n\nresearch\n\nrelevant\n\nsitions\n\nevents\n\nscheduler\n\nthe more\n\nconstraints),\n\nimplementable\n\na schedule\n\nEven\n\ndard\n\neasily\n\nPlanning\n\nof Dean\'s\nuser\n\nTime\n\ninterface,\n\nMap\nand\n\ntensions\n\nin functionality.\n\nThe\n\nTMM\n\nplanners\n\nand\n\nwith\n\nthe\n\nschedulers)\n\n\xe2\x80\xa2\n\nMetric\n\nand\n\nordering\n\n\xe2\x80\xa2\n\nCausal\n\nconstraints\n\nInitiative,\nManager\n\nHoneywell\n(TMM)\n\ndocumentation,\nprovides\nfollowing\nbetween\n\nreasoning.\n\n252\n\nin\n\nusers\n\nand\n\naddition\n\ntwo\n\nto\n\napplication\n\nfunctionality:\nany\n\nhas\n\n[5], involving\n\npoints.\n\ndeveloped\n\na new\n\nimprovements\na number\nprograms\n\nof ex(e.g.,\n\nP\n\n===1\n\nI\n\nP\no\n\nI..............\n-->\n\nI\nFigure\n\n\xe2\x80\xa2 Database\n\nmonitors\n\n\xe2\x80\xa2 OptimJzations\nThe structure\n2.1\n\nTemporal\n\n[\n1: A simple temporal\n\nfor temporal\n\nfor large temporal\n\nand capabilities\n\nI\n\nconditions\n\ndatabase\n\nand protections.\n\ndatabases.\n\nof the TMM are described\n\nin more deta\xc2\xa31 below.\n\nRelations\n\nThe TMM lets users assert constraints\nbetween pairs of time points, resulting in a\npartial ordering among the points. TMM supports queries regarding necessary and\npossible temporal relations among the time points. The truth of facts over intervals\nof time\n\nis represented\n\nby tokens,\n\nwhich may include\n\nproperties\n\nyond their observed endpoints.\nIn the current implementation,\nboth forward and backward\nin time. The truth of a proposition\ndetermined\n\nbased on the ordering\n\nof token endpoints\n\nand\n\nof pers/stence\n\nbe-\n\ntokens may persist\nover an interval is\n\nthe token\'s\n\npersistence\n\nproperties:\nFor example,\nFigure 1 is a simple temporal database, involving three\ntokens of three different types. In this example, P is true over the interval bounded\nby the vertical lines, mad persists into the future. (not P) becomes true at a later\ntime, and clips the forward persistence\nof P. The statement\nup mad Q" is true for\nan interval\ndefined by the overlap of the tokens labelled P and Q.1\n2.2\n\nCausal\n\nReasoning\n\nThe TMM supports reasoning about\noccur using three forms of inference:\n\xe2\x80\xa2 The persistence\nthat\n\ncertain\n\naddition,\n\nassumption.\n\nfacts\n\nthey\n\nuntil something\n\nAs described\n\nare believed\n\ncan specify\noccurs\n\nthe changing\n\nthat\n\nstate\n\nabove,\n\nof the world as activities\n\nusers of the TMM\n\nto be true over specific\nthose facts\n\nintervals\n\ncan be assumed\n\nspecify\n\nof time.\n\nto remain\n\nIn\ntrue\n\nto make them false.\n\n\xe2\x80\xa2 Projection.\nThis is inference of the form: given an event E and a set of preconditions Px, P2,... Ph, and a result R, whenever the preconditions\nare believed\nto be true for the entire event\nfollowing\n\nE, R is believed\n\nto become\n\ntrue immediately\n\nE.\n\nI We are in the process of developing \xe2\x80\xa2 formal semantics for the TMM. A drdt version is available\nby request.\n\n253\n\n\xe2\x80\xa2 Overlap chaining.\nGiven a set of preconditions\nPl, P2,... P_, and a result R,\nR is believed to be true for any interval for which all of the preconditions\nare\ntrue.\nAll of these forms of inference\nifies which f_cts are persistent\nthe requisite\n\ninference\n\n2.3\n\nsupports\n\nis performed\n\nNonmonotonic\n\nTMM\n\nare handled completely\nautomatically:\nthe user specand asserts a set of projection and overlap rules, and\nby the system.\n\nReasoning\n\nand\n\nDatabase\n\ntwo basic kinds of nonmonotonic\n\n\xe2\x80\xa2 Possibly\n\ntrue temporal\n\ndated by additional\n\xe2\x80\xa2 Assumed\n\nrelations\n\ntruth of a temporal\n\nreasoning:\n\nbetween\n\nconstraints),\n\nMonitors\n\ntime\n\npoints\n\n(which\n\nproposition\n\nover an interval\n\nthe database\n\nitself is "nonmonotonic\',\n\nof specified\n\ncan be tracked through\nmonitors\nwhether\n\ndatabase\n\nproperties\n\nthe use of monitors.\n\nof a contradictory\n\nin the sense\n\ncan be deleted, and the inference performed by the system\nto ensure that it continues to be supported by the current\nThe existence\n\nbe invali-\n\nbased on a time to-\n\nken\'s persistence\n(which may be invalidated by the addition\ntoken, which clips the proposition\nduring that interval).\nIn addition,\n\nmay\n\nand\n\nas changes\n\nThe existing\n\nthat information\n\nthus far will be checked\nstate of the database.\n2\nare made\n\ntypes\n\nover time\n\nof TMM\n\ndatabase\n\nare temporal conditions\nand protections.\nTemporal conditions\nmonitor\nspecified relations among points can be derived from the current state of\n\nthe database,\n\nmaintaining\n\nthis information\n\nas the database\n\nchanges.\n\nProtections\n\ndo the same thing for the truth of some fa_t over an interval. Between them, these\ntwo mechanisms\nprovide support for monitoring\nthe continued validity of previous inference,\ndatabase\n\n2.4\n\nor triggering\n\ndemons\n\nbased on complex\n\nproperties\n\nof the temporal\n\nEfficiency\n\nCurrent\n\nand planned\n\nTMM optimizations\n\nuse of & global reference\n\npoint\n\nwhere\n\nfor handling\n\nappropriate\n\nlarge databases\n\n(rather\n\nthan\n\ninclude\n\nforcing\n\nthe\n\nits use as\n\nsome systems do), limiting search to that necessary to prove or disprove a query,\nca_hing search results for later use, graph decomposition,\ntemporal indexing, lazy\nmonitor evaluation, and algorithms that are designed\nthe database that may result in useful answers.\n\n3\n\nScheduling\n\nThe assumptions\n\nUsing\nunderlying\n\nthe\n\nto search only those\n\nTMM\n\nour scheduling\n\nwork are as follows:\n\n2Tkia capability (temporal reason maintenance) is described in detail elsewhere [5].\n\n254\n\nparts of\n\n,\n\nSV1\nSV2\n\nI\n\n,"\n\nI\n\nI\nFigure\n\n2: Time-line\n\nI\n\n[\n\nscheduling\n\nsv11\nSV21\n\nI\n\nI\nI\n\nI\n\nFigure 3: Constraint-posting\n\nI.\n\nI\n\nscheduling\n\nand the resulting\n\npartial order\n\nExplicitly\nmode]ling the constraints\nresulting from specific\nsions makes the schedule easier to construct and modify.\n\n2. P_epresenting\n\nonly those relationships\n\n(the decisions made so far) provides\nof the scheduling effort.\n\nrequired by the current\na more useful picture\n\nThe main consequence\nof this approach is that the scheduler\ntotally-ordered\ntimelines of activities and resource utilization.\n\nscheduling\n\ndeci-\n\nset of constraints\n\nof the current\n\nstate\n\ndoes not manipulate\nInstead, the evolving\n\nschedule consists of a partially ordered set of activities, becoming increasing ordered\nas additkmai\nconstraints are added (or less so, as those decisions are rescinded).\nTimeline\nschedules can be represented\nusing linear sequences\nof tokens, one\nsequence for each resource. Figure 2 depicts a simple timeline schedule Arrows between the sequences\n\nrepresent\n\nconstraints\n\nobey the indicated\nordering relationship.\ncumulating\nconstraints\nhave a structure\nset of constraints\n\nis insufficient\n\nthough\n\nincreased\n\nproviding\n\non parts of the two sequences\n\nIn contrast, schedules\nconstructed\nby aclike that in Figure 3. Here, the current\n\nto force a totally-ordered\n\nflexibility\n\nthat must\n\n(through\n\ndelaying\n\nsequence\n\nof activities.\n\ncommitment),\n\nKI-\n\nthe explicit\n\nrepresentation\nof partiaUy-ordered\nactivities in the time map makes reuoning about\nresource usage and other state changes more complicated.\nIt is no longer possible to\nconstruct\na single thne-line representing\n(e.g.) changing resource availability\ntime. Instead, the system computes\nbounds on the system\'s behavior.\n\n255\n\nover\n\nP7\n\nP_PS\n\n_PIO\nPS\n\nPl\nI\n\nP7\n\nP2\nI\n\nPS\nI\n\nP4\nI\n\nPS\n;\n\n_\n_\n\n_t._lp 10\n\nP7\n\nFigure\n\n4: Gradual\n\nhardening\n\nof a partial\n\norder\n\nCausal reasoning and resource profiles both depend on precise orderings of facts\nand activities\nin time, that is, on what propositions\nare true and what activities\noccur when. For a partial order, we can determine what facts might possibly or\nneceasar//y hold at a point, in some or all of the total orders consistent with the given\npartial order. With even a very simple causal model, this is an NP-complete\nproblem\n[4]. The solution\n\nwe have implemented\n\n(first presented\n\nin [3]) is to approximate\n\nthe\n\nnecessary quantification,\nimplementing\nstrong and weak reasoning as approximations\nfor what is possibly or necessarily true, given the current partial order, s\nFigure 4 depicts\n\nthe process\n\nby which a partially\n\nordered\n\nschedule\n\nis gradually\n\nrefined into an executable, totally ordered schedule. In our approach to constructing\nthe final schedule, this is one of the ways in which a partial or incomplete\nschedule\nis modified,\n\nthe other being the addition\n\nof new activities.\n\nThe TMM\'s strong and weak reasoning provides a partial solution to the problem\nof reasoning about what will happen. For certain classes of inference, in particular\nproblems\n\ninvolving\n\nresource\n\nsive activities,\nstrong\noccasionally\nprovides\n\ncapacity\n\nor the aggregate\n\nduration\n\nof mutually\n\nexclu-\n\nand weak (even exact "necessary" and "possible") reasoning\ninsuliicient information.\nFor these cases, there are two pos-\n\nsible approaches:\nsimulation (sampling) of totally-ordered\nsequences, or some kind\nof static graph analysis to determine better bounds on the system\'s behavior. The\nend result in either case is a measure of how likely it is that further constraints\non\nthe partial order will cause problems, requiring the scheduler to backtrack to earlier\nchoices.\nDespite\ngame:\n8See\n\nthe\n\napproximate\n\nnature\n\nwhere the least-commitment\n\nof this reasoning,\napproach\n\n[5], or [13] for details.\n\n256\n\nwe are\n\nto scheduling\n\nstill\n\nahead\n\ncan at least\n\nof the\nprovide\n\napproximate\nanswers in support of scheduling decisions (e.g. what order activities\nshould occur in), timeline schedulers\nmake the same decisions arbitrarily--putting\nan activity\n\non the timeline\n\n(say) between\n\n4\n\nis a stronger\n\ntwo other activities,\n\nRelated\n\ncommitment\n\nthan constraining\n\nit to occur\n\nor within a given time window.\n\nWork\n\nThe idea that schedules\nof the schedule\n\nhistory\n\nshould be constructed\n\nUfrom the side," looking\n\nrather that just sweeping\n\nat part or all\n\nforward or backward\n\nin time,\n\nhas\n\nbeen implemented\nin several scheduling systems, e.g. [7, 18, I, 14]. Typically, these\nsystems also support an iterative\nprocess of schedule refinement or repair. Recent\nwork on COMPASS provides a protocol for allowing different agents to modify the\nsame schedule,\nwherein commitments\nmade by one agent cannot\nthe actions of any other.\nResearch in constraint-based\nscheduling\ndemonstrated\nthe advantages of considering the structure\nover time and using this structure\nto dynamically\nfocus\nmost critical\n\ndecisions.\n\nHowever,\n\nthese systems\n\nbe affected by\n[8, 15, 12] has\n\nof problem constraints\ndecision-making\non the\n\nhave historically\n\nhad a weak model\n\nof the interaction\nof activities\nand the evolving state of the domain.\nResearch in generative\nplanning has focused on the construction\nof activity\nworks that bring about\n\ndesired\n\ngoal states,\n\ngiven basic representations\n\nnet-\n\nof the e.qects\n\nof actions\nin the world. Classical domain modeling\nassumptions\n[6] [17] make it\ndifficult to reason about the duration of activities,\ncontinuously\nvarying quantities,\nand resource consumption.\nThe consequence of these limitations\nis that automatic\nplanners have not had any great success in applications to significant planning and\nscheduling\nproblems [2, 16].\nIn addition\nto the TMM,\nimplemented\n\nwith an ability\n\ndate, the TMM\'s\ndatabase\nreasoning\n\n5\n\ncombination\n\noperations,\nsystems.\n\nseveral\n\nother temporal\n\nto reason about time\nof expressive\n\nand extensive\n\nflexibility,\n\noptimization\n\ndatabase\n_from\n\nsystems\n\nthe side"\n\n[Ii,\n\nprecise semantics,\n\nset it apart from\n\nhave\n\nbeen\n\n9, i0].\n\nTo\n\nsupport\n\nfor\n\nother temporal\n\nSummary\n\nEffective support for current scheduling domains requires a focus on the scheduling\nprocess as well as the scheduling problem. Using the TMM, we are in the process of\nconstructing\na novel form of scheduler that constructs\nschedules through the accumulation\nand\n\nof constraints\n\non the relations\n\nbetween\n\nactivities,\n\nand\n\nbetween\n\nactivities\n\nvarious reference points (e.g. calendar time, mission elapsed time, etc.).\nThe TMM\'s support for flexible temporal relations, dynamic updates in large\n\ndatabases, and causal reasoning provide an effective base for building schedulers\ncomplex problems. The TMM is freely available and written in Common Lisp.\nobtain\n\na copy of the software\n\nand capabilities,\n\ncontact\n\nor a more detailed\n\nthe authors\n\ndescription\n\nat the address\n\n257\n\nof the system\'s\n\ngiven on the first page.\n\nfor\nTo\n\ndesign\n\nReferences\n[1] Biefeld, and Cooper, L.,Scheduling with Chronology-DiRcted Search, Proe. AIAA\nE.\nComp=tere in Aerosp=ce VII, Monterey, CoJi/or_ia_ 1989, 1078-1087.\n[2] Dean, T., Firby, R.J.,\nTime, and Resources,\n[3] Dean, Thomas\nSi=tA N6Lio_l\n\nand Miller, D., Hierarchical\nComputational\nIntelligence,\n\nand Boddy,\nConcreate\n\n[5] Dean, Thomas and McDermott,\nIntelligence,\n32 (1987) 1-55.\n\nPlato,\n\nHart,\n\nArtificial\n\nDeadlines,\n\nMark, Incremental\nCausal Reasoning,\nProceeding#\no_ Aeti_ci61 l_telligence,\n1987, 196-201.\n\n[4] Dean, Thomas and Boddy, Mark, Reasoning\nInLellige_ce, 36(3) (1988) 375-399.\n\n[6] Fikm, R.E.,\n\nPlanning Involving\n4 (1988) 381-398.\n\nPartially\n\nDrew V., Temporal\n\nP.E., and Nihmon,\nIntelligence,\n\nabout\n\n3 (1972)\n\nN.3.,\n\nLearning\n\nOrdered\n\nAAAI-#7\n\nEvents,\n\nData Base Management,\n\nand Executing\n\nTravel\n\nArtificioJ\n\nArtifici,,l\n\nGenerali,ed\n\nRobot\n\n251-288.\n\n[7] Fox, B. R., Non-Chronological\nScheduling,\nProc. AI, $imulaLion,\na_d Planning in High\nAuto,ore31\nS\xc2\xa5sLerl_, Uni_ermfl\xc2\xa5 of Arizona_ IEEE Computer Society Press, 1990.\n[8] Fox, M.S. and Smith,\n\nEfp,,\n\nS.F.,\n\nISIS: A Knowledge-Based\n\n[9] Ghallab,\nM. and Alsoui, A.M., Managing\ndexed Spanning Trees, Proceedings\nIJCAI\n1303.\n[1O] Koomen,\n(revised),\n\nSystem\n\nfor Factory\n\nScheduling,\n\n1(1) (1984)25-49.\n\nJ.A.G.M.,\nUniversity\n\nEfficiently\nTemporal\nRelationl\nI1, Detroit,\nMichigan_ IJCAI,\n\nTke Timelogic\nTemporal\nof Rochester\nComputer\n\nthrough\nIn1989, 1297-\n\nReo.soning Sllstem, Technical\nReport\nScience Department,\nOctober 1988.\n\n[11] Materne, S. and Hert=berg, J., MTMM: Correcting\nand E=te_ding\nment, Technical Report\n511, GMD, February 1991.\n\nTime\n\n231\n\nMap Manage-\n\n[12] Sadeh, N. and Fox, M.S., Variable and Value Ordering Heuristics\nfor Activity-based\nJob-shop Scheduling,\nProceedings\no/ the Fourth lnte_ationoJ\nConference\non E=pevt\nSyaten_\nis Production\nand Operat/on_\nManagement,\nHilton Head Island, g.C, 1990.\n[13] Schrag, Robert, Boddy, Mark, and Carciofini,\nTemporal Reasoning,\nKR-9\xc2\xa3,\n1992.\n\n3im,\n\nHandling\n\nDisjunction\n\nin Practical\n\n[14] Smith, S.F., Ow, P.S., LcPape, C., McLaren,\nB. S., and Muacettols,\nN., Integrating\nMultiple Scheduling\nPerspectives\nto Generate Detailed Production\nPlans, Proceedings\nof t_e SME Conference\non AI in Manufacturing,\nLong Beach, CA, 1986.\n[15] Smith, S.F., Ow, P.S., Potvin, J.Y., Muscettola,\nFramework for Generating\nand Revising Factory\n\nN.,, and Matthys,\nSchedules,\n3ourna_\n\nD., An Integrated\no/the Ope_LionoJ\n\nRe,es, l,Society,\n41(6) (1990) 839-552.\n[16] Vere, S., Planning\nin Time: Windows and Durations\nfor Activities\nand Goal_,\nT_n_actio_\non Patter_\nAna_ysi_ and Machine Intelligence,\nPAMI-5\n(1983).\n[17] Wilkins,\n\nD.E.,\n\nPeactical\n\nPlan_ing,\n\nvolume\n\n4, (Morgan\n\nKaufmann,\n\nIEEE\n\n1988).\n\n[18] Zweben, M., Deale, M., and Gargan, R., Anytime\nRescheduling,\nProceeding#\no/the\nDARPA\nWorkshop\no_t l_o_aLi_e\nApproaches\nLo Pla_i_g,\nSched_di_g,\nand Control,\nSan Diego, DARPA,\n1990.\n\n258\n\n'