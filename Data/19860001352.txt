b'General Disclaimer\nOne or more of the Following Statements may affect this Document\n\nThis document has been reproduced from the best copy furnished by the\norganizational source. It is being released in the interest of making available as\nmuch information as possible.\n\nThis document may contain data, which exceeds the sheet parameters. It was\nfurnished in this condition by the organizational source and is the best copy\navailable.\n\nThis document may contain tone-on-tone or color graphs, charts and/or pictures,\nwhich have been reproduced in black and white.\n\nThis document is paginated as submitted by the original source.\n\nPortions of this document are not fully legible due to the historical nature of some\nof the material. However, it is the best reproduction available from the original\nsubmission.\n\nProduced by the NASA Center for Aerospace Information (CASI)\n\nt\ni\nLANES I Users\' Guide\n\nJoe Jordan\n\n(NASA-CR-1 - 17334) LANES 1 USI?RS\' GUIDE\n\nN86-10819\n\n(Informatics, Inc., Palo hlto, Calif.) 21 p\nHC 402/MF A31\t\nCSCL 09B\n\nUncla s\n\nG3/61 15469\n\nCONTRACT NAS2- 115 5 5\nt\nFebruary 1985\n\nf,\n\nNASA CONTRACTOR REPORT 177334\n\n4\n\nf}\n\nLANES I Users\' Guide\n\nJoe Jordan\nInformatics General Corporation\n1121 San Antonio Road\nPalo Alto, CA 94303\n\nPrepared for\nAmes Research Center\nunder Contract NAS2-11555\n\nW%SA and\nNational Aeronautics\n\nSpace Administration\nAmes Research Center\nMoffett Feld, California 94035\n\nTable of Contents\nPace\n1\n\nSection 0.\n\nIntroduction\n\nSection 1.\n\nOverview of LANES\n\n2\n\nSection 2.\n\nThe LANES Model of PODS\n\n3\n\n2.1 Load Layer\n\n3\n\n2.2 Link Layer\n\n4\n\n2.3 Physical Layer\n\n6\n\nSection 3.\n\nSetting Up LANES\n\n7\n\nSection 4.\n\nRunning LANES\n\n8\n\n4.1 Edit\n\n9\n\n4.2 Simulate\n4.3 Analyze\nSection 5.\t\n\n13\n14\n\nFurther Resources\n\niii\n\n\t\n\n15\n\nSymbols and Abbreviations\n\nA\n\nAnalyze\n\nAL\n\nArm Length\n\nAT\n\nAbsorption Time\n\nB\n\nBye (exit program)\n\nD\n\nDelay Statistics\n\nE\n\nEdit\n\nE\n\nEvent time trace\n\nE\n\nExit (the current function)\n\nFODS\n\nFiber Optic Demonstration System\n\nG\n\nGo (execute the function)\n\nGT\n\nGap Tim*\n\nHS\n\nHeader Size\n\nIP\n\nIteration Parameter\n\nIS\n\nIteration Step Size\n\nISO\n\nInternational Standards organization\n\nIT\n\nInter-arrival Time\n\nLANES\n\nLocal Area Network Extensible Simulator\n\nLC\n\nList Control parameters\n\nLM\n\nList Model parameters\n\nM\n\nMessage history\n\nMQ\n\nMaximum Queue length\n\nMS\n\nMessage Size\n\nHACK\n\nNegative ACKnowledgment\n\nNI\n\nNumber of Iterations\n\nNN\n\nNumber of Nodes\niv\n\nSymbols and Abbreviations (Continued)\n\nNR\n\nNode Range\n\nOSI\n\nOpen Systems Interconnection\n\nOV\n\nOutput Volume\n\nQ\n\nQueue statistics\n\nQD\n\nQueue-loading Delay\n\nR\n\nRead\n\nRN\n\nRandom-delay maximum on Non-negative numbers\n\nRS\n\nRandom-delay Stepsize\n\nRT\n\nRun Time\n\nS\n\nSimulate\n\nS\n\nSummary statistics\n\nSC\n\nStatistics Collection\n\nSP\n\nSpeed of Propagation\n\nSW\n\nSlot Width\n\nTR\n\nTransmission Rate\n\nTT\n\nTransmit-again Time\n\nW\n\nWrite\n\n1.\n\nv\n\nLANES I USERS\' GUIDE\nSection o. Introduction\n\n\xe2\x80\xa2\t\n\nLANES I is the first version of a Local Area Zjetwork Xxtensible\nSimulator developed at the NASA Ames Research Center. It models\nthe performance of the Fiber Optic Demonstration System (PODS)\nunder a variety of specifiable loading conditions and network\ncharacteristics which are described in this document from the\nuser\'s point of view. The following related documents may also\nbe of interest:\nLANES I Functional Specification\nLANES I Requirements Specifications\nHuman Interface\nSimulation System\nData Analysis\nLANES I Programmer\'s Maintenance Manual\nSection 1 of this User\'s Guide discusses the basics of how LANES\nis used to provide a general capability for simulation of PODS.\nSection 2 summarizes the PODS concept as modelled by LANES.\nSection 3 describes the computer resources required for running\nLANES properly. Section 4 is a detailed tutorial on the\ninteractive use of LANES.\n\n1\n\nSection 1. Overview of LANES\nThe Fiber Optic Demonstration System (PODS) computer network\nconcept can be studied with the aid of simulations done with the\nLANES program. For this purpose, a hypothetical PODS network is\ncharacterized with input "model parameters" (e.g., number of\nnodes); the simulation itself is governed by input "control\nparameters" (e.g., run-time). LANES requires an input file\nlisting all these parameter values, read in at the beginning of\nthe interactive session. The values can then be edited,\nreviewed, and even copied out to the same or another file, from\nwithin LANES; or, a complete set of new values from another\ninput file can be read in. (See Sections 2, 3, and 4 for input\nfile details.)\nwhen a simulation is executed, the results and the parameter\nvalues used are stored, along with an identifying label chosen\nbeforehand by the user, in a database. The results of any\nsimulation archived in that database can be retrieved and\ndisplayed for analysis, using LANES. (See Section 3 for further\ninformation on the database.)\nThis summarizes the operations\nThe main commands available to\nAnalyze, and Bye-(exit option)\ncommands (except Bye), options\nout the actual work. (Section\ncommands and options.)\n\nthat can be performed in LANES.\nthe user are: Edit, Simulate,\nFor each of these top-level\nexercised within its scope carry\n4 discusses the complete set of\n\n2\n\nSection 2. The IAINES Model of PODS\nLANES I models FODS on three levels, roughly corresponding to\nthe ISO-OSI (International Standards Organization - Open Systems\nInterconnection) paradigm of communication layers. There is a\nphysical layer representing the hardware characteristics and\nthe layout of the network; a data link layer representing the\naccess protocol; and a "load" layer (instead of the five highest\nlayers in the standard scheme) representing the massages in the\nsystem. The following discussion explains the way FODS is\nrepresented by LANES in terms of the input model parameters.\n2.1\nIn the simulated communications load on the network, all\nmessages have the same header size (HS). The amount of data in\neach (excluding the header) is the message size (MS), which\ndepends on the source node. Each message generated at a given\nsource node has a uniformly randomly assigned destination node\n(other than itself).\nMessages are generated according to some probability\ndistribution for "inter-arrival time" (IT), characterized by\nuser inputs. On the other end, a node which has just received\nand accepted a message is full, and does not become ready to\naccept another until the and of some "absorption time" (AT),\nalso determined for each node from a user input probability\ndistribution. If the beginning of a new message intended for a\nnode reaches that node during an absorption time, when the node\nis still dealing w\'.h the most recent message sent to it, the\nentire new messac is wasted; the node will return a NACK\n(negative acknowledgment) when the message ends. When the\nsource node gets the NACX, it schedules a retry to begin as soon\nafter the "transmit-again time" (TT) as the access protocol will\npermit transmission.\nThere is a non-negligible "queue loading delay" (OD) which every\nmessage takes to become ready for transmission after it has\nreached the head of the queue at its source node. This applies\nboth between successive transmissions by the same node, and upon\nloading into a previously empty queue.\nThe model parameters needed to characterize this layer are as\nfollows:\nHS -- header size, (in bits).\nMS -- message size, (in bits). In both the input file and\nany interactive editing, this number must be followed\nby the lower and upper limits (in that order) for a\ncontinuous range of nodes to which it is to be\nassigned. For example, the number 16384 followed by a\n3\n\n2 and then a S would\nall to make messages\nsuch sets of numbers\nnodes in the network\n\nmean that nodes 2 through 5 are\nwith size 16384 bits. Several\nmay be required to cover all the\nto be modelled.\n\nIT -- inter-arrival time, \'(in microseconds). This is the\nmean time between the loading of successive messages\nat a source node. This number must be followed by\nlower and upper node range limits and than by a\ndistribution types thus there are four numbers\nrequired for this parameter, (for each different value\nof IT in the network).\nThe distribution type is always the last, and its\nvalue must be either 1 or 2. If it is 1, then the\nfirst in that set of four numbers is to be interpreted\nas the mean of an exponential distribution. If it is\n2, then the first number represents a constant interarrival time.\nFor example, a 2000. followed by 1, 3, and 2,\nrespectively, would mean that nodes 1 through 3 all\nhave a constant inter-arrival time, fixed at 2000\nmicroseconds. A 5000. followed by 4 1 4, and 1 would\ngive node 4 (only) an exponentially distributed interarrival time with mean 5000.\nabsorption time, (in microseconds). This number must\nAT -be followed by node range limits and distribution\ntype, just as with parameter IT.\nTT -- transmit-again time, (in microseconds).\nQD -- queue loading delay, (n microseconds).\n2.2 Link laver\nThe PODS access protocol, as executed at any individual node,\ninvolves two modes of operation: random-access and controlledaccess. A node enters controlled-access mode after any\ncollision occurs; it remains there until every node has had a\nchance to transmit without contention, and then switches back to\nrandom-access mode.\nIn random-access mode, a node with data ready to send may\ntransmit anytime the trunk is "available" to it, meaning that\nthe trunk has been locally "idle" (free of signal) for an\nimmediately preceding continuous interval of at least the "gap\ntin*" (OT). When two or more nodes try to send almost\nsimultaneously, their messages collide; the resulting noise\nburst propagates to every node in the network, causing each to\n\n4\n\nswitch to controlled-access mode at the moment the collision is\nlocally "resolved". (See below.)\nEach contending sender reacts to collision detection by\nimmediately broadcasting a jamming pulse, halting its current\nmessage transmission. At any node in the network, the collision\nis not "resolved" until the trunk has been idle there for a gap\ntime following the end of the last jamming pulse, (so the trunk\nis available again). At this point the controlled-access mode\nbegins, with its timeslot sequence.\nIn this sequence, each node starts an internal counter\nincrementinq as soon as the collision is resolved there. The\nnode reaches its unique instant of opportunity to initiate\nuncontested transmission, at the exact moment when its count\nreaches its own reserved timeslot index. There is a constant\ninterval (the "slot width" SW, common to all nodes) between a\nnode\'s counter !acrements, except when transmission by any node\noccurs. In that event, the counter is suspended at the current\ncount when the channel traffic is sensed, and will resume the\ncount (starting with another increment) as soon as the trunk\nbecomes available again.\nWhen the counter marks the and of the last timeslot, (its count\nhaving just exceeded 32, the maximum allowable number of nodes\nin the network), a random delay begins, (calculated\nindependently for each node, every time it goes through\ncontrolled-access mode, as a product RS x RN). When this\ninterval expires, or is interrupted by transmission by some\nother node that had a shorter random delay, the controlledaccess mode is over; the node switches back to random-access\nmode.\nThe model parameters needed to characterize this layer are as\nfollows:\nGT -- gap time, (in microseconds).\nSW -- slot width, (in microseconds).\nRS -- random delay stepsize, (in microseconds). Each random\ndelay consists of a random number of these time steps.\nRN -- random delay maximum number of steps. This is the\nupper limit on uniformly distributed non-negative\nrandom integers which are multiplied by the fixed\ntimestep RS to determine random delays.\n\n5\nE\n\n2.3 Waical laver\nHere are the model parameters needed to characterize this layer:\nNN -- number of nodes. At present, LAMS i cannot model\nnetworks with more than 32 nodes. (However, this can\neasily be changed upon request.)\nSP -- speed of propagation, (in meters per second). This\ntells how last signals travel in the medium to be\nmodelled.\nTR -- tr"nsmission rate, (in megabits per second). This\ngives the bit rate of the information sent along the\nmediu&.\nAL -- arm length, (in meters). This is the distance from\nthe central star coupler of the network out to a\nparticular node (or to each of a subgroup of nodes).\nThis number must be followed by the lower and upper\nnode range limits, (as with parameter MS of the load\nlayer, described above).\n\n6\n\nSection 3. Setting Up LANES\nLANES runs or. a VAX 11/780 under the VXS operating system, and\nrequires the INGRES database management system (from Relational\nTechnology, Inc., in Berkeley, CA.). You must be a valid\nINGRES user, and there is a particular set of tables that must\nbe present in any database you plan to use. Certain VMS text\nfiles must also be prepared.\nSuppose you want to have a database named WHATEVER to use with\nLANES. You must first create it by typing "CREATEDB WHATEVER"\nto the VMS operating system $ prompt. Then you need to open\nthat database and create in it the tables required by LANES.\nType "INGRES WHATEVER" to VMS, and you will get the INGRES *\nprompt. To this, type "\\I (LANE33LANES.DB". This creates the\ntables and prints a list of them for you. (The list should\ninclude tables ETEMP, MTEMP, QTEMP, DTEMP, STEMP, and\nARCHVZZZZ.) Then type "\\Q1\xc2\xb0 to exit INGRES and return to the\noperating system.\nTo get the VMS text files that LANES will expect to find in your\ndirectory:\n$ COPY (LANES]FOR008.DAT FOR00S.DAT\n$ COPY [LANES]LANES.DAT LANES.DAT\nThe file POR008.DAT should be left as it standsi it is used by\nthe special simulation software in LANES. The file LANES.DAT is\na working example of the input file of parameter values,\nmentioned in Section 1. You can make others for your directory,\nbut their names must all have the extension ".DAT". The\nrecommended way to construct them is to start with LANES.DAT and\nuse the LANES editing capabilities, mentioned in Section 1. The\ndetails of how to do this are discussed in Section 4.\nThe meanings of the model parameters are to be understood in the\ncontext of the discussion of PODS in Section 2. The control\nparameters are explained in Section 4.\n\n7\n\nSection 4. Ru:uiing LANES\nWhen you have made the preparations described in Section 3, you\ncan then type "RUN (LAM]LANES" to the VNS operating system\nprompt, to start the program. You will iaediately be asked to\nenter the name of a file from which the input parameters can be\nread, or.a carriage return to denote file LAM.DAT (which is\nwhat you will have to use when first running LMES, until you\nmake alternate input files by using XANZS)0 Since all input\nfile names must have the extension ".DAT", any name you enter\nwill automatically be converted to that form; any problem in\nopeninq or reading the file thus specified will result in a\nprompt for retry with some other filename. (At th is point the\nonly way to get out is to hit CTRL-Y, aborting the program.)\nAfter successful reading of the input parameters, the program\nasks you to enter a database name (or carriage return if using\nFODOIX). Any problem in opening the database causes the program\nto automatically abort. (However, wen if the database name is\nvalid, error conditions will still result later if that database\ndoes not have the right tables, as described in Section 3. You\nmust check this yourself.)\nNext, LANES prompts you for one of the main commands: Edit (or\nE), Simulate (S), Analyse (A), or Bye (B) \t\nThe Bye command is\nused to terminate the program and return to the operating\nsystem. Each of the other three commands :evolves a choice of\nfurther options, for which you will be prompted upon entering\nthe command. The table below briefly describes this stricture.\nCommands: Options:\t\nFunctions:\n--------ww--w------ ------------------------w---w-w- w-ww------- - Edit\t\nPrepare input parameters for simulation.\n--\t\n\nChange value(s) of any parameter\nspecified by code.\nLK\t\nList all model parameters with their\ncurrent values.\nLC\t\nList all control parameters with their\ncurrent values.\nRead\t\nRead in new parameter values from\nnamed input file.\nWrite\t\nSave all current parameter values to\nnamed input file.\nExit\t\nReturn to main command level.\n----------------------------------\xe2\x80\xa2-----------------------------\n\na\n\nSimulate\t\n\nExecute simulation run(s).\nRead\t\n\nRead in new parameter values from\nnamed input file.\nWrite\t\nSpecify ID for storing simulation\nresults in database.\nGo\t\nDo the simulation.\nExit\t\nReturn to main command level.\n---------------------------------------------------------------Display analysis of simulation results.\nAnalyze\t\nSpecify ID of stored simulation\nresults to analyze.\nQueues\nPresent queue statistics from\nspecified simulation.\nDelays\nPresent delay statistics from\nspecified simulation.\nSummary\nPresent summary statistics from\nspecified simulation.\nNR\nSpecify Node Range for the Queues and\nDelays options.\nReturn to main command level.\nExit\n------- --------------------------Terminate the program.\nByr\nRead\n\nThe main commands, or the options within a chosen command, may\nbe executed in any order, but you must Exit out of one main\ncommend to get to another. Results will depend on the\ninformation you interactively supply to some options, as well as\nthe order of execution. Except for LM, LC, NR, and the codes of\nthe input parameters, any command or option you select is\nsufficiently specified by its first letter alone. Entries may\nbe in either upper or lowercase.\n4.1\n\nZ=\n\nSuppose you want to construct a new input file to be called\nNEW.DAT, starting with the parameter values found in LANES.DAT\nand changing some of them. Entering the Edit command enables\nyou to perform the necessary operations. First you can use the\nRead option to get all the input parameter values from\nLANES.DAT, (but this is really only necessary if the input file\nread in at the beginning of the session was not LANES.DAT). You\ncan look at the names, codes, and current values of all the\nmodel parameters at ones with the LM option, and all the control\nparameters with LC. Then you can specify any model or control\nparameter whose value you want to change, by entering the twoletter code for that parameter, (as just another option). The\n\n9\ns\n\nprogram will prompt you for the change, and acknowledge your\nresponse.\nWhen you have made all of your changes to parameter values in\nthis manner, you can use the Write option to copy the entire set\nof parameters, as updated, to the name NEW.DAT, thus creating a\nnew input file.\nThe following example demonstrates this process. User responses \t\nare indicated by underlining.\n\n\xe2\x80\xa2\n\nEnter main command: (Edit, Simulate, Analyze, Bye) F\n--------------------\t\nList Model parameters\t\nLM\nLC\nList Control parameters\t\nR\nRead new input parameters\t\nW\nWrite current inputs \t\nE\nExit the function\t\nEnter code for selected option or parameter: a\nEnter name of input file to be read (or ! to quit this\noption): LANES\n... Now reading file LANES.DAT ....\n\n-----------------\t\nList Model parameters\t\nList Control parameters\t\nRead new input parameters\t\nWrite current inputs\t\nExit the function\t\n\n---LM\nLC\nR\nW\nE\n\nEnter code for selected option or parameter: yH\nNN\nnumber of nodes\nSP\nspeed of propagation\nTR\ntransmission rate\n8S\nheader size\nTT\ntransmit-again time\nQD\nqueue loading delay\nSW\nslot width\nGT\ngap time\nrandom delay time step\nRS\nrandom delay number of steps RN\nAL\narm length\nMS\nmessage size\nIT\ninter-arrival time\nAT\nabsorption time\n--------------------\n\n10\n\n4.0000\n200000000.0000\n100.0000\n112.0000\n600.0000\n5.0000\n1.7000\n1.7000\n0.1000\n16.0000\n25.0000\n8000.0000\n2000.0000\n700.0000\n\n1.\n1.\n1.\n1.\n\n4.\n4.\n4.\t\n4.\t\n\n1.\t\n2.\n\nt\n\nList Model parameters\t\nList Control parameters \t\nRead new input parameters\t\nWrite current inputs\t\nExit the function\t\n\nLM\nLC\nR\nW\nE\n\nEnter code for selected option or parameter: Ir\noutput volume\nstatistics collection\nrun-time\nnumber of iterations\niteration parameter\niteration step size\nmaximum queue length\n----------------List Model parameters\nList Control parameters\nRead new input parameters\nWrite current inputs\nExit the function\n\nOV\nSC\nRT\nNI\nIP\t\nIS\nMQ\n---LM\nLC\nR\nW\nE\n\n4.0000\n1.0000\n12000.0000\n1.0000\nIT\n1000.0000\n100.0000\n\nEnter code for selected option or parameter: NN\n\t\n\t\n4.0000\nNN\nnumber of nodes\nEnter NUMERICAL value: 6\nnumber of nodes\t\n\n-----------------\t\n\nList Model parameters\t\nList Control parameters \t\nRead new input parameters\t\nWrite current inputs\t\nExit the function\t\n\nNN\n\n6.0000\n\n---LM\nLC\nR\nW\nE\n\nEnter code for selected option or parameter:\ninter-arrival time\t\ninter-arrival time\t\n\nIT\t\nIT\t\n\n2000.\t\n0.\t\n\n1.\t\n5.\t\n\n\t\n4 \t\n6.\n\n1.\n0.\n\n1.\t\n3.\t\n\n2.\t\n6.\t\n\n1.\n1.\n\nEnter 4 NUMERICAL values: 3500.3. 99 1\ninter-arrival time\t\ninter-arrival time\t\n\nIT\t\nIT\t\n\n11\n\n2000.\t\n3500.\t\n\nList Model parameters\t\nList Control parameters\t\nRead new input parameters \t\n\nLM\nLC\nR\n\nWrite current inputs \t\n\nW\n\nExit the function\t\n\nE\n\nEnter code for selected option or parameter: $\nEnter filename to save current inputs (or @ to quit this\n\noption) :\n\nLANE\n\nFile LANES.DAT alri eady exists. Want new version? (Y/N)\n\nEnter filename to save current inputs (or @ to quit this\noption): N^\n\n..\n\nNow writing to input file NEW. DAT ....\n-----------------\t\n\n----\n\nList Model parameters \t\nList Control parameters \t\nRead new input parameters\t\n\nLM\nLC\nR\n\nWrite current inputs \t\nExit the function\t\n\nW\nE\n\nEnter code for selected option or parameter:\nEnter main command: (Edit, Simulate, Analyze, Bye) ....\n.......\nAmong the points illustrated in the above scenarafo, note\nespecially the following:\n\xe2\x80\xa2 Remember that any input file name is forced to have the\nextension " . DAT". (The highest version number for that\nfile is always used.)\n\xe2\x80\xa2 Numbers can be entered with or without decimal points, and\nif it is necessary to enter more than one, they can be\nseparated by spaces, commas, and/or carriage returns.\n(Numbers should not be entered in exponential notation.)\n\xe2\x80\xa2 When you increase the number of nodes ( NN), be sure you also\nupdate the sets of values for Al, of the " node-specific"\nparameters (AL, MS, IT, and AT), so as to include the added\nnodes.\n\n12\n\n4.2 Simulate\nThe control parameters determine the following aspects of a\nsimulation:\nNI -- number of iterations. You can do a single run, or a\nseries featuring systematic variation of the value of\na selected model parameter.\nIP -- iteration parameter. This is the code specifying the\nmodel parameter whose value is to be varied, in a\nsimulation series. (It has no meaning when NI - 1.)\nThe only IPs presently supported are NN, AL, NS, IT,\nand AT. If NN is selected, then at each successive\niteration the last subgroup of nodes for each nodespecific parameter will automatically be extended to\ninclude the new node(s) added. For example, if NN =\n4, and nodes 3 through 4 have the value 50.0 for AL,\nthis same value will be assignad to nodes 5 on up, as\nthe modelled network expands.\nIS -- iteration stepsize, (in the units of the IP). This is\nthe increment in value applied to the IP at each\nsuccessive iteration in a series. (This, too, is\nmeaningless when NI - 1.) For instance, in the case\nwhere NI is 3, the IP is NN, and the current value of\nNN is 4 1 if you set IS - 2, then the values of NN for\nthe three iterations in the simulation series will be\n4, 6, and S.\nBe aware that after such a simulation series is\nexecuted, the current value of NN will have changed to\n6, which will be used (unless you change it back) in\nany further simulations! If the chosen IP is one of\nthe node-specific parameters, then the stepsize\nincrement is applied equally to all nodes at each\nsuccessive iteration in a series.\nRT -- run-time, (in microseconds). In a series, this\napplies to every iteration.\nSC -- statistics collection, (in microseconds). This is the\ntime at which to start collection of run statistics\n(on queues, delays, collisions, etc.). The lowest\nallowable value is 0.0, corresponding to the very\nbeginning of the run. In a series, this applies to\nall iterations.\nOV -- output volume. This controls the automatic display of\nsimulation results from a single run (NI - 1). The\ntype of simulation output depends as follows on the\nvalue of OV:\n\n13\n\n< 0: None\n\xe2\x80\xa2 1: Event time trace\nZ: Message history\n> 3: Both 1 and Z\nMQ -- maximum queue length. (This is not implemented at\npresent.)\nThe Read option under Simulate allows input file selection in\nthe same manner as Read under the Edit command.\nWhen you execute a simulation (using the G option), there is an\nidentifying label applied to the set of input parameters Ang to\nthe names of the database tables that store the results. You\ndetermine this label in advance, by either accepting the default\nlabel read in with the input file (which is "TEMP" in your\ninitial version of LANES.DAT) or changing it with the W option\nunder Simulate. This W option asks you for a string of no more\nthan 11 alphanumeric characters, to label the simulation. (If\nmore than 11 characters are entered, the label is truncated to\nthe first it of them.) This same label will now also apply in\nsubsequent use of the Analyze command, unless changed with the R\noption there.\nThe G option starts execution of a simulation, using the current\nvalues of all input parameters, and writing results to the\ndatabase using the label currently in effect (as read in from an\ninput file or changed with the W option). If you already have\nsimulation results archived under this label, the program asks\nwhether to overwrite them or to cancel this simulation, except\nwhen the label is "TEMP". Any stored simulation results with\nthe label "TEMP" are always overwritten!\n4.3\n\nAnalyze\n\nIf you want to look at results from some simulation identified\nwith a label different from the one currently in effect, you can\nreset the label by using the R option under Analyze. This R\noption asks for a string of no more than 11 alphanumeric\ncharacters (or truncates a longer entry to the first 11), to\nidentify archived simulation results for display and analysis.\nOptions Q, D. and S display analysis of simulation results\nstored under the label currently in effect, (which was read in\nfrom an input file, or reset more recently with either the\nSimulate W option or the Analyze R option). If there are no\ntables in the database with names keyed by that label, you will\n\n14\n\nbe notified and returned to the option list. Output provided\nwith these options is as specified in the REQ.DA document.\nThe NR option asks for lower and upper limits (in that order) on\nthe range of nodes for which the Q and D output is to be\ndisplayed.\n.\nSection 5.0 Further Resources\nIt is also possible to examine and analyze simulation results,\nwith greater power and flexibility, by directly using INGRES.\nFor more information on this or any other matter related to the\nuse of LANES I, contact Joe Jordan of Informatics General\nCorporation, or Terry Grant, NASA Ames Research Center, at\n415/694-6526 or -6533.\n\n15\n\n1. Re port No.\n\n2. Gererraneett Aamem" No.\n\n3. Mapient\'s Cenlog No.\n\nNASA CR- 177334\n\nTitle end Subtitle\n\nL Report Onto\n\nLANES I Users\' Guide\n\n4.\n\n6.\n\nNsrfermii\t\n\na\n\n\xe2\x96\xbawformirg OmWastion NOW lee.\n\nFeb-ruary 1985\n\n7. Authorlsl\n\nownintiencoda\n\nTN-84-7104-925-46\n\nJoe Jordan\n\n10. Work Unit No.\n\nK 1707\n\n0. Perform" Organintion Nerve end Address\n\nInformatics General Corporation\n1121 San Antonio Road\nPalo Alto, CA\t 94303\n\n11\t contract or Gnnt No\n\nNAS2-11555\n13. Type of Report Md Poriee Covered\n\n12. Sponewing Agcy Near end Adds.\n\nNational Aeronautics & Space Administration\nWashington, D.C.\t\n20546\nts. SUpplemintary Nona\nPoint of Contact:\t\n\nContractor\ncod.\n999-43-02\n\n14. sponsoring Agency\n\nRobert A. Carlson, MS: \t 233-10, Ames Research\nCenter, Moffett Field, CA\t 94035\n(415)\t 694-6627 or -6036\n\n16. Abstract\n\nThis document is intended for users of the Local Area Network\nExtensible Simulator, version I. \t This simulator models the\nperformance of a Fiber Optic network under a variety of loading\nand network characteristics. \t The options available\nto the user for defining the network conditions are described\nin this document.\t Computer hardware and software requirements\nare also defined.\n\nconditions\n\n17.\n\nKey Words (Suggested by Authais) )\n\n10. Oistribudon Statement\n\nLAN, Network, Simulation, Fiber\nOptics Demonstration System,\nFODS, load layer, data link\nlayer, communications\n\nStar Category 66\n\n20. Security Cleeaif. (of this pop)\n\n10. Security Clasif. (of ?Iris report)\n\nUnclassified\n\nUnclassified\n\nI\t\n\nUnclassified\n\nZ\n21. No. of Papa\n\n22. Rica\'\n\n15\n\n"For sale by the Notional Tedmieel Information Service, Springfield, Virginia 22101\na\ni\n\n'