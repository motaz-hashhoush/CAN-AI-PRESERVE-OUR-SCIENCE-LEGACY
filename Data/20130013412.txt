b'NASA/GSFC\xe2\x80\x99s Flight Software\nCore Flight System\nDavid McComas\nFlight Software Systems Branch\nNASA/Goddard Space Flight Center\n\nFlight Software Workshop\nNovember 7-9, 2012\n7-\n\nSouthwest Research Institute\nSan Antonio, Texas\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 1\n\nAgenda\n1. CFS Background\n2. Customers\n\n3. Architecture & Component Summary\n4. Example Usage\n5. Next Steps\n\n6. Conclusion\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 2\n\nCFS Background\n\xe2\x80\xa2\n\nAfter 15 years and over 10 missions of \xe2\x80\x9cclone and own\xe2\x80\x9d Goddard\xe2\x80\x99s FSW\nSystems Branch recognized the need to develop a product line approach\ntowards FSW\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nSmaller budgets and shorter schedules demanded a change\n\nCFS has been a grass roots effort with limited funding\n\xe2\x80\x93\n\nArchitecture and components have evolved in parallel with projects in an opportunistic manner\n\n\xe2\x80\x93\n\nIt was not a top-down approach in the sense that the product line was required to cover a\nspecific suite of processors, operating systems, meet performance requirements, etc.\n\xe2\x80\xa2\n\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nThe CFS lab is very limited and the CFS scope is expanded through projects\n\nIt was a methodical engineering approach and a Heritage Analysis was performed on each\ncomponent\n\nWe are at a critical strategic juncture for the CFS\n\xe2\x80\x93\n\nThe cFE went open source in the fall of 2011 and has started gaining momentum\n\n\xe2\x80\x93\n\nMost NASA centers have requested the cFE\n\n\xe2\x80\x93\n\nWithin the past two months Code 582 has been contacted by 2 commercial ventures and the\nKorean Aerospace Research Institute\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 3\n\nProduct Line Maturity\n\nCFS Timeline\nCFS Apps\navailable\nfrom IPP Office\n\ncFE available\nfrom IPP Office\n\nClone & Own\n\n2000\n\n1990\n\n2005\n\n2007\n\n2010\n\nGSFC\nConsolidates\nFSW Orgs\nSAMPEX\n(1992 launch)\n\nSDO\n(2010 launch)\n\n2011\n\n2012\n\ncFE\nOpen Source\nLRO\n(2009 launch)\n(Co-develop cFE)\n\nGPM\n(2014 launch)\n(Co-develop CFS)\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 4\n\ncFE/CFS Customers\nOrganization\n\nPurpose\n\nProducts\n\nNotes\n\nNASA / GSFC\n\nLRO Spacecraft\n\ncFE\n\nCo-developed the core Flight Executive\n\nNASA / GSFC\n\nGPM Spacecraft\n\ncFE, CFS\n\nCo-developed the Core Flight System applications\n\nNASA / GSFC\n\nMMS Spacecraft\n\ncFE, CFS\n\nPorted cFE to a Coldfire RTEMs platform\n\nNASA / GSFC\n\nATLAS Instrument\n\nOSAL, cFE\n\nInstrument using OSAL on a RAD750, RTEMs platform\nSimulator using cFE\n\nJHU / APL\n\nRBSP Spacecraft\n\ncFE\n\nUsing the cFE without table services\n\nJHU / APL\n\nSolar Probe Plus\nSpacecraft\n\ncFE, CFS?\n\nPorted cFE to SPARC/LEON3 RTEMS platform\n\nNASA / ARC\n\nLADEE Spacecraft\n\ncFE, CFS\n\nCreated Simulink Interface Layer (SIL)\n\nNASA / JPL\n\nESTO\n\ncFE, CFS\n\nNASA / JSC\n\nProject Morpheus\n\ncFE, CFS\n\nNASA / KSC, MSFC,\nGRC\n\nEvaluation\n\ncFE, CFS\n\nFraunhofer CESE\n\nResearch\n\ncFE\n\nArchitecture evaluation and testing techniques\n\nNASA/GSFC,\nJHU/APL\n\nMultiple IRADs\n\ncFE\n\nMemory Protection, Multi-Core, Virtualization\n\nClosed-loop desktop simulation system\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 5\n\ncFE Open Source Downloads\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 6\n\nCFS Architecture\n\xe2\x80\xa2\n\nCFS uses a layered architecture\n\xe2\x80\x93 Each layer \xe2\x80\x9chides\xe2\x80\x9d its implementation and technology details.\n\xe2\x80\x93 Internals of a layer can be changed -- without affecting other layers\xe2\x80\x99 internals and\ncomponents.\n\xe2\x80\x93 Enables technology infusion and evolution.\n\xe2\x80\x93 Doesn\xe2\x80\x99t dictate a product or vendor.\n\xe2\x80\x93 Provides Middleware, OS and HW platform-independence.\n\n\xe2\x80\xa2\n\nPositive feedback from two architecture reviews\n\xe2\x80\x93 In February 2012 the NASA Software Architecture Review Board (SARB)\npublished their assessment of the CFS\n\xe2\x80\xa2\n\n\xe2\x80\x9c\xe2\x80\xa6Given these qualities, cFE/CFS has the potential to become one of the dominant architecture\nframeworks for NASA flight software (and simulation and test software).\xe2\x80\x9d\n\n\xe2\x80\x93 Fraunhofer Center for Experimental Software Engineering (CESE) analyzed the\nconsistency between the documented CFS architectural rules and the CFS\nimplementation\n\xe2\x80\xa2\n\n\xe2\x80\x9cThis paper analyzed the CFS product line architecture by verifying that architectural rules related to the\nmodule architecture and the code architecture were indeed met in the implementation..\xe2\x80\x9d\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 7\n\nCFS Architecture\nDeployment\nTools\n\nApplication\nBuilder\n\nDatabase, Table\nTools, etc.\n\nApplication\nLayer\n\nGSFC\nApps\n\nCommunity\nApps\n\nApplication\nLibrary Layer\n\nGSFC\nCFS Library\n\nMini C&T\nConsole\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nTraining, Tools &\nTool APIs\n\nCommunity\nLibraries\n\ncFE\nLayer\n\nPlatform\nAbstraction\nLayer\n\nRTOS / BOOT\nLayer\n\ncFE API\nClass A\ncFE\n\ncFE\n\ncFE Tech\n\nPlatform Abstraction API\nOS\nAbstraction\nLayer\n\nReal Time OS\n\ncFE Platform X\nSupport Package\n\nBoard Support\nPackage\n\nProposed Open Community\nGSFC Products\n\nPROM Boot FSW\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nExternal Products\nPage 8\n\nRTOS / Boot Layer\n\xe2\x80\xa2\n\nPROM Boot Software\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nPROM resident software that does early initialization and bootstraps the Operating System\nProvides ground based EEPROM/Flash loader\nKeep it as simple as possible to minimize PROM changes\nCommonly used Boot Software\n\xe2\x80\xa2 RAD750 \xe2\x80\x93 BAE SUROM\n\xe2\x80\xa2 Coldfire \xe2\x80\x93 Custom GSFC developed\n\xe2\x80\xa2 LEON3 \xe2\x80\x93 uBoot \xe2\x80\x93 or Gaisler MKPROM\n\nReal Time Operating System\n\xe2\x80\xa2\n\nPre-emptive priority based multi-tasking\n\n\xe2\x80\xa2\n\nMessage Queues, Semaphores\n\n\xe2\x80\xa2\n\nInterrupt handling, Exception Handling\n\n\xe2\x80\xa2\n\nFile systems, and shell\n\n\xe2\x80\xa2\n\nSupported Real Time Operating Systems\n\xe2\x80\xa2\n\nVxWorks\n\n\xe2\x80\xa2\n\nRTEMS\n\n\xe2\x80\xa2\n\nLinux ( Not real time, but used for desktop development )\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 9\n\nPlatform Abstraction Layer - OSAL\n\xe2\x80\xa2 With the Platform Abstraction Layer, flight software such as the Core\nFlight Executive can run on multiple operating systems without\nmodification\n\xe2\x80\xa2 The Operating System Abstraction layer ( OSAL ) is a small software\nlibrary that isolates our Flight Software from the Real Time Operating\nSystem\n\xe2\x80\xa2 Current Implementations of the OSAL include:\n\xe2\x80\x93 RTEMS - Used on the RadHard Coldfire 5208, RAD750, LEON3\n\xe2\x80\x93 vxWorks - Used on RAD750\n\xe2\x80\x93 Linux / x86 - Used to run software on Desktop PC with Linux\nOS_TaskCreate\n\ntaskSpawn\n\nrtems_task_create\nrtems_task_start\n\nImplementation for\nvxWorks\n\nImplementation for\nRTEMS\n\nOS function to create\na new task\n\npthread_create\nImplementation for\nPOSIX ( linux, mac\nos X, etc.. )\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 10\n\nPlatform Abstraction Layer - PSP\n\xe2\x80\xa2\n\nPlatform Support Package (PSP)\n\xe2\x80\x93 A Platform Support Package is all of the software that is needed to adapt the\ncFE Core to a particular OS and Processor Card.\n\xe2\x80\x93 A Platform Support Package also includes all of the tool chain\xe2\x80\x99s specific\nmake rules and options\n\xe2\x80\x93 Each mission is expected to customize a Platform Support Package\n\n\xe2\x80\xa2\n\nFunctions included\n\xe2\x80\x93 Startup code\n\xe2\x80\x93 EEPROM rand Memory read, write, copy, and protection functions\n\xe2\x80\x93 Processor card reset functions\n\xe2\x80\x93 Exception handler functions\n\xe2\x80\x93 Timer functions\n\n\xe2\x80\xa2\n\nAvailable PSPs\n\xe2\x80\x93 Desktop Linux for prototyping\n\n\xe2\x80\x93 Power PC MCP750 / RAD750 \xe2\x80\x93 VxWorks 6.x\n\xe2\x80\x93 Coldfire - RTEMS\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 11\n\ncore Flight Executive (cFE)\n\xe2\x80\xa2\n\nA set of mission independent, re-usable, core flight software services and\noperating environment\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\n1.\n\nProvides standardized Application Programmer Interfaces (API)\nSupports and hosts flight software applications\nApplications can be added and removed at run-time (eases system integration and FSW\nmaintenance)\nSupports software development for on-board FSW, desktop FSW development and simulators\nSupports a variety of hardware platforms\nContains platform and mission configuration parameters that are used to tailor the cFE for a\nspecific platform and mission.\nProvides 5 core services\n\nExecutive Services\n\xe2\x80\xa2\n\nManages startup: Power-On, Processor, Application resets, Child task spawning\n\xe2\x80\xa2\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nManages a system log for capturing reset and exception information\nProvides Critical Data Store ( CDS )\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nApplication and child task record keeping\nApplications can be added and removed at run-time (eases system integration and FSW maintenance)\n\nRestores critical data after processor resets\n\nProvides ability to load shared libraries\nProvides support for device drivers\nProvides Performance Analysis support\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 12\n\ncore Flight Executive (cont)\n2.\n\nEvent Services\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\n3.\n\nSoftware Bus Services\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\n4.\n\nProvides a portable inter-application message service\nProvides runtime publish/subscribe software bus messaging interface\nReports errors detected during message transfers\nOutputs statistics packets and routing information when commanded\n\nTable Services\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\n5.\n\nProvides application interface for sending asynchronous time-stamped\ndebug/informational/error messages\nSupports type-based and frequency filtering\nProvides optional local (to processor) event log\n\nTables are named groups of parameters and cFE provides interface to manage table images\nTable Registry is populated at run-time eliminating cross-coupling of applications with flight\nexecutive at compile time\nPerforms table updates synchronously with application to ensure table data integrity\nTables can be shared between applications\nAllows non-blocking table updates in Interrupt Service Routines (ISRs)\n\nTime Services\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nProvides spacecraft time (derived from mission elapsed time MET), a spacecraft time\ncorrelation factor (STCF), and optionally, leap seconds\nProvides interface to query time\nDistributes \xe2\x80\x9c1Hz wakeup\xe2\x80\x9d and \xe2\x80\x9ctime at the tone\xe2\x80\x9d messages\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 13\n\nApplication Library Layer\n\n\xe2\x80\xa2 Useful for Mission Specific shared libraries\n\xe2\x80\x93 MMS : Interfaces to the FPGA, CFDP buffer system\n\n\xe2\x80\xa2 CFS Library provides common utility functions:\n\xe2\x80\x93 CRC computations\n\xe2\x80\x93 String manipulation\n\xe2\x80\x93 File path and name validation\n\n\xe2\x80\xa2 Missions can submit useful generic functions back to the CFS\nlibrary\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 14\n\nApplication Layer\n\xe2\x80\xa2\n\nCurrently 11 FSW applications in GSFC library (fully qualified)\n\xe2\x80\x93\n\n1.\n\nAdditional applications have been used in lab settings\n\nCFDP (CF)\n\xe2\x80\xa2\n\nImplements the CCSDS File Delivery Protocol\n\n\xe2\x80\xa2\n\nDesigned with a CFDP \xe2\x80\x9cengine\xe2\x80\x9d and an application layer\n\n\xe2\x80\xa2\n\nComplicated application that requires more work. GPM and MMS have diverged\n\n2.\n\nChecksum (CS)\n\xe2\x80\xa2\n\nPerforms checksum across static code/data regions specified by the users and reports errors\n\n\xe2\x80\xa2\n\nTypically scheduled to run on a 1Hz schedule\n\n\xe2\x80\xa2\n\nByte-limited per execution cycle to prevent CPU hogging\n\n3.\n\nData Storage (DS)\n\xe2\x80\xa2\n\nStores Software Bus messages (packets) to data storage files according to destination table\ndefinition\n\n\xe2\x80\xa2\n\nFilters packets according to packet filter table definition\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 15\n\nApplication Layer (cont)\n4. File Manager (FM)\n\xe2\x80\xa2\n\nManages onboard files\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nManages onboard directories\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\n5.\n\nCopy, Move, Rename, Delete, Close, Decompress, and Concatenate files\nproviding file information and open file listings\nCreate, delete, and providing directory listings\n\nReports free space on a per device basis\n\nHealth and Safety (HS)\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nMonitor event messages and take table-defined fro specific events\n\n\xe2\x80\xa2\n\n6.\n\nMonitor application execution and take table-defined action if hung\nManage processor watchdog\n\nHousekeeping (HK)\n\xe2\x80\xa2\n\nBuild combined telemetry messages containing data from multiple messages\n\n\xe2\x80\xa2\n\nNotify ground when expected data is not received\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 16\n\nApplication Layer (cont)\n7. Limit Checker (LC)\n\xe2\x80\xa2\n\nMonitors table-defined Watch Points (WP) \xe2\x80\x93 Compare SB message data against\nconstant threshold value\n\n\xe2\x80\xa2\n\nEvaluate table-defined Action Points (AP) \xe2\x80\x93 Logical combinations of WPs using\nReverse Polish Notation\n\xe2\x80\xa2\n\nExecute stored commands in response to tripped APs\n\n8. Memory Dwell (MD)\n\xe2\x80\xa2\n\nAugment telemetry stream by creating new packets with table-defined data points\n\n\xe2\x80\xa2\n\nData points can be any accessible memory locations\n\n9. Memory Manager (MM)\n\xe2\x80\xa2\n\nPerform memory read and writes (peek and poke) operations\n\n\xe2\x80\xa2\n\nPerform memory loads and dumps from/to files\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 17\n\nApplication Layer (cont)\n10. Scheduler (SCH)\n\xe2\x80\xa2\n\nOperates a Time Division Multiplex (TDM) schedule of applications vie SB\nmessages\n\xe2\x80\xa2\n\nSynchronized to external Major Frame (typically 1Hz signal)\n\n\xe2\x80\xa2\n\nMajor Frame split into platform configured slots with a configured number of messages\nthat can be sent for the slot\n\n11. Stored Command (SC)\n\xe2\x80\xa2\n\nExecutes preloaded command sequences at predetermined absolute or relative\ntime intervals\n\n\xe2\x80\xa2\n\nSupports Absolute and Relative time-tagged sequences\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 18\n\nCFS Component Metrics\nComponent\n\nVersion\n\nLogical Lines of Code\n\nConfiguration Parameters\n\nCore Flight Executive\n\n6.3.2\n\n12930\n\nGeneral: 17, Executive Service: 46\nEvent Service: 5, Software Bus: 29\n\nTable Service: 10, Time Service: 32\nCFDP\n\n2.2.1\n\n8559\n\n33\n\nChecksum\n\n2.2.0\n\n2873\n\n15\n\nData Storage\n\n2.3.0\n\n2429\n\n27\n\nFile Manager\n\n2.3.1\n\n1853\n\n22\n\nHealth & safety\n\n2.2.0\n\n1531\n\n45\n\nHousekeeping\n\n2.4.0\n\n575\n\n8\n\nLimit Checker\n\n2.2.1\n\n2074\n\n13\n\nMemory Dwell\n\n2.3.0\n\n1035\n\n8\n\nMemory Manager\n\n2.3.0\n\n1958\n\n25\n\nStored Commanding\n\n2.3.0\n\n2314\n\n26\n\nScheduler\n\n2.2.0\n\n1164\n\n19\n\n\xe2\x80\xa2\n\nTwo scopes of configuration parameters: mission or processor\n\n\xe2\x80\xa2\n\nConfiguration parameters span a large functional range from a simple default file\nname to a system behavioral definition like the time client/server configuration\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 19\n\nExample Mission \xe2\x80\x93 Global Precipitation\nMeasurement (GPM)\nSpacecraft\nData\nRecorder\nLimit\nChecker\n\nChecksum\n\nMemory\nManager\n\nCFDP\nFile\nTransfer\n\nMemory\nDwell\n\nData\nStorage\n\nFile\nManager\n\nRecorder\nManager\n(new)\n\nGMI\nManager\n\nDPR\nManager\n\nScheduler\n\nOnboard\nModels\n\nStored\nCommanding\n\nSoftware\nBus\n\nTime\nServices\n\nExecutive\nServices\n\nControl\nLaw\n\nEvent\nServices\n\nTable\nServices\n\nData\nIngest\nCommand\nGeneration\n\nHousekeeping\n\nState\nDetermination\n\nInter-task Message Router (SW Bus)\nHealth\n&\nSafety\n\nTime\nManager\n(new)\n\n1553 Bus\nController\n\nGPM C&DH App\n(LRO Heritage unless stated)\n\nS/C\nData\n\nInstr.\nData\n\nGPM GN&C App\nSBC\n1553\n\nDIO\n\nTime\nRegisters\n\nTelemetry\nOutput\n\nStatus\n\nSpace\nWire\n\nCmd &\nTlm\n\nS-Comm\n\nCommand\nIngest\n\nPower &\nSupport\n(new)\n\nFile\nCommander\n(new)\n\nEDAC\nMemory\nScrubber\n\nHousekeeping\nRecorder\n(new)\n\nCmd &\nTlm\n\nGPS\n\nCFS App\n\nMAC, BME,\n& PSE\n\nSBC RAM & EEPROM\nDSB\n\ncFE App\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 20\n\nExample Mission \xe2\x80\x93 Global Precipitation\nMeasurement (GPM)\n\xe2\x80\xa2\n\nNoteworthy items\n+\n+\n\nEasy rapid prototyping with heritage code that was cFE compliant\n\n+\n\nLayered architecture has allowed COTS lab to be maintained through all builds\n\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\ncFE was very reliable and stable\n\nAddition of PSP changed build infrastructure midstream\n\nLines of Code Percentages:\nSource\n\nPercentage\n\nBAE\n\n0.3\n\nEEFS\n\n1.7\n\nOSAL\n\n2.1\n\nPSP\n\n1.0\n\ncFE\n\n12.4\n\nGNC Library\n\n1.6\n\nCFS Applications\n\n23.5\n\nHeritage Clone & Own\n\n38.9\n\nNew Source\n\n18.5\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 21\n\nNext Steps\n\xe2\x80\xa2\n\nEstablish a CFS community\n\xe2\x80\x93\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nDefine and implement a CFS governance model\nExpand libraries at every layer\n\nContinue IRADs\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nMemory protection, multi-core, virtualization\n\nCreate a Starter Kit\n\xe2\x80\x93\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nMake 3 applications available with the cFE: Scheduler, UDP-based CMD & TLM apps\nSimple CMD & TLM ground system that is freely available and complies with a ground system independent\ndatabase representation\n\nCreate CFS deployment Tools\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nTools to assist with CFS evaluation, configuration, and deployment\n\nCreate Application Builder Tools\n\xe2\x80\x93\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nTranslate models into applications (Ames did this for LADEE)\nAggregate reusable code modules into an application\n\nCreate Desktop Systems\n\xe2\x80\x93\n\nClosed loop systems that run on a desktop (JSC has done this for Morpheus)\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 22\n\nNext Steps (cont)\nStarter Kit\n\nDatabase, Meta Data\n\nGround System\n\nCI\nLab\n\nSCH\n\nTO\nLab\n\nCFS\nDeployment\n\ncFE\n\nApplication\nBuilder\n\nMission\nApp\n\nDatabase, Meta Data\n\nCFS\nApps\n\nFlight System\n\nLibrary Assets\n\nLibrary Assets\n\nCore Flight System\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 23\n\nConclusion\n\xe2\x80\xa2\n\nManagement Challenges\n\xe2\x80\x93 Obtaining institutional funding for a collaborative community\n\xe2\x80\x93 Overcoming collaboration hurdles: ITAR, Software Release Processes, etc.\n\n\xe2\x80\xa2\n\nTechnical Challenges\n\xe2\x80\x93 Version control, bundling\n\xe2\x80\x93 Managing complexity: Product variants, configuration settings, etc.\n\xe2\x80\x93 New Technology Infusion\n\n\xe2\x80\xa2\n\nWe\xe2\x80\x99ve overcome challenges to get this far and we\xe2\x80\x99ll continue moving\nforward\n\n\xe2\x80\xa2\n\nWe welcome feedback!\n\xe2\x80\x93 Susie Strege, susanne.l.strege@nasa.gov, 301-286-3829\n\xe2\x80\x93 David McComas, david.c.mccomas@nasa.gov ,301-286-9038\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 24\n\nBackup Slides\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 25\n\nReferences\n\xe2\x80\xa2\n\nOpen Source\n\xe2\x80\x93 OSAL: http://osal.sf.net\n\xe2\x80\x93 cFE 6.2: http://sourceforge.net/projects/coreflightexec/files/cFE-6.1.1/\n\xe2\x80\x93 Goddard: http://opensource.gsfc.nasa.gov\n\xe2\x80\x93 NASA: http://code.nasa.gov/project/\n\xe2\x80\x93 OSAL and cFE migrating to Github in FY13\n\n\xe2\x80\xa2\n\nGoddard\xe2\x80\x99s Innovative Partnership Program Office\n\xe2\x80\x93 http:// techtransfer.gsfc.nasa.gov\n\xe2\x80\x93 cfE POC: Enidia Santiago, enidia.santiago-arce-1@nasa.gov\n\n\xe2\x80\xa2\n\nPublications\n\xe2\x80\x93 Software Architecture Review Board (SARB) Review and Assessment of Goddard\nSpace Flight Center\xe2\x80\x99s (GSFC\xe2\x80\x99s) core Flight Executive/Core Flight System\n(cFE/CFS), https://nen.nasa.gov/web/software/sarb\n\xe2\x80\x93 Verifying Architectural Design Rules of the Flight Software Product Line,\nDharmalingam Ganesan, Mikael Lindvall, Chris Ackermann Fraunhofer CESE,\nhttp://www.fc-md.umd.edu/save\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 26\n\nDevelopment Environment\n\xe2\x80\xa2 The CFS has a complete development environment that is designed to\nmanage:\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\nBuilds of images for multiple processors\nMultiple processor architectures\nMultiple operating systems\nDifferent application loads on each processor\nAs little duplication of code as possible\nEasy integration of mission patches due to Make search path\nMission-Tree\n\ncFE\nLocation of cFE\nsource\n\nOSAL\n\nPSP\n\nLocation of OSAL\nsource\n\nBuild\n\nLocation of PSP\nsource\n\nLocation of CFS\nApps source\n\nCPU1\nCPU1 Build\nProducts\n\nApps\n\nCPU2\nCPU2 Build\nProducts\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nCPU3\nCPU3 Build\nProducts\nPage 27\n\nScheduler\nInter-App Message Router (SW Bus)\n\nStored\nCommanding\n\nScheduler\n\nActivity 0\nSlot 0\nSlot 1\n\nMsg 0\n\nActivity 1\n\nStart\n\nPend on\nSB Msg\n\nMsg 1\n\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\nSlot 2\n\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\nGnd\nCmd?\n\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\nNo\n\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nActivity N-2\n\nMsg Z-2\n\nActivity N-1\n\nMsg Z-1\n\nSlot M-3\nSlot M-2\nSlot M-1\n\nHK\nReq?\n\nYes\n\nProcess\nCmd\n\nYes\n\nSend HK\nPerform\nTbl Maint\n\nNo\n\nSch\nMsg?\nNo\n\nYes\n\nProcess\nATS\n& RTS\nTables\n\nSend Error\nEvent\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 28\n\nAcronym List (1)\nAPI\nAPL\nASIST\nATS\nBC\nBT\nbps\nBps\nBSP\nC&DH\nCCSDS\nCDS\nCESE\nCFDP\ncFE\nCFS\nCM\nCMD\nCOTS\nCPST\ncPCI\nCRC\nCS\nDMA\nDS\nEEPROM\nEOF\nES\nESTO\n\nApplication Programmer Interface\nApplied Physics Lab\nAdvanced Spacecraft Integration and System Testing\nAbsolute Time Sequence\nBus Controller\nBuild Test\nbits-per seconds\nBytes-per seconds\nBoard Support Package\nCommand and Data Handling\nConsultative Committee for Space Data Systems\nCritical Data Store\nCenter for Experimental Software Engineering\nCCSDS File Delivery Protocol\nCore Flight Executive\nCore Flight Software System\nConfiguration Management\nCommand\nCommercial Off The Shelf\nTBD\nCompact PCI\nCyclic Redundancy Check\nChecksum\nDirect Memory Access\nData Storage\nElectrically Erasable Programmable Read-Only Memory\nEnd of File\nExecutive Services\nTBD\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 29\n\nAcronym List (3)\nEVS\nFDC\nFM\nFSW\nGNC\nGSFC\nGOTS\nGPM\nGPS\nHi-Fi\nHK\nHS\nHW\nHz\nI&T\nICD\nIPP\nIRAD\nITAR\nISR\nITOS\nIV&V\nJHU\nKORI\nLADEE\nLC\nLDS\nLRO\nMbps\n\nEvent Services\nFailure Detection and Correction\nFile Management, Fault Management\nFlight Software\nGuidance Navigation and Control\nGoddard Space Flight Center\nGovernment Off The Shelf\nGlobal Precipitation Measurement\nGlobal Positioning System\nHigh-Fidelity Simulation\nHousekeeping\nHealth & Safety\nHardware\nHertz\nIntegration and Test\nInterface Control Document\nInnovative Partnership Program Office\nInternal Research and Development\nInternational Traffic in Arms Regulations\nInterrupt Service Routine\nIntegration Test and Operations System\nIndependent Verification and Validation\nJohns Hopkins University\nKorean Aerospace Research Institute\nLunar Atmosphere and Dust Environment Explorer\nLimit Checker\nLocal Data Storage\nLunar Reconnaissance Orbiter\nMegabits-per seconds\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 30\n\nAcronym List (5)\nMD\nMET\nMM\nMS\nNACK\nNASA\nNESC\nNOOP\nOS\nOSAL\nPCI\nPSP\nRAM\nRM\nROM\nRT\nR/T\nRTOS\nRTS\nSARB\nS/C\nSB\nSBC\nSC\nSCH\nS-COMM\nSDO\nSDR\n\nMemory Dwell\nMission Elapsed Timer\nMemory Manager\nMemory Scrub\nNegative-acknowledgement\nNational Aeronautics Space Agency\nNASA Engineering and Safety Center\nNo Operation\nOperating System\nOperating System Abstraction Layer\nPeripheral Component Interconnect\nPlatform Support Package\nRandom-Access Memory\nRecorder Manager\nRead-Only Memory\nRemote Terminal\nReal-time\nReal-Time Operating System\nRelative Time Sequence\nSoftware Architecture Review Board\nSpacecraft\nSoftware Bus\nSingle-Board Computer\nStored Command\nScheduler\nS-Band Communication Card\nSolar Dynamic Observatory\nSpacecraft Data Recorder\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 31\n\nAcronym List (7)\n\nSIL\nSpW\nSRAM\nSSR\nSTCF\nSUROM\nSW\nTAI\nTBD\nTBL\nTLM\nTDRS\nTM\nTO\nTRMM\nUART\nUDP\nUMD\nUT\nUTC\nVCDU\nXB\nXBI\nXBS\n\nSimulink Interface Layer\nSpacewire\nStatic RAM\nSolid State Recorder\nSpacecraft Time Correlation Factor\nStart-Up Read-Only Memory\nSoftware, Spacewire\nInternational Atomic Time\nTo be determined\nTable Services\nTelemetry\nTracking Data Relay Satellite\nTime Manager\nTelemetry Output\nTropical Rainfall Measuring System\nUniversal Asynchronous Receiver/Transmitter\nUser Datagram Protocol\nUniversity of Maryland\nUnit Test\nCoordinated Universal Time\nVirtual Channel Data Unit\nExternal Bus\nInstrument 1553 External Bus\nSpacecraft 1553 External Bus\n\nGoddard Space Flight Center/Flight Software Systems Branch \xe2\x80\x93 Please do not reproduce\n\nPage 32\n\n'