b'..\n\ne\n\n.\n\nNASA Technical Memorandum 100993\n\nDATAMAP Upgrade Version 4.0\nMichael E. Watts and Shabob R. Dejpour\n\nUnclas\nG3/6 1\n\nMarch 1989\n\nNational Aeronautics and\nSpace Administration\n\n020G056\n\n__\n\n~\n\n____\n\nNASA Technical Memorandum 100993\n\nDATAMAP Upgrade Version 4.0\nMichael E. Watts, Ames Research Center, Moffett Field, California\nShabob R. Dejpour, Sterling Software, Palo Alto, California\n\nMarch 1989\n\nNASA\nNationalAeronautics and\nSpace Administration\n\nAmes Research Center\nMoffett Field, California 94035\n\nSUMMARY\nThis report details the changes made on the data analysis and management program\nDATAMAP (Data from Aeromechanics Test and Analytics - Management and Analysis Package).\nThese changes are made to Version 3.07 (released February, 1981) and are called Version 4.0.\nVersion 4.0 improvements were performed by Sterling Software under contract to NASA Ames\nResearch Center. The increased capabilities instituted in this version include the breakout of the\nsource code into modules for ease of modification, addition of a more accurate curve fit routine,\nability to handle higher frequency data, additional data analysis features, and improvements in the\nfunctionality of existing features. These modification will allow DATAMAP to be used on more\ndata sets and will make future modifications and additions easier to implement.\n1. INTRODUCTION\nThe Data from Aeromechanics Test and Analytics - Management and Analysis Package\n(DATAMAP, refs. 1 and 2) is a computer code which was developed for the purpose of\ninvestigating data from the Operational Loads Survey (OLS, ref. 3) test. The high data rates, the\nlarge number of grouped sensor arrays, and the sheer volume of the data set dictated the\ndevelopment of a program which could combine the capabilities of various parameter derivations,\nanalysis algorithms, and display codes into one package which could quickly and easily examine\nand reduce specified sets of data.\nThe original procedures for obtaining graphs of the OLS data were to submit overnight\nbatch jobs, each of which would generate a multitude of output to be sifted the next day for the\nfigures of interest. If the wrong time set of data was requested, the process would have to be\nrepeated. This process took at a minimum of one day, and often two days to obtain data. In\naddition, any plots obtained were carefully hoarded, even if it is of no value at that time, for\npossible future use. It was quickly realized that a program which could examine and analyze the\ndata interactively was required to streamline this data analysis process and DATAMAP was\nwritten to fill this need. DATAMAP has since been used with many other data bases, including\nthe Tip Aerodynamic and Acoustic Test (TAAT, ref. 4), pressure instrumented blade tests by the\nRoyal Aeronautical Establishment (RAE), scale-model tests conducted in the DNW, and air-to-air\ncombat simulations.\nThe first version of DATAMAP was written in 1978 by Bell Helicopter Textron under\ncontract to the Army Research Technology Activity (ARTA) for use on the IBM series 360\ncomputers. The program was subsequently modified to version 3.0 in 1980 (refs. 1 and 2) and\nversion 3.07 in 1981 (described in Appendix A by Richard Philbrick of Bell Helicopter Textron).\nVersion 3.07 included more analysis functions, utility features, and plotting routines, as well as\nthe versatility to handle data from other sources than just the OLS. A version of 3.0 was also\nwritten for use with the VAX series of computers (ref. 5 ) with subsequent upgrade to version\n3.07 made for both VAX and IBM computers. This report describes the upgrades from version\n3.07 to release version 4.0 that were performed by Sterling Software under contract to NASA\nAmes Research Center for the VAX computers.\n\n2. BACKGROUND\nIn general, DATAMAP allows versatile inspection, investigation, and manipulation of timebased data through a stepped command structure. A command step is comprised of four\nsubsteps: Specification, Action, Input, and Disposition. At any time, the user can abort the\ncommand step and return to the Specification stage by typing CANCEL. Data investigation\nprocesses may consist of more than one command step to achieve the final result. For example,\nto derive the normal force coefficient as a function of azimuth, the user must use three steps: 1)\n\n1\n\naverage the raw pressure data, 2) nondimensionalize pressures, and 3) integrate\nnondimensionalized pressure to obtain normal force coefficient.\nA Specification substep indicates the type of process which will be performed (i.e.\nAnalysis, Derivation, Utility, Menu, etc.). The specification substep must always be present in\na command string. However, the presence of the other substeps is not mandatory and is dictated\nby which Specification function is chosen. Table 1 (obtained from ref. 1) denotes the substeps\nrequired for each Specification type.\n\nTABLE 1. REQUIRED SUBSTEPS FOR EACH SPECIFICATION\n;PECIFICATION\n\nACTION\n\nINPUT\n\nDISPOSITION\n\nANaYzE\n\ne\n\ne\n\ne\n\nDERIVE\n\ne\n\ne\n\ne\n\nDISPLAY\n\ne\n\ne\n\nEDIT\n\ne\n\nBUILD\nSAVE\nNOEDIT\nEXECUTE\n\na\n\nMENU\nTERMINATE\nCOMMENT\n\ne\n\nSET\n\ne\ne\n\nUTILITY\ne\ne*\npresence depends on specitic action substep entered\nAction substeps indicate what action should be taken within the confines of the type of\nprocess indicated in the Specification substep. For example, for the analyze specification,\npossible actions would include: cycle averaging, digital filtering, spectral analysis, etc.\nThe input substep tells where the input data needed to perform the indicated action is\nlocated. Choices for this substep include: an individual data stream, a group of data streams\nspecified by an information file, or data previously stored in a scratch file. This substep also\nallows the selection of specified slices of data, in either time or azimuth, to be processed.\nWhen necessary, the results, of the command sequences are handled in the disposition\nsubstep. Output types include tables, plots, and saving data into a scratch file for further\nprocessing. The user can choose the independent axis units and output range for tables and\nplots. Various plotting formats are available ranging from simple one or multiple line t e\nw\ndimensional (2-D) to three-dimensional (3-D) surface plots. In addition, crosshairs can be\nplots\nimplemented to return engineering unit values for the displayed plots.\n\n2\n\n3. IMPROVEMENTS AND CHANGES\nThis section contains descriptions of the improvements to DATAMAP Version 3.07\ncontained in Version 4.0. These improvements, listed below, are each described in detail in later\nsections, with examples given where applicable. Also a command tree structure which includes\nthese improvements for DATAMAP Version 4.0 is shown in figure 1. Modifications to the user\ninterface structure are described in reference 6.\n\n1.\n\nDivision of code into modules.\n\n2.\n\nCubic spline fit used for integrations.\n\n3.\n\nChoice of decades when using log scale on x axis.\n\n4.\n\nIncrease number of data points in average curve fit from a constant 256 to a user\noption of up to 2048.\n\n5.\n\nAddition of a fourth scratch file.\n\n6.\n\nImprovement in program operation when Top, Bottom, or Both are specified.\n\n7.\n\nAbility to delete spikes from data\n\n8.\n\nAddition of aerodynamic forces and pitching moment derivation.\n\n9.\n\nAbility to use separate scratch files as inputs for top and bottom surfaces in force\nand force coefficient integrations.\n\n10. Ability to average the contents of two scratch files together.\n11. Addition of a group within info file structure to handle tapered planform geometry.\n3.1 Separation Of Source Code Into Modules\nThe source code for DATAMAP has been broken into individual module files to ease\nchanging, compiling and linking of the program. There are 274 FORTRAN files (designated by\n.FOR), and 50 common files (designated by .CMN) contained in this module set. These files are\nlisted in appendix B with a brief description of their purpose.\n\n3.2 Cubic Spline Fit Integration\nThe original trapezoidal integration routine used by DATAMAP to determine blade\naerodynamic loading, has been replaced by a cubic spline fit integration. The spline is an Akima\nspline method coded at RAE and modified to increase its computational speed by ARTA. The\nspline integration procedure provides a higher accuracy than does the trapezoidal method. This\nincrease in accuracy is especially necessary in the uneven integration environment inherent to\nblade surface pressure measurements. A typical effect of the spline technique on aerodynamic\ncoefficients is shown in Table 2.\n\n3\n\nTABLE 2. EFFECTS OF SPLINE INTEGRATION\n\nI\nCn\ncm\n\nTramzoidal\n0.6100\n-0.0385\n\nSDline\n0.6350\n-0.0496\n\n1\n\n3.3 Choice of Decades for Log X Axis Option\nPreviously when using the log option on the x axis, the user had limited control of the\ndecades plotted. With the improved option, the user can choose not only the number of decades\nto plot but also the starting decade. The choice is contained in the disposition substep and has the\nform:\n\n.../...LOG, (# Decades - Default = 4), (Initial Decade, Default = 1)/\nFigure 2 gives an example of a graph using the old log options and the same graph using the new\nlog options.\n3.4 Increase Number of Data Points In Averaged Cycle\nThe originalcycle average command used in version 3.07 of DATAMAP defaulted to a\nrepresentative cycle containing 256 equally spaced data points. Because of the l n between\nik\nazimuth and time, this number yielded an upper frequency ceiling based on rotor speed. This\nupper frequency limit was acceptable for the TAAT and OLS data bases where the maximum\nfrequency for a transducer output was 400 Hertz. However, the use of DATAMAP with tests\nhaving higher frequency resolution necessitated increasing this average number. Version 4.0\nincorporates the ability to choose the number of points in the averaged cycle to be 256 to 2048,\ninclusive. Use of these rates are possible for any data, independent of the raw data sampling\nrate. However, choosing a higher number of points per cycle than is available in the raw data\ndoes not add additional resolution, as shown in figure 3. Conversely, use of a lower number of\npoints in the average than is available will effectively filter the data and reduce the data resolution.\nThe command to perform this average is:\nANAWAVERAGE (no. of data values to represent a cycle - Default = 256)/\n\n...\n\nThe initial default number is 256 but once the value is changed within a session, the new value is\nthe default for that session. If a larger number of samples per cycle is requested in the average\nthan is available in the raw data, the warning message shown below will be given and processing\nat the requested samples per cycle will be completed.\n**WARNING\n\n** NUMBER OF RAW DATA POINTS FOR ONE CYCLE\n** IS LESS THAN REQUESTED POINTS.\n** PROCESS WILL BE COMPLETED!\n3.5 Addition of a Fourth Scratch File\nA fourth scratch file, designated SCF4, has been added to increase DATAMAP\'s ability to\nhandle complex multiple derivation and analysis logic chains. This scratch file is handled in the\nsame way and has the same capabilities as the three original scratch files (SCF1, SCF2, and\nSCF3).\n\n4\n\n3.6 Improvement in Program Operation of Top, Bottom, or Both Specification\nPreviously, when the user saved the bottom position from an information group into a\nscratch file, the information was placed into the top of the scratch fie. This improvement will\nplace the information in the specified top or bottom location in the scratch file. The user must\nthen specify top or bottom when using that data in the input step. The purpose of this\nimprovement is to simplify the dual input processing algorithm and to ensure proper plot\nlabeling.\n\n3.7 Spike Deletion\nThe spike deletion option has been added to DATAMAP because test data can contain\ncontamination caused by instrumentation or the digitization process. If this contamination is left\nuncorrected, false results can be obtained when performing derivations or analysis. One method\nof correcting for this contamination is fitration. However, to keep the full frequency content of\nthe data, another method of eliminating spurious data was developed. This spike option\ninterpolates a straight line between two selected time points which are specified by the user. The\nspike command takes the form:\nANAL/SPIKE, (x spike interval start time), (x spike interval end time), (all or\nRow/Col #)/.\n\n..\n\nThe (l or ROW/COL #) input specifies which positions to affect from the specified input\nal\nsubstep. For example\nANAIJSPIKE, 0.1,0.2, ALL / SCF1, ALL, ALL, 3/\nwill replace data from 0.1 to 0.2 sec from all rows of column 3 of the data stored in scratch file\n1. Thecommand\n\nANAWSPIKE, 0.1, 0.2,2 / SCF1, ALL, ALL, 3/\nwill remove a spike from 0.1 to 0.2 seconds from column 2 of row 3 of scratch file 1.\nConversely, the command\nANAIJSPIKE, 0.1, 0.2, 2 / SCF1, ALL, 3, ALL/\nwill remove a spike from 0.1 to 0.2 sec from row 2 of column 3 of scratch file 1. For example,\nfigure 4 shows a time history before and after the spike command is performed. This command\naffects only the data stored in the scratch files, not the data stored in the master file.\n3.8 Force and Moment Derivation\nAn option to derive the normal and chordwise forces as well as the pitching moment as\nunits of force has been added. The commands for these options are:\n\n...\n\nDElUVE/NFOR, (chord length value, in inches - no default)/\n\nDERIVE/CFOR, (chord length value, in inches - no default), (Trailing edge\nthickness, % - Default=l) /...\n\n...\n\nDERIVEEMOM, (chord length value, in inches - no default)/\n\n5\n\nI\n\nCaution must be taken when using the CFOR resuILs\nsince the actual drag of the airfoil will\ncontain components, such as skin friction drag, which are not taken into account using numerical\nintegration of blade surface pressures.\n3.9 Separate Scratch Files for Top and Bottom Surface Inputs\n\nThis option allows the user to integrate using the top surface data stored in one scratch file\nand the bottom surface data stored in a separate scratch file. This option was added as an adjunct\nto the SPIKE option with the purpose of keeping the results of integration as unaltered as\npossible. If the one surface contains spikes but the other surface does not, then it is best to keep\nthe clean surface in its original form before integrating. The procedure for using this option is\n(assuming that the spikes are on the top surface):\n1. Perform the spike routine on the top surface and save the pressures to be integrated in\nthe top of a scratch file (i.e. SCF1).\n\nI\n\n2. Save the bottom surface pressures ready to be integrated in the bottom of a different\nscratch file (i.e. SCF2).\n\n3. DERI/NFOR 28.3/DUAL, (Top, i.e. SCF!), (Bottom, i.e. SCF2),\n\n...\n\nThe results can be disposed in the same manner as any normal integration results would be.\n\nCare must be taken in setting up the scratch files as both scratch files must contain the same\n\namount of data averaged with the same step interval or an error will be issued.\nFigure 5 shows the output made possible by the addition of a fourth scratch file, the ability\nto delete spikes, and force derivation using dual inputs. The first curve of this figure shows the\nnormal force derivation without despiking and the second curve shows the effect of the\nelimination of the spikes on the top surface transducers. The command sequence which\ngenerated this figure is the following:\n\nI\n\nANALYZE/AVERAGE/GROl.JP S2PA TOP 2 ALL 2156 0 2/KEEP SCF1/\nANALYZE/SPIKE .219.230 3/SCF1 ALL ALL ALL TOPKEEP SCFU\nANALYZE/SPIKE .219.230 4/SCF2 ALL ALL ALL TOPKEEP SCF3/\nANALYZE/SPIKE .219.230 6/SCF3 ALL ALL ALL TOPKEEP SCFU\nANALYZE/SPIKE .219.230 7/SCF2 ALL ALL ALL TOPKEEP SCF3/\nANALYZE/SPIKE ,219.230 9/SCF3 ALL ALL ALL TOPKEEP SCFU\nANALYZE/SPIKE .219.230 11/SCF2 ALL ALL ALL TOPKEEP SCF3/\nANALYZE/SPIKE .219.230 13/SCF3 ALL ALL ALL TOPKEEP SCF2/\nANALYZE/SPIKE .195.204 ALL/SCF2 ALL ALL ALL TOPKEEP SCF3/\nANALYZE/AVERAGE/GROUP S2PA BOTT 2 ALL 2156 0 2/ KEEP SCF4/\nDERIVE/NFOR 28.3DUAL SCF3 SCF4 ALL ALL ALLKEEP SCFU\nANALYZE/AVERAGE/GROUP S2PA BOTH 2 ALL 2156 0 2/KEEP SCF4/\nDERIVEWOR 28.3/SCF4/KEEP SCF3/\nCOMMENT/NORMAL FORCE DERIVATION WITH SPIKES/\nDISPLAY/SCF3 220 320 MRA ALL/LPLOT MRAZ/\nCOMMENT/"TRMAL FORCE DERIVATION WITH SPIKES DELETED/\nDISPLAY/SCF2 220 320 MRAZ ALWAPLO MRAU\n\n6\n\n3.10 Average Two Scratch Files\nTo further enhance DATAMAPs ability to handle larger sample rates and longer time\nhistories of data, the ability to cycle average two scratch files together has been incorporated into\nVersion 4.0. The results of this command yield a representative cycle, as does the normal cycle\naverage command, but effectively places no limit to the amount of data which can be averaged.\nAn offshoot of this capability is that one cycle of a time history can be weighted in the average by\nusing it several times. The constraints on this command are that the data in the two scratch files\nbeing averaged must contain the same number of samples and have been cycle averaged\nthemselves. The command step to use this option is:\nANAL/AVRCYCL/(lst input: SCF1, SCF2, SCF3, SCF4 - no default), (2nd input: SCF1,\nSCF2, SCF3, SCF4 - no default)\n\n...\n\n3.1 1 Addition of Information File Group Type Which will Handle Tapered Planforms\nTo handle tapered planforms an additional group was added to those available in the info\nfile. This group is designated by the first two letters in the group name being S3. The chord\ndistribution information is contained in the CHORD DISTRIBUTION section which follows the\ncolumn section (in this case FRACI" OF RADIUS), as shown in figure 6. The units of the\ndistribution are the nondimensional ratio C/CBASE, where CBASE is the chord at the root radial\nstation input during the DEWforce commands. There is one C/CBASE number for each radial\nstation indicated in the column section.\nThe value obtained for forces and moments from the integration is multiplied by (C/CBASE\n\n* CBASE) to get the actual value corresponding to the chord length at a particular radial location.\n4. GENERAL SYSTEM CONSIDERATIONS\nAn effort has been made to enable DATAMAP to be installed on another computer system\nas simply as possible. However, certain installation and system dependent coding was required\nto meet the requirements for the NASA Ames VAX 11/785 computer system. Such code is\nalways flagged in the source listings and a corresponding process valid for the local installation\ncan be inserted. DATAMAP is written in VAX-11 FORTRAN which is a superset of PDP-11\nFORTRAN IV Plus. Appendix C lists the present hardware configurations presently supported\nby DATAMAP Version 4.0.\n5. ROUTINES NOT SUPPLIED WITH DATAMAP SOURCES\n\nThe data sets not supplied with DATAMAP that are required for linking are the Tektronix\nplotting package PLOT10, and the system FORTRAN library, FORTLIB. These data set names\nare only for reference as the actual names may be different depending upon the individual\ncomputer installation.\n\n6. SETTING UP DATAMAP\nA single command file called IMAGE must be run to initialize the DATAMAP system.\nWhen this step is performed, DATAMAP will be ready to run if using the master file supplied\nwith the source code. If not using the master file supplied with the source code, DATAMAINT\nmust fmt be run to create a new master Ne. The directions for running DATAMAINT are\ncontained in the original DATAMAP Users Manual, reference 1, and have not changed as of this\nrelease.\n\n7\n\nREFERENCES\n1. Philbrick, Richard B., \xe2\x80\x9cThe Data from Aeromechanics Test and Analytics - Management and\nAnalysis Package (DATAMAP) Volume I - Users Manual\xe2\x80\x9d, USAAVRADCOM-TR-80-D30A, December 1980\n\n2. Philbrick, Richard B., \xe2\x80\x9cThe Data from Aeromechanics Test and Analytics - Management and\nAnalysis Package (DATAMAP) Volume II - Systems Manual\xe2\x80\x9d, USAAVRADCOM-TR-80D-30B, December 1980\n\n3. Shockey, G. A., Williamson J. W., and Cox, C. R., \xe2\x80\x9cAH-1G Helicopter Aerodynamic and\nStructural Loads Survey\xe2\x80\x9d, USAAMRD-TR-7639, Bell Helicopter Textron, Feb. 1977\n4. Cross, Jeffery L., and Watts, Michael E., \xe2\x80\x9cTip Aerodynamic and Acoustics Test - a Report and\nData Survey\xe2\x80\x9d, NASA-RP-1179, Jan. 1988\n\n5. Philbrick, R. B.,\xe2\x80\x9dDATAMAP Installation at NASA Ames Research Center 1980\xe2\x80\x9d, Bell\nHelicopter Textron 299-099-021, Oct. 1980\n\n6. Dejpour, Shabob, \xe2\x80\x9cDATAMAP Systems Manual Supplement\xe2\x80\x9d, Sterling Federal Systems TN\n10, Aug. 1987\n\n8\n\nAppendix A\nDATAMAP Version 3.07 Processing Program Improvements\nDick Philbrick\nBell Helicopter Textron\nFebruary 12,1981\n1. INTRODUCTION\nBell Helicopter Textron (BHT) has made several improvements to the DATAMAP\nProcessing Program for Contract DAAK51-79-C-0015 and for certain local BHT requirements.\nThe improved version is called DATAMAP Version 3.07. This document is a temporary\nsupplement to USAAVRADCOMTR 80-D-30A, the DATAMAP User\'s Manual, for Version 3.00.\nThis supplement assumes the reader has read the DATAMAP User\'s Manual.\nThese are the improvements to DATAMAP that this document covers:\n\n- DOUBLED PROGRAM-MEMORY PROCESSING AREA\n-\n\nNUMERICINTEGRATION\n\n- NUMERIC DIFFERENTIATION\n-\n\nTRANSITIONAL BU\'ITERWORTH-BESSEL FILTERING OPTION\n\n- LINEAR ADJUSTMENT TO INPUT DATA\n- LOCAL MACH NUMBER DERIVATION\n- CROSS PLOT (i.e., any variable versus any other variable with a third variable\nsuch as azimuth relating the two)\n\n- USER-ENTERED LABELS FOR USER-ENTERED COLUMN POSITION\n\nSCALE\n\n- "SETBELL/" COMMAND AND "SET/WHISTLE/" COMMAND (to ring\nTektronix bell when a command step is completed)\n\n- MAXIMUM NUMBER OF COMMAND SEQUENCE EXECUTION\nARGUMENTS EXPANDED TO TWENTY\n- PROGRAMMED LOOPING IN COMMAND SEQUENCES\n-\n\nOPERATING INSTALLATIONLABEL IS SET TO A DEFAULT AND CAN BE\nCHANGED BY THE USER ( e.g., "U.S. ARMY ATE\' or "NASA AMES")\n\n- UTILITY/PAUSE/ COMMAND AVAILABLE\n- TIME INSTANT VALUES RETRIEVED FROM A SCRATCH FTLE ARE\nINTERPOLATED\n\n9\n\n-\n\nSUBINTERVALS OF SCRATCH FILE DATA MAY BE RETRIEVED\n\n- FLAPPING COMPONENT DERIVATION AND CYCLIC AND COLLECTIVE\nFEATHERING DERIVATIONS\n-\n\nINFO FILE CALIBRATION TABLE FOR AIRSPEED DERIVATION\n\n- PLOT DATA POINT REPRESENTATION SETTINGS\n2. INCREASED PROGRAM-MEMORY PROCESSING AREA\nThe Processing Program can now read and process time histories that are twice as long as the\nhistones that Version 3.00 could process. The length of the input history that can be processed\ndeDends u w n the sDecific Drocess and the number of double-row elements that are processed.\nHAare tie specifii limitifor input time histories:\n\nONE DOUBLE-ROW\n\nTWO DOUBLE-ROW\n\nDISPLAY/. . .\nANAL/ACOUSTIC . . .\nANAWSPECTRUM . . .\n\n8,192\n16,384\n16,384\n\n8,192\n8,192\n8,192\n\nANALDAMPING . . .\nANAWAVERAGE , . .\nANALMMAX\nANAL/STATISTICS\'.\'.\'.\nANAIJAUTO DENSITY..\nANWAUTO CORREILATION\nANALKROSS CORREL . . .\nANALKROSS DENSITY.. .\nANALJRESPONSE . . .\nANAL/COHERENCE . . .\nANAL/INTEGRATE . . .\nANALDIFFERENTIATE..\nANAL/ADJUST . . .\nANALKOMBINE . . .\nInterval retrieve from\nscratch file\n\n16.384\n\n8,192\n\n16;384\n16,384\n16,384\n16,384\n8,192\n8,192\n4,096\n8,192\n8,192\n8,192\n8,192\n8.192\n8,192\n8,192\n\n8,192\n8,192\n8,192\n8,192\n4,096\n4,096\n2,048\n4,096\n4,096\n4,096\n8,192\n8,192\n8,192\n\n2,048\n\n2,048\n\nPROCESS\n\nANAL/HARMONIC . . .\n\n-\n\nLimits for the derivations generally depend on more factors than the number of input points. These\nfactors include number of rotor cycles processed and the attached parameters that are needed for a\nderivation. Generally, derivations are for a few rotor cycles and should not incur a space limit.\nThe listed limits are for time history length and do not apply to the total number of data samples\nthat are processed in one step. The limits are valid for each input history for multiple row and\ncolumn processing, but the scratch file size may limit the total amount of data that can be processed\nin one command. For example, it is permissible to integrate 8,192 points at a time and multiple\nrow and column elements can be integrated with 8,192 input points for each row/column\nintersection. However, if there are 200 row/column intersections with 8192 points each and the\noutput is to a scratch file, then the scratch file will overflow.\n\n10\n\n3. NUMERIC INTEGRATION\nNumerical integration is available as a new analysis option. It uses the Simpson\'s Rule method\nwith some modification. The specific method is from the IBM Scientific Subroutine Package\nroutine "QSF". After the integration, the program will add a linear function to the integrated record\nso that the start and end values match start and end values entered by the user. Alternatively, the\nuser can enter only the start value, and the program will add that start value to the integrated record.\nThe default start value is zero.\nAlthough the user-interface HELP message indicates that there are three integration methods\navailable (Simpson\'s, trapezoidal and cubic spline), in fact when the user selects any other method\nthan Simpson\'s, the program will write an error message.\nHere is the form of the Action Substep for integration:\nANAL/INTEG (Initial Value)\n\n{\n\nUNSPECIFIED\n(End Value)\n\n}{\n\nSIMPSONS\nTRAPEZOIDAL /...\nCUBIC SPLINE}\n\nThe default initial value is zero, the default end value is UNSPECIFIED, and the default method is\nSIMPSONS.\n4. NUMERIC DIFFERENTIATION\n\nDATAMAP performs differentiation using a differentiating filter. "DIGITAL SIGNAL\nANALYSIS" by Samuel D. Sterns describes this method that uses a non-recursive digital filter.\nThe user may specify the number of filter coefficients with allowed numbers from 1 to 30. With\none coefficient, the filter is the same as the central difference method. The default of ten\ncoefficients is generally sufficient.\nFollowing is the Action Substep for the differentiationcommand.\nANAL/DIFFERENTIATE (Number of Coefficients)/ . . .\nThe user should be very cautious with numeric differentiation. High-frequency noise\n\ncomponents in the input data will cause huge errors in the computed differential record. Frequency\nmust be judged relative to the sampling rate. Frequency components greater than one-sixth the\nsampling rate (Le., number of samples per second or hertz) are considered high. Low pass digital\nfiltering of the input record may reduce the high-frequencynoise problem, but the user must ensure\nthat no frequency component of interest is attenuated significantly.\n5 . NEW DIGITAL FILTERING OPTION\n\nDATAMAP now has a Transitional Butterwoth-Bessel filter in addition to the Chebyshev filter.\nThis filter is of use to reduce the problem of filter "ring" near input data transients such as step\nfunctions and impulse functions. However, the disadvantage of this filter is to smooth the sharp\n"rolloff\' characteristics that are considered desirable for a low or band-pass digital filter. The\ntransitional factor, with allowed values between zero and one, governs the degree to which the\n"ring" is reduced and the rolloff is smoothed. A value of 0.0 implies a pure Butterwoth filter with\nconsiderablering and very sharp rolloff from the pass band. Alternatively, 1.0 means a pure\nBessel filter with no ring and smooth, slow rolloff from the pass band.\n\n11\n\nFor this filter option, the user may still specify the number of poles in the filter, and the upper\nand lower break frequencies. In addition, the user may select a forward-only, one-pass filtering\noperation instead of the normal twepass operation that is required with the Chebyshev filter. A\none-pass operation will distort the phase of the output record.\nHere is the new Input Substep for digital filtering:\nCHJZBYSHEV/...\nANAL/FILTER (Upper Break) (LowerBreak) (#Poles)\nBUITERWORlHBESSEL VransitionFactor)\n\nThe ONE and TWO keywords for the Butterwoth-Bessel option control the number of passes for\nthe filter. CHEBYSHEV is the default filter type so that the user need not change existing\ncommands if he does not want to use the Butterworth-Bessel option. The default transition factor\nis .5 and the default number of passes is TWO.\n\n6 . LINEAR ADJUSTMENT TO INPUT DATA\nWith the linear adjustment capability, the user can add a linear function of time to input data\nand/or correct the calibration of measured input data. Thus, the user could subtract an undesired\ntrend in an input record, or he could correct a calibration that disagreed with known physical\ninformation about the data ( e g , if an accelerometer at rest and oriented vertically did not measure\none g). Naturally, the user must exercise great care to report any adjustments to data that are\npresented.\nFollowing is the Action Substep for the linear adjustment operation:\n\nANWADJUST (Add Constant) (Time Factor)\nwhereif\n\nI\n\n(Input Factor)\n\n\'/.\n\n..\n\ny(t) = a + bt + cx(t)\n\nx(t) is the original input and y(t) is the adjusted record and then\n\na = (Add Constant)\nb = (Time Factor)\nc = (Input Factor)\n\nThe default (Add Constant) is 0.0, the default (Time Factor) is 0.0, and the default (Input Factor)\nis UNSPECIFIED which means 1.0.\n\n7. LOCAL MACH NUMBER DERIVATION\nDATAMAP computes local mach number from six input numbers:\n\n- Blade azimuth in degrees\n- Rotor speed in RPM\n12\n\nT\n\n-\n\nHelicopter true airspeed in knots\n\n- Rotor tip path plane angle in degrees\n- Outside air temperature in degrees Celsius\n- Blade radial station in inches\nFor each azimuth position, the program first computes the speed of sound for the outside air\ntemperature. Then it computes the magnitude of the blade station velocity vector relative to the air\nmass and divides that number by the speed of sound. The program assumes that the helicopter\nmotion is in the plane of the zero degree rotor azimuth position and the perpendicular to the tip path\nplane (Le., it assumes no sideward flight). The program does not consider rotor motions other\nthan the basic rotor speed and the user must enter the tip path plane angle as a constant.\nHere is the Action Substep for the Mach Number derivation:\nDERI/MACH (Rotor Radius) n i p Plane Angle)\n\n(\n\n1..\n.\n\nThe default (Rotor Radius) is the same as the default for the CP derivation. The default (Tip\nPlane Angle) is 0.0 degrees and the default outside air temperature is the same as the default for\nthis entry in the several other derivations that require temperature.\nThe input must specify blade station as column position in percent of tip radius. GROUP input\nfrom the info file or scratch f i e input could satisfy this requirement. This derivation ignores and\ndiscards time history input and only uses the accompanying blade station and azimuth data. For\nexample, suppose that scratch file SCF3 contained normal force coefficient, Cn, data for several\nblade stations and one rotor revolution. Then the command\nDERI/MACH 264 0 CALC/SCF3/KEEP SCF1/\nwill produce Mach Number values on scratch file SCFl that correspond station by station and\nazimuth position by azimuth position to the CN values in SCF3. These values can be compared\nwith ANAL/COMBINE/ . ./XPLOT . . ./ command\n(see Section 8.).\n\n8 . CROSS PLOT\nWith the cross plot, the user can request a plot of one dependent variable versus another\ndependent variable as related by an independent variable for both functions. For example, lift can\nbe plotted against drag as related by azimuth. A cross plot is like a single or multiple curve X-Y\nplot, but loops can occur on the plot so that there can be more than one vertical - axis value plotted\nfor a particular horizontal axis value.\nTo obtain a cross plot, the user must specify the COMBINE analysis:\nANAL/COMBINE/\n\n...\n\nCOMBINE is not really an analysis, but instead is simply a combining of two input functions,\nso that the program can plot them together. The input substep must specify two scratch files as\ninput.\n\n13\n\n{=;;}{\nE}\n\nANAuCOMBINE/ SCF2\n\n...\n\nand the balance of the input Substep is the same as the DISPLAY input Substep after a scratch file\nis specified. The Disposition Substep has three initial options, XPLOT, XLPLOT and APLOT\nwhere XPLOT means create a new cross plot, XLPLOT means create a new special annotation\ncross plot and APLOT means add a curve to an existing cross plot. The subsequent Disposition\nSubstep entries have the same options as those that follow the MPLOT, LPLOT and APLOT\nentries for the DISPLAY command, However, the meaning of the second substep entry is slightly\ndifferent. The independent variable is the variable that relates the two variables that are plotted.\nWhen the independent variable is time related, then the curve is annotated with special centered\ncharacters at "nice number" intervals of the independent variable. When the independent variable is\nrow or column position, the special characters are drawn at the data points.\nDATAMAP draws the cross plot with the two dependent-variable function labels included in\nthe axis annotations. It draws the label for the independent variable and the spacing of the centered\ncharacter annotation under the plot. The proportion of the cross plot is square and thus slightly\ndifferent from the other X-Y plots so that the expanded vertical axis label will fit. Figure A1\nshows a typical cross plot with azimuth used as the associating independent variable.\nAs the APLOT disposition option indicates, DATAMAP will draw a cross plot with multiple\ncurves. No more than eight curves may be drawn on a cross plot. DATAMAP draws each curve\nwith a different dash-dot pattern and/or a different special centered character. Figure A2 shows an\nannotated cross plot (XLPLOT) with two curves showing behavior at different airspeeds. For\nXLPOT output, only one curve may be drawn on a plot for each command step and no more than\ntwo or three curves can be annotated at the bottom of a plot.\n\n9. USER-SPECIFIED LABELS FOR COLUMN POSITION SCALE\nWhen the user makes multiple ADD\'Sto a scratch file to create several columns, he may enter\nthe column positions in the Disposition Substep. Under Version 3.07, he may also enter a label\nfor the column position axis. He must enter this label in the command to save the first column on\nthe scratch file (i.e., in the KEEP step). Here is the form of the Disposition Substep:\n\n.../KEEP\n\n{\n\nz}\n\nSCF2 (Column Position) (Column Position Label)/\n\nThis label may contain as many as 16 characters and should be enclosed in single quotes. If\nthis label is eight characters or less, both the short and long column position labels will be set to\nthis string. DATAMAP uses the short label for curve annotation on multiple curve plots.\n\n10. "SETIBELW" AND "SET/WHISTLE/" COMMANDS\nDATAMAP provides the BELL and Whistle options so that the user can set the program to ring\nthe Tektronix bell and attract his attention when the program completes a command step.\nSometimes, command steps require a great deal of computer CPU time or the computer response is\nslow for interactive operation. If the user wishes to direct his attention elsewhere during command\nexecution, he can set the BELL or WHISTLE mode to ring the Tektronix bell when each step is\ncomplete. BELL mode means that the Tektronix bell is rung once when the program completes a\n\n14\n\ncommand steps. WHISTLE mode means that the Tektronix bell is rung several times in quick\nsuccession when a step is complete. Here are the bell and whistle setting commands:\nBELL\nWHISTLE\nNOWHISTLE\nNOBELL unsets the BELL mode and NOWHISTLE unsets the WHISTLE mode. Do not set the\nBELL or WHISTLE mode in the batch or interactive (i.e., other than interactive graphics) modes.\n11. COMMAND SEQUENCE EXECUTION ARGUMENTS\nA command sequence block may use as many as twenty execution arguments numbered % 1\nthrough %20. An EXECUTE command may include as many a twenty "%" arguments. For\nexample:\nEXECUTE/ABCD %DO01 %DO10 %.5 %O %50 %.15 %610 %O %.26 %611\n%200 %.05 %612 %400 %.24 %613 %600 %.13 %614 %800/\n12. PROGRAMMED LOOPING IN COMMAND SEQUENCES\n\nil\nDATAMAP wl now recognize five special procedural statements within a command sequence. A\nprocedural statement must appear on one line and must have an asterisk in column one. The syntax\nfor the five kinds of procedural statementsis:\n*LABEL (Address)\n*GOTO (Address)\n*IF (%Parm# or Const) (Rel) (%Pam-# or Const) GOT0 (Address)\n*ADD (%Parm# or Const TO (%Pam#)\n*SET (%Pam#) TO (%Pam# or Const)\n\nThe Parentheses above enclose short descriptions for appropriate entries: they do not appear in\nthe actual procedural statements. Following are the meanings for each of the short descriptions.\n(Address) = Nonnumeric address label of as many as four characters\n(extra characters are ignored)\n(%Pam#) = A parameter number ( numbers 1 through 20 allowed) preceded by the\n"%" character (e.g., %15 )\n(Const) = A string or numeric entry as restricted for normal DATAMAP entries.\nString constants are only allowed in the "SET" statement.\n= One of the five relationships:\nGT\nGE\n\nEQ\nLE\nLT\n\n= GreaterThan\n= Greater Than or Equal To\n= EqualTo\n= LessThanorEqualTo\n\n= LessThan\n\n15\n\nThe LABEL statement marks a location in the sequence for the GOTO (unconditional jump)\nand the IF (conditionaljump) statements. When the program reads a GOTO statement o an IF\nr\nstatement with the specified condition satisfied, it searches for a label statement with the indicated\naddress. If it finds this address, it then reads the line following the corresponding LABEL\nstatement. If it cannot find the address, it stops executing the command sequence.\nFollowing is an example of a command sequence with looping.\n*SET %20TO %1\n\n* LABEL LOO1\n\nANAL/AVER/GROUP S2PA,, , ,%20%2%3/KEEP SCF1/\nDERUCP %4/SCFl/KEEP SCF2/\n* SET%19 TO 1\n*LABEL LOO2\nDISP/SCFl ALL ALL %19/DPLOT MRAU\n*ADD 1 TO %19\n*IF %19 LE 8 GOTO Loo2\n*ADD 1 TO %20\n*IF *20 GT %4 GOTO LOO1\n*NOEDIT\n\n13. OPERATING INSTALLATION LABEL\nDATAMAP plots now include an operating installation label beside the version and date label.\nFor example, on figures A1 and A2 this label is "BELL HELICOPTER". This label can be as long\nas 20 characters, The program block data includes a default label that should be set for each\nDATAMAP installation. The user can change this label with the UTILITY command:\nUTILITY/OPERATOR/\'(Label)\'/\nEnclose the label in single quotes. The user can enter and reenter this label at any time during the\nprogram run.\n14. "UTIL,ITY/PAUSE/" COMMAND\nUse this command in command sequences for interactive execution. Suppose that the user\nwants to run a command sequence that computes Cn from pressure data and that draws a contour\nplot of Cn and a multiple curve plot of the blade tip Cp stations as an intermediate result. Suppose\nalso that the user wants to execute this sequence interactively. With good computer response, the\nCp plot could be erased before the user could look at it. With a pause command before the contour\nplot command, the program will write a message and wait for the user to depress the "enter" or\n"return" key before executing the contour plot command. The program ignores this command in\nbatch mode. The command is:\nUTILITY/PAUSE/\n\n15. TIME INSTANTS INTERPOLATED FOR SCRATCH FILE RETRIEVAL\nFor previous DATAMAP versions, when the user specified a time or azimuth instant for\nscratch file retrieval, the program took the closest time instant that was actually stored, provided\nthat the requested instant was within the range of stored values. In Version 3.07, the program uses\na simplified cubic spline interpolation to estimate values at the instant requested.\n\n16\n\nA closely related improvement is that, for the special case of cycle-averaged input data, the user\nmay now specify exactly 0.0 or 360 degrees azimuth as the selected instant for input. These values\nare slightly outside the range of azimuth values stored for cycle-averaged data. Now, the program\nextends a cycle average input record by assuming continuity between the beginning and end of the\nrecord.\n\n16. SUBINTERVALS OF SCRATCH FILE DATA MAY BE RETRIEVED\nPreviously, the user could choose from two options when he selected from the domain of first\ndimension or first independent variable values stored on a scratch file. He could select the full\ndomain (Le., ALL values) or he could select a single instant. In Version 3.07, he may select all,\nan instant, or a sub-interval of the full domain. For all Input Substep sequences where the user\ncould specify ALL or an instant in the previous version, here are the corresponding entries for\nVersion 3.07:\n\nTSCFi-l\n\nI\nIMPLIED\nMR4z\n\nThe entry (Value) is either an instant or the beginning of a subinterval. Notice that commands\nto specify the full first independent variable domain (i.e., ALL) and to specify an instant of that\ndomain do not change in Version 3.07. However, the user may now specify, for example.\nDISP/SCFl 225 315 MRAZ 1 ALL TOP/SURF RECT MRAZ,,8 10 6/\nto request a surface plot of the top-surface leading-edge sensors for 226 through 315 degrees\nazimuth. Figure A3 is such a plot. Compare figure A3 with figure A4, which is a plot that spans\n\na l 360 degrees of azimuth and cannot show detailed variation with azimuth.\nl\n17. FLAPPING COMPONENT AND CYCLIC AND COLLECTIVE FEATHERING\nDERIVATIONS\nDATAMAP computes the longitudinal and/or lateral flapping components from blade flapping\ndata, the longitudinal and/or lateral cyclic feathering components from blade feathering data, and\nthe collective pitch from blade feathering data. These derivations also use azimuth information for\nthe harmonic computations. Here are the Action substep command entry variations for these\nderivations.\n\n}{\n\nFLAPPING LONGFUDINAL~\nCYCLIC\nLATERAL\n\nCOLLECTIVE\n\nI\n17\n\n(Correction Slope) (Correction Intercept)/(Counter)...\n\nThe keywords "LONGITUDINAL" and "LATERAL" select the component of prime interest\nfor the flapping and cyclic feathering derivations. However, both components are always\ncomputed with the named component stored as the "TOP" double-row and the unnamed\ncomponent becoming the "BOTTOMt double-row. Thus if the user specifies "LATERAL", the\nprogram stores the lateral component as the "TOP" double-row element and it stores the\nlongitudinal component as the "BOTTOM" double-row element. PLOT, MPLOT, LPLOT and\nXPLOT disposition will show only the "TOP" double-row while DPLOT and PRINT Disposition\nshow both double-rows. The collective derivation produces a single double-row element. The\ndefault correction slope entry is 1.0 and the default correction intercept is 0.0.\nThe Info File identifies the flapping item code in the initial group with the keyword MFLP for\nmain rotor and TFLP for tail rotor. It identifies the feathering item code with the keyword MFTH\nfor main rotor TFTH for tail rotor. After each item code that follows one of these keywords, the\ninfo file may include three correction numbers. The first number is the azimuth correction angle in\ndegrees. This number is the azimuth of the blade that is measured for flapping or feathering when\nthe measured azimuth is zero. Measured azimuth means the azimuth from the azimuth item code\nafter the overall azimuth correction angle following that item code is applied. Thus, the flapping or\nfeathering correction angle is applied cumulatively with the overall azimuth correction angle. The\nsecond and third numbers are correction slope and correction intercept for the data. The program\nuses these values, if present, to recalibrate the input data unless the user enters non-default\ncorrection values in the derivation command. Thus, the command-entered correction values\noverride the info file values if they are different from the default values. Following is a typical\nexample of info file initial group entries for the flapping and feathering item codes.\n\nkFLP DO40 45 - 1.00 O.O/\nMFTH DO41 4 5 /\n\nThe entries designate DO40 as the main rotor flapping item code and DO41 and the main rotor\nfeathering item code. The azimuth entries for both items indicate that the signal corresponds to 45\ndegrees azimuth when the measured signal with overall correction applied is 0.0 degrees azimuth.\nThe correction entries indicate that the polarity for the flapping item code is reversed but otherwise\ncorrect in magnitude. There is no correction for the feathering item code other than azimuth. No\ntail rotor flapping or feathering item codes are designated.\nFlapping and cyclic feathering are computed using a harmonic analysis of four, two or one\nrotor cycles of data (as available). That is, if\nS(t) = C + A*COS(2*x*f*t)\nwhere:\n\nS(t)\nf\nt\nC\nA\nB\n\n+\n\nB*SIN(2*x*f"t)\n\n+ ...\n\nflapping or feathering signal\nrotor frequency in hz\ntime shifted to 0.0 for blade over tail boom\nconstant term\n= l/rev cosine term\n= l/rev sine term\n\n=\n=\n=\n=\n\nThen for a flapping input signal, S(t)\n\n18\n\n-A\n-B\n\n= longitudinal flapping\n= lateral flapping\n\nand for a feathering input signal\n-A\n-B\n\n= lateralcyclic\n= longitudinal cyclic\n\nThe output units are the same as the input units but the program labels the output as "degrees"\nso the user should provide correction factors to convert the input to degrees and, if necessary, to\ncorrect the polarity of the measurement.\nThe program performs the above computation for one, two, or four rotor cycles centered about\neach azimuth = 0 degrees point. Then the program interpolates to obtain the sample rate and record\nlength as the input data. Naturally, the resultant record will be quite smooth and frequency\ncomponents at or above the rotor frequency will be greatly attenuated.\nThe program derives collective pitch angle by computing the mean value of the feathering\nsignal over one, two or four rotor cycles centered about each azimuth = 0 degree instant. Then\nthese values are interpolated as for the flapping and cyclic derivations.\n\n18. INFO FILE CALIBRATION TABLE FOR AIRSPEED DERIVATION\nThe original DATAMAP documentation describes the derivation of true airspeed (Vol. I,\nParagraph G.2.2.). This derivation has been expanded to allow an indicated airspeed to calibrated\nairspeed conversion table instead of the single linear function conversion that was allowed\npreviously. The calibration table, if present, is stored on the info file and may contain as many as\n16 indicated airspeedcalibrated airspeed pairs. The program performs linear interpolation between\nadjacent pairs and, if indicated airspeed exceeds the range of the table, it performs linear\nextrapolation from the nearest pair of adjacent points on the table. The user can still enter a linear\nfunction for this conversion in the derivation command. If he enters slope and intercept values\nother than the default values of one and zero, these override the info file table. If there is no Info\nFile airspeed calibration table and the default slope and intercept values are specified in the\ncommand, then the indicated airspeed values are used directly as calibrated airspeed values.\nn the Info File, the calibration table must follow the airspeed item code that it applies to. The\ntable is a sequence of pairs of an indicated airspeed value followed by a corresponding calibrated\nairspeed value. Each pair of values and the numbers within each pair must be separated by a\ncomma or blank. The indicated airspeed values must be in ascending order. The table may\ncontinue on subsequent lines following the item code. For example:\n\nTIAS PO02 0.0 0.0 70 72.5 100 104.5\n131 135 160 160/\n\n19. PLOT DATA POINT REPRESENTATION SETTINGS\nThe user can now control how X-Y and cross plots depict data points. Earlier DATAMAP\nversions use the following protocol.\n\n19\n\n-\n\nX-Y plots draw curves connecting data points with straight lines. Data points are\nnot specifically marked except,perhaps, as slope discontinuities in the curves. The\nexception to this rule is for X-Y plots of harmonic analysis output where the\nharmonics are represented as symbols.\n\n- Cross plots draw curves connecting data points with straight lines. A centered\nsquare marker is always drawn at the first data points. When the associating\nindependent variable is column or row position, centered markers are drawn at the\ndata points. When the associating variable is time or azimuth, centered markers are\ndrawn at "nice-number" intervals of this variable (for a domain of 360 degrees, this\ninterval is 10 degrees). Otherwise the data points are not marked.\nIn Version 3.07, the user may enter the following "SET" command keywords to control the\ndata point representation.\nAUTOPOINT\n\nLINE\n\n},\n\nCONNECT\n"AUTOPOINT"is the default setting and instructs the program to use the previously described\nprotocol.\n\n"SYMBOL" Introduces a new protocol.\n\n- X-Y plots do not draw curves connecting data points. A special centered marker is\ndrawn at every Mth data point where M is determined from N, the number of data\npoints .\nN\n\n= INT ((N\n\n+ 69)/70)\n\nThus, for 70 or fewer data points, every data point is represented as a marker. Figure A5\nis an MPLOT of Cn data versus azimuth with "SYMBOL"set.\n\n- Cross plots do not draw curves connecting data points. The first point is marked\nwith a centered square. Every other point is marked with another centered marker.\n\n"LINE" is a different protocol.\n\n- X-Y plots draw curves connecting points with straight lines. Data points are not\nspecifically marked, even for harmonic analysis output.\n\n- Cross plots mark the first point with the centered square and then connect all points\nin sequence with straight lines.\n\n"CONNECT" combines the protocol of "SYMBOL"and "LINE".\nAny settings remains in effect during a run until the user changes it.\nNotice that the user can change this setting before entering a command with an "APLOTt\ndisposition. Thus, the user can create plots with one sequence of points drawn with a curve and\n\n20\n\nanother sequence of points drawn with centered markers. Figure A6 shows a comparison of\nOperational Loads Survey (OLS) and C81 data.\n\n21\n\nAppendix B\nTable B1. Subroutine Locations and Descriptions\nDescription\n\njubrou tine\n\nThis is the main overlay for the DATAMAP interactive or batch\nprocessing program\nDATAMAP processing program block data\n\nSBLKDAT\nSACORRL\n\n4CORRL\n\nCalculates auto-covariance function\n\nSACORST\n\n4CORST\n\nInterface to auto-correlation program \'ACORRL\' and perform ensemble\naveraging of results if required\n\nSADENST\n\n4DENST\n\nInterface to auto-spectral density program \'ASDENS\' and perform\nensemble averaging of results if required\n\nSADJUST\n\n4DJUST\n\nInterface and processing routine for "ADJUSTMENT"analysis\n\nSAERCOF\n\nAERCOF\n\nCalculates (1) normal force coefficient (2) chordwise force coeffiecient,\nor (3) quarter chord pitching moment coefficient\n\nSAERINT\n\nAERINT\n\nIntegrates chordwise pressure distributions (Array Y as a function of\nArray X) to give the integral defined. The routine uses a spline\ndue to AKIMA\n\nSAERFOR\n\nAERFOR\n\nCalculates normal force, chordwise force or pitching moment\n\nSAERSLP\n\nAERSLP\n\nCalculates airfoil surface slopes required in the integration of the forcc\nand moment coefficients\n\nSAKIMA\n\nAKIMA\n\nModified spline technique for curve fitting a function with\ndiscontinuities\n\nSALLATT\n\nALLATT\n\nAirspeed calibration from info file data\n\nSALLSCR\n\nALLSCR\n\nChecks and initializes scratch parameters and initialize scratch files\n\nSAMPSET\n\nAMPSET\n\nInterface for amplitude spectram calculation\n\nSAMPSPC\n\nAMPSPC\n\nGets amplitude spectrum, applys cosine taper or Hanning window,\nfourier transforms, applies summing of adjacent points to get correct\npeak values\n\nSANMODE\n\nANMODE\n\nDummy suboutine to replace Tektronix PLOT-10 in batch version of\nDATAMAP\n\nSZANNOT\n\nANNOT\n\nAnnotates an axis includine caDtion and scale\n\ntechnique\n\n22\n\nTable B1. Continued\nFile Name Subroutine\n\nDescription\n\nSZAREA\n\nAREA\n\nSpecifies allowed plotting area if axes is not called\n\nSASDENS\n\nASDENS\n\nCalculates single-sided auto-spectral density\n\nSATTGEN\n\nATTGEN\n\nInterpolates one of the attached parameters: true airspeed,\nmain rotor RPM, or tail rotor RPM so that a constant scale interval is\nobtained\n\nSATTGET\n\nATTGET\n\nGets attached parameter data for counter and time interval\n\n3ATTPSC\n\nATTPSC\n\nTransfers attached parameter values from scratch file to core in\n\'ATTPAR\ncommon block\n\nSAVECYC\n\nAVECYC\n\nComputes an average cycle of values\n\nSAVRCYCL\n\nAVRCYCL\n\nCalculates the average cycle of two input data sources\n\nSZAXES\n\nAXES\n\nPlots axes and grid with titles and scale annotation\n\nSAZIMTH\n\nAZIMTH\n\nDerives a sequence of times corresponding to blade azimuth\n\nSAZMGEN\n\nAZMGEN\n\nGenerates a stream of azimuth values with a constant small sample\nrate for azimuth time history output\n\nSBANNOT\n\nBANNOT\n\nProvide the general plot annotation for cross plots\n\nSBLDISP\n\nBLDISP\n\nComputes the blade displacement for a certain harmonic number\n\nSBUTBES\n\nBUTBES\n\nCalculates coefficients for band-pass transitional Butterworth-Bessel\nfilters of orders 2-8\n\nSCCHANGE\n\nCCHANGE\n\nReturns the real components of a character string\n\nSCHISQR\n\nCHISQR\n\nPerforms chi-square test for goodness-of-fit to a normal distribution\n\nSCHITST\n\nCHITST\n\nInterface for chi-square test routine \'CHISQR\n\nSCOHRAD\n\nCOHRAD\n\nPerforms initial calculation of two auto-spectral densities and one cross\n-spectral density and add these to accumulator area for subsequent\ncoherence function calculation\n\nSCOHREN\n\nCOHREN\n\nCompletes the calculation of coherence function from ensemble\naveraged auto- and cross-spectral densities of two processes\n\nSCOHRST\n\nCOHRST\n\nInterface and overall control routine for generating the coherence\nfunction\n\n23\n\nTable B1. Continued\nDescription\n\nFile Name hbroutine\nSCOMBST\n\nCOMBST\n\nInterface to take two processing input functions and join them to form\nthe top and bottom double-row elements for the output\n(which must be to a cross plot, "XPLOT\')\n\nKOMPGP\n\nCOMPGP\n\nLocates an \'INFO FILE\' geometric group and calls subroutine\n\'READGP\' to read and translate it\n\nSCOMPSC\n\nCOMPSC\n\nCalled if process input is to be from scratch file\n\nXONCYL\n\nCONCYL\n\nCalled by \'CONSET\' to draw cylindrical format contour plot\n\nSCONNEC\n\nCONNEC\n\nCalled by \'CONTUR to actually draw the contour lines generated\n\nKONREC\n\nCONREC\n\nCalled by \'CONSET\' to draw rectangular contour plot\n\nXONSET\n\nCONSET\n\nSets up two dimensional matrix of values for contour plotting\nand executes \'CONREC\' or \'CONCYL\'\n\nSCONTUR\n\nCONTUR\n\nFinds contour lines of equal dependent variable value from a\ntwo dimensional matrix of values\n\nKONVCK\n\nCONVCK\n\nSearches array \'IUNCNV\' and the info file for a unit\nconversion specification for a particular unit label and, if found, return\nthe new unit label and the conversion\n\nSCONVCL\n\nCONVCL\n\nConverts counter stored as an integer to a string\n\nSCUBFIT\n\nCUBFIT\n\nPerforms interpolation using local cubic polynomials\n\nSCUBINF\n\nCUBINF\n\nSearches thru an input array for missing value flags and insert missing\nvalue flags in the output array where interpolation cannot be\nperformed\n\nSCYAVST\n\nCYAVST\n\nCalled by \'PRO1\' to set u p for cycle averaging\n\nSDAMPR\n\nDAMPR\n\nUses the moving block analysis method to estimate the damping\nassociated with some known frequency\n\nSDAMPST\n\nDAMPST\n\nSet up for call to \'DAMPR damping estimation routine\n\nSDASTRT\n\nDASTRT\n\nInitialize access to a partition of the master file thru the first partitio\naccess slot\n\nSDATAIN\n\nDATAIN\n\nInput the data from a partition of the master file\n\nSDATMAPL\n\nDATEQQ\n\nRoutine to interface with the VAX 11/780 system routine \'DATA\' and\nreformat the date string returned to fit within eight characters as\nassumed bv DATAMAP\n\n24\n\nTable B1. Continued\nDescription\n\nFile Name Subroutine\nSDAXES\n\nDAXES\n\nSets two plotting areas, one above the other with the same\nhorizontal scale and annotation but different vertical scales and\nannotations\n\nSDBWTST\n\nDBWTST\n\nInterface for acoustic weighted integration analysis\n\nSDENALT\n\nDANALT\n\nComputes density altitude, HD, as a function of time\n\nSDERIV\n\nDERIV\n\nComputes a vector of derivitive values given vectors of argument and\ncorresponding function values\n\nSDFILTR\n\nDFILTR\n\nInterface for Chebyshev or transitional Butterworth-Bessel recursive\ndigital filtering\n\nSDIFFIL\n\nDIFFIL\n\nComputes the time derivative of an equally spaced discrete function\nusing a non-recursive filter\n\nSDIFFOVRC DIFFOVRCL\n\nA hook for differentiation along radial position\n\nSDIFFST\n\nDIFFST\n\nInterface for differentiation of a function over time\n\nSZDINTPT\n\nDINTPT\n\nFinds power of 10 of grid interval for plot\n\nSDIRLIN\n\nDIRLIN\n\nDraw and label surface plot axis extensions\n\nSDISPOS\n\nDISPOS\n\nCalled in process overlay to carry out final disposition of data\n\nSDLYNX\n\nDLYNX\n\nCalls \'LYNX \' to draw curve on the top plot area of two allowed\nplotting areas for the \'DPLOT\' option\n\nSZDRAW\n\nDRAW\n\nDraws a line from previous position to X1, Y1. Draws various kinds of\ndashed lines\n\nSZDRAWN\n\nDRAWN\n\nUtility routine for using \'DRAW\' to create lines outside the plotting\narea (for labeling) and for relocating the origin\n\nSDSPSET\n\nDSPSET\n\nSets up and calls \'BLDISP\' to extract blade displacement in inches for a\ngiven rotor harmonic\n\nSDUMPER\n\nDUMPER\n\nPrint routine\n\nSDUMPIT\n\nDUMPIT\n\nDump after a step entry\n\nSEDCNTL\n\nEDCNTL\n\nEntry point for the editor overlay\n\nSEDINIT\n\nEDINIT\n\nInitializes the edit function for a run\n\nSEDINP\n\nEDINP\n\nProvides lines of stored input to the \'LININP\' routine\n\n25\n\nTable B1. Continued\n~\n\nDescription\n\nFile Name subroutine\nSEDITCH\n\nEDITCH\n\nProvides the facility for \'CHANGE\' activity within the edit mode\n\nSEDITLS\n\nEDITLS\n\nLists the command sequence block on the command sequence\n\nSEDPADD\n\nEDPADD\n\nPerforms the "ADD" procedural command during execution of a\ncommand sequence\n\nSEDPIF\n\nEDPIF\n\nPerforms the "IF" procedural command so far as determining whether a\njump should be made\n\nSEDPJMP\n\nEDPJMP\n\nSearches the current command sequence for a specified address label\nand changes the current line pointer to the line number for that label\n\nSEDPROC\n\nEDPROC\n\nProcesses a command sequence during\nexecution of the sequence\n\nSEDPSET\n\nEDPSET\n\nPerforms the \'SET procedural command during execution of a command\nsequence\n\nSEDSAVE\n\nEDSAVE\n\nSaves current command listing on the \'EDIT file command sequence\npreviously specified in \'EDCNTL\'\n\nSZENPLT\n\nENPLT\n\nTerminates plotting\n\nSEXPMAT\n\nEXPMAT\n\nControls the examination of the input array for missing points\n\nSFCOEF\n\nFCOEF\n\nCalculates Chebyshev type 1 filter coefficients\n\nSFFT\n\nFFT\n\nCalculates discrete fourier transforms using the Cooley-Tukey\nalgorithm\n\nSFILFLP\n\nFILFLP\n\nControls the filtering of the data in \'Y\'\n\nSFILLIN\n\nFILLIN\n\nFills in all the missing points (equal to -1.E35) in \'XI" if possible by\nusing local cubic polynomial\n\nSFILTER\n\nFILTER\n\nCalculates filter response using data in common to define filter\ncharacteristics\n\nSFINDIT\n\nFINDIT\n\nLocates counter in counter directory or item in item code\ndirectory\n\nSFINDT\n\nFINDT\n\nScans attached parameters for a particular value and returns a\ntime corresponding to that value\n\nSFINDX\n\nFINDX\n\nDirectory retrieval routine for menu display\n\nSFLFTST\n\nFLFTST\n\nInterface for blade flapping or for cyclic or collective\nfeathering derivations\n\n26\n\nTable Bl. Continued\nDescription\n\nFile Name\nSELPFTH\n\nDerives the first harmonic cosine and sine terms or the DC term as a\nfunction of rev number for an input record of flapping or feathering for\nan individual blade\n\nSFLTRN\n\nFLTRN\n\nConstant width narrow band analysis from B H T program \'KDAEO1\'\n\nSFLTRO\n\nFLTRO\n\nOctave band, analysis, from BHT program \'KDAEO1\'\n\nSFLTRT\n\nFLTRT\n\nComputes filter response using the trapezoidal rule to approximate the\nconvolution integral\n\nXFLTR3\n\nFLTR3\n\nOne third Octave band analysis from BHT program \'KDAEO1\'\n\nSFLWDIR\n\nFLWDIR\n\nComputes the magnitude and direction of local blade air flow using\npressure measured by a boundary layer button\n\nSFLWSET\n\nFLWSET\n\nRoutine to set up for calls to \'FLWDIR to calculate boundary layer\nbutton flow magnitude and direction\n\nXFMS\n\nFMS\n\nFinds location from mass storage record number \'NREC\'\n\nSFREEIN\n\nFREEIN\n\nObtains a single line of free-form input from the user in the\n\'EDIT-CHANGE\' mode\n\nSGETDAT\n\nGETDAT\n\nData input for input/process/output sequence\n\nSGETEMP\n\nGETEMP\n\nGets data into appropriate scratch space for operation using multiple\nrow position measurements\n\nXGETl\n\nGET1\n\nReads data from an item code counter pair according to time and\nduration instructions given by user\n\nSGTFORM\n\nGTFORM\n\nPerforms perspective transformations on points in three dimensional\nspace\n\nSGUNITS\n\nGUNITS\n\nCreates a product or squared units descriptor for output data resulting\nfrom processing that involves multiplication of input data streams\n\nSHARMNY\n\nHARMNY\n\nSets up for call to \'HARMRV\' or \'HARM1\' harmonic analysis routines\n\nSHARMRV\n\nHARMRV\n\nHarmonic analysis routine computes the amplitude and phase\n(in degrees)\n\nXHARMl\n\nHARM1\n\nHarmonic analysis routine computes the amplitude and phase\n(in degrees) for the desired harmonic number\n\nSHELPR\n\nHELPR\n\nGiven the current tree position of the input step, will list all the\noptions for the current entry and every subsequent entry that can\npredicted given the current position\n\nbe\n\n27\n\nTable B1. Continued\n\nF\n\nDescription\n\nFile Name\nSIBCIEU\n\nPerforms two-dimensional interpolation of matrices using cubic splines\n\nSIFFT\n\nIFFT\n\nReconstructs the function given the fourier coeficients\n\nSINFOST\n\nINFOST\n\nReads and interprets the first group of the \'INFO file\n\nXINF02\n\nINFO2\n\nExtracts item codes(s) and position(s) as specified by an \'INFO\nfile group for a given row and column\n\nSINFRED\n\nINFRED\n\nLists a menu of the group names and titles in an \'INFO file and\nthe initial group of the file\n\nSINFSCR\n\nINFSCR\n\nReads in and transfer a scratch file directory base to the\nscratch input base storage area\n\nSINISTP\n\nINISTP\n\nInitializes allowed defaults as well as some other variables for a new\nstep command\n\nISYMBPACB INISYM\n\nBuilds an index array for all the plotted characters\n\nSINITSC\n\nINITSC\n\nInitializes one of the scratch files \'SCFl\', \'SCF2\', or the temporary\nscratch file\n\nSINPATT\n\nINPATT\n\nCalled by \'ALLATT\' to input attached parameters OAT, static\npressure or true airspeed\n\nSINPSET\n\nINPSET\n\nCalled by \'PROCES\' to set the input mode and dimensionality\nfor command execution\n\nSZINSET\n\nINSET\n\nIf using Tektronix emulator, move cursor to position for interactive 1/0\naccording to LNCNT\n\nSINTCMP\n\nINTCMP\n\nCalled by \'PROCES\' to tie up loose ends after integrations along\nrow positions\n\nSINTERP\n\nINTERP\n\nInterprets one user entry for the DATAMAP processing\np\'ogram\n\nSINTGST\n\nINTGST\n\nProcessing interface for integration of a function over time\n\nSINTGOVR(\n\nINTGOVRC\n\nCalled by \'PROCES\' to set up for differentiation along column\npositions\n\nSKCHECK\n\nKCHECK\n\nCompares a keyword against a list and returns special units\nlabel for a matched keyword\n\nSLABSET\n\nLABSET\n\nGets various plot/print labels in alphanumeric form\n\n28\n\nTable B1. Continued\n\nF\n\nFile Name subroutine\n\nDescription\n\nSLININP\n\nLININP\n\nCalled by \'USERto input a new line of user instructions from\nsystem input or the command sequence file and scan the line\n\nSZLINT\n\nLINT\n\nDraws solid or dotted line from (Xl, Y1) to (X2,\nY2)\n\nSLISTAD\n\nLISTAD\n\nBuilds a list of user entries for the current step in string form\n\nSLISTER\n\nLISTER\n\nMerges and lists a sequence of commands\n\nSLSCRAT\n\nLSCRAT\n\nReads the scratch file directory bases and list the contents of the file\nfor the user\n\nSZLYNX\n\nLYNX\n\nPlots a line on Calcomp, DP-1 or Tektronix\n\nSMACHDR\n\nMACHDR\n\nDerives the Mach number for the free-stream motion of air relative to i\nposition on the blade\n\nSMACHDST\n\nMACHST\n\nInterface for Mach number computation\n\nSMATCHR\n\nMATCHR\n\nAlphanumeric sequences input string is compared character by\ncharacter with a test matrix until an unambiguous match is found\n\nSMAXMIN\n\nMAXMIN\n\nFinds minimum and maximum values for a data sequence\n\nSZMCHAR\n\nMCHAR\n\nPlots the indicated character at current pen location\n\nSMCOUNT\n\nMCOUNT\n\nLists a menu of counters present in the data set being used\n\nSMENINF\n\nMENINF\n\nGets some data from item/counter info record for item code menu displ?\n\nSMENSET\n\nMENSET\n\nDisplays the current run settings\n\nSMENU\n\nMENU\n\nMenu display overlay and block to call the proper routine for the\ndesired menu\n\nSMERGER\n\nMERGER\n\nMerges new line information with old information\n\nSMINMAX\n\nMINMAX\n\nComputes the oscillatory and mean values for each cycle of the input\narray\n\nSMINXST\n\nMINXST\n\nSets up for Min/Max processing\n\nSMITEMS\n\nMITEMS\n\nLists a menu of item codes present in the data set for a given counter\n\nSMNMASK\n\nMNMASK\n\nDisplays a list of the item codes that are currently masked\n\nSMPARTS\n\nMPARTS\n\nDisplays the partitions in the Master file\n\nSMPARTX\n\nMPARTX\n\nDisDlavs the Dartitions in the Master file\n\n29\n\nTable Bl. Continued\nDescription\n\nFile Name hbroutine\nSMULTPL\n\nMULTPL\n\nDraws multiple curve plot\n\nSNARRST\n\nNARRST\n\nControls execution of acoustic narrow band analysis\n\nSNBFILT\n\nNBFILT\n\nDerives a constant band width acoustic sound pressure level spectrum\nusing a narrow band filter scan in frequency\n\nSNETWAT\n\nNETWAT\n\nPerforms weighted integration using the A, B, C, D and overall\nweighting networks\n\nSNETWKS\n\nNETWKS\n\nPerforms integration of noise spectrum using A, B, C, and D weighting\nnetworks, from BHT program \'KDAEO1\'\n\nSNOFRST\n\nNOFRST\n\nSets up Row/Column Matrix when no first dimension variation is\npresent\n\n3NOYTB\n\nNOYTB\n\nNoy value calculation from BHT program \'KDAEOI\'\n\nBNPLDEVTF NPLDEV\n\nReturns plotting device number in a specific load module for batch\nprocessing\n\n[NPLDEVTF NPLDEV\n\nReturns plotting device number in a specific load module in the\nDATAMAP Processing program for interactive processing\n\n3NTOSTR\n\nNTOSTR\n\nConverts a floating number to a string representation with\nroundoif\n\nSOCTAVE\n\nOCTAVE\n\nPerforms Octave or third Octave analysis of input data using FFT\nproced.ure and routines \'FLTROand FLTR3\n\nSOCTVST\n\nOCTVST\n\nInterfaces DATAMAP to Octave and third Octave analyses\n\nSOUTSET\n\nOUTSET\n\nSets output information and compares dimensionality of input as\nmodified by process to allowed dimensions of output\n\nSPACK\n\nPACK\n\nPacks 4 characters which are individually left justified in four 32 bit\nword\n\nSPARTCG\n\nPARTCG\n\nAdd, change, or delete one of the two Master file partitions that may\ncurrently be accessed by the processing program\n\nSPCVDN\n\nPCVDN\n\nCalculates perceived noise level, routine from BHT program \'KDAEO1\'\n\nSPLCOPY\n\nPLCOPY\n\nTransfers the Calcomp \'PLOT\' arguments to create one plot frame from\nthe temporary frame storage file to the multiple frame storage file\n\nSZPLOC\n\nPLOC\n\nEvaluates a point on Tektronix screen in user coordinates as specified by\nscreen X-Y cursor\n\n30\n\nTable B1. Continued\nDescription\n\nFile Name h b r o u tine\n\nPartial emulation of the Calcomr, \'PLOTS routine for use in writing a\nDevice Independent Print file\n\nBCCDIPFIL\n\nPLOTS\n\nBDUMMYS\n\nPLOTS\n\nPartial emulation of the Calcomp \'PLOTS\' routine for use by the\ninteractive mode of DATAMAP\n\nSPLSURD\n\nPLSURD\n\nDriver for three dimensional surface plotting\n\nSPLSURF\n\nPLSURF\n\nActually draws surface plot\n\nSPNLCAL\n\nPNLCAL\n\nPerforms perceived noise level calculation on input acoustic data\n\nSPNLDST\n\nPNLDST\n\nInterface DATAMAP to acoustic perceived noise level analysis\n\nSPOWGEN\n\nPOWGEN\n\nGets attached parameter data and calls up proper routine to compute\nshaft horsepower, thrust coefficient, torque coefficient or density\naltitude\n\nSPRCFST\n\nPRCFST\n\nInterface for static pressure coefficient calculation\n\nSPROCES\n\nPROCES\n\nMain routine of the retrieval/processing/disposition overlay, also\ncalled the processing block\n\nSPROSET\n\nPROSET\n\nAssigns a number to processing option requested and determines what\nkind of data is required for the process\n\nXPROl\n\nPRO1\n\nFinds the proper process set up and calls a routine to execute it\n\nXPR02\n\nPRO2\n\nSets up for integrations along row positions\n\nXPROS\n\nPRO3\n\nCalculates normal, cordwise forces and pitching moments\n\nSREADF\n\nREADF\n\nFree field input routine. Takes a sequence of alphanumeric characters\nand converts to a sequence of literal words and floating numbers\n\nSREADGP\n\nREADGP\n\nTranslates an INFO file geometric group\n\nSREADGX\n\nREADGX\n\nScans an INFO file geometric group for errors\n\nSREADOP\n\nREADOP\n\nGets from the user any required run option changes\n\nXREADl\n\nREAD1\n\nReads a line that should contain one entry from the user\n\nSREPMESS\n\nREPMESS\n\nAdjusts the number of cycles that can be processed accourding to the\nmax available space in XBUFF array\n\nSRESPAD\n\nRESPAD\n\nPerforms initial calculation of one auto-spectral density and one\ncross-spectral density\n\n~.\n\n~\n\n31\n\nTable B1. Continuec\nFile Name h b r o u tine\n\nDescription\n\nSRESPEN\n\nRESPEN\n\nCompletes the calculation of frequency response function from ensemble\naveraged auto- and cross- spectral densities of two processes\n\nSRESPST\n\nRESPST\n\nInterface and overall control routine for generating the frequency\nresponse function\n\nSRFFT\n\nRFFT\n\nGiven a real function (data sequence) calculates the real fourier\ncoeficient AK and BK\n\nXRMS\n\nRMS\n\nRead from mass storage device N O W words from record\nnumberNREC\n\nSROTCOR\n\nROTCOR\n\nCombines all the times of the rotor pulse in monotonic increasing order\n\nSROTDEG\n\nROTDEG\n\nProcesses an input data stream of rotor position in degrees and identifie\nthe instants of zero azimuth positions\n\nSROTPUL\n\nROTPUL\n\nInterrogates a rotor azimuth pulse train and returns the instants of time\nassociated with zero azimuth angles\n\nSROTSPD\n\nROTSPD\n\nEstimates rotor speed from one per rev rotor pulser\n\nSRTRVSC\n\nRTRVSC\n\nRetrieves scratch file data from SCFl, SCF2, SCF3, or SCF4\n\nSSAMPAN\n\nSAMPAN\n\nDraws and annotates a sample of a curve just drawn on a cross plot\n\nSSCADD\n\nSCADD\n\nAdds data to scratch file and modifies directory appropriately to\nshow the addition\n\nSSCALEV\n\nSCALEV\n\nScales the data using the MAX and MIN\n\nSSCALGN\n\nSCALGN\n\nGenerates an X-scale for a data sequence\n\nSSCANBK\n\nSCANBK\n\nScans an array and finds the last character that is not blank\n\nSSCBUFF\n\nSCBUFF\n\nCopy from buffer array XBUFF\n\nSSCINAL\n\nSCINAL\n\nSets some values in the scratch file storage block that apply to all\nrow and column positions\n\nSSCNBAD\n\nSCNBAD\n\nScans entry lines from system input or edit file until one is found which\nbegins with a valid specification substep\n\nSSCPERM\n\nSCPERM\n\nGets an indication of whether the scratch files are permanent\n(and require no initialization) or temporary (and require\ninitialization)\n\nSSHFSTR\n\nSHFSTR\n\nTransfers NC characters from IBB array, starting with character\nlocation NB, to IAA array with first character location NA\n\n32\n\nTable B1. Continued\nDescription\n\nFile Name hbroutine\nSSHFTHP\n\nSHFTHP\n\nComputes main or tail rotor shaft horsepower\n\nSSIMPSN\n\nSIMPSN\n\nAn adaption of the IBM SSP subroutine QSF to compute the vector of\n\nintegral values for a given equidistant table of function values\nSSINGGP\n\nSINGGP\n\nScans first group of info file which is stored in /singif/ common block\n\n5SINGPL\n\nSINGPL\n\nPlots a single X-Y curve on a new plot frame or an existing frame\n\nSSKIPLN\n\nSKIPLN\n\nReads through a specified number of lines of a file without transferring\nany data so that the reads will be considerably faster\n\n;SLOPE\n\nSLOPE\n\nComputes the derivative of the given a table of values (X,Y) function\ndefined by Y,R\n\nSSLOPST\n\nSLOPST\n\nSets up for differentiation along column positions\n\n;SMOOTH\n\nSMOOTH\n\nDoes a simple smoothing of the input data\n\nSSORTID\n\nSORTID\n\nSorts the columns of a matrix according to ascending order of a key\nset of values\n\nSSORTMF\n\nSORTMF\n\nSorts an index to a floating array of numbers so that the index gives\nascending order of values in the array\n\nXSORTO\n\nSORT0\n\nSorts an array of floating numbers in ascending order with\nno companion array\n\nKSORTl\n\nSORT1\n\nSorts an array of numbers in ascending order along with one companion\narray\n\nXSORT2\n\nSORT2\n\nSorts an array of numbers in ascending order along with one companion\narray\n\nKSORT3\n\nSORT3\n\nSorts a floating array of numbers in ascending order along with two\ncompanion arrays\n\nSSRCLRF\n\nSRCLRF\n\nDraws some reference lines and labeling for cylindrical format surface\nplot\n\nSSRRCRF\n\nSRRCRF\n\nDraws some reference lines and labeling for rectangular format surface\nplot\n\nSZSTALL\n\nSTALL\n\nInitializes all plotting\n\nSSTATST\n\nSTATST\n\nCombined routine for interface and calculation of mean, variance, or\nstandard deviation\n\n;ZSTPLT\n\nSTPLT\n\nPages forward for a new plot in sequence\n\n33\n\nTable B1. Continued\nDescription\n\nFile Name\n\nComputes the blade static pressure coefficient, CP\n\nSSTPRCF\nSSTRTUP\n\nSTRTUP\n\nMain routine of the overlay to initialize a run of the DATAMAP\nprocessing program\n\nSZTICS\n\nTICS\n\nDraw tic marks on specified side of grid\n\nSTORQUE\n\nTORQUE\n\nComputes the torque coefficient, CQ, as a function of time\n\nSTREEUP\n\nTREEUP\n\nUpdates pointers and tree structure for entry and substep loops in\nsubroutine \'USER\n\nSTRUEAS\n\nTRUEAS\n\nComputes true airspeed from indicated airspeed\n\nSTSAVl\n\nTSAVl\n\nSaves data temporarily on general scratch file - if necessary\n\nSTSAV2\n\nTSAV2\n\nTemporarily or permanently dispose of data after a column from the\nprocessed matrix of time histories is done with the selected process\n\nSTSAV3\n\nSTAV3\n\nSaves data temporarily on general scratch file or a specified scatch file\nafter an operation along multiple column positions is\ncompleted\n\nSUNINIT\n\nUNINIT\n\nReads the unit conversion section of the initial group of the info file\n\nSUNSPIKE\n\nUNPIKE\n\nExtracts a spike interval given by the user and interploate the Y\nvalues for the spike interval\n\nSUSER\n\nUSER\n\nMain routine of the user interface overlay\n\nSUSERLC\n\nUSERLC\n\nExecutes command steps that can be accomplished locally in the\nuser interface block\n\nUSLEEP\n\nUSLEEP\n\nSuspends processing for the amount of time specified\n\nSWMS\n\nWMS\n\nWrites to mass storage device "OUT\'\nnumber \'NREC\'\n\nSXCORRL\n\nXCORRL\n\nCalculates cross-covariance function for input data (cross-covariance\nis cross-correlation with mean value removed from input data)\n\nSXC0R ST\n\nXCORST\n\nInterface to cross-correlation program XCORRL and perform ensemble\naveraging of results if required\n\nSXDENST\n\nXDENST\n\nInterface to cross-spectral density program \'XSDENS\' and performs\nensemble averaging of results if required\n\nSXSDENS\n\nXSDENS\n\nCalculates sinele sided cross-smctral densitv for inDut data\n\n34\n\nwords from \'IARR\' onto recon\n\nTable B1. Concluded\nFile Name Subroutine\nSXYCMLB\n\nXYCMLB\n\nDescription\n\n1\nor a cross-annotation plot (XLPLOT)\n\nSXYCROS\n\nXYCROS\n\nPlots one variable versus another with no dependent-independent\nrelationship implied\n\nSXYPLOT\n\nXYPLOT\n\nDraws single plot, multiple plot, or adds a curve to an\nexisting plot\n\nSXYPRNT\n\nXYPRNT\n\nPrints data when only one dependent variable is supplied\n\nxxYPRN2\n\nXYPRN2\n\nPrints two double row elements of data\n\n5YSFRST\n\nYSFRST\n\nSets up time, azimuth, frequency, or harmonic versus row or column\nmatrix\n\nSZZINT\n\nZINT\n\nGets line intersection with boundary of plotting area\n\n,\n\n35\n\nTable B2. Common Block Descriptions\nDescription\nArea for processed attached parameter information\nBSPARE\n\nArray for storage of data or scales during processing\n\nBUFFER\n\nArray for storage of data or scales during processing\n\nCPUTIM\n\nUsed to track CPU usage\n\nDEFLT\n\nDefault user input matrix and general system label\n\nFLTR\n\nFilter information storage\n\nDIRECD\n\nProvides provisional user command directives and comments for use in user\ninterface\n\nDIRECT\n\nTwo dimensional instruction matrix containing interface control values\n\nMENBUF\n\nBuffer block for menu generation\n\nPARM\n\nParameter transfer storage\n\nSCRAT\n\nDummy scratch array\n\nSMPNTR\n\nArray of pointers set by INISYM\n\nSPIKINF\n\nSpike information\n\nSPSIZS\n\nX axis plotting information\n\nSTPRESS\n\nBoom system static pressure\n\nUSTRNG\n\nComment string for output\n\nVSIZE\n\nUsed exclusively for the Versatec plotting adap i n\n\nHLPWDS\n\nString and contol values for generation of help prompting\n\nKWCNTL\n\nGives prescribed keywords to check that data on scratch file are appropriate\n\nPLSPCL\n\nCommon for control of the special plotting modes quick and copy\n\nWLIST\n\nKeyword block\n\nCLCOMP\n\nUsed exclusively by the plot and plots emulation package for the Tektronix anc\nPLOC\n\n36\n\nTable B2. Continued\nDescription\n\nCommon Block\nCNGBLK\n\nCommunications and work area for command sequence editing function\n\nCURRNT\n\nCurrent substep information\n\nDRW2\n\nCommon for double scale plots (DPLOT option)\n\nFILLRC\n\nContains the parameters which describe the digital filter transfer functions\n\nKARD\n\nBlock for communicating user input lines for scan and return of information about\nthe lines\n\nMASS\n\nOffsets, pointers and check values for the direct access routines RMS, WMS, and\nFMS\n\nMODES\n\nOperating modes for the program\n\nPLABLS\n\nStored labels and information for output\n\nSCRTBL\n\nBlock for storage of dirctory blocks of input and/or output scratch files\n\nSLIST\n\nContains listing of the developing command\n\nSTATUS\n\nVarious information on the status of the program\n\nPRCOM\n\nCommon for process communication\n\nENTOPT\n\nEntry option and tree structure for user command steps\n\nFILES\n\nInput and output file numbers\n\nINFGRP\n\nBlock for storage of information provided by an info file group\n\nLABELS\n\nPlot labels\n\nLEDIT\n\nControl and information values for command sequence storage on rc.:ieval\n\nMDEP\n\nComputer, installation or hardware dependent values\n\nGENSCR\n\nInformation and pointers for temporary scratch file\n\nSURPLT\n\nControl and label values for surface on contour plot generation\n\nCNTLOP\n\nDirective and information values for data processing and output\n\nMLABLES\n\nBlock for output labels\n\nCNTRLIP\n\nDirective and information values for data input and processing\n\nDATASET\n\nControl values and buffer arrays for retrieval of data from master file\n\n37\n\nTable B2. Concluded\nDescription\n\nCommon Block\nSINGIF\n\nInformation extracted from the initial group of info file\n\nDRW\n\nBlock of plotting information\n\nSCRTCH\n\nScratch file information and data\n\nSIZES\n\nI various fixed numeric values for program\n\n38\n\nI\n\nAppendix C: DATAMAP Version 4.0 Installation Specifications\nProcessors:\n\nVAX-1 l n 5 0\nVAX-11/180\nVAX-11/785\n\nOperating System:\n\nV M S Version 4.4 or higher\nMemory Requirements (in Blocks):\n10,000 - Minimum required\n15,800 - Required to retain source code\n26,000 - Required to print compilation lists and maps\nTerminals Supported For Interactive Graphics:\nTektronix 4010, and 4014\nGraphon 140,240, and 250\nDec VT131, VT220\n(any Tektronix 4010 or 4014 emulator)\nPlot Output Devices:\nI\nOutput in D P format can be converted to:\nCALCOMP\nHouston Instrument DP- 1\nQMS Laser Printer\nVersatec\nGraphics Package:\nTektronix Plot10\n\n39\n\n0\n\nI\n\nI\n\n.\n3\n5\n\n5i\n\n!Y\n\n9\nY\n\nc\n\nm\n9\n\nH\n\ne\n\n8\n\nL!\n\nt\n\nE\n\ns\nF\n3\n\na\n\nE\n0\n\n8\n\n8\n\n.\n\nz\n0\n\n8\n\n2\n\n0\n\nB\n\n9\n5i\n\nz\n\n0\n\n!\n\nY\nY\nc\nI\n\nu)\n\na\nW\n>\n\nE\n\nP\n\n4\n\nB\n\n4\n\n3\n\nE\n8\n\nI\n\n+\n4\n\nn\n\nIJ\n\n.\n\n5i\n2\n\n3\na\n\n0\n\nu\nB\n\nw\n\n0\n\n5\na\nw\n\nu\n.\n\nn\n\n9\nm\n\n.\n-\n\na\n\na\n\nw\n0\n\nw\n0\n\n40\n\n@\nI\n\nU\n\nz\n\n1\n\nu\n\n1\n\nI\n\n2\na\n\nn\n\n.\n.\n\n.\n\nc\nW\nd\n\nc\nz\n\nW\n\nW\n\nU\n\nm\nz\n\nk\nn\n\n8\n.\n\nLL\nW\n\ni\nz\na\n\n41\n\na\n\ni\n\n$\n\ni\n\n5\n\n3\na\n\nI\n\n:\n\nz\nn\n\nB\n\nE\n\nn\n\nn\n\n.nn\n.& - N O *\nY U U Y\n\nr N O O\n\nuuuu\n\n\xe2\x80\x98888:: 8888\n\ns\n\nn\nn\n\nz\n9\n\nf\nn\n0:\n\nw\n\n>\nn\na\ns\na\nF\n\na\n\nn\n\n.\n3\n\nc\nw\n\n>\n6\nI-\n\nI\n\n5\na\n\nv\xe2\x80\x99\nw\n\n$Pal\n\ns\n\nU\n\nE\nz\n2_\n\nB\nE\n\n2\n\nE\nP\nW\nv)\n\nU\n\nU\n.\n\na\nz\n\n<\n\n42\n\n.\n\n.\nU\nzi\n\nn\n\nz\n\n?\nY\n\nn\nI\n\nn\n\nI\n\n-\n\nU\n\nU\n\nU\n\n43\n\n1\n\n%\n\nI\n\n>\n\n.\n\n2\na\n\n.\n\nI\nv)\n-\n\n5\n\nc\n\nb\n\n.\n\nY\n\nU\n\n.\n\nt\nn\nw\n\nE\n8\n0\n\n44\n\n.\n\nORKYNAL PAGE I\nS\nOF POOR QUALITY\n\nI\nU.\n\nW I Sd\n\nl\n-\n\nn\nw\nU\nx\n\nr.\n\nw\n\n:\n\nLn\n[L\nLn\nD\n\nz\n\n45\n\nm\n\n(\nu\n\na\nH\n\nLn\n\na\n\nA Z IMUTH ( D E G 1\nCOUNTER\n\n2 152\n\n(X102 1\n\nGROSS W\nT\nLONG CG\n\nAVERAGE HAS 256 POINTS I N ONE CYCLE\nCYCLE AVERAGE:\nRBS PRESS\nUPR 6\n\nS H I P MlDEL\nSHIP I D\n\nRH-1G\n20004\n\nW256\n\n--- COUNTER\n\n2152\n\nS H I P MODEL\nSHIP I D\n\nFIH-1G\n20004\n\nCOUNTER\n\n2152\n\nSHIP MODEL\n\nRH-1G\n20004\n\nGROSS UT\nLONG CG\nAVERAGE W S 1 0 2 4 POINTS I N ONE CYCLE\nCYCLE AVERAGE :\nABS PRESS\nUPR*6\nW256\n\nI\n\nGROSS WT\nLONG CG\nAVERAGE HQ5 2 0 4 8 POINTS I N ONE CYCLEABS PRESS\nUPR+6\nW256\nCYCLE BVERAGE:\n-.-.-\n\nDATAI\'WP ( M R S 4.0\n\n-\n\n09/01/86 1 15 JAN \' 8 7\n\nSHIP I D\n\nNASR ARC\n\nFig. 3 Time histories with variable number of points per cycle\n46\n\nI\n\na\nH\n\nm\nU\n\nTIME (SECONDS 1\n\n(X10\n\n1\n\nI\n\nCOUNTER\n\n2 152\n\nWITHOUT S P I K E D E L E T I O N\nTIME HISTORY:\nABS PRESS\n__--\n\nCOUNTER\n\nWITH SPIKE DELETION\nTIME HISTORY:\n\n2 152\nQ B S PRESS\n\nDATAMAP ( V E R S 4 . 0\n\n-\n\nS H I P MODEL\nSHIP I D\n\nUPRx9\n\n_.\n\n09/01/86 1\n\nAH-1G\n20004\n\nW158\n\nGROSS WT\nLONG CG\nllPn*q\n\nFIH-1G\n20004\n\nS H I P MODEL\n\nGROSS WT\nLONG CG\n\nSHIP I D\nW 15s\n\n3FEB \' 8 7\n\n__\n\n.~\n\nNASA ARC\n\nFig. 4 Time history with an without spike deletion\n\n47\n\nDFITFIMflP (VERS 4.0 -\n\nFig. 5\n\n0 9 / 0 1 / 8 6 1 lOFEB \' 8 8\n\nNFISFI f l R C\n\nComparison of normal force with and without spike deletion\n\n48\n\nS3PX BLADE ABSOLUTE PRESSURE, OLS DATA, W / 0 60 R / R\nFRACTN OF RADIUS\nR / RADIUS\nBLADE ROOT\n.40, .75, .864, .955 //\nCHORD DISTRIBUTION\nC/CBASE\nBLADE ROOT\n1.0,1.0,.80,.90//\nFRACTN OF CHORD\nX / CHORD\nLEADING EDGE\n.009991, .029972, .079930, .149869, .199825, .249782, .349694,\n.399651, .449607, .499563, 2549520, 599476, .699389, .919196 //\nBLAP, BLAM //\nUPPER SURFACE\nBOTTOM SURFACE\nP157, .016697, P173, -.016697 / P828, .016697, P856, -.016697 /\nP164, .016697, P831, -.016697 / P908, .016697, P958, -.016697 //\nP158, .026953, P174, -.026953 / P836, .026953, P857, -.026953 /\nP165, .026953, P843, -.026953 / P909, .026953, P959, -.026953 //\nP159, .039120, P175, -.039120 / P837, .039120, P858, -.039120 /\nP166, .039120, P844, -.039120 / P919, .039120, P973, -.039120 //\nNULL, .046362, NULL, -.046362 / P838, .046362, P868, -.046362 /\nNULL, .046362, P845, -.046362 / P920, .046362, P974, -.046362 //\nNULL, .048165, NULL, -.048165 / P839, .048165, P869, -.048165 /\nNULL, .048165, P859, -.048165 / NULL, .048165, NULL, -.048165 //\nP160, .048164, P176, -.048164 / P840, .048164, P870, -.048164 /\nP182, .048164, P860, -.048164 / P921, .048164, P975, -.048164 //\nNULL, .044446, NULL, -.044446 / P841, .044446, P871, -.044446 /\nP194, .044446, P861, -.044446 / P926, .044446, P989, -.044446 //\nNULL, .041355, NULL, -.041355 / NULL, .041355, P872, -.041355 /\nP195, .041355, P875, -.041355 / P927, .041355, P990, -.041355 //\nP161, .038071, P177, -.038071 / P852, .038071, P873, -.038071 /\nP196, -038071, P876, -.038071 / P928, .038071, P991, -.038071 //\nNULL, .034788, NULL, -.034788 / NULL, .034788, NULL, -.034788 /\nP813, .034788, P877, -.034788 / P941, .034788, P738, -.034788 //\nNULL, .031504, NULL, -.031504 / P853, .031504, P874, -.031504 /\nP814, .031504, P891, -.031504 / P942, .031504, P739, -.031504 //\nNULL, .028220, NULL, -.028220 / NULL, .028220, NULL, -.028220 /\nP815, .028220, NULL, -.028220 / NULL, .028220, NULL, -.028220 //\nP162, .021653, P178, -.021653 / P854, .021653, NULL, -.021653 /\nP829, .021653, P893, -.021653 / P943, .021653, P740, -.021653 //\nNULL, .007205, P179, -.007205 / P855, .007205, P885, -.007205 /\nP830, .007205, P907, -.007205 / P957, .007205, P757, -.007205 //\nEND\n\nFig. 6 Information file format for S3 option\n\n49\n\nI\n\nI\n\nI\n\nI\n\nI\n\nI\n\n1\n\n\'\n\nI\n\n\'\n\nDERIVED PARAMETER:\n\nMACH NUMBER\n\nLEVEL F L I G H T AT 1 0 1 KNOTS\nRSSOCIFITING VRRIABLE:\n6 13\nCOUNTER\n\nFIZIMUTH (DEG).\nGROSS W l\nLONG CG\n\nV .95\n\nBHT, USFIRTL DRTAMAP\n\nPARKING INTERVRL = 10 DEG\nRH-1G\nS H I P MODEL\n8300\n2039 1\nSHIP I D\n200.6\n\nRIRRDIUS\n\nVERS 3 . 0 6\n\n-\n\n02/02/8 1 1 02/07/8 1\n\nBELL M L ICOPTER\n\nFig. A1 Cross plot with azimuth as associating independant variable\n\n50\n\nc\n0\n4\n\nC\n0\n\n.\n\n2:\nrL\n\nz\n\nW\n\nw o\n\nu ! .w\nLL\nLL\nW\n\n0\n\nug\nW\n\n.\n\nU\n\na\n\n0\nL\n\nO\n\nm\n\na\'*\na\n0\n\n..\n\n2\n:\n\na\n\nP\n\nYE\na .\na\na\n\nn\n\n;?\nY\n\na\nW\n\n"E:\n0\n0\n\n.45\n\n.40\n\n.SO\n\n.S5\n\n.60\n\n.65\n\n.70\n\n.75\n\n.80\n\n.85\n\n90\n\nDER IVED PARAMETER: MACH NUMBER\n5\n\nCOUNTER\n\n6 10\n\nCOUNTER\n\n6 13\n\nGROSS W\nT 8300\nS H I P MODEL FIH-1G\nLONG CG\n200.6\nSHIP I D\n2039 1\nL E V E L F L I G H T AT 1 4 3 KNOTS 95 PERCENT RADIUS\nASSOCIFITING VARIABLE:\nFIZIMUTH ( D E G )\nMQRKING INTERVFIL = 10 DEG\nGROSS W 8 3 0 0\nT\nS H I P MODEL FIH-1G\nLONG CG\n200.6\nSHIP I D\n2039 1\nLEVEL F L I G H T FIT 101 KNOTS 95 PERCENT RADIUS\nFISSOC I A T I N G VFIR IFIBLE:\nFIZIMUTH ( D E G )\nMFIRKING INTERVFIL = 10 DEG\n-A-\n\nBHT, USFIRTL DATAMFIP (VERS 3 . 0 6\n\n-\n\n02/02/8 1 1 0 2 / 0 7 / 8 1\n\nB E L L HELICOPTER\n\nFig. A2 Annotated cross plot using XLPLOT command\n\n51\n\nLEVEL FLIGHT FIT 7 2 KNOT5\n\nCYCLE QVERAGE :\nCOUNTER\n.01\n\nBLADE ABSOLUTE PRESSURE\nGROSS W T\nLONG CG\n\n611\nXXnORD\n\n8300\n200.6\n\nSHI\'P MODEL\nTOP SURFACE\n\nAH-1G\n\n-\n\nX QUANTITY\nAZIMUTH (DEG)\nM I N X 225.000\nMAX X 314.996\nI N C X 3.333\nY OUANTITY\nFRACRJ OF R A D I U S\nMIN Y\n.400\nMAX Y\n,955\nI N C Y ,033\nAXES DISPLACED T M I N RANGE AND DOMAIN VALUES\nO\nM I N Z 5.736\n\nBHTVUSARTL DATFIMAP (VERS 3.06\n\nFig. A3\n\n-\n\n02/02/81 1 0 2 / 0 7 / 8 1\n\nBELL HELICOPTER\n\nSurface plot of a subrange of azimuth\n\n52\n\n0\n\ncu\n\nc\nY\n\n3\n\nLn\n\n3\n\nLI\n\nn\n\n3\n3\n\n0\n\nLEVEL FLIGHT AT 72 KNOTS\nCYCLE RVERRGE :\nCOUNTER\n.01\n\nBLADE RBSOLUTE PRESSURE\n\n611\nX/CHORD\n\nGROSS . T\nW\nLONG CG\n\n8300\n\n200.6\n\nS H I P MODEL\nTOP SURFACE\n\nFIH-1G\n\nANGULAR INCREMENT 10 DEG\nRFIDIRL OURNTITY\nFRFICTN OF RFIDIUS\nMAX R A D I U S\n.955\nRAD IRL INCREMENT\n.0370\n\nBHT, USRRTL DRTRMAP (VERS. 3.06\n\n-\n\n02/02/8 1 1 02/07/8 1\n\nFig. A4 Surface plot of a full azimuth\n\n53\n\nB E L L HEL ICOPTER\n\n0\n0\nPl\n\n0\n0\n\ncu\n0\n\nC\nc\n\nC\nC\nC\nC\n\nI\n\nI\n\nI\n\nI\n\nI\n\n1\n\nc\nI\n\nb 1:I\n\nl l\n\nI\n\nI\n\nC\n\nzc\nC\nC\n\n7\nC\nC\nd\nI\n\nC\nC\nU\nI\n\nC\nC\n\n9\n\nRZ IMUTH (DEG 1\n\n(Xl02 1\n\nL E V E L F L I G H T RT 1 4 3 KNOTS\nDER I V E D PARQMETER :\nNORMRL FORCE COEFF IC I E N T\nCOUNTER\n\nGROSS WT\nLONG CG\n\n6 10\n\n0\n\n0\n\n0\n\n0\n\n0\n\n.40\n\nA\n\nA\n\nA\n\nA\n\nA\n\nX\n\nX\n\nX\n\nX\n\nX\n\n.75\n.86\n.95\n\n+ + + + +\n\n8300\n200.6\n\nS H I P MODEL\nSHIP I D\n\nAH-lG\n\n2039 1\n\nR/RRDIUS\nR/RRDIUS\nR/RRDIUS\nR/RRDIUS\n\nB K T P U S P R T L DRTRMQP ( V E R S 3 . 0 6\n\n-\n\n02/02/81 I 02/07/81\n\nFig. A5 Example of "SYMBOL" setting\n\n54\n\nBELL HELICOPTER\n\n0\nI\nn\n\n0\n\ns\n\n..60\n-\n\n0\n\nm\n\nAIRSPEED (KNOTS 1\nCOUNTER\nC81 ANALYSIS\n\nSAMPLE MEAN:\nA\n\nA\n\nA\n\nGROSS WT\nLONG CG\n\nCOUNTER\n\nMULTIPLE\n\nGROSS WT\nLONG CG\n\nRIRSPEED SWEEP\nMRIN SHAFT MlRSEPOWER\n\nBHT, USARTL DATFIMRP (VERS 3.06\n\n-\n\n1\nS H I P MODEL\nSHIP I D\n\nRIRSPEED SWEEP\nRDTDR 1, HORSEPOWER\n\nOLS MERSURED DFlTFI\nSRMPLE MEAN:\n\nMULTIPLE\n\n(XlO 2\n\n8300\n200.6\n\n02/02/81 1 02/07/81\n\nS H I P MODEL\nSHIP I D\n\nAH-1G\n2039 1\n\nBELL E L ICOPTER\n\nFig. A6 Comparison of flight and theoretical data using different symbol and line\ncombination\n\n55\n\nReport Documentation Page\n1. Report No.\n\n2. Government Accession No.\n\n3. Recipient\'s Catalog No.\n\nNASA TM 100993\n5. Report Date\n\nMarch 1989\n6. Performing Organization Code\n\n7. Authorls)\n\n8. Performing Organization Report No.\n\nMichael E. Watts and Shabob R. Dejpour (Sterling\nSoftware, Palo Alto, CA)\n\n~88164\n10. Work Unit No.\n\n505-61-51\n9. Performing Organization Name and Address\n11. Contract or Grant No.\n\nAmes Research Center\nMoffett Field, CA 94035\n13. Type of Report and Period Covered\n\n12. Sponsoring Agency Name and Address\n\nTechnical Memorandum\n\nNational Aeronautics and Space Administration\nWashington, DC 2054\'6\n\n14. Sponsoring Agency Code\n\n15. Supplementary Notes\n\nPoint of Contact: Michael E. Watts, Ames Research Center, M/S 237-5\nMoffett Field, CA 94335 (415) 694-6574 or FTS 464-6574\n\n16. Abstract\n\nThis report details the changes made on the data analysis and management program\nDATAMAP (Data from Aeromechanics Test and Analytics - Management and Analysis\nPackage). These changes are made to Version 3.07 (released February, 1981) and\nare called Version 4.0. Version 4.0 improvements were performed by Sterling\nSoftware under contract to NASA Ames Research Center. The increased capabilities\ninstituted in this version include the breakout of the source code into modules\nfor ease of modification, addition of a more accurate curve fit routine, ability\nto handle higher frequency data, additional data analysis features, and improvements in the functionality of existing features. These modification will allow\nDATAMAP to be used on more data sets and will inake future modifications and\nadditions easier to implement.\n\n18. Distribution Statement\n\n17. Key Words (Suggested by Authorls))\n\nUnclassified-Unlimited\n\nDATAMAP\nData analysis\nFlight test data\nDatabase\n19. Security Classif. (of this report)\n\nUnclassified\nNASA FORM 1626 OCT 06\n\nSubject Category\n20. Security Classif. (of this page)\n\nUnclassified\n\n21. No. of pages\n\n58\n\nFor sale by the National Technical Information Service, Springfield, Virginia 2216 1\n\n-\n\n61\n\n22. Price\n\nA04\n\n'