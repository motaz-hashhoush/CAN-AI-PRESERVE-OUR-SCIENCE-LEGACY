{"copyright": {"licenseType": "NO", "determinationType": "GOV_PUBLIC_USE_PERMITTED", "thirdPartyContentCondition": "NOT_SET"}, "subjectCategories": ["Computer Programming and Software", "Man/System Technology and Life Support", "Computer Systems"], "exportControl": {"isExportControl": "NO", "ear": "NO", "itar": "NO"}, "distributionDate": "2019-08-12T00:00:00.0000000+00:00", "otherReportNumbers": ["NPO-48425"], "title": "Mobile Thread Task Manager", "stiType": "OTHER", "distribution": "PUBLIC", "submittedDate": "2014-03-24T14:54:56.3430000+00:00", "authorAffiliations": [{"sequence": 0, "submissionId": 20140002304, "meta": {"author": {"name": "Clement, Bradley J."}, "organization": {"name": "California Inst. of Tech.", "location": "Pasadena, CA, United States"}}, "id": "152f2868711844089fd72e34b8622621"}, {"sequence": 1, "submissionId": 20140002304, "meta": {"author": {"name": "Estlin, Tara A."}, "organization": {"name": "California Inst. of Tech.", "location": "Pasadena, CA, United States"}}, "id": "dd755416fee14ca383cb06a0bfd5ab83"}, {"sequence": 2, "submissionId": 20140002304, "meta": {"author": {"name": "Bornstein, Benjamin J."}, "organization": {"name": "California Inst. of Tech.", "location": "Pasadena, CA, United States"}}, "id": "ff5f642bf93f4521b8b43e0aa5c9812b"}], "stiTypeDetails": "Other - NASA Tech Brief", "technicalReviewType": "TECHNICAL_REVIEW_TYPE_NONE", "id": 20140002304, "sourceIdentifiers": [{"number": "http://www.techbriefs.com/component/content/article/6-ntb/tech-briefs/software/17657", "type": "URL"}], "created": "2014-03-24T14:54:56.3430000+00:00", "center": {"code": "HQ", "name": "Headquarters", "id": "f0865a34ba1f474d865ab51f212fc69f"}, "onlyAbstract": false, "sensitiveInformation": 2, "abstract": "The Mobile Thread Task Manager (MTTM) is being applied to parallelizing existing flight software to understand the benefits and to develop new techniques and architectural concepts for adapting software to multicore architectures. It allocates and load-balances tasks for a group of threads that migrate across processors to improve cache performance. In order to balance-load across threads, the MTTM augments a basic map-reduce strategy to draw jobs from a global queue. In a multicore processor, memory may be \"homed\" to the cache of a specific processor and must be accessed from that processor. The MTTB architecture wraps access to data with thread management to move threads to the home processor for that data so that the computation follows the data in an attempt to avoid L2 cache misses. Cache homing is also handled by a memory manager that translates identifiers to processor IDs where the data will be homed (according to rules defined by the user). The user can also specify the number of threads and processors separately, which is important for tuning performance for different patterns of computation and memory access. MTTM efficiently processes tasks in parallel on a multiprocessor computer. It also provides an interface to make it easier to adapt existing software to a multiprocessor environment.", "isLessonsLearned": false, "disseminated": "DOCUMENT_AND_METADATA", "publications": [{"submissionId": 20140002304, "id": "520d9893e8fb4b6cb7e71bcabb520aae", "publicationName": "NASA Tech Briefs, November 2013", "publicationDate": "2013-11-01T00:00:00.0000000+00:00"}], "status": "CURATED", "related": [{"disseminated": "DOCUMENT_AND_METADATA", "id": 20140001107, "type": "ANALYTIC_PRIMARY", "title": "NASA Tech Briefs, November 2013", "stiType": "OTHER", "distribution": "PUBLIC", "status": "CURATED"}], "downloads": [{"draft": false, "mimetype": "application/pdf", "name": "20140002304.pdf", "type": "STI", "links": {"original": "/api/citations/20140002304/downloads/20140002304.pdf", "pdf": "/api/citations/20140002304/downloads/20140002304.pdf", "fulltext": "/api/citations/20140002304/downloads/20140002304.txt"}}], "downloadsAvailable": true, "index": "submissions-2022-09-30-06-07"}