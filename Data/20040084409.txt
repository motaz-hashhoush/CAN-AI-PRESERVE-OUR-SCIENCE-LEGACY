b'.\nY\n\nUnstructured Adaptive (UA) NAS Parallel\nBenchmark, Version 1.O\nHuiyu Feng*, Rob E Van der Wijngaart*, Rupak Biswas] Catherine Mavriplisi\nNASA AEXS\nIieSeaiCl? Center\nMoffett Field, CA 94035\n\nAbstract\n\nWe present a complete specification of a new benchmark for measuring the performmce of modern computer systems when solving scientific F i o b h i S fsaaiiing irregular,\ndynamic memory accesses. It complements the existing NAS Parallel Benchmark suite.\nThe benchmark involves the solution of a stylized heat transfer problem in a cubic domain,\ndiscretized on an adaptively refined, unstructured mesh.\n\n1 Introduction\nThe KAS Parallel Benchmarks (NPB) [I. 21 were originally formulated to measure the performance of high-performance computer systems, especially parallel machines, when applied to\ncomputational problems of importance to the scientific community in general, and to NASA\nin particular. Despite the relatively limited scope of the eight problems that made up NPB,\nthe benchmarks became quite popular and have been widely used by researchers, computer\nvendorshuyers, and software tool developers. Since their initial release as paper-and-pencil\nspecifications in 1991, and as source code implementations (in MPI) in 1995 121, it has become increasingly clear that the XPB problems lack in the area of irregular and dynamically\nchanging memory accesses, which may defeat the hardware and software support for memory traffic in modem computer architectures. The original NPB featured applications with\nnon-varying, (mostly) fixed-stride memory access, which can be exploited by compilers and\nspecialized hardware to reduce the cost of memory traffic. Not all applications of importance to\nNASA have such simple, predictable memory accesses, however, and it was found in a study by\nOliker and Biswas [SI that some strongly dynamic applications fare poorly when implemented\n\'Computer Sciences Corporation\ntNA4SAAdvanced Supercomputinp Division\n\'George Washington University\n\n1\n\non certain widely used parallel computers. This situation is exacerbated when the programming environment selected offers limited control over data placement and granularity of data\ntraffic, as is often the case with distributed shared memory systems.\nThe new benchmark specified here, to be incorporated in the NPB suite, aims to provide\na standardized method for gauging the performance of computer systems when running scientific applications whose memory access patterns are irregular and continually changing. The\nmotivation for the specific design choices that led to the problem specification were presented\nin a previous report [ 3 ] .\n\n1.1 Governing equation\nThe mathematical model for the heat transfer problem is as follows:\n\nTt + v . V T = eV2T + S(X.)\nt\n\n(1)\n\nwhere T is temperature; v is the flow velocity; F is the heat diffusion coefficient; t is time; and\nS(x.t ) is a source term defined by\n\nHere I I I I signifies the Euclidian norm. The location vector x is defined by ( 2 ,y: 2 ) . and xg\nis the initial location of the center of the source. The initial temperature distribution on the\ndomain is zero, and the Dirichlet boundary conditions are fixed at zero as well. The prescribed\nvelocity field v = (u, w) is uniform and constant, and equals the speed of the source.\nu.\nThus, it is known explicitly when and where mesh refinement and coarsening are required.\nFine mesh ceIls are prescribed where large temperature gradients exist, i.e. near the traveling\nsource. After the source has passed a certain region, high resolutions are no longer needed\nthere, and grid coarsening is applied. Even though the elements are rectangular, the circular\nshape of the source results in a nonuniform grid, see Section 4.\n\n1.2 Temporal discretization\nTemporal discretization is based on an operator splitting technique developed by Maday, Patera, and Rgnquist [5].The two-step time spIitting scheme for time integration of the governing\nequation is:\n\nThe explicit, fourth-order Runge-Kutta method, R , in Eq. (3) is defined as follows.\n&\n\nkz = At(-v. V(T"\nIC3\n\n= at<-. . V ( Y\n\nkl\n+ -)\n2\n\nk2\n+ -)\n2\n\nA\n+ -))t\n2\nAt\n+ S ( X , t + -))\n2\nt S(X,\nt\n\n(5)\n\nThe Euler Implicit method used for the time advancement of the diffusion term (4)leads\nto a large system of equations after spatial discretization. It is solved using a Preconditioned\nConjugate Gradient (PCG) method, described in Section 3.3.\n\n2\n\nGridsystem\n\nFor spatial discretization of the problem we use the Spectral Element Method (SEM) [SI, a\nhigh order technique for solving partial differential equations. It is a hybrid of spectral and\nfinite element methods, combining their respective high accuracy and geometrical flexibility.\nIn this benchmark we use a non-conforming, adaptively refined grid that changes as the heat\nsource travels through the domain. Details about grid adaptation are presented in Section 4.\nNon-conformity of the grid is restricted; a grid cell-or elenzent-is refined by dividing all its\nsides by two, and if two elements have a common face or edge, the ratio of the lengths of their\nt\n~\nsides is at most two. Hence, iftwn e l e m e ~~ ~ h 2 k e ,ethe f x e s are eithci cqxi: iii size, Cione is four times the size of the other. Simple examples of a conforming and ; non-conforming\ni\ngrid are shown in Figure 1 .\n\n!a)\n\n(b)\n\nFigure I : (a) Conforming grid, (b) Non-conforming grid\n\n3\n\n2.1 Collocation points\nEach element is covered by a Cartesian product of ( N + 1)3collocation points, where N is\nthe order of the Legendre-based polynomials used to evaluate the interpolated solution on the\nwhole element. For this benchmark N is fixed at four for all elements. There are collocation\npoints on all element boundaries. Their locations within each element are those corresponding\nto Gauss-Lobatto-Legendre (GLL) quadrature, see Section 3.2. If the grid has E( elements,\nthe total number of collocation points is (N q3h\' = 125K.Where elements meet, some\nof the collocation points belonging to the different elements coincide in space-they are not\ntopologically unique. The collocation points x e used for the advancement of the convection\nas well as the diffusion term. For each such point an elemental contribution is computed, as\ndefined in Section 3, which can be evaluated locally using just the collocation points within a\nsingle element.\n\n+\n\n2.2\n\nGrid points\n\nThe purpose of SEM is to compute a single solution value for each unique point in space\ncontained in the grid system (a grid point). Each such value is called a degree of freedom.\nThere are always more collocation points than grid points, except for a trivial grid containing\na single element. For example, a conforming grid of Ad x Ad x h elements has ( M (N 1 ) ) 3\nf\ncollocation points and ( M N + I ) 3 grid points. For a non-conforming grid the number of\ndegrees of freedom depends on the particular grid configuration. Each grid point coincides\nwith one or more collocation points, but not all collocation points coincide with a grid point.\nWhere a coarse and fine element meet along an edge or face, only the collocation points on the\nedge or face of the finer element are included as grid points. Figure 2 shows an example of the\nconfiguration of grid points and collocation points for a simple grid.\n\n+\n\n2.3 Mappings\nIn the course of the solution process it is necessary to map values from collocation points to grid\npoints, and vice versa. The former is called a gather, and the latter a scatter. These operations\nform the basis of the Mortar Element Method (MEM) [6]. Both gather and scatter are the\nidentity operation (copy) for points in element interiors, and for points on grid boundaries. In\nthat case a grid point coincides with a single collocation point. Below we define the mappings\nfor all other points in the grid, all of which are on interfaces between elements.\n2.3.1 Scatter\nCONFORMING INTERIOR, EDGE\nFACE\nIf all grid points in the interior of a face of an element coincide with collocation points\nof that element, the face interior is conforming. If all grid points on an edge of an element\ncoincide with collocation points of that element, the edge is conforming.\n\n4\n\n/\n\n,\n\n..\n\n.\n\nGrid\n\n0\n\nGrid points\n(front plane)\n0\n0\n\n0\n\n0\n\n.\n\n0\n\n0\n\na 0 0\n\n0\n\n0\n\n4\n\na\n\n-\n\nFigure 2: Collocation and grid points for simple grid\n\nThe scattering consists of copying values at grid points to the coincident collocation points\nin the conforming loci defined above.\nNON-CONFORMING\nFACE\nA face of an element is non-conforming if neither the face interior nor its four edges are\nconforming.\nThe scattering of values satisfies a jump condition that minimizes the difference in values\nacross the interface in an integral sense [6]. This is accomplished as follows. Let the grid points\n1;k =\nthat lie on the face of the coarse element be indicated by (m,k ) ;m = 1,.. . 2 N\n1;.. . 2V 1, and let the quantity to be scattered be called @. The scattered values aiJ at\ni\ncollocation points on the coarse-element side of the interface are:\n\n+\n\n+\n\n5\n\nThis scatter operation to the collocation points of a single element face can be viewed as a collection of one-dimensional scatterings in two respective coordinate directions. For the derivation of the one-dimensional scatter matrix Q we refer to [6]. Its elements (transposed) are\nlisted in Table 1. It follows from the shape of Eq. 6 that the order in which the one-dimensional\nscatterings are carried out does not matter.\n\nNON-CONFORMING\nEDGE\nAn edge of an element face is non-conforming if it is adjacent to a conforming face interior,\nbut is itself not conforming. In the scattering to a non-conforming edge, either i&mor j & k in\nEq. 6 are fixed. The fixed value is 1 or AT+ 1 f a either i or j , and 1 or 2N 1 fer the other\nfixed index, depending on the location of the edge.\n\n+\n\nI\n\ni=2\n\nl j = 2 l\n\n1.0.\n0.0\n\nj=7\n\nj=s\nj\n\n=9\n\n0.0\n\n-0.17728432 18615690\n0.4398680650316104\n8.333333333333333E-2\n0.0\n-4.854797457965334E-2\n-5.891568407922938E-2\n8.333333333333333E-2\n-3.700 139242414S30E-2\n\nI i=4 I i=5 I\n\ni=3\n9.375E-2\n\nI\n\nQ29\n\n0.2083333333333333\n0.356 1799597042 137\n0.140625\n\n0.0\n\nQ27\n\n0.0\n0.0\n0.0\n0.0\n0.0\n\nQ26\n\nQZ5\n\nQ34\n\nQ24\n\nQm\n- -_\n\nQx\n- ~.\n\nQ32\n\n.. _\n-_\n\nQ31\n\nQz\n2\nQ21\n\n0.0\n1.0\n\nTable 1: One-dimensional scatter matrix Qij for N = 4\n\nThe global scattering operation from the grid points to all collocation points can be written\nas: R, t BR,, where B is the global scatter matrix.\n\n2.3.2 Gather\nThe global gathering of residuals from the collocation points to all grid points simply involves\nthe transpose of the global scatter matrix: R, t OTR,[7]. Use of the\n8)-pair is critical\nfor the solution of the linear system of equations for advancing the diffusion term, since it\nguarantees symmetry and positive definiteness of the overall discretization matrix.\nThe gathered value of the residual at any grid point consists of the sum of all contributions\nfrom neighboring elements, i.e. the sum of the results of all relevant local gathering operations,\nto be defined below. This is termed direct stiaizess sunznzation.\n\n(eT,\n\nCONFORMING INTERIOR, EDGES\nFACE\nOn conforming face interiors and edges, the value at a grid point is the sum of the residuals\nat all coincident collocation points.\n\n6\n\nNON-CONFORMING\nFACE\nOn a non-conforming face, the contribution brnrk of the elemental residuals\npoints to the residual at a grid point (m,k ) that lies on the same face is:\nN+l N f l\n\nQ, at collocation\n\nN+1 NS-1\n\nNON-CONFORMING\nEDGE\nFor the computation of elemental contributions to the residuals at grid points on nonconforming edges we again use Eq. 7, but either i&m or j&k are fixed. The fixed value is\n1 or AT+ 1 for either i or j , and 1 or 2 N + 1 for the other index, depending on the location of\nthe edge.\n\n3\n\nSpatial discretization\n\nWithin each element the dependent variable, temperature T , is approximated by:\nN+l N+1 N-j-1\n\n. .\n\nis the ~ ! n e? the ten:pe;a:urc\ne\nzt coXocation point (i, j , A > W I ~ ~ I L iiic eierrienr: tpis the\nLI\npth GLL collocation point; T , s, and f are local coordinates that sweep out the cubical element;\nmapping from global to local coordinates is as follows:\nT,A\n\nwhere ( X I , zl) and (Q, y., z2) are the coordinates of the diagonally opposite corner points\nyl,\nof the element with the smallest and largest coordinate values, respectively. The interpolating\npolynomial h, which is a function of the Nth order Legendre polynomial, L N , and its derivative,\nLh, has the property that hp(&) = Spq for p , q E (1, ..., N + l}, where JPq is the Kronecker\ndelta. We also note that LL(,&)= 0 for q E (2, ..., N } .\n\n3.1 Advancing the convection term\nAt the start of each time step the values of T at the grid points are scattered to the collocation\npoints. Eq. 5 is used to advance the convection term using only information local to the element. We use the spatial discretization of T , defined in Eq. 8, to compute the element-wise\napproximation to its directional derivative at collocation point (i,j , k ) :\n\n7\n\nwhere L, is the size of the element in the ith coordinate direction, and D,, is defined as\nThe values of D are listed in Table 2.\n\n%(E,).\n\nTable 2: Derivatives D,, of one-dimensional elemental basis functions hJ for N = 4\n\n3.2\n\nAdvancing the diffusion term\n\nThe variational form of Eq. (4) is:\n\nwhere (.;) represents the L2 inner product, and \xe2\x80\x98u is a test function.\nWe select for the basis of the discrete space of test functions and solutions a set of functions V f { ~ ( p ) , ~ } , corresponding to exactly one grid point xp.The basis function corh\neach\nresponding to xpis obtained by the residual gathering operation H T , applied to the elemental\nbasis functions u ( r , s, t),,,, = h ~ ( ~ ) h , ( s ) hof (all) elements that contain xp.This operation\n~ t\nguarantees continuity of the solution at element vertices and at conforming interfaces, as well\nas a minimum jump-in an integral sense-across non-conforming element interfaces [61.\nHence, we can compute elemental residual contributions CDZ3k for each collocation point in\neach element and compute the total residual at a grid point by applying the gather operation BT\n(see Section 2.3.2). We define:\n\nwhere u i J k is the elemental basis function for collocation point ( 2 , j,k ) .\nGLL quadrature is used to calculate the integrals in Eq. 13. One-dimensional GLL quadrature of a function 7 is defined as follows:\n\n8\n\nGLL quadrature locations and the corresponding weights p z are given in Table 3. Multidimensional versions of GLL quadrature are derived by applying Eq. 14 successively in the\nrespective coordinate directions.\ni\npi\n\n2\n3\n4\n-0.6546536707079771 0.0\n0.6546536707079771\n1/10 I\n49/90\n32/45\n49/90\n1\n-1.O\n\n5\n1 .O\n1/10\n\nTable 3: GLL collocation points tiwith aSsociated weights pi for LfiI 4.\n=\nSubstituting Eq. 8 into Eq. 13 and applying GLL quadrature yields:\nN+l\n\n(15)\n\n9.\n\nUpon gathering\nwhere lJ1 is proportional to the volume of the element, i.e. IJI =\nthe residual contributions at the grid points and setting the total residual equal to zero. we\nsymbolically obtain the following system of equations:\n\nBT(IIBT,\xe2\x80\x9d\xe2\x80\x9d - b) = 0\n\n(16)\n\n5: \xe2\x80\x99\n!+\nand T;+l signify the temperature at the collocation points after\nwhere b = El?:+\xe2\x80\x99.\nadvancement of the convection term, and at the grid points after advancement of the diffusion\nterm, respectively. The matrix 4 represents the assembled elemental discretization matrix of\nthe term in square brackets in Eq. 15 , which is symmetric, positive definite. Obviously, BTA8\nis symmetric as well. Since the scatter matrix B is of full rank, BTAO is also positive definite. B\nrepresents the assembled elemental discretization matrix of the term in curly braces in Eq. 15.\n\n3.3 Conjugate Gradient method\nWe use the Preconditioned Conjugate Gradient (PCG) method to solve Eq. 16.\nThe initial guess To is based on F:t1: To = cr7f:+l. The oT operator is applied to the\nsolution on collocation points, ?:\xe2\x80\x99 to obtain To on grid points. It is defined as follows: on\n:\n\n9\n\nelement interfaces the solution at a grid point is computed by averaging values (arithmetic\nmean) at the coincident collocation points of all neighboringjfilze elements. If a grid point is on\na conforming interface, all neighboring elements are considered fine elements. At points not\non element interfaces the grid point value is set to the value at the coincident collocation point.\nIt should be noted that although both o-* and OT constitute gather operations, the latter\ncannot be used to compute actual solution values. It is specificalIy derived to gather residuals,\nsuch that the solution of the resulting system of equations satisfies a minimum jump condition\nwhen the aggregate residual vanishes. This gather operation does not correspond to any kind\nof projection or averaging, and hence cannot be used to gather solution values.\n\nwhere m refers to iteration number, rm is the residual, p m the search direction, P is the preconditioner, qm is a vector associated with the preconditioning and (.,.) is the usual discrete inner\nproduct. Note that the dependent variable T, does not have to be updated within the PCG\niterative loop. It is sufficient to accumulate the quantities ampm at each grid point and scatter\ntheir sum to the collocation points after the PCG iterations have been completed, where it gets\nadded to ff+\'. stop criterion for the iterations is given in Section 5 .\nThe\nA diagonal preconditioner P is used. See the Appendix for how to compute it.\n\n4\n\nMesh adaptation\n\nThe mesh adaptation is subject to two restrictions:\n1. the maximum number of levels of refinement is constant for each problem size (Class).\n\n2. the difference i n size between any two elements that have a face or edge in common is at\nmost a factor of eight (one level of refinement).\n\nI\n\nr\n\nI\n\n\'I\n\n20\n\n\'\n\n21\n\n1\n\n17\n\nI\n\nI\n\n!\n\n13 114\n,\n\nI\n\ni 9\n\nI\n\n1\n\n101\n\n17\n-\n\n1\n\nI\'\n\n9 \\IO1\nI\n\ni\n\nFigure 3: (a) 2D front view of a valid 3D mesh, (b) Invalid mesh that violates criterion 2\n\n4.1 Refinement and coarsening\nBoth refinement and coarsening are isotropic. For refinement, an element is split zveniy ii: the\n\nz, and z directions into eight child elements. For coarsening, the eight children are merged\ny\ninro one element, the parent. The coarsening is performed only when all eight child elements\nare identified to be coarsened. Both refinement and coarsening must obey the two adaptation\ncriteria. If an element is marked for refinement (see Section 4.3), but can not be refined due\nto restriction 2, its neighboring elements which prohibit the refinement will be marked to be\nrefined first. Any element not marked for refinement will be coarsened, if possible.\nIf a refinement will result in a difference of more than one level of refinement between\nneighboring elements, additional refinements will be applied as needed until all required refinements are obtained. For example, in the situation of Fig. 3 (b), elements 17, 20 and 21 will\nbe refined first to allow the refinement of element 14.\nIn Fig. 4, the coarsening of elements 61, 62, 64 and 65 may be desired. However. the\ncoarsening will result in element 17 having two levels of refinement difference with element\n61, with which it shares an \'edge. Thus, the coarsening is cancelled. If all elements in Fig. 4\nare to be coarsened, this is accomplished in two steps. The merge of elements 12, 13, 16, and\n17 is performed first, then the other merge is performed. Therefore, no invalid grid will appear\nat any time.\n\n11\n\nFigure 4: 2-D front view of a 3-D mesh; coarsening of elements 61, 62, 64 and 65 alone is not\na1lowed.\n\n4.2 Grid mapping\nAfter a new grid has been generated, the old solution must be transferred to it. This is accomplished by mapping collocation point values from coarse to fine elements through multidimensional interpolation. It consists of sampling the solution Tfat the collocation points of\nthe finer elements using Eq. 8. For evaluation of function values at just one level of refinement difference we tabulate h,(&), where h, is the zth interpolation polynomial pertaining to\nthe coarser element (i = 1, . . . . N ) , and\nis the jt\xe2\x80\x9d collocation point of the union of finer\nelements contained in the coarse element. See Table 4. That is, collocation points 1 through\n2 \xe2\x80\x98 1 are contained in the two adjacent fine elements that span the coarse element in a cerA\nr\ntain coordinate direction, i.e. 1 through h + 1 in the first, and N + 1 through 21V 1 in the\nsecond. If interpolation across more than one level of refinement needs to be performed, the\ninterpolation can be defined recursively, using Table 4 repeatedly, or directly, by sampling T at\nthe appropriate collocation point locations.\n\n+\n\n+\n\nTable 4: Interpolation coefficients From coarse to fine elements (one level of refinement)\n\n12\n\nThe mapping from fine to coarse elements is always defined recursively. The interpolation formula Eq. 8 for the fine element is used to evaluate T at the collocation points of the\nelement at the next coarser level that fall within the fine element. For those coarse-element\ncollocation points that are on the boundary between fine elements it does not matter which fine\nelement contributes the interpolated values. The solution process guarantees that coincident\nfine-element collocation point solution values are identical at the end of each time step. We use\na variation of Eq. 8 to compute the value of T" at the coarse-element collocation points f r c n\nthe fine-element values T-f:\n\n+\n\nwhere h, is one of 2-AT 1 interpolation polynomials of two adjacent fine elements within the\ncoarse element. & is the j t h collocation point of the coarse element, and q;k the value of the\nis\ntemperature at collocation point ( 2 , j : k ) of the union of all eight adjacent fine elements making\nup the coarse element. Since coincident collocation points at fine-element boundaries share the\nsame value of Tf, count them as the same point in Eq. 18. We list the values of h l ( t J )in\nwe\nTable 5 below.\nM\n\nI\n\nI\n\nj\n\n)\n\ni=1\ni =2\ni =3\ni =4\nZ =5\n\nI\n\n1\nI\n\nj =1\n1.0\n0.0\n0.0 1I\n0.0\n0.0 1\n\n1\n1\n\n\' ~ z t i 0.0\nj\n2\n\n=7\n\ni =8\ni =9\n\nI\n\n0.0\n0.0\n0.0\n\n1\n\n1\n\nj = 2\n\n-0.1179652785083428\n0.5505046330389332\n0.7024534364259963\n-0.1972224518285866\n6.222966087199998E-2\n0.0\n0.0\n0.0\n04\n\nj=3\n0.0\n0.0\n\nI\n\n1\n\nI\n\nj=4\n0.0\n0.0\n\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n\n0.0\n0.0\n\n6.222966087199998E-2\n-0.1972224518285866\n1 0.7024534364259963\n0.5505046330389332\n-0.1 179652785083428\nI\n\n1\n\nI\n\n1\nI\n\nj=5\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n\nTable 5: Interpolation coefficients from fine to coarse elements\n\n4.3 Adaptation criteria, frequency\nAny element that has a nonzero overlap with the heat source gets refined. The refinement\nprocedure is performed recursively until all elements that have nonzero overkp wirh ine lied;\nsource have the minimal element size of that class. Overlap is considered nonzero if the point\nof the element closest to the center of the heat source is at a distance of less than Q, where il is\nthe radius of the heat source. Other elements are refined up to the iizinimr~rn\nlevel required to\nsatisfy mesh restriction 2 (page IO). Due to the movement of the heat source, some elements\nmay no longer have overlap with the heat source. They will be coarsened recursively until ail\n13\n\npossible coarsenings are done, obeying restriction 2. The first adaptation takes place before\ncomputations start, Le., before the first time step. Subsequently, after a certain prescribed\nnumber of time steps (differs for the different benchmark classes, see Table 6) the grid gets\nre-adapted using the same criteria as above.\n\n5\n\nVerification\n\nThe initial grid has one element, [0, lI3,which makes up the whole domain. The center of the\n3 3 2\nheat source is located at x = (?: 7 ; ?) at the beginning of tne computation, Le. i = 0. i t inoyes\no\nat a speed of v = ( 3 , 3 , 3 ) . The size of the source is defined by a. We set the heat diffusion\ncoefficient E to 0.005 for all cases. The correctness of the result is verified by the integral of\nthe solution Jo TdR at the end of the time stepping. It is computed as follows:\nN + l N+1 N+I\n\nA\n\nWe list the parameters and verification values for all benchmark classes in Table 6. rit is the\nnumber of time steps, nl is the maximum number of levels of refinement, nt, is the number of\ntime steps between adaptations, nPCG is the number of iterations for the PCG method. The\nsize of the time step At is related to the maximum number of levels of refinement as follows:\nAt = 0.04 * 2-nL.\nFor convenience we also list the number of elements, ne, at the end of the computation.\nA solution i s considered incorrect if the absolute value of the difference between computed\nintegral and verification value, divided by the verification value, exceeds the error threshold of\n10P.\nClass nt nt,\nS\n50\n5\nW\n100 5\nA\n200 5\nB\n200 5\nc 200 5\nD\n250 5\n\n1\nnPCG n\n4\n10\n\na\n0.04\n\n10\n10\n10\n10\n10\n\nJlT d R\n\n1.890013 1 10962E-3\n2.569794837076E-5\n8.93999628 1443E-5\n4.50756 192290 1E-5\n1.544736587 100E-5\n1S77586272355E-6\n\nTable 6: UA verification values\n\n14\n\nn,\ne\n246\n526\n2038\n7841\n31641\n506297\n\n6 Summary\nWe now give an overview of the steps in the completion of the benchmark.\n1. refine the initial grid based on the refinement criteria.\n\n2. set the solution at all collocation points to zero.\n\n3. compute the source at all collocation points, using Eq. 2.\n\n4. r;dvance the sslution (convectim tern) at d l collocation p i n t s , using Eqs. 5 alid 11.\n5. set T for PCG, using the operation g T , described in Section 3.3.\no\n\n6. advance the solution (diffusion term) at all grid points, using PCG described in Section\n3.3.\n\n(a) c o m p t e the element-wise residual contribution defined in Eq. 13.\n(b) collect the residual at the grid points, using the gather operation BT.\n(c) scale the residual, using diagonal preconditioning.\n(d) scatter the scaled residud to the collocation points.\n\n(e) apply the element-wise diffusion operator (Eq. 13) to the scaled residual.\n\n(0gather the resulting residual increments at the grid points.\n(g) accumulate the temperature updates at grid points.\n(h) compute il new recidiial vectnr\n\nCi) scale the residual.\n\nC) compute a new search direction.\nj\n(k) return to step 6e as long as the stopping criterion has not been satisfied.\n\n(1) scatter the temperature update to collocation points.\n7. if the step qualifies, refine/coarsen the grid based on the new location of the smirce and\nmap the solution at the collocation points to the new set of collocation points.\n\n8. return to step 3 as long as the total number of time steps has not been exceeded.\n\n.\n\nReferences\n[ I ] Bailey, D.H., Barton, J., Lasinski, T. and Simon, H. (Eds.), The NAS Parallel Benchmarks, NAS Technical Report RNR-91-002, NASA Ames Research Center, Moffett Field,\nCA, 1991.\n\n[a]\n\nBailey, D.H., Harris, T., Saphir, W.C., Van der Wijngaart, R.F., Woo, A.C. and Yarrow,\nM., The NAS Parallel Benchmarks 2.0., NAS Technical Report NAS-95-020, NASA Ames\nResearch Center, Moffett Field, CA, 1995.\n\n[3] Feng, H, Van der Wijngaart, R.F. and Biswas. R., Design of Unstructured Adaptive (UA)\nNAS Parallel Benchmark Featuring Irregular, Dynamic Memory Accesses, NAS Technical Report NAS-01-012, NASA Ames Research Center, Moffett Field, CA, 2001.\n\n[4] Maday, Y. and Patera, A.T., Spectral element methods for the Navies-Stokes equations.\nin Noor, A.K., editor, Sfate-of-the-art surveys in computational niecnanics, ASME, New\nYork, 1988.\n[SI Maday, Y., Patera, A.T. and RQnquist, E.M., An operator integration-factor splitting\n\nmethod for tirne-dependent problems: application to incompressible fluid flow, Joiirnal\non Scientijc Conzputing, Volume: 5 , Number: 4, Page: 263-292, 1990.\n\nIC] Maday, Y., Mavriplis, C.A. and Patera, A.T., Non-Conforming Mortar Element Methods:\nApplication to Spectral Discretizations, in Domuin Decomposition Methods, Page: 392418, 1989.\n\n[7]Mavriplis, C.A., Nonconforming Discretizations and a Posteriori Error Estimators jor\nAdaptive Spectral Element Teclzniques, PhD thesis, Massachusetts Institute of Technology, 1989.\n[SI Oliker, L. and Biswas, R. Parallelization of a Dynamic Unstructured Algorithm Using\nThree Leading Programming Paradigms, IEEE Transactions on Parallel arzd Distributed\nSysteins, Vol. 11, No. 9, pages 931-940, 2000.\n[9] Patera, A.T., A Spectral Element Method for Fluid Dynamics: Laminar Flow in a Channel\nExpansion, Joriinal of Conzputational Physics, Volume: 54, Number: 4, Page: 468-488,\n1984.\n\n16\n\n"\n\n*.\n\nAppendix: Simple method for computing the preconditioner\nThe system to be solved in the diffusion step can be written as BT-4Bx = BTb,where A is the\nassembled discretization matrix. Therefore, the diagonal preconditioner P satisfies the relation\n= (QTA6),,6,. However, BTAB is never computed explicitly, because it is inefficient to\ndo so and because it would be too large to store. A straightforward way to obtain P,, is to\nevaluate the matrix-vector products u, = (QTAB)e, as many unit vectors e, as there are grid\nfor\npoints. The zth entry of u, is the zth diagonal element of (BTAB).This procedure, which we\ncall GENERAL,\ncomprises three steps:\n\ne;\'\n\n1. Calculate Oe,,the resulting vector is the zth column of B\n2. Calculate ABe,. Each row of A relates to one elemental collocation point. The sum\n-4, (Qe,), is the pth entry of Me,. A is a block diagonal matrix,\nover all elements\neach block corresponding to one element, ntot refers to the total number of collocation\npoints. In conforming cases, each element of 8 is either zero or one, and, hence, so is\neach element of vector Be,. The product ABe, is a vector, whose pth entry is nonzero iff\n(Oe,), = 1, and has the value A,, in that case.\n3. Calculate (BTABe,).Since we only need the ith entry of the resulting vector (BTABe,),\nwe only need to perform the inner product of the ithrow of BT with AOe,. Note thzt the\nzth row of BT is just the ith column of 0. In conforming cases, the resulting (B*ABe,) is\nApp,\nvector u,, whose ithentry is CpEG, G, = {gl(Bez)g= 1).\n\nIn conforming cases, this procedure can be SIMPLIFIED.\n1 FvalI-late -4,,t,,\'\nhC2!$7\n\nr?iithir? e2ch e!em;Ilt.\n\n2. Construct a vector a whose mth entry equals -Amm.\n\n3. Perform a global stiffness summation on a: a = BTa.\n4. Preconditioner P is obtained from a: P , = ai.\ni\'\n\nTo solve the overall problem we use a hybrid approach. The SIMPLIFIED procedure is used\nto compute the preconditioner for grid points in the interior of elements and on conforming\nboundaries. The GENERAL procedure is used on nonconforming boundaries.\n\n'