b'NASA\xe2\x80\x99s IV&V Program\nSafety and Mission Assurance (SMA) Office\nInformation Assurance/Cybersecurity Support\n\nAddressing SW Security\n11/30/15\nBrandon Bailey\nbrandon.t.bailey@nasa.gov\n304-629-8992\n\nhttp://www.nasa.gov/centers/ivv\n\nIntroduction\n\xe2\x80\xa2 Historically security within organizations was thought\nof as an IT function (web sites/servers, email,\nworkstation patching, etc.)\n\xe2\x80\xa2 Threat landscape has evolved (Script Kiddies, Hackers,\nAdvanced Persistent Threat (APT), Nation States, etc.)\n\xe2\x80\xa2 Attack surface has expanded \xe2\x80\x93 Networks\ninterconnected!!\n\xe2\x80\xa2 Some security posture factors\n\xe2\x80\x93 Network Layer (Routers, Firewalls, etc.)\n\xe2\x80\x93 Computer Network Defense (IPS/IDS, Sensors, Continuous\nMonitoring, etc.)\n\xe2\x80\x93 Industrial Control Systems (ICS)\n\xe2\x80\x93 Software Security (COTS, FOSS, Custom, etc.)\n2\n\nCustom SW \xe2\x80\x93 Gets\nExploited!\n\n3\n\nThreats in Space\nSECURITY THREATS AGAINST SPACE\nMISSIONS\nCCSDS 350.1-G-1\nMarch 2015\n\nCCSDS was founded in 1982 by the major space agencies of the world, the CCSDS is a multinational forum for the development of communications and data systems standards for\nspaceflight.\n\nSecurity Threats Against Space\nMissions was developed to provide\nmission planners with an overview on\nthreat assessment as well as the\ncommon threats and threat sources\nthat exist for various categories of\ncivilian space missions.\n\n4\n\nThreats in Space\nSECURITY THREATS AGAINST SPACE\nMISSIONS\nCCSDS 350.1-G-1\nMarch 2015\n\nCCSDS was founded in 1982 by the major space agencies of the world, the CCSDS is a multinational forum for the development of communications and data systems standards for\nspaceflight.\n\nSecurity Threats Against Space\nMissions was developed to provide\nmission planners with an overview on\nthreat assessment as well as the\ncommon threats and threat sources\nthat exist for various categories of\ncivilian space missions.\n\n5\n\nThreats in Space\nApplicable Threats to Space Missions\n\nImpacts\n\nDenial-of-Service\n\n\xef\x82\xb7\nModification of information\n\xef\x82\xb7\nSystem damage\nLoss of command, control and data\nLoss of sensitive data\n\xef\x82\xb7\nLoss of Command telemetry link\n\xef\x82\xb7\nLoss of access to resources\nLoss of access to resources\n\nMasquerade\n\n\xef\x82\xb7\n\nData Corruption\nGround Facility Physical Attack\nInterception\nJamming\n\nReplay\nSoftware threats\n\nUnauthorized Access\n\nTainted Hardware Components\n\nPotential to disrupt operations\n(uplink)\n\xef\x82\xb7\nPotential to receive false information\n(downlink)\nSystem damage (possible safety of life\nissues)\n\xef\x82\xb7\nUndesirable events\n\xef\x82\xb7\nSystem damage\n\xef\x82\xb7\nEnable other threats\n\xef\x82\xb7\nDisruption of operations\n\xef\x82\xb7\nSystem damage (possible safety of\nlife issues)\n\xef\x82\xb7\nHidden, Malicious capabilities\n\xef\x82\xb7\nSystem instability\n\xef\x82\xb7\nSystem damage\n\xef\x82\xb7\nUndesirable System effects\n\nCould Software Be Involved?\nYes; SW attacks could result in data corruption\nNo\nNo\nNo\nYes; SW DoS attacks are common and can affect both\nground, flight and web applications\nYes; SW protections can be placed to prevent\n\nYes; SW protections can be placed to prevent\nYes\n\nYes; SW protections can be placed to prevent or SW\ncan be used to gain unauthorized access\nNo\n\n6\n\nReducing the SW Risk\n\xe2\x80\xa2 NASA knows that software is one of many vulnerabilities that\ncould adversely impact Mission Ops\n\xe2\x80\xa2 Levying requirements from the top (NPRs 2810 , 7150.2B,\n7120.5E, and the SW Assurance Standard/Handbook)\n\xe2\x80\xa2 Software security \xe2\x80\x9cdefects\xe2\x80\x9d are arguably preventable in most\ncases\n\xe2\x80\x93 During custom code development\n\xe2\x80\xa2 Awareness, Training, Tooling (i.e. SCP)\n\xe2\x80\xa2 Secure Development\n\xe2\x80\xa2 Rigorous SwA (Project and IV&V)\n\n\xe2\x80\x93 Software supply chain\n\xe2\x80\xa2 COTS and Open Source (i.e. Origin Analysis)\n7\n\nSecure Coding Portal (SCP)\nBackground\n\xe2\x80\xa2\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\nRecognizing the need to counteract the threat of\nexploitation of custom developed software\nA single touch point for NASA\ndevelopers was established to learn\nhow to develop code securely\nUtilizes existing NASA Engineering\nNetwork (NEN) infrastructure\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nPartnerships established with experts\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\n\xe2\x80\xa2\n\nInitial deployment is behind NASA firewall\nCMU-SEI\nRobert Seacord (Author of CERT C Std.)\nSafari Books Online (custom secure coding tutorial)\n\nLaunched July 20, 2015\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\nTwo Newsletters Distributed (can be shared)\nCustom Secure Coding Tutorial Deployed\nContact securecodingportal@lists.nasa.gov for additional\ninformation\n\n8\n\nSecure Coding Portal\nContent\n\xe2\x80\xa2 Secure Coding Discussion Forum \xe2\x80\x93 providing a friendly environment to\ndiscuss all aspects of Secure Coding with fellow engineers and experts\n\xe2\x80\xa2 Vulnerability Updates \xe2\x80\x93 containing information about the latest software\nvulnerabilities and any insight into what systems, or types of systems,\ncould be affected along with how to detect and mitigate these\nvulnerabilities\n\xe2\x80\x93 Vulnerability Newsletter will also be distributed directly to stakeholders\n\n\xe2\x80\xa2 Tools \xe2\x80\x93 containing information about tools utilized by NASA for security\nanalysis of software, including references, available training, and any\nrelative insight/lessons learned from NASA practitioners\n\xe2\x80\xa2 Links \xe2\x80\x93 containing references to security standards, documentation, and\ninformation\n\xe2\x80\xa2 Top 25 CWEs \xe2\x80\x93 using CWSS to classify Top 25 CWEs for ground and flight\n\xe2\x80\xa2 Tutorial \xe2\x80\x93 custom made tutorial by secure coding experts\n\xe2\x80\xa2 Ask an Expert \xe2\x80\x93 providing the ability for any community member to\nrequest assistance from field experts\n\n9\n\nSecure Development\n\xe2\x80\xa2 Utilize Best Practices from Secure Coding Portal\n\xe2\x80\x93 Coding Standards (Ex. CERT C, C++ or JAVA Stds)\n\xe2\x80\x93 Integrate tools into development environment\n\xe2\x80\xa2 Code Analyzers (i.e. Klockwork, Fortify, Flexelint, CodeSonar, Sonatype,\nBlackDuck, etc.)\n\xe2\x80\xa2 Great resource for identifying tools (Report | Spreadsheet)\n\n\xe2\x80\x93 Common Weakness Enumeration (CWE), Common\nVulnerabilities and Exposures (CVE), and Common Attack\nPattern Enumeration and Classification (CAPEC) information\n\xe2\x80\x93 Defense in Depth\n\xe2\x80\x93 \xe2\x80\xa6\n\n\xe2\x80\xa2 Training\n\xe2\x80\x93 Secure Coding Tutorial\n\xe2\x80\x93 Defensive Programming (available online in SATERN)\n\xe2\x80\x93 Codiscope\n10\n\n\xe2\x80\x9cHerding the Cats\xe2\x80\x9d\nServices sponsored by Department of Homeland Security and managed by Mitre\n\nCWE:\n\xe2\x80\xa2 Serves as a common language\nfor describing software security\nweaknesses in architecture,\ndesign, or code\n\xe2\x80\xa2 Provides a:\n\xe2\x80\x93 Standard measuring stick for\nsoftware security tools targeting\nthese weaknesses\n\xe2\x80\x93 Common baseline standard for\nweakness identification,\nmitigation, and prevention efforts\n\n\xe2\x80\xa2\n\nUtilize CWE to better\nunderstand, identify, fix, and\nprevent weaknesses and\nvulnerabilities\n\nCVE:\n\xe2\x80\xa2 Identifies publicly known information\nsecurity vulnerabilities and assign them a\nCVE_ID.\n\xe2\x80\xa2 Scored 1 to 10 on CVSS scale\nCAPEC:\n\xe2\x80\xa2 Community-developed list of common attack\npatterns\n\xe2\x80\xa2 Comprehensive schema and classification\ntaxonomy\n\xe2\x80\xa2 International in scope\n\nTaking into account attack pattern and any other factors to generate list of CWEs that are\ncritical. Tools report findings in CVEs (known) and CWEs (potential) -> Identify then Fix!\n\n11\n\nProject SwA \xe2\x80\x93 Assuring\nSecurity\n\xe2\x80\xa2 Currently updating SwA Standard and SwA Handbook\n\xe2\x80\xa2 Educating SwA personnel\n\xe2\x80\x93 Educate on importance of SW security\n\xe2\x80\x93 SwA personnel can leverage the same training as developers (i.e. SCP)\n\xe2\x80\xa2 In order to \xe2\x80\x9cassure\xe2\x80\x9d it, you must understand it!\n\n\xe2\x80\xa2 Not a clipboard exercise \xe2\x80\x93 SwA needs to use tools or ensure tools\nare being used to ensure SW is secure\n\xe2\x80\x93 Tools have latest security signatures and integrate industry\xe2\x80\x99s best\npractices\n\xe2\x80\x93 Dynamic & static code analysis as well as binary analysis (i.e.\nidentifying CWEs/CVEs)\n\n\xe2\x80\xa2 Verify and validate project is accounting for security during\nrequirements, testing, etc.\n\xe2\x80\x93 Ex: Security Requirement Traceability Matrix (SRTM),\nWhitebox/Blackbox Testing, Negative Testing, PenTesting, etc.\n12\n\nIV&V\xe2\x80\x99s Mission\nEnsuring Mission and Safety Critical Software and\nSystems Operate Reliably, Safely, and Securely\n\xe2\x80\xa2 Perform the \xe2\x80\x9cinformation system and security control\nassessment and monitoring\xe2\x80\x9d techniques that NIST attributes to\nthe IV&V assessor role in its Risk Management Framework for the\ndesign, development, implementation, operation, maintenance,\nand disposition of federal information systems.\n\xe2\x80\xa2 Perform Security Analyses throughout the development life-cycle\nper IEEE-1012 Standard for System and Software V&V\n\n\xe2\x80\xa2 Counteract the threat landscape throughout the system life-cycle\n\xe2\x80\x93 Ground, Satellite, and Command & Control systems\n\n\xe2\x80\xa2 IA Techniques deployed throughout project life-cycle phases\n\n13\n\nOrigin Analysis\n\xe2\x80\xa2 From Institute for Defense Analyses (IDA) SOAR Report \xe2\x80\x93 \xe2\x80\x9cOrigin analyzers\nare tools that analyze source code, bytecode, or binary code to determine\ntheir origins (e.g., pedigree and version).\xe2\x80\x9d\n\xe2\x80\xa2 NASA IV&V is beginning to invest in Origin Analysis to reduce the software\nsupply chain risk\n\xe2\x80\x93 Identifies CVEs that may be present in re-used open source libraries/code\n\xe2\x80\x93 Providing scanning as a service as a part of the Secure Coding Portal \xe2\x80\x93\nperformed by SCP team\n\n\xe2\x80\xa2 Tools being used\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\xe2\x80\x93\n\nSonatype (auditor version)\nBlack Duck HUB\nOWASP Dependency Check\nWork being performed to automate and consolidate report creation from all\nthree tools\nDevelopers should be using tools BUT IV&V / SwA could also use tools!!\n\n14\n\nSummary\n\xe2\x80\xa2 NASA starting to make conscious effort to reduce\nthe number of vulnerabilities in their missions\n\xe2\x80\x93 IV&V is now looking at security as a part of mission\nassurance approach\n\xe2\x80\x93 NASA Procedural Requirements (NPRs) now have\n\xe2\x80\x9csecurity\xe2\x80\x9d requirements\n\xe2\x80\x93 SwA assurance standard security updates are being\nworked\n\xe2\x80\x93 OCIO Provided Security Training (i.e. Codiscope)\n\xe2\x80\x93 Secure Coding Portal\n\xe2\x80\x93 Blue Team Vulnerability Assessment Program (BT-VAP)\nassesses mission survivability to cyber attack\n\xe2\x80\xa2 Custom SW assessments are integral part of approach but is\naccompanied by network exposure (i.e. Threat Pairing)\n15\n\nBACKUP SLIDES\n\n16\n\nExample SW Impacting\nMission\nDevelopers can\xe2\x80\x99t assume protection from Firewall. Need\n\xe2\x80\x9cDefense in Depth\xe2\x80\x9d. Can\xe2\x80\x99t assume if knocking on door,\nthat they are supposed to be there.\n\nSigns onto Rogue Wife,\nClick Phishing Link, Etc.\nThen Signs onto VPN\n\nCan Now Route\nThru F/W via\nLaptop\n\nMission\nAsset\n\nLaunch Attacks\n(DoS, Brute Force,\nExtract Data, etc.)\n\nMission\nCritical\nAssets\n\nExploits Custom S/W\nEstablishes persistent\nfoothold on Mission\nAsset\n\nThis example will depict how unsecure software within a\nnetwork can potentially impact critical mission assets\n17\n\nSample Exposure\nVPN Landing Zone,\nInternet, Or\n\xe2\x80\x9cUntrusted\xe2\x80\x9d\n\nVulnerable\nCustom SW\n\nDemonstrates that a pathway exists from the VPN Landing Zone, Internet, Or Untrusted. Has network\naccess to a vulnerability that was identified by software analysis (binary and source). 18\n\nSample Exposure\n\nVulnerable Asset\n\nDemonstrates all outbound access paths (Pivoting) from the vulnerable asset\n19\n\nSample Exposure\n\nMission Critical Asset that\n\xe2\x80\x9cwasn\xe2\x80\x99t\xe2\x80\x9d network accessible\nfrom VPN, Untrusted, Etc.\n\nVulnerable Asset\n\xe2\x80\x9cPivot Point\xe2\x80\x9d\n\nDemonstrates potential vulnerabilities that could be exploited from this server\n20\n\nBT-VAP Overview\n\xe2\x80\xa2 Blue Team Vulnerability Assessment Program (BT-VAP) Defined:\nAn evaluation to ascertain the operational security posture of an\nagency\xe2\x80\x99s critical mission systems/networks; focusing on the IT assets &\nsupporting infrastructures that enable the mission to operate\n\xe2\x80\xa2 Blue Team refers to the tactics and techniques employed: a blue team is\ndone in full coordination with the mission elements being assessed in a\ntransparent manner with no impact to mission ops\n\xe2\x80\xa2 As BT-VAP evaluates missions \xe2\x80\x9cend-to-end\xe2\x80\x9d; it is often perceived\n(incorrectly) as duplicative of other assessment type activities:\n\n21\n21\n\nBT-VAP Team\n\xe2\x80\xa2 Need for a Blue Team to comprehensively evaluate CS-IA factors in\na methodical manner results in needing Subject Matter Expertise\nacross multiple areas to focus on this specific evaluation\n\xe2\x80\xa2 Use of a \xe2\x80\x9crisk jury\xe2\x80\x9d with SMEs from multiple disciplines with varying\nperspectives to provide a comprehensive \xe2\x80\x9c360o\xe2\x80\x9d assessment view\nFive Key Role Specialists on this BT-VAP Risk Jury:\nSecurity\nAnalyst/\nThreat\nProtection\n\nNetwork\nSecurity/\nInformation\nAssurance\n\nICS/SCADA\n/Computer\nNetwork\nDefense\n\nSpace\nSoftware\nSystems/\nSecurity/\nProgram Cybersecurity\nProtection\nOperations\n\nWe evaluate an organization \xe2\x80\x9ctop to bottom\xe2\x80\x9d (from policy/plans to operational\nposture) to examine IF and HOW they address CS-IA risk factors to determine what\ntheir operational security posture is compared to other similar environments\nCS-IA = Cybersecurity - Information Assurance\n\n22\n\nBT-VAP Testing\nCapabilities\n\xef\x83\x98 Cybersecurity Evaluation: determine critical assets, model the \xe2\x80\x9cmission thread\xe2\x80\x9d\nthat these critical assets use to enable the mission \xe2\x80\x93 then do a selective \xe2\x80\x9cdeep\ndive\xe2\x80\x9d on potential points of vulnerability based on a test plan & approved rules of\nengagement to cover:\n\xe2\x80\xa2 Space/Mission Systems (ground)\n\xe2\x80\xa2 Industrial Control Systems/SCADA\n\xe2\x80\xa2 Supporting Infrastructure: (Layer-2/Layer-3 Network Devices, Controlled\nInterfaces/Firewalls, Cybersecurity Defense (CND) mechanisms, etc)\n\xef\x83\x98 Software Security Evaluation: analyze the software code base which supports\ncritical assets and mission threads\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nSource Code Analysis\nBinary/Compiled Code Analysis (S/W Origin Analysis)\n\n\xef\x83\x98 BT-VAP Testing Techniques involve a combination of three principal methods:\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nAnalytic/Tabletop Analysis\nIn the Lab Testing (modeling-simulation environment)\nOn-Site with a \xe2\x80\x9cflyaway\xe2\x80\x9d team with mobile assets\n\nWe evaluate an organization to examine IF and HOW they address CS-IA risk factors to\ndetermine what your operational security posture is compared to other similar environments\nBack\n\nCS-IA = Cybersecurity - Information Assurance\n\n23\n\n'