b'both UNIX and Windows operating systems.\nThese programs were written by Rodrick V.\nChima and Meng-Sing Liou of Glenn Research Center. Further information is contained in a TSP (see page 1).\nInquiries concerning rights for the commercial use of this invention should be addressed\nto NASA Glenn Research Center, Commercial\nTechnology Office, Attn: Steve Fedor, Mail\nStop 4\xe2\x80\x938, 21000 Brookpark Road, Cleveland,\nOhio 44135. Refer to LEW-17635/88-1.\n\nProgram Facilitates CMMI\nAppraisals\nA computer program has been written\nto facilitate appraisals according to the\nmethodology of Capability Maturity\nModel Integration (CMMI). [CMMI is a\ngovernment/industry standard, maintained by the Software Engineering Institute at Carnegie Mellon University, for\nobjectively assessing the engineering capability and maturity of an organization\n(especially, an organization that produces\nsoftware)]. The program assists in preparation for a CMMI appraisal by providing\ndrop-down lists suggesting required artifacts or evidence. It identifies process\nareas for which similar evidence is required and includes a copy feature that\nreduces or eliminates repetitive data\nentry. It generates reports to show the entire framework for reference, the appraisal artifacts to determine readiness\nfor an appraisal, and lists of interviewees\nand questions to ask them during the appraisal. During an appraisal, the program\nprovides screens for entering observations and ratings, and reviewing evidence\nprovided thus far. Findings concerning\nstrengths and weaknesses can be exported for use in a report or a graphical\npresentation. The program generates a\nchart showing capability level ratings of\nthe organization. A context-sensitive Windows help system enables a novice to use\nthe program and learn about the CMMI\nappraisal process.\nThis program was written by Wesley Sweetser of\nGoddard Space Flight Center. Further information is contained in a TSP (see page 1).\nGSC-14782-1\n\nGrid Visualization Tool\nThe Grid Visualization Tool (GVT) is\na computer program for displaying the\npath of a mobile robotic explorer\n(rover) on a terrain map. The GVT\nreads a map-data file in either portable\ngraymap (PGM) or portable pixmap\n(PPM) format, representing a gray-scale\n\n16\n\nor color map image, respectively. The\nGVT also accepts input from path-planning and activity-planning software.\nFrom these inputs, the GVT generates a\nmap overlaid with one or more rover\npath(s), waypoints, locations of targets\nto be explored, and/or target-status information (indicating success or failure\nin exploring each target). The display\ncan also indicate different types of paths\nor path segments, such as the path actually traveled versus a planned path or\nthe path traveled to the present position\nversus planned future movement along\na path. The program provides for updating of the display in real time to facilitate visualization of progress. The size of\nthe display and the map scale can be\nchanged as desired by the user. The\nGVT was written in the C++ language\nusing the Open Graphics Library\n(OpenGL) software. It has been compiled for both Sun Solaris and Linux operating systems.\nThis program was written by Caroline\nChouinard, Forest Fisher, Tara Estlin,\nDaniel Gaines, and Steven Schaffer of Caltech for NASA\xe2\x80\x99s Jet Propulsion Laboratory. Further information is contained in a\nTSP (see page 1).\nThis software is available for commercial\nlicensing. Please contact Karina Edmonds of\nthe California Institute of Technology at\n(818) 393-2827. Refer to NPO-40303.\n\nProgram Computes Sound\nPressures at Rocket\nLaunches\nLaunch Vehicle External Sound\nPressure is a computer program that\npredicts the ignition overpressure and\nthe acoustic pressure on the surfaces\nand in the vicinity of a rocket and\nlaunch pad during launch. The program generates a graphical user interface (GUI) that gathers input data\nfrom the user. These data include the\ncritical dimensions of the rocket and of\nany launch-pad structures that may act\nas acoustic reflectors, the size and\nshape of the exhaust duct or flame deflector, and geometrical and operational parameters of the rocket engine.\nFor the ignition-overpressure calculations, histories of the chamber pressure and mass flow rate also are required. Once the GUI has gathered the\ninput data, it feeds them to ignitionoverpressure and launch-acoustics routines, which are based on several approximate mathematical models of\ndistributed sources, transmission, and\nreflection of acoustic waves. The out-\n\nput of the program includes ignition\noverpressures and acoustic pressures at\nspecified locations.\nThis program was written by Gary Ogg,\nRoy Heyman, Michael White, and Karl\nEdquist of Applied Research Associates, Inc.,\nfor Marshall Space Flight Center. For further information, contact the company at\nwww.ara.com.\nMFS-31568\n\nSolar-System Ephemeris\nToolbox\nNASA\xe2\x80\x99s Jet Propulsion Laboratory (JPL)\ngenerates planetary and lunar ephemeris\ndata and FORTRAN routines that allow\nusers to obtain state data for the Sun, the\nmoon, and the planets. The JPL Solar System Ephemeris Toolbox, developed at\nKennedy Space Center, is a set of functions\nthat provides the same functionality in the\nMATLAB computing environment along\nwith some additional capabilities. The toolbox can be used interactively via a graphical\nuser interface (GUI), or individual functions can be called from the MATLAB command prompt or other MATLAB scripts\nand functions. The toolbox also includes\nutility functions to define and perform coordinate transformation (e.g., mean-ofdate, true-of-date, J2000) that are common\nin the use of these ephemerides. An attached README file guides the user\nthrough the process of constructing binary\nephemeris files, verifying correct installation, and using functions to extract state\ndata. This process also can be performed\nusing the GUI. Help from each toolbox\nfunction is available through MATLAB\xe2\x80\x99s\n\xe2\x80\x9chelp\xe2\x80\x9d function. Many of the functions in\nthe toolbox are MATLAB equivalents of the\nJPL-written FORTRAN programs and subroutines used for the same purposes. A\nnovice can use the GUI to extract state data,\nwhile a more experienced user can use the\nfunctions directly, as needed, in his/her applications. The toolbox has been tested\nusing MATLAB Releases 13 and 14.\nThis program was written by Charles F. Walker\nof Kennedy Space Center. For further information, access www.openchannelsoftware.org.\nKSC-12544\n\nData-Acquisition Software\nfor PSP/TSP Wind-Tunnel\nCameras\nWing-Viewer is a computer program for\nacquisition and reduction of image data acquired by any of five different scientificgrade commercial electronic cameras used\nat Langley Research center to observe\nwind-tunnel models coated with pressure-\n\nNASA Tech Briefs, October 2005\n\n'