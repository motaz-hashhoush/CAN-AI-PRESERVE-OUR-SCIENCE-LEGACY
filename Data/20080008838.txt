b'NASA/CR-2007-215096\n\nAdvanced Transport Delay Compensation\nAlgorithms: Results of Delay Measurement and\nPiloted Performance Tests\nLiwen Guo and Frank M. Cardullo\nDepartment of Mechanical Engineering\nState University of New York, Binghamton, New York\nLon C. Kelly\nUnisys Corporation, Hampton, Virginia\n\nDecember 2007\n\nThe NASA STI Program Office . . . in Profile\n\nSince its founding, NASA has been dedicated to the\nadvancement of aeronautics and space science. The\nNASA Scientific and Technical Information (STI)\nProgram Office plays a key part in helping NASA\nmaintain this important role.\nThe NASA STI Program Office is operated by\nLangley Research Center, the lead center for NASA\xe2\x80\x99s\nscientific and technical information. The NASA STI\nProgram Office provides access to the NASA STI\nDatabase, the largest collection of aeronautical and\nspace science STI in the world. The Program Office is\nalso NASA\xe2\x80\x99s institutional mechanism for\ndisseminating the results of its research and\ndevelopment activities. These results are published by\nNASA in the NASA STI Report Series, which\nincludes the following report types:\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\n\xe2\x80\xa2\n\nTECHNICAL PUBLICATION. Reports of\ncompleted research or a major significant phase\nof research that present the results of NASA\nprograms and include extensive data or\ntheoretical analysis. Includes compilations of\nsignificant scientific and technical data and\ninformation deemed to be of continuing\nreference value. NASA counterpart of peerreviewed formal professional papers, but having\nless stringent limitations on manuscript length\nand extent of graphic presentations.\nTECHNICAL MEMORANDUM. Scientific\nand technical findings that are preliminary or of\nspecialized interest, e.g., quick release reports,\nworking papers, and bibliographies that contain\nminimal annotation. Does not contain extensive\nanalysis.\nCONTRACTOR REPORT. Scientific and\ntechnical findings by NASA-sponsored\ncontractors and grantees.\n\n\xe2\x80\xa2\n\nCONFERENCE PUBLICATION. Collected\npapers from scientific and technical\nconferences, symposia, seminars, or other\nmeetings sponsored or co-sponsored by NASA.\n\n\xe2\x80\xa2\n\nSPECIAL PUBLICATION. Scientific,\ntechnical, or historical information from NASA\nprograms, projects, and missions, often\nconcerned with subjects having substantial\npublic interest.\n\n\xe2\x80\xa2\n\nTECHNICAL TRANSLATION. Englishlanguage translations of foreign scientific and\ntechnical material pertinent to NASA\xe2\x80\x99s mission.\n\nSpecialized services that complement the STI\nProgram Office\xe2\x80\x99s diverse offerings include creating\ncustom thesauri, building customized databases,\norganizing and publishing research results ... even\nproviding videos.\nFor more information about the NASA STI Program\nOffice, see the following:\n\xe2\x80\xa2\n\nAccess the NASA STI Program Home Page at\nhttp://www.sti.nasa.gov\n\n\xe2\x80\xa2\n\nE-mail your question via the Internet to\nhelp@sti.nasa.gov\n\n\xe2\x80\xa2\n\nFax your question to the NASA STI Help Desk\nat (301) 621-0134\n\n\xe2\x80\xa2\n\nPhone the NASA STI Help Desk at\n(301) 621-0390\n\n\xe2\x80\xa2\n\nWrite to:\nNASA STI Help Desk\nNASA Center for AeroSpace Information\n7115 Standard Drive\nHanover, MD 21076-1320\n\nNASA/CR-2007-215096\n\nAdvanced Transport Delay Compensation\nAlgorithms: Results of Delay Measurement and\nPiloted Performance Tests\nLiwen Guo and Frank M. Cardullo\nDepartment of Mechanical Engineering\nState University of New York, Binghamton, New York\nLon C. Kelly\nUnisys Corporation, Hampton, Virginia\n\nNational Aeronautics and\nSpace Administration\nLangley Research Center\nHampton, Virginia 23681-2199\n\nDecember 2007\n\nPrepared for Langley Research Center\nunder Contract NNL06AA74T\n\nAcknowledgments\nJacob Houck of the Simulation Development and Analysis Branch at the NASA Langley\nResearch Center assisted in the preparation of this report.\n\nAvailable from:\nNASA Center for AeroSpace Information (CASI)\n7115 Standard Drive\nHanover, MD 21076-1320\n(301) 621-0390\n\nNational Technical Information Service (NTIS)\n5285 Port Royal Road\nSpringfield, VA 22161-2171\n(703) 605-6000\n\nAbstract\nThis report summarizes the results of delay measurement and piloted performance\ntests that were conducted to assess the effectiveness of the adaptive compensator and the\nstate space compensator for alleviating the phase distortion of transport delay in the\nvisual system in the Visual Motion Simulator (VMS) at the NASA Langley Research\nCenter.\nIn order to determine the delay, a series of measurements were made on the VMS\nusing a device called the SIMulator Evaluation System, and the baseline transport delay\nin the visual cueing path was determined to be 90 ms when the frame length of the\ndynamics computer was 16 ms.\nPiloted simulation tests were conducted to assess the effectiveness of two novel\ncompensators in comparison to the McFarland predictor and the baseline system with no\ncompensation. Thirteen pilots with heterogeneous flight experience executed straight-in\nand offset approaches, at various delay configurations, on a flight simulator where\ndifferent predictors were applied to compensate for transport delay. Four metrics\xe2\x80\x94the\nglideslope and touchdown errors, power spectral density of the pilot control inputs,\nNASA Task Load Index, and Cooper-Harper rating of the handling qualities were\nemployed for the analyses. The overall analyses show that the adaptive predictor results\nin slightly poorer compensation for short added delay (up to 48 ms) and better\ncompensation for long added delay (up to 192 ms) than the McFarland compensator. The\nanalyses also show that the state space predictor is fairly superior for short delay and\nsignificantly superior for long delay compared to the McFarland compensator. The state\nspace predictor also achieves better compensation than the adaptive predictor. The results\n\niii\n\nof the evaluation of the effectiveness of these predictors, in the piloted tests, agree with\nthose obtained in the theoretical offline tests conducted with the recorded simulation\naircraft states.\n\niv\n\nPreface\nThis report is the second of two NASA Contractor Reports documenting the\nresearch on the flight simulator transport delay compensation, undertaken in the Manmachine Systems Research Laboratory at The State University of New York at\nBinghamton and supported by the NASA Langley Research Center, in Hampton, Virginia.\nLoosely speaking, the two reports cover the theoretical research and the experimental\ntesting of the research, respectively.\nThis report is presented in three parts: transport delay measurement in the Visual\nMotion Simulator (VMS), piloted testing of the time delay compensators, and\nconclusions. The time delay measurement was conducted to verify the actual transport\ndelay prior to the application of compensation in the final piloted tests. The average\ntransport delay from the pilot control input to the visual display update was measured to\nbe 90 ms. The second part of the report treats the final piloted experiment design, added\ntime delay, test subjects, compensators, data collection, and evaluation metrics. It then\npresents the results of the final piloted tests in terms of performance errors, task load\nindex, handling quality and power spectral density of the pilot controls. The final part of\nthis report draws conclusions on the delay measurement and piloted simulation tests, and\nincludes suggestions for future research. The appendices of this report include resultant\ngraphs of all 13 pilots in terms of the four metrics, and the source code and flowcharts of\nsome of the algorithms used in the research.\nThe first report, NASA CR 2007-2150951 begins with a theoretical investigation\nof the effects of pure time delay on a control system consisting of an aerodynamic model,\na pilot model and the Pade approximation of time delay. It then summarizes the literature\n\nv\n\nstudy of transport delay causes in, and effects on, a flight simulator. That report continues\nwith the introduction of three existing transport delay compensators\xe2\x80\x94the lead/lag filter,\nthe McFarland predictor and the Sobiski/Cardullo predictor, including intensive analyses\nof the strengths and limitations of each compensator. After a brief description of an\nexpedient algorithm, designed to reduce the large spikes introduced by the McFarland\npredictor, it presents the main body of research, i.e., development of two novel\ncompensators. That report then thoroughly develops the adaptive predictor and the state\nspace predictor. The adaptive predictor is a special Kalman filter that recursively updates\nthe coefficients so that accurate prediction can be achieved. Among several versions of\nthe adaptive algorithms, the Stochastic Approximation algorithm is mathematically\ndemonstrated to achieve the best compensation results. The state space predictor makes\nuse of the state transition matrix of a reference aircraft model and its integral. Several\naircraft models were tested and the large commercial transport landing model in pitch\nachieved the best compensation results as a reference model. By simplifying the state\nspace predictor, the relationship between the compensation quality and the reference\nmodel was intensively investigated. Offline compensation results are presented to\ncompare the McFarland predictor and the two novel predictors. The final part of the first\nreport draws conclusions and suggests possible future research.\n\nvi\n\nTable of Contents\nABSTRACT......................................................................................................................iii\nPREFACE..........................................................................................................................v\nTABLE OF CONTENTS ...............................................................................................vii\nLIST OF FIGURES .........................................................................................................ix\nLIST OF TABLES ...........................................................................................................xi\nNOMENCLATURE........................................................................................................xii\nACRONYMS ..................................................................................................................xiv\n1. INTRODUCTION..................................................................................................... 1\n2. TIME DELAY MEASUREMENT.......................................................................... 3\n2.1.\nLITERATURE STUDY ON TRANSPORT DELAY MEASUREMENT .............................. 3\n2.2.\nTIME DELAY MEASUREMENT IN THE VMS .......................................................... 7\n2.2.1.\nScenario I .................................................................................................. 11\n2.2.2.\nScenario II and III..................................................................................... 14\n2.2.3.\nSummary ................................................................................................... 14\n3.\nEXPERIMENTAL DESIGN................................................................................. 17\n3.1.\nTHE MAN-MACHINE SYSTEM\xe2\x80\x94THE SIMULATOR AND THE PILOTS .................... 18\n3.2.\nSIMULATION MANEUVERS AND CONDITIONS ..................................................... 20\n3.3.\nOTHER SIMULATION CONDITIONS: TIME DELAY AND COMPENSATIONS ............ 22\n3.4.\nDATA COLLECTION AND ANALYSIS METHODS .................................................. 23\n4.\nRESULTS OF EXPERIMENTS AND DATA ANALYSES .............................. 25\n4.1.\nANALYSIS OF PILOTS\xe2\x80\x99 PERFORMANCE ............................................................... 25\n4.1.1.\nGlideslope Error ....................................................................................... 26\n4.1.2.\nTouchdown Error...................................................................................... 29\n4.2.\nANALYSIS OF PILOTS\xe2\x80\x99 HANDLING QUALITY RATING (CHR).............................. 35\n4.2.1.\nCHR of Maintaining the Glideslope ......................................................... 35\n4.2.2.\nCHR on the Touchdown ............................................................................ 39\n4.3.\nANALYSIS OF THE TLX...................................................................................... 42\n4.3.1.\nAnalysis on the Overall Weighted TLX..................................................... 43\n4.3.2.\nAnalysis on the Six Factors of the TLX..................................................... 46\n4.4.\nANALYSIS OF THE PSD OF PILOT CONTROL ....................................................... 49\n4.4.1.\nAbout the PSD........................................................................................... 50\n4.4.2.\nThe PSD of the Aircraft Euler Angles....................................................... 52\n4.4.3.\nAnalysis of the Integrated PSD of Pilot Control....................................... 55\n4.4.4.\nAnalysis of the Highest PSD Peak Migration ........................................... 60\n4.4.5.\nAnalyses on Selected Pilots....................................................................... 64\n4.4.6.\nAnalysis of PSD in Certain Frequency Intervals...................................... 70\n4.5.\nSUMMARY OF RESULTS ...................................................................................... 73\n5. CONCLUSIONS AND FUTURE RESEARCH................................................... 81\n5.1.\nCONCLUSIONS .................................................................................................... 81\n5.2.\nSUGGESTED FUTURE RESEARCH ........................................................................ 86\nAPPENDIX A. RUN MATRICES AND PRINT VARIABLES ................................ 87\nAPPENDIX B. MORE RESULTS OF THE PILOTED TESTS ............................... 92\nB.1. GLIDESLOPE ERROR ............................................................................................... 92\nB.2. GLIDESLOPE ERROR ............................................................................................. 100\nvii\n\nB.3. COOPER-HARPER RATING .................................................................................... 107\nB.4. TASK LOAD INDEX ............................................................................................... 114\nB.5. POWER SPECTRAL DENSITY ................................................................................. 121\nB.5. FREQUENCY OF THE HIGHEST PSD PEAK ............................................................. 128\nAPPENDIX C. MATLAB SOURCE CODES ........................................................... 135\nC.1. CONVERTING ASCII DATA TO MATLAB DATA STRUCTURE .............................. 135\nC.2. CALCULATE SMOOTHED PSD (PERIODOGRAM).................................................... 137\nC.3. FUNCTION (SUBROUTINE) CALLED BY SMPSD.M (APPENDIX C.2)....................... 138\nC.4. ADAPTIVE PREDICTOR: STOCHASTIC APPROXIMATION ALGORITHM .................... 139\nC.5. ADAPTIVE PREDICTOR: KALMAN FILTER ALGORITHM ......................................... 141\nC.6. ADAPTIVE PREDICTOR: KARZMARZ ALGORITHM ................................................. 143\nC.7. ADAPTIVE PREDICTOR: LEAST MEAN SQUARE ALGORITHM ................................ 145\nC.8. CALCULATE THE MCFARLAND PREDICTOR COEFFICIENTS ................................... 147\nC.9. STATE SPACE PREDICTOR: 4TH-ORDER REFERENCE MODEL ................................. 148\nC.10. DISCRETE STATE SPACE PREDICTOR: 4TH-ORDER REFERENCE MODEL............... 150\nC.11. CALCULATE THE ACCELERATIONS IN 6 DOF OF THE TOPODETIC FRAME SYSTEM\n..................................................................................................................................... 151\nC.12. CALCULATE STATE TRANSITION MATRIX USING THE CAYLEY-HAMILTON\nTHEOREM..................................................................................................................... 153\nC.13. COMPREHENSIVE ANALYSIS OF SOBISKI/CARDULLO FILTER.............................. 155\nC.14. A POLE PLACEMENT FUNCTION CALLED BY THE PROGRAM IN APPENDIX C.12 . 159\nC.15. DESIGN A 3-VELOCITY PREDICTOR USING FREQUENCY LEAST SQUARES METHOD\n..................................................................................................................................... 160\nC.16. FUNCTION TO PLOT MULTI-NORMALIZED DATA FOR THE DELAY MEASUREMENT\n..................................................................................................................................... 164\nC.17. CALCULATE THE PLATFORM ACCELERATIONS FROM ACCELEROMETERS READINGS\n..................................................................................................................................... 166\nC.18. REALIZATION OF INVERSE NEWTON-RAPHSON TRANSFORMATION .................... 167\nC.19. DETERMINE THE PHASE ERROR BETWEEN TWO SIGNALS BY CURVE FIT ........... 172\nC.20. CALCULATE THE PLATFORM ACCELERATIONS FROM ACCELEROMETERS READINGS\n(C++)........................................................................................................................... 174\nREFERENCES.............................................................................................................. 178\n\nviii\n\nList of Figures\nFIG. 2.1. SIGNAL FLOW DIAGRAM OF THE DELAY MEASUREMENT IN THE VMS.................... 8\nFIG. 2.2. GEOMETRY OF A SIX-DEGREE-OF-FREEDOM MOTION SYSTEM (ADOPTED FROM WU)\n................................................................................................................................... 10\nFIG. 2.3. POSITIONS AND DIRECTIONS OF THE SIX ACCELEROMETERS ................................. 10\nFIG. 2.4. PITCH EYE POINT (OD) AND EVADS Y2 (NORMALIZED) .................................... 11\nFIG. 2.5. PITCH ATTITUDE INDICATOR (OD) AND PHOTO DIODE (NORMALIZED)................ 12\nFIG. 2.6. MOTION COMMAND AND SELECTED MOTION SYSTEM RESPONSES (NORMALIZED)\n................................................................................................................................... 13\nFIG. 3.1. VMS AT THE NASA LANGLEY RESEARCH CENTER ............................................ 18\nFIG. 3.2. COCKPIT OF THE VMS SIMULATOR ...................................................................... 19\nFIG. 3.3. SCHEMATIC DIAGRAM OF THE OFFSET APPROACH MANEUVER FLIGHT ROUTE ...... 21\nFIG. 4.1. EXAMPLE OF THE AIRCRAFT ALTITUDE AND GLIDE ERROR ................................... 26\nFIG. 4.2. MEAN AND STANDARD DEVIATION OF THE GLIDESLOPE ERRORS AS A FUNCTION OF\nDELAY ........................................................................................................................ 27\nFIG. 4.3. MEAN AND STD OF THE INTEGRATED PSD OF THE GLIDESLOPE ERROR WITH\nDIFFERENT COMPENSATION ALGORITHMS .................................................................. 28\nFIG. 4.4. ILLUSTRATION OF THE TOUCHDOWN BOX ............................................................ 29\nFIG. 4.5. ILLUSTRATION OF CALCULATING THE HEIGHT OF THE LANDING GEARS ............... 30\nFIG. 4.6 AIRCRAFT FORCE, TOUCHDOWN POINT AND TOUCHDOWN ERRORS ....................... 31\nFIG. 4.7. MEAN AND STANDARD DEVIATION OF THE TOUCHDOWN ERRORS CHANGING WITH\nDELAY ........................................................................................................................ 32\nFIG. 4.8. MEAN AND STD OF THE X-TOUCHDOWN ERRORS CHANGING WITH THE\nCOMPENSATION .......................................................................................................... 33\nFIG. 4.9. MEAN AND STD OF THE Y-TOUCHDOWN ERRORS CHANGING WITH THE\nCOMPENSATION .......................................................................................................... 34\nFIG. 4.10. MEAN & STD OF CHR AND GSE CHANGING WITH THE TIME DELAY ................ 36\nFIG. 4.11. MEAN AND STD OF CHR & GSE WITH COMPENSATIONS: STRAIGHT-IN\nAPPROACH .................................................................................................................. 37\nFIG. 4.12. MEAN AND STD OF CHR & GSE WITH COMPENSATIONS: OFFSET APPROACH ... 38\nFIG. 4.13. MEAN & STD OF CHR AND TDE CHANGING WITH THE TIME DELAY ................ 39\nFIG. 4.14. MEAN AND STD OF CHR & TDE WITH COMPENSATIONS: STRAIGHT-IN\nAPPROACH .................................................................................................................. 41\nFIG. 4.15. MEAN AND STD OF CHR & TDE WITH COMPENSATIONS: OFFSET APPROACH... 42\nFIG. 4.16. MEAN VALUE AND STD OF THE TLX AS A FUNCTION OF THE TIME DELAY ........ 44\nFIG. 4.17. MEAN AND STD OF THE TLX CHANGING WITH COMPENSATIONS ...................... 46\nFIG. 4.18. MEAN AND STD OF MENTAL AND PHYSICAL DEMANDS WITH COMPENSATIONS . 47\nFIG. 4.19. MEAN AND STD OF THE TEMPORAL DEMAND & PERFORMANCE ....................... 48\nFIG. 4.20. MEAN & STD OF THE EFFORT & FRUSTRATION WITH COMPENSATIONS ............. 49\nFIG. 4.21. AN EXAMPLE OF THE NORMALIZED PSD OF THE ROLL AND PITCH ANGLES ........ 53\nFIG. 4.22. MEAN VALUE & STD OF THE INTEGRATED PSD CHANGING WITH THE TIME\nDELAY ........................................................................................................................ 56\nIG. 4.23. MEAN & STD OF THE INTEGRATED ROLL INPUT PSD WITH COMPENSATION ..... 57\nF\nFIG. 4.24. MEAN & STD OF THE INTEGRATED PITCH STICK PSD WITH COMPENSATIONS ... 58\n\nix\n\nFIG. 4.25. MEAN & STD OF THE INTEGRATED RUDDER PEDAL PSD WITH COMPENSATIONS\n................................................................................................................................... 59\nFIG. 4.26. HIGHEST PEAK OF PSD MOVEMENT WITH THE DELAY AND COMPENSATIONS..... 60\nFIG. 4.27. MEAN & STD OF THE FREQUENCY OF THE HIGHEST PSD PEAK WITH DELAY..... 61\nFIG. 4.28. MIGRATION OF THE HIGHEST ROLL STICK PSD PEAK WITH COMPENSATION....... 62\nFIG. 4.29. MIGRATION OF THE HIGHEST PITCH STICK PSD PEAK WITH COMPENSATION ...... 63\nFIG. 4.30. MEAN & STD OF THE GLIDESLOPE ERROR FOR PILOTS #1,2,5,11,12 ................ 66\nFIG. 4.31. MEAN & STD OF THE TOUCHDOWN ERROR FOR PILOTS #1,2,5,11,12............... 67\nFIG. 4.32. MEAN & STD OF INTEGRATED ROLL INPUT PSD FOR PILOTS #1,2,5,11,12 ...... 68\nFIG. 4.33. MEAN & STD OF INTEGRATED PITCH INPUT PSD FOR PILOTS #1,2,5,11,12 ..... 69\n\nx\n\nLIST OF TABLES\nTABLE 2.1. VARIABLES RECORDED BY THE SIMES FOR THE DELAY MEASUREMENT ........... 9\nTABLE 2.2. TRANSPORT DELAYS IN THE THREE BASIC CUEING CHANNELS ......................... 12\nTABLE 2.3. TRANSPORT DELAYS IN THE THREE BASIC CUEING CHANNELS ......................... 14\nTABLE 2.4. TIME DELAYS OF DIFFERENT SOURCES AND THE TOTAL DELAYS ...................... 15\nTABLE 3.1. STRAIGHT-IN APPROACH CONDITIONS.............................................................. 20\nTABLE 3.2. OFFSET APPROACH CONDITIONS ...................................................................... 22\nTABLE 4.1. MEAN & STD OF THE FREQUENCY OF THE HIGHEST PEAK OF PSD OF EULER\nANGLES ..................................................................................................................... 54\nTABLE 4.2. FREQUENCY INTERVALS IN WHICH THE PSD INCREASES BY TIME DELAY ........ 71\nTABLE 4.3. FREQUENCY INTERVALS IN WHICH THE PSD DECREASES BY DIFFERENT\nPREDICTORS ............................................................................................................... 72\nTABLE 4.4. FREQUENCY INTERVALS OF REDUCED PSD BY COMPENSATION OF DIFFERENT\nDELAYS ...................................................................................................................... 73\nTABLE 4.5. SUMMARY OF COMPENSATION RESULTS .......................................................... 75\nTABLE 4.6. COMPENSATION RESULTS FOR THE STATE SPACE PREDICTOR WITH SHORT DELAY\n................................................................................................................................... 76\nTABLE 4.7. SUMMARY OF SIGNIFICANT COMPENSATIONS .................................................. 79\nTABLE 4.8. SUMMARY OF SIGNIFICANT DIFFERENCE AMONG THE FOUR PREDICTORS ......... 80\nTABLE A.1. STRAIGHT-IN APPROACH RUN MATRIX ............................................................ 87\nTABLE A.2. OFFSET APPROACH RUN MATRIX ..................................................................... 88\nTABLE A.3. PILOTED TEST EVALUATION PRINTED VARIABLES ........................................... 89\nTABLE A.4. NASA TLX SUBSCALE RATING DEFINITIONS (FROM TELBAN\xe2\x80\x99S THESIS) ........ 90\nTABLE A.5. RESUMES OF THE PILOT SUBJECTS ................................................................... 91\n\nxi\n\nNomenclature\nAc\n\nObserver feedback gain matrix\n\nb0 \xe2\x88\x92 b2\n\nCoefficients of the McFarland predictor and the adaptive predictor\n\nc0 \xe2\x88\x92 c4\n\nCoefficients of the simplified state space predictor\n\ne\n\nGain error metric of a predictor\n\ne\n\nError vector of a feedback state space system\n\n&\ne\n\nDerivative of e\n\nE\n\nMathematical expectation\n\nG\n\nFeed forward gain of a control system with a state space predictor\n\nG , H ,C,D\n\nQuadruple of a discrete state space control system\n\nh\n\nAircraft altitude\n\nI\n\nCost function\n\nI\n\nIdentity matrix\n\n\xcb\x86\nkx\n\nAutocorrelation sequence of signal x\n\nl\n\nAircraft longitude (arc length)\n\nl\xce\xb8\n\nAircraft longitude (angle)\n\nPx\n\nExact power spectral of signal x from discrete Fourier Transform\n\n\xcb\x86\nPx f (\xce\xb8 )\n\nEstimated power spectral of signal x\n\np,q,r\n\nAircraft angular velocities in the body frame\n\ntd\n\nTime delay\n\nT\n\nSampling period\n\nu\n\nPilot control input\n\nxii\n\nv\n\nVelocity of y ; reference input\n\nw\n\nDigital window sequence\n\nx\n\nState vector of a control system\n\n&\nx\n\nDerivative of x\n\n%\nx\n\nObserved x\n\n&\n%\nx\n\n%\nDerivative of x\n\nxa\n\nAircraft state vector\n\ny\n\nUndelayed aircraft state (output of the EOM)\n\n%\ny\n\nObserved y\n\n&\n%\ny\n\n%\nDerivative of y\n\nyc\n\nCompensated aircraft state (i.e., y p delayed by td )\n\nyd\n\nDelayed aircraft state\n\nyp\n\nPredicted aircraft state\n\n\xcf\x86\n\nAircraft roll angle\n\n\xce\xa6d\n\nState transition matrix for discrete system\n\n\xce\xbb\n\nAircraft latitude (arc length); forgetting factor\n\n\xce\xbb\xce\xb8\n\nAircraft latitude (angle)\n\n\xce\xb8\n\nAircraft pitch angle\n\n%\n\xce\xb8\n\nEstimate of [b0 b1 b2 ] (output of the Kalman filter algorithm)\n\n\xcf\x88\n\nAircraft yaw angle\n\n\xcf\x89\n\nAngular frequency\n\nT\n\nxiii\n\nAcronyms\nAP\n\nAdaptive Predictor\n\nCHR\n\nCooper-Harper Rating\n\nDFT\n\nDiscrete Fourier Transform\n\nDOF\n\nDegree Of Freedom\n\nEOM\n\nEquations Of Motion\n\nEVDAS\n\nElectronic Visual Data Acquisition System\n\nFRA\n\nFrequency Response Analyzer\n\nGS\n\nGlide Slope\n\nGSE\n\nGlide Slope Error\n\nHQR\n\nHandling Quality Rating\n\nLSF\n\nLeast Squares Fitting\n\nMF\n\nMcFarland predictor\n\nMFR\n\nMcFarland predictor with spike Reduction\n\nNC\n\nNo Compensation\n\nPS\n\nPitch Stick\n\nPSD\n\nPower Spectral Density\n\nFPSD\n\nFrequency of the highest PSD peak\n\nIPSD\n\nIntegrated PSD\n\nRMSE\n\nRoot Mean Squared Error\n\nRP\n\nRudder Pedal\n\nRS\n\nRoll Stick\n\nSA\n\nStochastic Approximation\n\nxiv\n\nSIMES\n\nSIMulator Evaluation System\n\nSS\n\nState Space predictor\n\nSTD\n\nSTandard Deviation\n\nTD\n\nTouchDown\n\nTDE\n\nTouchDown Error\n\nTLX\n\nTask Load Index\n\nVA\n\nVisual to Analog\n\nVMS\n\nVisual Motion Simulator\n\nxv\n\n1. Introduction\nTwo novel predictors for compensating the transport delay in a flight simulator,\nthe adaptive compensator and the state space compensator, as well as the McFarland\ncompensator were examined in NASA CR 2007-215095. That report also presents the\nresults of the offline tests (i.e., tests without a pilot in the loop), which compare gain and\nphase errors of the predictions of the three compensators. In order to further assess the\neffectiveness of these predictors, they were implemented in the Visual Motion Simulator\n(VMS) at the NASA Langley Research Center, and simulation tests were conducted with\n13 pilots who executed straight-in and offset approaches. This report is a summary of the\npiloted test results.\nTo compensate for the transport delay in a simulator, the actual delay in the system\nmust be known prior to designing and implementing a compensator. Therefore, delay\nmeasurement tests were conducted in the VMS using a comprehensive device called\nSIMES. The measurement is covered in Chapter 2. The first section of Chapter 2\nsummarizes a study of the literature on past transport delay measurements, concentrating\non measurement domains and methods, devices and data collection. The second section\ndescribes, in detail, the delay measurement in the VMS, including the devices used, the\ntest topology, and the data collection and analysis. The average total visual transport\ndelay has been determined to be 90 ms when the simulation host computer\xe2\x80\x99s update cycle\nis 16 ms. This forms a solid basis for the final experiment design and delay compensation.\nChapter 3 describes the design of the final piloted tests. It includes information on\nthe flight experience of the pilot subjects, a description of the simulation maneuvers and\nconditions, a matrix of the artificial delays inserted into the simulator, a discussion of the\n\n1\n\ncompensation algorithms implemented, and a brief summary of the experimental data\ncollected.\nChapter 4 assesses the results of the final piloted tests. These assessments are\nbased upon four metrics: 1) the glideslope error during the approach phase, and the\nlongitudinal and lateral error at touchdown; 2) the pilot\xe2\x80\x99s perception of the handling\nqualities (Cooper-Harper ratings); 3) the NASA Task Load Index (TLX); and 4) the\npower spectral density (PSD) of the pilot\xe2\x80\x99s control input. With the PSD, both integrated\nPSD and the migration of the highest peak are considered.\nSome intermediate results of the piloted tests are illustrated with bar graphs in\nAppendix B. Appendix C contains source code and MATLAB scripts used during the\npiloted tests and the data analysis contained in both contractor reports.\n\n2\n\n2. Time Delay Measurement\nMeasuring the transport delay in a flight simulator is necessary and important\nbecause it provides the information necessary to investigate various relevant issues. For\nexample: Which parts of the simulator contribute substantially to the transport delay?\nDelay reduction efforts should be focused on the major contributors. Are there any cueing\nmismatches among the primary cueing channels? This information is helpful when\nstudying the effects of cueing mismatches in a flight simulation system. Do different\nsimulation conditions, such as the maneuver itself, or the aerodynamic model, change the\nsystem transport delay? What is the baseline system delay? This information is necessary\nwhen deciding whether to apply compensation, and when designing the parameters of the\ncompensator. What is the quantitative relationship between the delay and the\nperformance of the operator, and what is the maximum tolerable delay in a flight\nsimulator?\nThis chapter will present a brief summary of the literature study of transport delay\nmeasurement, and then introduce the delay measurements conducted in the NASA Visual\nMotion Simulator (VMS), and finally give the measurement results.\n2.1. Literature Study on Transport Delay Measurement\nTransport delay may be measured with either time domain or frequency domain\nmethods. These two domains are related by the dual transform pair of the time delay as\ngiven by f ( t \xe2\x88\x92 td ) \xe2\x87\x94 e\xe2\x88\x92 j\xcf\x89t F (\xcf\x89td ) . In the time-domain measurement, a step input or other\nd\n\nsignals with sharp onset are used to excite the selected control-cue loop, and the initial\nsystem response is measured. The delay is determined as the difference between the onset\nof the change in the output and the corresponding change in the input. Because of the\n3\n\naerodynamic model, the change in output, corresponding to the onset of the pilot input\nmay not be noticeable, and this is the primary disadvantage of the time domain methods.\nFor this reason, in some literature, 63 percent of the commanded final value is defined as\nthe onset of the simulator response2. Another drawback of the time-domain methods is\nthat the delay values are subjected to sampling uncertainty.\nIn the frequency-domain measurement, sinusoid signals of different frequencies\nare employed to excite the particular control-cue loop, and the system\xe2\x80\x99s responses are\nrecorded. Simply stated, the delay is obtained by determining the phase difference \xce\xa6 d\nbetween the input and output, and then calculating the time delay using:\ntd =\n\n\xce\xa6 d (\xcf\x89 )\n\n\xcf\x89\n\n(2.1)\n\nwhere \xcf\x89 is the frequency of the sinusoidal input. But, because of the aerodynamic model,\nthe output signal is usually not sinusoidal, and in such cases, the delay is approximated\nby an equivalent delay for a specific frequency range, where the gain of the system\nfrequency characteristics is relatively constant and the phase angle increases\nproportionally with the input frequency. A sweep input signal is usually used to replace\nthe pure sinusoidal signal. A sweep signal is a frequency-varied sinusoid, which starts at a\nvery low frequency, and the frequency increases linearly up to several hertz.\nThe disadvantages of the time domain methods are the advantages of the\nfrequency domain methods. In the frequency domain it is not necessary to determine the\nonset of the output, and the measurement does not depend on the timing of the sampling.\nIn addition, frequency domain methods can be used to characterize the system response\nover the whole bandwidth of the man-machine simulator system. The main drawback of\nthe frequency domain methods is that the spectral analysis is significantly more\n\n4\n\ncomplicated than those in the time domain. A second weakness is that the constant gain\nand linear phase range do not always exist in the system frequency characteristics.\nMany researchers have conducted experiments to measure the transport delays or\ncueing mismatches in many types of flight simulators using many different methods.\nHere is a brief summary of some measurements, and a representative example, with a\nfocus on the simulator type, the analysis method, the cueing channels studied and the\ndevices used.\nGlen Niemeyer and Barry Dougherty3 measured the transport delay in a fixedbase (without motion system) flight simulator with a visual scene. The aerodynamic\nmodel was bypassed and replaced with a constant gain in order to make the onset of the\noutput easy to detect. The operator control was monitored with a potentiometer, and the\nvisual response was sensed with a photometer; both devices output signals to a chart\nrecorder, from which the transport delay was determined in the time domain. It is worth\nmentioning that some extrapolation methods were employed to offset part of the transport\ndelay.\nScott Horowitz 4 made transport delay measurements on a high performance\nfighter-type aircraft simulator, also without a motion system. He measured the existing\ndelays in different components of the simulator, such as the aircraft model, and the visual\nsystem. Since the control input was created by a square wave generator, it was\nunnecessary to sense the input signal. The visual scene was sensed with a special device\ncalled a visual-to-analog (VA) converter, which transforms the image on a CRT into an\nanalog signal. The aerodynamic model was either in use, or bypassed, so that its delay\ncould be identified. The signals from the square wave generator, the simulation computer\n\n5\n\nand VA converter were all input to a strip chart recorder. The delays were determined in\nthe time domain. This study showed that the dynamic model not only increased the delay,\nbut also increased the measuring variance.\nMarshall Smith 5 conducted experiments to measure the transport delays in the\nFlight Simulation Facilities at the NASA Langley Research Center (with instrumentation,\nwithout motion system), using both frequency and time domain methods. In the time\ndomain approach, a strip chart recorder was used to collect data on everything except the\nvisual image, which was sensed by a photo-electric diode or a video level detector. All\nthese were input to a logic analyzer. In the frequency domain method, a frequency\nresponse analyzer (FRA) generated the input and collected the output signals, and\ncalculated the phase difference. The delays were calculated using Eq. (2.1). His approach\nwas unique in that the control input could be inserted into the normal control interface, or,\nit could be inserted in many different nodes.\n\nIn this manner, the output of each\n\ncomponent was easy to analyze. Another feature of his approach is that the data transfer\ndelay was measured. And, although most of these measurements were conducted in the\ntime domain, Smith\xe2\x80\x99s study yielded results in the time domain and the frequency domain\nthat match closely.\nThomas Galloway6 used a unigue piloted frequency sweep technique to measure\nthe cue-synchronization in a simulator with visual, motion and instrument cueing\nchannels. The data were digitally sampled using a commercially available data\nacquisition board installed in a PC. Software spectral analyses were employed to obtain\nthe time delays in the individual channels to yield the cue mismatches. It is worth\n\n6\n\nmentioning that the visual and motion delays measured were quite large: 940 ms and 770\nms, respectively.\nTherefore, Galloway is the only author known to have measured the delay in the\nmotion system, and he used a software package to do the frequency analysis instead of a\nFRA.\n2.2. Time Delay Measurement in the VMS\nA series of tests were conducted to measure the transport delays in the Visual\nMotion Simulator (VMS) at the NASA Langley Research Center, using a device called\nSIMES 7 (the SIMulator Evaluation System). SIMES was developed by SAIC for the\nNaval Air Warfare Center Training Systems Division, in cooperation with the WrightPatterson Air Force Base. It is a comprehensive, non-intrusive, accurate and reliable\nsystem to test, debug, and document the cueing systems and dynamic models in various\nkinds of simulators. SIMES can also generate control signals in place of an operator for\nunmanned simulations. Thus the SIMES provides a combination of the functions of a\ncontrol loader, a logic analyzer and a video level detector. It can inject sinusoidal signals\nand sweep signals into the simulator, and collect responses from it. However, the SIMES\nunit cannot process frequency response analysis (it is not a FRA). Fig. 2.1 shows where\nthe SIMES generated input was added as well as where various data were collected on\nthe VMS. The input signal was inserted at either point A, so that the aircraft states were\ninput to the cueing systems directly from the SIMES (Scenario I), or at point B, so that\nthe aircraft states were provided by the EOM. In the latter case the aircraft model was\neither bypassed, by replacing it with a constant gain K (Scenario II), or in use (Scenario\nIII). The SIMES generated the input and collected the data (except the EVADS visual\n\n7\n\nsignals) at the rate of 1000 Hz. The mainframe computer update frequency was 40 Hz,\nand the visual computers ran at a rate of 60 Hz. Therefore, some asynchrony exists in the\ncommunications. The EVADS signals were recorded at 60 Hz.\n2\n\nB\n1\n\n\xe2\x88\xab\xe2\x88\xab\n\nVehicle\ndynamics\n40 Hz\n\nSIMES\ngenerated\n1 KHz\ninput\n\nA\n4-6\n\nEOM\n\nMotion\nsystem\n14-19\n\nVisual\nsystem\n\n2\n40 Hz\n\n3\n\nK\n\n7-11\n\n12\n\nInstrument\nsystem\n13\n\n(a)\n\n5\n\nMotion\ncueing\nalgorithm\n\n14\n15\n\nKinematic\ntransformation\n\n16\n\nD/A\n\n17\n\nMotion\nhardware\n\nMotion system\n\n21\n\nMotion\ncueing\nalgorithm\n\nFrom\naccelerometers\nto platform\naccelerations\n\n20\n\n18, 19\n\n(b)\nFig. 2.1. Signal flow diagram of the delay measurement in the VMS\nThe numbers in Fig.2.1 identify the data items collected from the VMS by the\nSIMES, and they are tabulated in Table 2.1. Specifically, the five EVDAS signals were\nobtained in the visual system and were used to measure the visual system transport delay.\nA photodiode was used to measure the instrument system transport delay. Signals 14-19\n8\n\nwere used to measure the motion system delay. Data labeled 14-19 are located\nsequentially in the motion system, as depicted in the lower figure in Fig. 2.1.\nTable 2.1. Variables recorded by the SIMES for the delay measurement\nNo.\n1\n2\n3\n4,5,6\n7-11\n12\n13\n14,15\n16\n17\n18\n19\n20\n21\n\nName\nControl Device Position Over Drive\nControl Device Position\nAccelerations\nRates, Attitudes, Pilot Eye Point\nEVDAS Signals\nAttitude Indicator\nPhoto Diode\nAttitude& Rate Motion Commands\nLeg Drive Commands\nSimulator Leg Commands\nAccelerometers\nLeg Positions\nAccelerations from the\nAccelerometers\nFiltered Values of 20\n\nFig. 2.2 shows the geometry of a six-degree-of-freedom synergistic motion\nsystem. The leg positions (labeled 19) were measured with potentiometers, and were then\ntransformed into the position and orientation of the payload platform, using a recursive\ninverse Newton-Raphson transformation. The position and orientation were then used to\ndetermine the delay of the motion system. In addition, six accelerometers, which were\nmounted on the payload platform as shown in Fig. 2.3, sensed accelerations. These\naccelerations were then transformed to the payload platform accelerations in all six\nDOF\xe2\x80\x99s (labeled 20) using a kinematic transformation. The motion system transport delay\nwas also measured from the leg positions sensed by the potentiometers. But, because the\npotentiometers caused larger errors than the accelerometers, the final results of the\n\n9\n\nmotion system delay were taken from the accelerometer data. A 2nd-order filter was\napplied to the accelerometer data to reduce the signal noise inherent in the accelerometers\n(labeled 21).\n4\n3\n\nA4\nA5\n\n5\n\nA2\n\nA1\n\nA6\n\n6\n\nA3\n\nOS\n\n2\n1\n\nl4\n\nl5\n\nl3\n\nl2\n\n4\n\n5\nl6\n\nB4\n\nB5\nl1\nB6\n\n6\n\nB3\n\nOI\n\n3\n\nB2\n\nB1\n\n2\n\n1\n\nFig. 2.2. Geometry of a six-degree-of-freedom motion system (Adopted from Wu)\nX\n\nA\nA\nX\n\nA A\nZ\n\nA\n\nY\n\nA\n\nA\nA\n\nA\n\nA\nA\n\nA\nA\nA\n\nA\nA\n\nA\nA\n\nFig. 2.3. Positions and directions of the six accelerometers\n\n10\n\n2.2.1. Scenario I\nFor scenario I, the SIMES input was inserted at point A in Fig. 2.1 so that both the\naircraft model and the EOM were skipped. Therefore, the output signals of the visual\nsystem and the instrument system closely resemble the input. Fig. 2.4 and Fig. 2.5 show\nthe normalized input (doublet train) and output signals of these two cue channels\n(EVADS Y2 and photodiode readings). The transport delay in each of the two cue\nchannels was obtained as the average of the delays determined from the 10 transition\npoints, and was further averaged across the five test runs conducted. The results are given\nin Table 2.2.\nPitch Eye Point (OD) and EVADS Y2: Scenario I\n1\n\nMagnitude (normalized)\n\n0.8\n\n0.6\n\n0.4\nEyepoint\nEVADS Y2\n0.2\n\n0\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\nTime, s\n\nFig. 2.4. Pitch eye point (OD) and EVADS Y2 (Normalized)\nThe delay was 58 ms in the visual channel and 40 ms in the instrument channel,\nwith a cueing mismatch of 18 ms. There were 14 and 12 ms sampling latencies in the two\nchannels in the test, both of which are within one frame (16.7 ms). They were not\n11\n\nincluded in the results because the sampling latency behaves as communication\nasynchrony, which will be addressed later. The theoretical average time delay in the\nvisual was 3.5 frames, that is, 58.4 ms if the update cycle of the visual system was 16.7\nms. Therefore, the measuring error for the visual delay was small.\nTable 2.2. Transport delays in the three basic cueing channels\nCue Channels\nDelay (ms)\n\nVisual\nVisual\n\nMotion Instrument\n\n58\n\n56\n\n40\n\nPitch Attitude Indicator (OD) and Photo Diode: Scenario I\n1\n\nMagnitude (normalized)\n\n0.8\n\n0.6\n\nAttitude Indicator\nPhoto Diode\n\n0.4\n\n0.2\n\n0\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\nTime, s\n\nFig. 2.5. Pitch attitude indicator (OD) and Photo diode (Normalized)\nThe input signal used to measure the delay in the motion system was either a step\nor a doublet. The response of the motion system was sensed with accelerometers (for the\nplatform accelerations) and potentiometers (for leg positions). Fig. 2.6 shows the readings\n\n12\n\nfrom these two devices (for the doublet input only), along with some intermediate\nresponses in the motion system (refer to Fig. 2.1 and Table 2.1). The accelerometer\nreadings were used, rather than the position feedbacks (potentiometers), because of the\nlarge potentiometer latency. But, because of the noise inherent in the accelerometer\nsignals, the signals were filtered before the delays could be determined from them. The\n2nd-order digital filter used was\n\nY ( z)\n0.0117\n= 2\nX ( z ) z -1.8318z + 0.8546\n\n(2.2)\n\nwhich corresponds to a damping ratio of 0.5 and natural frequency of 25 Hz. The\nacceleration curve in the upper plot of Fig. 2.6 is the raw data, and the acceleration curve\nbelow is the filtered signal. Both the raw and filtered data were employed to determine\nthe delay. When averaged, the transport delay in the motion system alone for both step\nand doublet inputs, was 56 ms. Again, the sampling latency of 10 ms is not included.\n\nMagnitude (normalized)\n\nMagnitude (normalized)\n\nMotion Command and Accelerometer Readings: Scenario I\n1\nMotion Command\n0.8\n\nAccelerometer data\n\n0.6\n0.4\n0.2\n0\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nMotion Command and Accelerometer Readings: Scenario I\n1\nMotion Command\n0.8\n\nAccelerometer data (filtered)\n\n0.6\n0.4\n0.2\n0\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nFig. 2.6. Motion command and selected motion system responses (Normalized)\n13\n\n2.2.2. Scenario II and III\n\nIn both scenarios, the SIMES input signal was inserted at point B in Fig. 2.1, the\nonly difference being whether the aircraft model was skipped (scenario II) or in use. For\neither case, the onset of the response was difficult to identify. Therefore, a least squares\ncurve fit was employed to fit different time segments of the responses. In this manner the\nintersection of the fitting curves was treated as the starting point, corresponding to the\nonset of the input. Doublet signals with varied duration were used as input signals. The\ntotal transport delays from the aircraft control input to the motion base and visual display\nare given in Table 3.2, where the sampling latency and communication asynchrony are\nincluded. All dynamic model processing, EOM integrations and various coordinate\ntransformations were completed in a single frame, and the delay of most of the\nintermediate data could be determined with small errors. Processing of the aerodynamic\nmodel consumed only 7 ms of a frame.\nTable 2.3. Transport delays in the three basic cueing channels\nDelay (ms)\n\nAerodynamics\nSkipped?\n\nMotion\n\nVisual\n\nYes (Scenario II)\n\n88\n\n106\n\nNo (Scenario III)\n\n101\n\n132\n\n2.2.3. Summary\n\nNotice that the values in Table 2.3 are averages with considerably large variances\ndue to the difficulty associated with determining the onset of the response and the signal\nnoise. This suggests that measuring the total transport delay as described in scenarios II\nand III is not the best approach. This assertion is confirmed by the fact that the frame\n\n14\n\nlength of the simulation mainframe computer must be varied as a function of the aircraft\nmodel and simulation task. This means that the total transport delay measured in one\nsituation does not apply to another. Fortunately, this problem may be solved given that: 1)\nthe visual system computer\xe2\x80\x99s frame is fixed to 16.7 ms, and the delays in the individual\ncueing channels can be measured accurately; 2) the delays associated with the aircraft\nstates from the aerodynamics and the EOM can be determined with high accuracies.\nTherefore, a good measure of the total transport delay can be obtained using two steps:\nfirst, measure the individual cueing subsystem delay as in scenario I, and second,\ncalculate the total delay with\ntd = 1.5Tm + ta + tc\n\n(2.3)\n\nwhere Tm is the frame time of the mainframe computer, ta is the average asynchronous\ndelay, and tc the transport delay in a cueing channel. On average it takes a half of a frame\nfor a control input change to be sensed by the mainframe computer (this is known as\nsampling latency), and the simulation requires one frame to process the aerodynamic\nmodel and the EOM, therefore the total average time required to update the aircraft states\nis 1.5Tm . ta , which can be calculated with Eq. (2.13), NASA CR 2007-215095.\nTable 2.4. Time delays of different sources and the total delays\nMain\nframe\n(ms)\n\nCue\n\n25\n\nMotion\n\nDelay (ms)\nta\n\ntm\nMax\n\nAve.\n\nMin\n\nMax\n\nAve.\n\nMin\n\n50\n\n37.5\n\n25\n\n16.7\n\n8.3\n\n0\n\ntc\n\nTotal td\nMax\n\nAve.\n\nMin\n\n58\n\n124.7 103.8\n\n93\n\n56\n\n122.7 101.8\n\n91\n\nInstrument\n\n40\n\n106.7 85.8\n\n75\n\nVisual\n\n58\n\n105.3 89.7\n\n84\n\n56\n\n103.3 87.7\n\n82\n\n40\n\n87.3 71.7\n\n66\n\nVisual\n\n16\n\nMotion\n\n32\n\n24\n\n16\n\n15.3\n\nInstrument\n\n15\n\n7.7\n\n0\n\nFor this measurement, Tm is 25 ms, and for the final piloted tests, it was set to 16\nms. The values of all three terms in Eq. (2.3), the maximums and minimums, if any, and\nthe total delays in the three basic cueing channels for these two mainframe computer\nframe lenghts are summarized in Table 2.4.\nTherefore, the average total delay (baseline delay) in the visual channel in the\nfinal tests will be 90 ms (approximation of 89.7 ms highlighted in bold in Table 2.4).\n\n16\n\n3. Experimental Design\nThe theoretical analyses presented in Chapter 5, NASA CR 2007-215095, are\nbased on offline tests of the predictors, which were conducted using aircraft state data\nrecorded during previous simulations. This is an open loop process because there is no\nvisual display, and there is no operator at all. Instead, the purpose of the offline tests is to\ncompare the predicted aircraft states to the undelayed ones in order to evaluate the\nprediction error. But, these open loop, offline tests are not sufficient to demonstrate\neffectiveness due to the lack of interaction with the operator.\nThe piloted test is illustrated in Fig. 1.4, NASA CR 2007-215095. The\ncompensators were implemented where the block \xe2\x80\x9cPrediction\xe2\x80\x9d is located, which\ngenerated predicted (future) aircraft states from the current aircraft states (outputs of the\nEOM). Artificial delay could be added to the predicted aircraft states by using a FIFO\nbuffer. In this manner, the visual system would retrieve the aircraft states from the buffer,\nafter the specified delay, and use this data to generate the visual image. The compensators\nwere designed to give the predicted states a phase lead equivalent to the baseline delay\nplus the added delay. Thus the aircraft states, after the added delay, were still ahead of the\nEOM-generated states by the amount of the baseline delay. This amount of prediction\nwas designed to offset the transport delay in the visual system. If the compensator were\nideal, the pilot would sense no delay in the visual image.\nThis chapter presents the experimental design for the final tests, including a\ndescription of the pilots involved, the simulation tasks and maneuvers, the amount of\ntransport delay, compensation techniques, data collection, and evaluation methods.\n\n17\n\n3.1.\n\nThe Man-Machine System\xe2\x80\x94the Simulator and the Pilots\n\nAll simulation tests were conducted using the Visual Motion Simulator (VMS),\nshown in Fig. 3.1, at the NASA Langley Research Center, in Hampton, Virginia. The\nVMS is a general-purpose simulator consisting of a two-crewmember cockpit mounted\non a 60-inch stroke six-degree-of-freedom synergistic motion base 8 , 9 . The relative\nextension and retraction of the six hydraulic actuators of the motion base provide the\nmotion cues. The latest NASA/SUNY 10 nonlinear motion cueing algorithm was used\nbecause it has been proven to have better performance than other prominent ones.\n\nFig. 3.1. VMS at the NASA Langley Research Center\n\nThe instrument cues are provided by gauges on the panel in the cockpit of the\nVMS, as shown in Fig. 3.2, and by three heads-down CRT displays\xe2\x80\x94a generic electronic\nprimary flight display, an electronic horizontal situation indicator display, and a generic\nelectronic engine display. The visual cues are provided by a wide angle, collimated, outthe-window, display driven by an Evans and Sutherland ESIG 3000/GT computer\ngenerated image system.\n\n18\n\nThere are three primary controls available in the cockpit: a control loaded twoaxis side stick (roll and pitch), a control loaded rudder pedal system, and a four-lever\nthrottle quadrant. Other control inputs include a flap handle, a speed brake handle, a slats\nhandle, etc.\nDuring the simulation scenarios, a high fidelity, highly nonlinear mathematical\nmodel of a large commercial transport aircraft was used. This simulation included a\nlanding gear dynamics model, gust and wind models, flight management systems, and\nflight control computer systems. For this study, the test subjects flew the aircraft in the\nmanual control mode (no autopilot) and with manual throttle control (no autothrottle).\n\nFig. 3.2. Cockpit of the VMS simulator\n\nIn order to perform statistical analyses and avoid the possibility of general\nconclusions based on one special case, 13 subjects with varying aircraft and flight\nexperience flew in the piloted study. A brief resume for each pilot is available in Table\nA.5.\n\nAll 13 test subjects were volunteers, and therefore their training and flight\n\nexperiences were not as homogenous as desired.\n\n19\n\nFor most of the pilots, the tests were\n\nconducted over a 6-hour period, with approximately three hours of familiarization and\ntraining, and then three hours of the actual test scenarios.\n\n3.2. Simulation Maneuvers and Conditions\n\nThe final piloted simulation tests consisted of two flight scenarios: (1) a straightin approach, and (2) an offset approach.\nIn the straight-in approach, the airplane landed directly on a runway (Runway\n18R) from the initial conditions listed in table 3.1. The straight-in approach included a\n10 knots wind, which began as a head wind, swung around to a 90 deg wind from the left\nmid-way through the approach, and continued to swing around to a tail wind as the\naircraft crossed the threshold.\nTable 3.1. Straight-in approach conditions\n\nAltitude\n\n1300 ft BARO, 697 ft AGL\n\nAirspeed\n\n135 kts\n\nHeading angle\n\n180 deg\n\nDistance to Runway\n\n2 nm\n\nFlaps, Gear\n\nFull, Gear-down\n\nEPR\n\n1.19\n\nAutopilot\n\nOFF\n\nAutothrottle\n\nOFF\n\nGlideslope\n\nON Glideslope\n\nLocalizer\n\nON Localizer\n\nIn the offset approach, the aircraft was initially aligned with the left runway\n(Runway 18L); and at a certain point the pilot was instructed to roll to the right, and line\nup with the adjacent runway (Runway 18R), within some transition distance. The aircraft\n20\n\nthen landed on Runway 18R. The initial conditions for the offset approach are included in\nFig. 3.3.\n\n18L\n18L\n\n18R\n\nTransition Distance\n\nFig. 3.3. Schematic diagram of the offset approach maneuver flight route\n\nThe offset approach included a lateral gust from the left, 90 deg to runway\ncenterline, which came on at 3000 ft from the runway threshold, and turned off as the\naircraft crossed the threshold, and severe turbulence. A complete list of the initial\nconditions for the offset approach is included in Table 3.2.\n\n21\n\nTable 3.2. Offset approach conditions\n\nAltitude\n\n1300 ft BARO, 697 ft AGL\n\nAirspeed\n\nDistance to Runway\n\n135 kts\n180 deg aligned with Runway\n18L\n2 nm\n\nFlaps, Gear\n\nFull, Gear-down\n\nEPR\n\n1.19\n\nAutopilot\n\nOFF\n\nAutothrottle\n\nOFF\n\nGlideslope\n\nON Glideslope\n\nHeading angle\n\n3.3. Other Simulation Conditions: Time Delay and Compensations\n\nIn Chapter 2, the average time delay in the VMS was determined to be 90 ms. In\norder to test the compensation capabilities of the McFarland predictor and the two novel\npredictors, artificial delay was inserted into the simulation in addition to the 90 ms\nbaseline transport delay. In the preliminary tests, the Pade approximation was used to add\n0, 50, 100 and 200 ms of artificial delays to the system, none of which was an integer\nmultiple of the simulator computer frame. In the final tests, the added delay amounts\nwere changed to 0, 48, 96 and 192 ms, which are integer multiples of the update period\n(16 ms). The artificial delay was added by storing the predicted aircraft states in a FIFO\nbuffer, where they were held for 0, 3, 6 and 12 frames before being output to the visual\nsystem. The total delay in the simulation was thus 90, 138, 186 or 282 ms for the four\ncases.\n\nThere were five compensation options: no compensation, the original McFarland\nfilter, the McFarland predictor with spike reduction, the adaptive predictor, or the state\n\n22\n\nspace predictor. Each subject completed 40 test runs: 20 for the straight-in approach, and\n20 for the offset approach. The 20 tests runs for each maneuver came from the\nenumeration of the 4 time delay options and 5 compensation options. The order of the\nruns, in each maneuver group, was randomized, e.g., the zero delay case was not\nnecessarily the first run, and an uncompensated case was not necessarily followed by a\ncompensated case. The run matrix of the two maneuvers is included in Appendix A.\n3.4. Data Collection and Analysis Methods\n\nAll test runs were recorded using a DVD and videotape. The recorded images\ninclude a camera pointed at the motion system from the rear, a camera pointed at the\nmotion system from the side, the pilot\xe2\x80\x99s out-the-window display, and the pilot\xe2\x80\x99s primary\nflight display (EADI).\nOver 60 data items were recorded from the simulation. These include:\n1) The four pilot control input signals: roll stick, pitch stick, rudder pedal and the\nthrottle;\n2) The aircraft accelerations, velocities and displacements in each of the 6-DOF, in\nthe geodetic frame, which contributes 36 items;\n3) Glideslope and localizer error and X and Y position of the aircraft.\n4) Other items, including the motion system position and acceleration, the wind\nvelocity, and data that is displayed on the pilot\xe2\x80\x99s instrument system.\nThe print parameters are included in Appendix A. These variables were collected\nevery fourth frame for the duration of each simulation test run. Therefore, the time gap\nbetween two consecutive data points is 64 ( 16 \xc3\x97 4 ) ms.\n\n23\n\nThe power spectral density analysis (PSD) was applied to the four pilot control\ninputs to evaluate the operator performance and workload, which were expected to be\naffected by the time delay and compensation. The PSD was also used to analyze the\nfrequency characteristics of some aircraft states.\nAs stated in Chapter 2, NASA CR 2007-215095, the pilot workload, in terms of\nthe PSD, is an objective metric. In addition to the pilot input PSD, two other objective\nmetrics\xe2\x80\x94the aircraft glideslope error and touchdown error were employed for analysis as\nwell.\nThe NASA TLX (Task Load Index) data and the Cooper-Harper rating data were\nalso collected and analyzed. The TLX and CHR are two quasi-objective metrics assessing\nthe pilots\xe2\x80\x99 workload and aircraft handling quality, respectively.\n\n24\n\n4. Results of Experiments and Data Analyses\nThe final piloted simulation tests were conducted using the NASA Langley Visual\nMotion Simulator to assess the relative effectiveness of the two novel compensation\nalgorithms along with the McFarland compensator. Thirteen pilots executed 520 tests\nfrom mid October 2004 to late January 2005. The details of the simulation maneuvers\nand other conditions are available in the previous chapter. Four types of analyses of the\ncollected data have been completed to evaluate the results, they are: 1) the pilots\xe2\x80\x99\nperformance in minimizing the glideslope error and touchdown point error; 2) the pilots\xe2\x80\x99\nhandling qualities rating from the Cooper-Harper Ratings (CHR) on the glideslope and\ntouchdown errors; 3) the pilots\xe2\x80\x99 workload and psychological evaluation analysis from the\nNASA Task Load Index (TLX); and 4) the pilots\xe2\x80\x99 control workload based on the power\nspectral density (PSD) of the simulator control inputs. The first and last assessments are\nobjective evaluations and the middle two are quasi-objective evaluations. This chapter\ndescribes the analyses and the results of the final tests. In all analyses that follow, the\nmean values and standard deviations are calculated across all 13 pilots. In addition, an\nanalysis was completed with the pilots grouped together based on their experience. It is\nimportant to recognize that pilot performance measures alone are not a sufficient metric\nfor determining total system performance. This is because pilots are very good at\nmaintaining high performance levels under adverse circumstances. They just work harder.\nTherefore, metrics sensitive to pilot workload are necessary.\n4.1. Analysis of Pilots\xe2\x80\x99 Performance\n\nIn both the straight-in approach and the offset approach, the aircraft, started from\nan initial altitude of 1300 ft, descended gradually and landed on the designated runway.\n25\n\nThe angle that the aircraft deviates from the ideal glideslope is called the glideslope error.\nThe distances in the x and y directions between the actual touchdown point and the desired\ntouch down point are referred to as touchdown errors. The glideslope error and the\ntouchdown errors are two objective measures directly reflecting the pilots\xe2\x80\x99 maneuvering\nperformance.\nAn Example of the Aircraft Altitude and Glide Slope Error\n1400\n\nAltitude, ft\n\n1200\n1000\n800\n600\n\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n40\n\n50\n\n60\n\n70\n\nTime, s\nGlide Slope Error, deg\n\n0.8\n0.6\n0.4\n0.2\n0\n-0.2\n\n0\n\n10\n\n20\n\n30\nTime, s\n\nFig. 4.1. Example of the aircraft altitude and glideslope error\n4.1.1. Glideslope Error\n\nFig. 4.1 shows an example of the aircraft altitude and the corresponding\nglideslope error. As the aircraft approaches the runway, the glideslope error usually\nincreases in magnitude, and it saturates at \xc2\xb10.7o as the aircraft actually touches the ground.\nBecause saturation of the glideslope error indicates that the aircraft touched down, the\nsaturated value was removed from the data, and the analysis was terminated at this point.\nThe integrated PSD and root mean squared error (RMSE) were also calculated, but\n\n26\n\nbecause the PSD showed more distinction between cases, the analysis was based\nprimarily on the PSD. The integrated PSD is the integration of the PSD over the\nfrequency range in which it is distributed.\nFig. 4.2 shows the impact of the time delay added to the simulator in terms of the\nmean value and standard deviation of the integrated PSD of the glideslope error. In\ngeneral, the glideslope error increases with an increase in the time delay, except that in\nthe offset approach, the glideslope error for 192 ms of delay was smaller than that of the\n96 ms delay case. But, because of the relatively large deviations, the difference was\ninsignificant. With the exception of the zero added delay case, the glideslope errors for\nthe offset approach maneuver were slightly larger than those for the straight-in approach,\nfor each time delay case.\n\nGS Error PSD\n\nMean and STD of Integrated PSD of Glide Slope Error\n\n0.3\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n0.2\n\n0.1\n\n0\n1\n\n2\n\nMean and STD of RMSE of Glide Slope Error\n\nGS Error RMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\nManeuver (1: Straight-in; 2: Offset)\n\nFig. 4.2. Mean and standard deviation of the glideslope errors as a function of delay\n\n27\n\nFig. 4.3 illustrates the integrated PSD of the glideslope errors for the different\ncompensation algorithms, namely, no compensation, McFarland compensation,\nMcFarland compensation with spike reduction, the adaptive compensation and the state\nspace compensation. Note that for all cases, the term \xe2\x80\x9cno compensation\xe2\x80\x9d means no\ncompensation whatsoever. However, when any of the compensators was in use, and the\ncase calls for zero added delay, the compensators were set up to compensate for the 90\nms of baseline delay. The adaptive filter and state space filter both showed a slight\nreduction in the glideslope error in compensating the baseline delay for either approach.\nWhile the McFarland compensator resulted in a larger decrease in the glideslope error in\nthe straight-in approach than the two novel compensators, it increased the error in the\noffset approach. Finally, in the zero added delay cases, the spike reduction algorithm\neven increased the glideslope error over that of the basic McFarland filter.\n\nGSE PSD\n\n0.4\n\n0.3\n\nMean & STD of Integrated PSD of Glide Slope Error: Straight-in\nA\nh\nNo compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptive Predictor\nState Space Predictor\n\n0.2\n\n0.1\n\n0\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n\nGSE PSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.3. Mean and STD of the integrated PSD of the GSE with compensation\n28\n\nFor the added delay cases, the state space filter revealed a glideslope error\nreduction except for the 192 ms added delay in the straight-in approach. In general, the\nadaptive compensator showed decreased error, except for the 96 ms delay case in the\nstraight-in approach and 48 ms delay case in the offset approach. The McFarland\ncompensator revealed a reduction in the glideslope error only for the 192 ms additional\ndelay cases. Aside from the McFarland filter, the compensation was obvious when using\nthe remaining three filters for 96 ms added delay in the offset approach. Smaller errors\nwere observed with the spike reduction algorithm than with the plain McFarland\ncompensator for all added delay cases.\n4.1.2. Touchdown Error\n\nThe subjects were instructed to touchdown within a \xe2\x80\x9ctouchdown box\xe2\x80\x9d as\nillustrated in Fig. 4.4, which is 1000ft \xc3\x97 140ft, centered at (1000,0). If the touchdown\nerror was considered zero when touching down anywhere inside the box, there would be\nmany runs without any touchdown error. Therefore, the x touchdown error was defined\nas the absolute value of the difference between the x coordinate of the aircraft CG at the\ntouchdown point and the center C , and the y touchdown error was the distance between\nthe y position of the CG at the touchdown point and the runway centerline.\nx=0\n\n( \xe2\x88\x9270,1500 )\n\n( \xe2\x88\x9270,500 )\nO\n\nCenterline\n\ny\n\nC\nx\n\n( 70,500 )\n\n( 70,1500 )\n\nRunway\nThreshold\n\nFig. 4.4. Illustration of the touchdown box\n\n29\n\nHowever, determining the exact touchdown point became a tricky problem\nbecause the landing gear forces were not recorded. One way to solve this problem is to\nuse the available aircraft vertical force that includes spikes that occurred when the\nlanding gear touched the runway. The beginning of the first spike was used to signal the\ntouch down. While this method worked well for almost all straight-in runs and most of\nthe offset runs, it proved to be defective for many offset runs because the high\naccelerations resulting from the vertical forces caused by the turbulence, masked the\nspikes caused by the touchdown. Fortunately, there is an alternative way to decide the\ntouchdown point, which is illustrated in Fig. 4.5.\nCG\n\nr=20 in\n\nO\n\nL\nAltitude\n\nRunway\nhlw\n\n603 ft\nSea Level\n\nFig. 4.5. Illustration of calculating the height of the landing gear\n\nThe height of the centers of the landing gear are given by\nhlw = h \xe2\x88\x92 r2 cos \xcf\x86 cos \xce\xb8 \xe2\x88\x92 r1 sin \xcf\x86 + r0 sin \xce\xb8\n\n(4.1)\n\nwhere h , \xcf\x86 and \xce\xb8 are the aircraft altitude, roll angle and pitch angle (all available), and\nr0 = 7 ft\n\n, r1 = \xc2\xb112 ft (positive for the right gear and negative for the left gear) and\n\nr2 = 13.7 ft .Then,\n\nthe height of the lowermost point on a landing gear is hlw \xe2\x88\x92 r . Once this\n\nis less than 603ft, the first touchdown occurs. The touchdown point was determined with\nthese two methods. An example of determining the touchdown errors is given in Fig. 4.6,\nwhere SX and SY are the aircraft positional coordinates in the Earth frame, relative to\nthe runway. It shows the two methods yield identical results.\n\n30\n\nAircraft Vertical Force, Touchdown Point and Errors\n\nVertical Force, g\xe2\x80\x99s\n\n2.5\nVertical Force\nTouchdown Mark (Method One)\nTouchdown Mark (Method Two)\n\n2\n1.5\n1\n0.5\n\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n5000\nSX\n\ntd\n\nSX,SY, ft\n\n0\nSY\n\ntd\n\n-5000\nSX\nSY\n\n-10000\n-15000\n\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\nTime, s\n\nFig. 4.6 Aircraft force, touchdown point and touchdown errors\n\nFig. 4.7 illustrates the change in the touchdown error in both X and Y directions\ninduced by the addition of time delay. The X-touchdown error showed consistent\nincrease with increasing artificial time delay, though in the offset approach, the Xtouchdown errors for the 96 ms and 192 ms delay cases were about the same (the latter\nwas slightly higher). In general, the standard deviation also increases with the amount of\ninserted delay. With the exception of the zero added delay case, the offset approach\nreveals a slightly larger X-touchdown error than the straight-in approach.\nThe Y-touchdown error, however, did not show consistent change with the\nchanging delay. For the straight-in maneuver, the 48 ms delay case resulted in a\nconsiderable decrease in the Y-touchdown error compared to the zero delay case, and the\n192 ms delay case resulted in a much smaller error than the 96 ms delay case. For the\noffset approach, adding 48 ms or 96 ms delay resulted in smaller Y-touchdown error as\n\n31\n\ncompared to the zero delay case. The inconsistency in the Y-touchdown error might be\nassociated with the fact that the subjects were instructed to pay more attention to the Xtouchdown accuracy. Therefore, it is reasonable to weight the X-touchdown error more\nthan the Y-touchdown error in the remaining analyses.\nMean and STD of the Touchdown Error\n\nX-TD Err\n\n1500\n\n1000\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n500\n\n0\n1\n\n2\n\nY-TD Err\n\n30\n20\n10\n\n0\n\n1\n2\nManeuver (1: Straight-in Approach; 2: Offset Approach)\n\nFig. 4.7. Mean and standard deviation of the touchdown errors changing with delay\n\nThe differences imposed by the four different compensation techniques on the Xtouchdown error are given in Fig. 4.8. For the zero added delay straight-in case, all but\nthe McFarland compensator revealed a reduction in the mean X-touchdown error, with\nthe smallest reduction occurring with the state space filter. For the offset approach, all\ncompensators yielded increased X-touchdown error, which might be attributed to the\nrelatively small mean X-touchdown error with the zero added delay case (it was even\nsmaller than in the straight-in approach). The increased X-touchdown error for the 48 ms\n\n32\n\ndelay in the straight-in approach was unexpected. As a comparison, all but the McFarland\ncompensators showed a reduction in the X-touchdown error for the 48 ms delay in offset\nmaneuver. With the exception of the 192 ms delay in the straight-in approach, the two\nnovel compensators revealed a noticeable decrease in the X-touchdown error, with the\nstate space filter making a significant difference in compensating 192 ms delay in the\noffset approach. The state space predictor showed a significantly smaller X-touchdown\nerror than the McFarland predictor for 96 ms delay during the straight-in approach. The\nMcFarland filter only reduced the X-touchdown error in the 192 ms delay case. For all\nbut the 192 ms delay straight-in case and the zero added delay offset-approach case, the\nspike reduction algorithm produced decreased X-touchdown error. Finally, notice that the\noffset approach showed a smaller X-touchdown error than the straight-in approach.\nMean & STD of X-Touchdown Error of All Pilots: Straight-in Approach\nMean SX Error, ft\n\n3000\n\n2000\n\nNo compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n1000\n\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\nMean SX Error, ft\n\n3000\n\n2000\n\n1000\n\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.8. Mean and STD of the X-touchdown errors changing with the compensation\n\n33\n\nFig. 4.9 shows the counterpart of Fig. 4.8 for the Y-touchdown error. For the\nstraight-in approach, all compensations resulted in a reduction of the Y-touchdown error\nonly for the 96 ms added delay case. In other words, compensation with all predictors\nincreased the Y-touchdown error for the zero, 48 ms and 192 ms added delay cases, for\nthe straight-in approach. The results improved for the offset approach. With the exception\nof a few cases (the McFarland compensation for the zero added delay, and the adaptive\nfilter for the 48 ms and 96 ms), all compensations revealed a reduction of the Ytouchdown error. And, unlike the X-touchdown errors, the Y-touchdown errors during\nthe offset approaches were substantially greater than those of the straight-in approach.\n\nMean SY Error, ft\n\nMean & STD of Y-Touchdown Error of All Pilots: Straight-in Approach\nNo compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n30\n20\n10\n0\n\n1\n\n2\n\n3\n\n4\n\nMean SY Error, ft\n\nOffset Approach\n30\n20\n10\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.9. Mean and STD of the Y-touchdown errors changing with the compensation\n\nComparing Fig. 4.2 with Fig. 4.7, and Fig. 4.3 with Fig. 4.8 and Fig. 4.9 shows\nthat the added time delay and all the compensators produced a very similar influence on\n\n34\n\nthe glideslope error and X-touchdown error. Two noticeable differences are: 1) the mean\nX-touchdown error does not increase with the maneuver complexity (i.e., it should be\nlarger for the offset approach) as does the glideslope error; and 2) the compensation for\nthe 48 ms delay case with the novel predictors did not result in an improvement of the\npilots\xe2\x80\x99 performance in terms of the X-touchdown error, as it did in terms of the glideslope\nerror. As was previously stated, this might be attributed to the relatively small Xtouchdown error for the zero added delay case. The Y-touchdown error displayed more\nrandomness as compared to the X-touchdown error. Therefore, the glideslope error\nshowed more positive results for the effects of time delay and compensation than the\ntouchdown error as a whole.\n4.2. Analysis of Pilots\xe2\x80\x99 Handling Quality Rating (CHR)\n\nCooper Harper Rating (CHR) data were recorded to assess the pilots\xe2\x80\x99 handling\nquality. Unlike the CHR collection in the preliminary tests, two sets of CHR were\ncollected in the final piloted tests: one CHR on the pilot\xe2\x80\x99s ability to maintain the\nglideslope and the other on his ability to land in the touchdown box. In other words, the\npilots were instructed to evaluate the handling qualities based upon the glideslope and the\ntouchdown results separately, after each simulation run. The advantage of this approach\nis that it becomes possible to compare the two CHRs with the two types of errors\nindividually. The presentation of the CHR analyses in this section is given in conjunction\nwith the glideslope error and touchdown error (in the X-direction) for convenience.\n4.2.1. CHR of Maintaining the Glideslope\n\nFig. 4.10 shows how the mean values and standard deviations of the glideslope\nerror (GSE) and the CHR change with the addition of time delay. In general, longer\n35\n\nadded time delay corresponds with a higher mean CHR (i.e., poorer handling quality)\nexcept the CHR decreases from zero delay to 48 ms delay for the straight-in approach,\nand from 48 ms delay to 96 ms delay for the offset approach. Because the time delay is\nexpected to diminish the pilot\xe2\x80\x99s assessment of the handling quality (higher CHR) and\nincrease the GSE, a change in the opposite direction may be considered an exception.\nAnalysis of the CHR revealed two exceptions, whereas analysis of the GSE only revealed\none, and they were in different situations. This indicates some discrepancy between CHR\nand the GSE. The GSE yielded \xe2\x80\x9cbetter\xe2\x80\x9d results than the CHR, which is not surprising\nbecause the GSE is an objective metric and the CHR is a quasi-objective metric.\nMean and STD of the CHR on the Glide Slope Across All Pilots\n10\n\nCHR on GS\n\n8\n6\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n4\n2\n0\n\n1\n\n2\n\nGSE in PSD\n\nMean and STD of the Glide Slope Error\n\n0.3\n0.2\n0.1\n0\n\n1\n2\nManeuver (1: Straight-in Approach; 2: Offset Approach)\n\nFig. 4.10. Mean & STD of CHR and GSE changing with the time delay\n\nPilot #6 gave a CHR of 9 for the 192 ms added delay, straight in approach, with\nthe comment \xe2\x80\x9cRoll PIO (pilot induced oscillation) during most of the approach; (the)\n\n36\n\nmotion base kicked off about the time the aircraft crossed the threshold\xe2\x80\x9d.\n\nRefer to Fig\n\nB.3.10 in Appendix B.\nMean and STD of CHR on Glideslope with Compensations: Straight-in Approach\n10\n\nCHR on GS\n\n8\n6\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\nMean and STD of the PSD of Glideslope Error with Compensations\n\nGSE in PSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.11. Mean and STD of CHR & GSE with compensations: straight-in approach\n\nFig. 4.11 shows the mean values and standard deviations of the GSE and the CHR\nfor different compensations in the straight-in approach. For the 0 ms, 96 ms and 192 ms\ndelay cases, the CHR revealed noticeably better handling qualities with all compensators,\nexcept the adaptive predictor, which on average, made no difference when the added\ndelay was 0 ms or 96 ms. For the 48 ms delay case, all compensation algorithms\nproduced an increased CHR. The spike reduction algorithm made an inconsistent\ndifference in the McFarland compensator. The discrepancy between the CHR and GSE\nwas not substantial. The largest discrepancy between the CHR and the GSE was for the\n\n37\n\nzero delay case, when using the McFarland compensation with the spike reduction. This\ncase had the lowest CHR but highest GSE among all compensators.\nMean and STD of CHR on Glideslope with Compensations: Offset Approach\n10\n\nCHR on GS\n\n8\n6\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\nMean and STD of the PSD of Glideslope Error with Compensations\n\nGSE in PSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.12. Mean and STD of CHR & GSE with compensations: offset approach\n\nThe counterpart of Fig.4.11 for the offset approach is given in Fig.4.12. In terms\nof the CHR, obvious, desirable compensation results were observed only for the\nMcFarland predictor for the zero delay case, the state space predictor for the 48 ms and\n192 ms delay cases, and the adaptive predictor for the 192 ms delay case. Notice that the\nMcFarland predictor with spike reduction, the adaptive predictor and the state space filter\nproduced an even higher CHR compared to the uncompensated cases for both zero and\n96 ms artificial delay, and for these cases (except for McFarland with spike reduction in\nzero delay), the CHR shows a sharp discrepancy with the GSE. The objective evaluation\n\n38\n\n(GSE) clearly revealed more desirable compensation results than the quasi-objective\nevaluation.\n4.2.2. CHR on the Touchdown\n\nFig. 4.13 shows the change in the mean values and standard deviations of the\ntouchdown error (TDE) and the CHR as a function of the added time delay. With the\nexception of the 48 ms added delay straight-in approach case, in which the CHR was\napproximately the same as the zero added delay case, all other cases showed a distinct\nincrease in the CHR. The increase in the CHR in the 192 ms delay case was significant.\nAlthough the CHR revealed a more apparent increase as a function of the delay than the\nTDE, the difference between them was not substantial. The offset approach significantly\ndegraded the handling quality compared to the straight-in approach.\nMean and STD of the CHR on the Touchdown Across All Pilots\n10\n\nCHR on TD\n\n8\n6\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n4\n2\n0\n\n1\n\n2\n\nMean and STD of the X-Touchdown Error\n\nTD Error, ft\n\n1500\n1000\n\n500\n\n0\n\n1\n2\nManeuver (1: Straight-in Approach; 2: Offset Approach)\n\nFig. 4.13. Mean & STD of CHR and TDE changing with the time delay\n\n39\n\nDuring this study, three full CHR (CHR=10, indicating the system is totally\nuncontrollable) occurred for long artificial delays: The first was from pilot #5 for the 192\nms delay case, and the second and third were from pilot #13 for the 96 ms and 192 ms\ndelay cases. In all three cases, the pilot reported PIO, which significantly affected the\ntouchdown.\nA comparison of different compensation algorithms in terms of the TDE and the\nCHR for the straight-in approach is shown in Fig.4.14. Obvious CHR decreases by all\ncompensations were found only for the 96 ms and 192 ms delay cases. The two novel\npredictors produced significantly decreased CHR in compensating 192 ms delay during\nthe straight-in approach. On the other hand, with the exception of the McFarland\ncompensator, which resulted in a decreased CHR for the zero and 48 ms delay cases, all\nthe other predictors revealed an increased CHR. The most substantial discrepancy\nbetween the TDE and the CHR occurred with the McFarland compensation for an added\ndelay shorter than 192 ms:\n\nWhen using the McFarland compensation, the CHR\n\ndecreased but the TDE increased.\n\n40\n\nMean and STD of CHR on Towndown with Compensations: Straight-in Approach\n10\n\nCHR on TD\n\n8\n6\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\nMean and STD of the PSD of Touchdown Error with Compensations\n2500\n\nX-TD Error\n\n2000\n1500\n1000\n500\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.14. Mean and STD of CHR & TDE with compensations: straight-in approach\n\nFig. 4.15 gives the counterpart of Fig. 4.14 for the offset approach. Almost all\ncompensators improved the pilots\xe2\x80\x99 handling qualities for non-zero added delay cases in\nterms of the mean CHR. With the exception of the McFarland compensator with spike\nreduction, all the compensators made little difference in the mean CHR for the zero\nadded delay case, although the state space predictor had considerably smaller standard\ndeviation. With the exception of the McFarland predictor in the non-zero added delay\ncases, the CHR and TDE agreed with each other fairly well. The two novel predictors\nmade a significant improvement over the McFarland compensator in terms of the CHR\nand the TDE for the 192 ms delay.\n\n41\n\nMean and STD of CHR on Touchdown with Compensations: Offset Approach\n10\n\nCHR on TD\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\nMean and STD of the PSD of Touchdown Error with Compensations\n\nX-TD Error\n\n3000\n\n2000\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n1000\n\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.15. Mean and STD of CHR & TDE with compensations: offset approach\n\nThere were two occurrences of a full CHR (worst handling quality) with\ncompensation while the corresponding uncompensated runs had a CHR of 4. Both were\nfrom pilot #4 while using the McFarland compensation. The first occurred for the 96 ms\ndelay and the second was for 192 ms delay. These indicate that serious handling\nproblems may result when using the McFarland compensator for long time delay. No full\nCHRs were associated with the compensation algorithms designed by the author.\nFinally, it is worth mentioning that the Cooper-Harper Ratings on the glideslope\nand touchdown did not show substantial difference.\n4.3. Analysis of the TLX\n\nThe NASA Task Load Index (Hart and Staveland, 198811) is a multi-dimensional\nquasi-objective metric to rate the overall workload of the operator in a man-machine\n42\n\ninteraction. The TLX is a weighted average of six ratings of six subscales of workload12:\nmental demand, physical demand, temporal demand, performance, effort and frustration.\nThe definitions of these six subscales are given in Appendix A (Table A.4). Each scale is\npresented as a line divided into 20 equal intervals (i.e., graduations) anchored by bipolar\ndescriptors (e.g., High/Low). Obtaining a NASA TLX is a three-step procedure: rating,\nweighting and averaging. First, the pilot gives a rating by marking each scale at the\ndesired location either during a task, after a task segment, or following an entire task.\nThen, the weighting is achieved by making choices for 15 pairs of comparisons resulting\nfrom the combination of the six factors. The subject has to select the member of each pair\nthat contributes more to the workload of that task. Finally, sum the weighted ratings and\ndivide the sum by 15 to get the overall weighted TLX.\nFor the final piloted tests, in addition to the weighted TLX, another type of TLX\nwas also calculated by simply averaging the six ratings, giving an even weight to each\nsubscale, and this method will be referred to as an Evenly Averaged TLX in this report.\nHigh TLX (and high EA TLX) indicates a high pilot workload.\n4.3.1. Analysis on the Overall Weighted TLX\n\nFig. 4.16 shows the effects of added time delay on the mean value and standard\ndeviation (across the 13 pilots) of the overall weighted TLX and the Evenly Averaged\nTLX. For the straight-in approach, from zero delay to 48 ms delay, the mean overall\nweighted TLX remained unchanged, the evenly averaged TLX showed only a very slight\nincrease. However, both types of TLX increased for the 96 ms and 192 ms delay cases.\nThe standard deviation of both types of TLX did not reveal any considerable difference\namong the four cases of artificial delay. The changes in the overall weighted TLX, and\n\n43\n\nthe Evenly Averaged TLX for the offset approach were similar to those of the straight-in\napproach. The offset approach substantially increased the TLX compared to the straightin approach.\nMean Values & STD of the TLX of All Pilots: Straight-in Approach\n100\n\nTLX\n\n80\n60\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n40\n20\n0\n\n1\n\n2\nOffset Approach\n\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n2\nType of TLX (1: Weighted; 2: Plain Average)\n\nFig. 4.16. Mean value and STD of the TLX as a function of the time delay\n\nThe counterintuitive increase in the two types of TLX for the 48 ms added delay\ncase was similar to that of the other quasi-objective metric, the CHR, which also\nincreased with the same artificial delay. This shows that a small delay of up to 48 ms\nmade only a slight difference in the quasi-objective metrics. Because adding 48 ms delay\ndid not cause a noticeable increase in TLX, adding compensation for the 48 ms added\ndelay was not expected to cause an noticeable decrease in TLX, and the TLX of the\ncompensated system was not expected to be lower than the TLX of the undelayed system.\nThis will be proved in the following analysis of TLX for the compensations.\n\n44\n\nIn this study the Evenly Averaged TLX did not show significant differences\nbetween cases when compared to the overall weighted TLX. Therefore, results based\nupon the evenly averaged TLX will not be presented further, and the overall weighted\nTLX will be referred to as TLX.\nFig. 4.17 shows the difference in the mean value and standard deviation of the\nTLX from the four types of compensators. For the straight-in approach, all compensators\ncaused an obvious decrease in the TLX for 96 ms or more added delay cases. The state\nspace compensator caused a slight decrease in the TLX for 48 ms added delay case, but a\nslight increase for the zero added delay case. Both the McFarland predictor and the\nadaptive predictor revealed increased TLX for zero and 48 ms added delay cases, while\nthe reduced-spike McFarland predictor showed decreased TLX for these two delay cases.\nFor the offset approach, all predictors, except the McFarland compensator and the\nstate space compensator, showed decreased TLX when compensating for 96 ms or more\nadded delay. In the 48 ms delay case, only the state space compensator showed a\ndecreased TLX, with all the other compensators causing the TLX to increase. Only the\nadaptive predictor showed a noticeable reduction of the TLX in the zero added delay case.\nInconsistent differences were observed when using the spike reduction algorithm\ncompared to the (plain) McFarland compensator.\n\n45\n\nMean Value and STD of the Weighted TLX of All Pilots: Straight-in Approach\n100\n\nTLX\n\n80\n60\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.17. Mean and STD of the TLX changing with compensations\n4.3.2. Analysis on the Six Factors of the TLX\n\nAs was previously stated, the TLX is an overall weighted average of the six\nratings on the six subscales. But, because the influence of the compensation algorithms\non the overall weighted TLX is unclear, it will be necessary to investigate the\ncontribution of each individual component. Because the compensation yielded an\nobviously decreased TLX for the 96 ms and longer added delay cases, the examination of\nthe individual items in the following section will only be concerned with the zero and 48\nms added delay cases. The results are illustrated in Fig. 4.18 (for the mental and physical\ndemands), Fig. 4.19 (for the temporal demand and performance) and Fig. 4.20 (for the\neffort and frustration).\n\n46\n\nMean Value & STD of the Mental & Physical Ratings: Straight-in Approach\n100\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\nRating\n\n80\n60\n40\n20\n0\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n100\n\nRating\n\n80\n60\n40\n20\n0\n\n1\n2\n3\n4\n1: Mental,0 ms; 2: Mental,48 ms; 3: Physical,0 ms; 4: Physical,48 ms\n\nFig. 4.18. Mean and STD of mental and physical demands with compensations\n\nFig. 4.18 shows that, in general, compensation tends to increase the mental\ndemand, and decrease the physical demand, during the straight-in approach. But for the\noffset approach, the contradiction between the mental and physical demands vanished,\nand the change in the demands was neither significant nor consistent. The two novel\ncompensators revealed more occurrences of decreased demand than the other two, though\nthe decrease was very slight.\nAs illustrated in Fig. 4.19, a similar contradiction exists between the temporal\ndemand and the performance for the straight-in approach. Compensation (except for the\nMcFarland predictor for zero added delay case) tended to decrease the average temporal\ndemand, while it tended to increase the average performance rating. The two novel\n\n47\n\ncompensators revealed a slightly larger decrease in the temporal demand. For the offset\napproach, the compensation appeared to increase the two ratings slightly.\nMean Value & STD of the Temporal & Performance Raings: Straight-in Approach\n100\n\nRating\n\n80\n60\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n40\n20\n0\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n100\n\nRating\n\n80\n60\n40\n20\n0\n\n1\n2\n3\n4\n1: Temporal,0 ms; 2: Temporal,48 ms; 3: Performance,0 ms; 4: Performance,48 ms\n\nFig. 4.19. Mean and STD of the temporal demand & performance\n\nThe compensators resulted in inconsistent changes to the effort and frustration\nratings, as can be seen in Fig. 4.20. The change in the two ratings was not significant,\nexcept for the state space predictor, which substantially reduced the effort rating for the\nzero added delay straight-in approach case and for the 48 ms added delay offset approach\ncase. The state space predictor also reduced the frustration rating for the 48 ms added\ndelay offset approach case, and increased the frustration rating for the zero added delay\nstraight-in approach case.\nIn summary, the compensation tended to reduce the ratings of the physical and\ntemporal demands, increase the ratings of the mental demand and performance, and\nproduced inconsistent changes in the ratings of the effort and frustration for the zero and\n\n48\n\n48 ms added delay cases. Because the TLX is a weighted average of these six ratings, the\noverall change in the final TLX caused by the compensation was not obvious for the\nabove conditions. For the offset approach with an added delay of 48 ms or less, the\ncompensation produced inconsistent changes in almost every individual rating. There\nwere more occurrences of reduced NASA TLX when using the two novel compensators.\nMean Value & STD of the Effort & Frustration Raings: Straight-in Approach\n100\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\nRating\n\n80\n60\n40\n20\n0\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n100\n\nRating\n\n80\n60\n40\n20\n0\n\n1\n2\n3\n4\n1: Effort,0 ms; 2: Effort,48 ms; 3: Frustration,0 ms; 4: Frustration,48 ms\n\nFig. 4.20. Mean & STD of the effort & frustration with compensations\n4.4. Analysis of the PSD of Pilot Control\n\nThe power spectral density is a frequency domain analysis tool. The time history\nalone does not necessarily display differences among the various simulator conditions.\nTherefore, in order to study the effects of time delay and delay compensation on pilot\ncontrol of a simulator, frequency domain techniques were employed. The different\nconditions may appear similar because of the existence of noise. The results of\n\n49\n\nmultivariate analysis of variance of control force and displacements indicate that clear\ndifferences exist in the variances of the various control parameters, but not the nature of\nwhat those differences might be. On the other hand, the time delay and compensation\nimpose greater impact on the frequencies, such as the peak positions of the primary\ncomponents, and the total PSD (energy) over a certain frequency range.\n4.4.1. About the PSD\n\nThe PSD of a discrete process is the Discrete time Fourier Transform (DFT) of its\nautocorrelation sequence13 (Eq. (4.2)). In mathematical terms, the PSD is proportional to\nthe square of the magnitude of the process; hence it is closely related to the energy of the\nsignal as a function of the frequency14. Therefore, the total PSD, or the integral of the\nPSD over a certain range of frequencies of the control variable reveals the energy the\nhuman operator exerts on the control, thereby providing some insight into the pilot\xe2\x80\x99s\ncontrol performance. Usually higher PSD means poorer handling qualities and therefore\nhigher pilot workload. One drawback of the PSD analysis is the loss of phase information.\nPx ( e \xe2\x88\x92 j\xcf\x89 ) =\n\n\xe2\x88\x9e\n\n\xe2\x88\x91 \xe2\x88\x91 { x [ n] x [ n + m]}e\n\nm =\xe2\x88\x92\xe2\x88\x9e\n\n\xe2\x88\x92 j\xcf\x89 m\n\n, ( m = n2 \xe2\x88\x92 n1 )\n\n(4.2)\n\nThere are over 10 different methods to estimate the PSD of a signal. The two used\nfor PSD calculations in this paper are the direct method and the indirect method. The\ndirect method, called the periodogram, is equivalent to the square of the magnitude of the\nDFT. The periodogram shows all details of the PSD. In contrast, the indirect method, or\nthe smoothed periodogram, is the DFT of the autocorrelation. To use this method the\nautocorrelation must be calculated first. The smoothed periodogram suppresses some\nrandom details of the PSD so as to show the macroscopic characteristics of it. For smooth\nsignals, the periodogram will be used for examining the peak details, while for signals\n50\n\nwith more noise, such as the control inputs, the smoothed periodogram will be used to\neliminate the artifacts of noise. The mathematical expressions of the direct and indirect\nmethods of calculating the PSD are given by\n1\n\xcb\x86\nK xf (\xce\xb8 ) =\nN\n\xcb\x86\nK xf (\xce\xb8 ) =\n\nN \xe2\x88\x921\n\n\xe2\x88\x91 x [i ] w [i ] e\xe2\x88\x92 j\xce\xb8 i\n\n2\n\n(4.3)\n\ni =0\n\nM\n\n\xcb\x86\n\xe2\x88\x91 k [ m] w [ m] e\n\n, ( M \xe2\x89\xa4 N \xe2\x88\x92 1)\n\n(4.4)\n\n\xe2\x88\x91 x [i ] x \xe2\x8e\xa1i + m \xe2\x8e\xa4 , ( m \xe2\x89\xa4 N \xe2\x88\x92 1)\n\xe2\x8e\xa3\n\xe2\x8e\xa6\n\n(4.5)\n\nx\n\nm =\xe2\x88\x92 M\n\n\xe2\x88\x92 j\xce\xb8 m\n\nrespectively, with\n1\n\xcb\x86\nk x [ m] =\nN\n\nN \xe2\x88\x921\xe2\x88\x92 m\ni =0\n\nIn these equations, x is the signal, w is the window used to calculate the PSD, and N is\nthe number of data points of signal x .\nFrom the definition in Eq. (4.2), calculating the PSD of a random signal requires\nan infinite number of data points. For a signal of finite length, its PSD can only be\nestimated. Therefore, an estimate of the PSD of a finite-length signal can be obtained by\ntruncating the signal, or by multiplying it by a rectangular window of the same length.\nBecause the frequency characteristics of a rectangular window show a wide main lobe\nand high side lobes, the PSD estimation with a rectangular window tends to have\nrelatively high power leakage to the adjacent frequencies15. Thus, other types of windows\nhave been developed. This is why the two estimation algorithms given in Eqs. (4.3) and\n(4.4) involve the window function. No matter which window function is used, power\nleakage always exists. Therefore, applying the window in calculating the PSD is also a\nsmoothing process due to the power leakage. The smoothed algorithm given in Eq. (4.4)\nactually double smoothes. After investigation, the Hamming window was adopted for the\n\n51\n\ncalculation of PSD for this study, because it yields a relatively good balance between\nsuppressing the noise and showing the details of the PSD.\nThe average of a signal is deducted from the signal before calculating the PSD to\navoid an artificial peak at zero Hz, which may dominate the PSD and make other\nmeaningful peaks invisible. Zero padding is also applied to increase the resolution of the\nadjacent peaks.\nFor most of the 520 runs ( 13 \xc3\x97 40 ), the PSD of the control input, outside the\ninterval [0 1] Hz contributed less than 5% to the total PSD. Therefore, the PSD over the\nrange [0 1] Hz of the control input is a reasonable measure of the total energy the pilot\nuses for control. In this study, the cutoff frequency of the control inputs may be taken as\n1 Hz, except for the pedal input which has a narrower band, and a cutoff frequency 0.5\nHz. Note that the processes of removing the mean value of a signal before calculating its\nPSD and zero padding affect the integrated PSD. Investigation shows that the smoothed\nalgorithm (Eq. (4.4)) is more robust than the direct algorithms in counteracting these two\nprocesses. This is another reason why the smoothed algorithm is used for analyzing the\nintegrated PSD of the pilot\xe2\x80\x99s control inputs.\n4.4.2. The PSD of the Aircraft Euler Angles\n\nThe aircraft Euler angles are the output of the simulator equations of motion\n(EOM) in the topodetic (earth surface) reference frame. Fig. 4.21 gives a typical example\nof the normalized PSD of the roll and pitch angles for the straight-in and offset\napproaches. The PSD of the aircraft angles revealed some interesting findings. First, the\npitch angle PSD was distributed in a wider frequency range than the roll angle PSD.\nSecondly, the pitch angle PSD contained more high frequency components for the offset\n\n52\n\napproach than for the straight-in approach, while the roll angle PSD contained fewer high\nfrequency components for the offset approach than for the straight-in approach. The\nmovement of the roll angle PSD components was surprising, and the explanation will be\ngiven as follows.\nMean Normalized PSD of the Roll Angle of All Pilots\n1\nStraight-in\nOffset\n\nPSD\n\n0.8\n0.6\n0.4\n0.2\n0\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n0.35\n\n0.4\n\n0.45\n\n0.5\n\nMean Normalized PSD of the Pitch Angle of All Pilots\n1\nStraight-in\nOffset\n\nPSD\n\n0.8\n0.6\n0.4\n0.2\n0\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n0.25\n0.3\nFrequency, Hz\n\n0.35\n\n0.4\n\n0.45\n\n0.5\n\nFig. 4.21. An example of the normalized PSD of the roll and pitch angles\n\nTable 4.1 gives the mean values and standard deviations of the frequencies of the\nhighest peak of the PSD of the roll and pitch angle. Note that the roll angle PSD (Row 3)\nshowed a significantly smaller standard deviation in the offset approach than the other\nthree cases. This indicates that the highest roll angle PSD peak was at 0.0288 Hz for all\noffset runs, varying little from one run to another. This peak is directly related to the\noffset maneuver because its inverse\xe2\x80\x9434.48 sec is very close to the offset approach\nduration. This explains why the roll angle PSD for the offset approach contains fewer\nhigh frequency components than the straight-in approach. The peak in the roll angle PSD,\n53\n\nrelated to the 34.48 sec duration, was the outstanding characteristic of the offset approach.\nThe PSD of the roll angle for most offset runs had a second peak at about 0.06 Hz. Unlike\nthe dominant peak, this peak was not present for all offset approach runs. The two peaks\nof the roll angle PSD in the offset approach agreed with the preliminary piloted tests, and\nwere also reported by Middendorf12.\nTable 4.1. Mean & STD of the frequency of the highest peak of PSD of Euler Angles\n\nManeuver\n\nEuler Angle\n\nMean (Hz)\n\nSTD (Hz)\n\nStraight-in\nApproach\n\nRoll\n\n0.0471\n\n0.0051\n\nPitch\n\n0.0330\n\n0.0184\n\nRoll\n\n0.0288\n\n5.87E-4\n\nPitch\n\n0.0821\n\n0.0170\n\nOffset\nApproach\n\nNotice that the PSD shown in Fig. 4.21 is not zero at zero frequency even though\nthe mean value was deducted before calculating the PSD. This is an artifact of the\nsmoothing process, which uses windowing, and it can be seen by setting theta to zero in\nthe mathematical expressions given in Eqs. (4.3) and (4.4) . For the direct method\n1\n\xcb\x86\nK xf ( 0 ) =\nN\n\nN \xe2\x88\x921\n\n\xe2\x88\x91 x [i ] w [i ]\n\n2\n\n(4.6)\n\ni =0\n\nIf a rectangular window is used, set w [i ] = 1 , and then\n1\n\xcb\x86\nK xf ( 0 ) =\nN\n\nN \xe2\x88\x921\n\n\xe2\x88\x91 x [i ]\n\n2\n\n=0\n\ni =0\n\nThe summation is zero because the mean value was subtracted from the signal. For the\nsmoothed algorithm, the PSD at zero frequency is\n1\n\xcb\x86\nK xf ( 0 ) =\nN\n\nN \xe2\x88\x921\n\nN \xe2\x88\x921\n\ni =0\n\nl =0\n\n\xe2\x88\x91 x [i ]\xe2\x88\x91 x [ N \xe2\x88\x92 1 \xe2\x88\x92 l ] w [l + i ]\n\n54\n\n(4.7)\n\nSimilarly, if the window is a rectangle, set w [l + i ] = 1 , and then Eq. (4.7) becomes\n2\n\n1 \xe2\x8e\xa7 N \xe2\x88\x921\n\xe2\x8e\xab\n\xcb\x86\nK xf ( 0 ) = \xe2\x8e\xa8\xe2\x88\x91 x [i ]\xe2\x8e\xac = 0 .\nN \xe2\x8e\xa9 i =0\n\xe2\x8e\xad\n\nBut for a non-rectangular window, Eq. (4.7) is not necessarily zero, because it\ncannot guarantee the weighted mean of zero-mean signal will be zero. Because the\nHamming window was used for all PSD analysis, the PSD in zero frequency was not zero.\n4.4.3. Analysis of the Integrated PSD of Pilot Control\n\nFig. 4.22 shows the effects of added time delay on the integrated PSD of the\npilot\xe2\x80\x99s roll and pitch stick inputs. For the straight-in approach, the longer the added time\ndelay, the greater the mean integrated PSD of both control inputs, and the standard\ndeviation tended to be larger also. The increase in the integrated PSD with increasing\ntime delay was obvious for all cases. For the offset approach, the mean integrated PSD\nof both control inputs tended to increase with the amount of the artificial delay except for\nthe 48 ms delay case. The roll input showed a higher mean integrated PSD than the pitch\ninput, especially for the offset approach.\nThough not shown in the figure, the PSDs of the rudder pedal and the throttle are\nworth mentioning. The 13 pilots revealed the largest standard deviation in the pedal input\namong all four control inputs. As a result, the addition of time delay generally increased\nthe integrated PSD of the pedal, but there were many exceptions.\nThe PSD of the throttle inputs did not reveal significant or consistent changes\nwith the time delay or compensation. A similar observation was included in the report on\nthe preliminary piloted tests. For this reason, the throttle input PSD will not appear in the\n\n55\n\nremaining analyses. The analysis will concentrate on the roll and pitch inputs, and the\nrudder pedal will be included when necessary.\nMean Value and STD of the Integrated PSD Across All Pilots: Straight-in Approach\n0.2\n\nPSD\n\n0.15\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n0.1\n0.05\n0\n\n1\n\n2\nOffset Approach\n\n0.2\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n2\nEvaluation for (1: Roll Stick; 2: Pitch Stick)\n\nFig. 4.22. Mean value & STD of the integrated PSD changing with the time delay\n\nFig. 4.23 shows the effects of compensation on the mean values and standard\ndeviations of the integrated PSD of the roll input. For the straight-in approach, increased\nmean PSD was observed for all four compensation algorithms for the zero added delay\ncase, and for the McFarland predictor and the state space predictor for the 48 ms delay\ncase. For all other cases, all the predictors resulted in decreased integrated PSD. For the\noffset approach, all except the McFarland predictor with spikes reduced showed a\ndecrease in power for the zero added delay case, and only the state space predictor\nshowed a decrease in power when compensating the 48 ms added delay case. For all\nother cases, all predictors produced decreased integrated PSD. For both approaches, the\ntwo novel predictors had fewer exceptions in reducing the pilot\xe2\x80\x99s roll workload.\nSignificant reduction of the integrated roll input PSD was observed for: 1) all but the\n56\n\nadaptive predictor for the 96 ms delay straight-in approach, 2) all but the McFarland\npredictor for the 192 ms straight-in approach, and 3) all but the McFarland predictor with\nspike reduction for the 192 ms delay offset approach. The adaptive predictor showed\nsignificant improvement over the McFarland predictor for the 192 ms delay straight-in\napproach, and the state space filter showed a marginally significant improvement over the\nMcFarland predictor for the 48 ms delay offset approach.\nMean & STD of the Integrated Roll Stick PSD with Compensations: Straight-in Approach\n\nPSD\n\n0.1\n\nNo Compensation\nMcFarland Predcitor\nMcFarland Predcitor, Spike Reduced\nAdaptiv e Predcitor\nState Space Predcitor\n\n0.05\n\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n0.25\n\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.23. Mean & STD of the integrated roll input PSD with compensation\n\nFig. 4.24 shows the effects of compensation on the mean values and standard\ndeviations of the integrated PSD of the pitch input. The integrated roll input PSD\nrevealed that there were two cases in which the compensations increased the control\nworkload: the zero added delay case for the straight-in approach and the 48 ms delay case\nfor the offset approach. In addition to these cases, the adaptive predictor showed an\nincreased integrated PSD for the zero added delay case in the offset approach. The spike\n\n57\n\nreduction algorithm resulted in poorer compensation than the McFarland predictor for\nmost cases in terms of the pitch input PSD. A significant reduction in PSD was revealed\nwhen compensating for the 192 ms delay, for the straight-in approach, with all but the\nstate space predictor.\nMean & STD of the Integrated Pitch Stick PSD with Compensations: Straight-in Approach\n0.08\n\nPSD\n\n0.06\n\nNo Compensation\nMcFarland Predcitor\nMcFarland Predcitor, Spike Reduced\nAdaptiv e Predcitor\nState Space Predcitor\n\n0.04\n0.02\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n0.1\n\nPSD\n\n0.08\n0.06\n0.04\n0.02\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.24. Mean & STD of the integrated pitch stick PSD with compensations\n\nFig. 4.25 shows the effects of compensation on the mean value and standard\ndeviation of the integrated PSD of the rudder input. The predictors produced surprisingly\ngood compensation results in the rudder input PSD. For the straight-in approach, all\ncompensators revealed a decrease in the integrated PSD except for the McFarland\npredictor in the 96 ms added delay case. For the offset approach, the two novel predictors\nrevealed a decrease in the integrated PSD except for the adaptive predictor for the 48 ms\ndelay case. The McFarland predictor increased the PSD when compensating for the 48,\n96 and 192 ms delay cases for the offset approach. In general the spike reduction\n58\n\nalgorithm improved the compensation of the McFarland compensator. The state space\npredictor produced the lowest integrated rudder input PSD for almost all cases, and it\nresulted in a significant reduction of the PSD for all delay cases, except the 48ms case,\nfor the offset approach. Other significant pedal input PSD reductions observed include:\nthe McFarland compensation for the 192 ms delay in the straight-in approach; the\nMcFarland predictor with spike reduction for the zero, and the 192 ms delay in the\nstraight-in approach, and for the 192 ms delay in the offset approach; and the adaptive\ncompensation for the 192 ms delay in both approaches. A significant improvement over\nthe McFarland compensation was observed in the adaptive predictor for the 96 and the\n192 ms delay cases in the offset approach, and the state space predictor for the 96 ms\ndelay straight-in approach case, and for the 96 and the 192 ms delay cases in the offset\napproach.\nMean & STD of the Integrated Rudder Pedal PSD with Compensations: Straight-in Approach\n\nIntegrated PSD\n\n0.03\n\n0.02\n\nNo Compensation\nMcFarland Predcitor\nMcFarland Predcitor, Spike Reduced\nAdaptiv e Predcitor\nState Space Predcitor\n\n0.01\n\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n\nIntegrated PSD\n\n0.05\n0.04\n0.03\n0.02\n0.01\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.25. Mean & STD of the integrated rudder pedal PSD with compensations\n\n59\n\n4.4.4. Analysis of the Highest PSD Peak Migration\n\nTime delay and delay compensation not only affected the total PSD of the pilot\xe2\x80\x99s\ncontrol inputs, they also affected the location of the highest peak of the PSD. Fig. 4.26\nillustrates some examples of the highest peak migration resulting from the delay and\ncompensation. For both the straight-in and offset approaches, when there was no time\ndelay, the highest peak of the PSD of the roll input or the pitch input usually was either\nthe first peak, or near the first peak. When time delay is added, the highest peak tended to\nmove to the right, or higher frequency area, but the compensation moved it back to lower\nfrequencies. In other words, time delay increased the operator\xe2\x80\x99s workload in the high\nfrequencies while compensation decreased it. This result agreed with the results of the\npreliminary piloted tests. Time delay and compensation made little difference in the\nhighest peak of the PSD of the rudder input and the throttle: the highest peak of their PSD\nwas always the first peak.\nMean PSD of Roll Stick w ithout Compensation: Straight-in Approach\n0.4\ntd=0\ntd=48\ntd=96\ntd=192\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\n0.6\n\n0.7\n\n0.8\n\n0.9\n\n1\n\nMean PSD of Pitch Stick for Compensating 192ms Dealy: Straight-in Approach\n0.25\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptive Predictor\nState Space Predictor\n\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n0.5\n0.6\nFrequency, Hz\n\n0.7\n\n0.8\n\n0.9\n\n1\n\nFig. 4.26. Highest peak of PSD movement with the delay and compensations\n60\n\nFig. 4.27 shows the mean value and standard deviation of the frequency of the\nhighest PSD peak of the roll and pitch inputs for different delay cases. Generally, with\nlonger time delay, the highest peak tended to have a higher frequency. Most of the\nexceptions were associated with the 48 ms added delay case. In the 48 ms added delay,\nstraight-in approach, the highest peak of the roll input PSD had a higher frequency than\nthat of the 192 ms added delay case. For all other cases, the frequency of the highest\npeak of the 48 ms delay was even lower than that for the zero added delay. Another\nexception was the highest roll input PSD in the offset approach decreased from the 96 ms\ndelay case to the 192 ms delay case, with the standard deviation reduced substantially.\nConversely, increasing the delay from 96 ms to 192 ms significantly increased the\nfrequency of the highest pitch input PSD peak for the offset approach. The highest PSD\npeak of the roll input was clearly higher than that of the pitch input.\nMean & STD of the Frequency of the Highest PSD Peak: Straight-in Approach\n\nFreq, Hz\n\n0.6\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n0.4\n0.2\n0\n\n1\n\n2\nOffset Approach\ntd=0\ntd=48\ntd=96\ntd=192\n\nFreq, Hz\n\n0.5\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n2\nControl Input (1: Roll Stick; 2: Pitch Stick)\n\nFig. 4.27. Mean & STD of the frequency of the highest PSD peak with delay\n\n61\n\nFig. 4.28 illustrates the mean value and standard deviation of the frequency of the\nhighest PSD peak of the roll inputs for different compensation algorithms. For the\nstraight-in approach, all compensators increased the highest PSD peak frequency for the\nzero added delay case. The McFarland compensator (with or without spike reduction)\nshowed an increased highest PSD peak frequency for 192 ms delay case. For all other\ncases, the compensation reduced the frequency of the highest PSD peak. The state space\npredictor for the 96 ms delay, on the straight-in approach showed the lowest frequency of\nthe highest PSD peak among all predictors for all cases. The two novel predictors\ndemonstrated significantly better compensation than the McFarland predictor in terms of\nthe highest PSD peak movement for the 192 ms delay case.\nMean & STD of the frequency of the Highest Roll Stick PSD Peak: Straight-in Appraoch\n\nFreq, Hz\n\n0.8\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptive Predictor\nState Space Predictor\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n\nFreq, Hz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n3\n4\nAdded Delay (1: 0ms; 2: 48ms; 3: 96ms; 4: 192ms)\n\nFig. 4.28. Migration of the highest roll stick PSD peak with compensation\n\nFor the offset approach, the adaptive predictor produced an increased mean value\nof the highest PSD peak for short added time delay (48 ms or less) , and the McFarland\n\n62\n\npredictor with spike reduction resulted in increased mean highest PSD peak for long\nadded time delay cases (96 and 192 ms). Other cases of increased frequency of the\nhighest PSD peak were also observed for the McFarland predictor when compensating 48\nms delay, and the state space predictor when compensating 96 ms delay. For all other\ncases in the offset approach, the compensation reduced the frequency of the highest PSD\npeak. The state space predictor showed significant reduction in the highest PSD peak\nfrequency for the 192 ms delay case, and it also showed a significantly lower highest\nPSD peak than the McFarland predictor for the 48 ms delay compensation case.\nMean & STD of the frequency of the Highest Pitch Stick PSD Peak: Straight-in Appraoch\n\nFreq, Hz\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n0.5\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptive Predictor\nState Space Predictor\n\nFreq, Hz\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n3\n4\nAdded Delay (1: 0ms; 2: 48ms; 3: 96ms; 4: 192ms)\n\nFig. 4.29. Migration of the highest pitch stick PSD peak with compensation\n\nFig. 4.29 is the counterpart of Fig. 4.28 and shows the highest pitch input PSD\npeak migration. For the straight-in approach, decreased frequency of the highest PSD\npeak can be observed for all cases except three: compensating the 48 ms delay with the\nMcFarland predictor, the adaptive predictor and the state space filter. Significant\n\n63\n\nreduction of the highest PSD peak was observed with the state space predictor for the 96\nms delay, which also showed significantly lower frequency of the highest PSD peak than\nall other compensators.\nFor the offset approach, the adaptive predictor resulted in an increase in the\nhighest PSD peak frequency for all but the 96 ms added delay case. Other highest PSD\npeak increase cases included the McFarland predictor for 192 ms delay, and the\nMcFarland predictor with spike reduction for zero added delay. For all other cases, the\ncompensation reduced the mean frequency of the highest PSD peak. A significant\nreduction in the highest PSD peak frequency was shown with the McFarland\ncompensation for zero and 96 ms added delay, and the state space compensation for the\nzero and 192 ms added delay. In addition, the state space predictor also resulted in\nsignificantly lower frequency of the highest PSD peak than the McFarland compensator\nfor the 192 ms delay.\n4.4.5. Analyses on Selected Pilots\n\nThe error bars on the plots discussed in the previous sections indicate a lack of\nsignificance among the various cases, while at the same time the trends are in the correct\ndirection. This variation is attributed to the widely differing control strategies employed\nby the pilots. Brief resumes of all pilots are available in Table A.5. After careful\nexamination of the individual results of all pilots, it is evident that pilots #6, 7, 8 and 9\nproduced significantly higher measures in most of the metrics. On the other hand, pilots\n#11, 12 and 13 (all experienced commercial pilots) seemed to employ similar control\nstrategies. The aggregation of the pilots\xe2\x80\x99 performance leads to analyses of a few selected\npilots so that the standard deviations of some metrics are smaller than for the 13-pilot\n\n64\n\ngroup. The selection was made as follows: for all nine sub-metrics (glideslope error,\ntouchdown error, CHR on glideslope and on touchdown, TLX, integrated PSD of roll\ninput, pitch input and rudder input, frequencies of the highest peaks of the roll input and\npitch input), there were eight test cases (0, 48, 96 and 192 ms added delays for both\napproaches), giving 72 total cases. By summing the number of cases for each pilot in\nwhich he/she showed improved performance with compensation, five pilots were selected\nwho produced more positive cases than the others. They were pilots #1, 2, 5, 11, and 12.\nFurther investigation shows that this group demonstrated an obvious reduction in\nstandard deviations of the glideslope error, touchdown error, and the integrated PSD of\nthe two primary control inputs, but for the other sub-metrics, the change in standard\ndeviation was neither obvious nor consistent. Therefore, only the results of these four\nsub-metrics for this five-pilot group are included in Fig. 4.30 \xe2\x80\x93 Fig. 4.33.\n\n65\n\nMean & STD of Glide Slope Error (in PSD) for Selected Pilots (# 1,2,5,11,12): Straight-in\n\nGSE in PSD\n\n0.4\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n\nGSE in PSD\n\n0.5\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.30. Mean & STD of the Glideslope Error for Pilots #1,2,5,11,12\n\nFig. 4.30 shows the mean values and standard deviations of the glideslope error\nfor the selected pilots with various compensation algorithms. As a comparison to Fig. 4.3\nof the 13-pilot group, this chart showed better compensation (lower mean error) for most\ncases. For the straight-in approach, this group showed decreased standard deviation for\nall cases except the no-compensation for the 48 ms added delay, the McFarland\ncompensation with spike reduction for the 48 ms added delay, and the adaptive prediction\nfor the zero added delay. For the offset approach, this group revealed reduced standard\ndeviation for all cases except the no-compensation for zero added delay, the McFarland\ncompensation with spike reduction for 48 ms added delay, and the adaptive compensation\nfor the 48 and the 96 ms delays. Significant compensation was found using the\n\n66\n\nMcFarland compensator with spike reduction and adaptive compensator for the 192 ms\ndelay in the offset approach.\n\nMean & STD of X-Touchdown Error for Selected Pilots (# 1,2,5,11,12): Straight-in\n\nTDE, ft\n\n2000\n1500\n1000\n500\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n2500\nTDE, ft\n\n2000\n1500\n1000\n500\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.31. Mean & STD of the Touchdown Error for Pilots #1,2,5,11,12\n\nFig. 4.31 shows the mean values and standard deviations of the touchdown error\nof the selected pilots with all the compensation algorithms. As a comparison to Fig. 4.8,\nwhich includes data from the 13-pilot group, this plot demonstrated generally better\ncompensation in terms of the mean touchdown error. It also showed shorter error bars\nthan for the group of 13 pilots for all cases except the no-compensation with zero added\ndelay straight-in approach case, the McFarland compensation with 48 ms added delay\noffset approach case, and the reduced-spike McFarland compensation, the adaptive\ncompensation and the state space compensation for the 48 ms added delay straight-in\n\n67\n\napproach cases. Significant compensation was found with the reduced-spike McFarland\npredictor for the 48 ms added delay offset approach case.\nMean & STD of Integrated Roll Stick PSD for Selected Pilots (#1,2,5,11,12): Straight-in\n0.04\n\nPSD\n\n0.03\n0.02\n0.01\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n\nPSD\n\n0.15\n0.1\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n0.05\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.32. Mean & STD of Integrated Roll Input PSD for Pilots #1,2,5,11,12\n\nFig. 4.32 shows the mean values and standard deviations of the integrated roll\ninput PSD of the selected pilots with all compensation algorithms. As a comparison to\nFig. 4.23, which includes data from the 13-pilot group, this plot group revealed better\ncompensation results for most cases in terms of the mean integrated PSD. This is\nespecially true for the compensation of the zero added delay in the straight-in approach.\nA reduced standard deviation was found for all cases except for the adaptive\ncompensation for the 48 ms delay straight-in approach. The error bars are considerably\nshorter for most of the offset approach cases.\n\n68\n\nMean & STD of Integrated Pitch Stick PSD for Selected Pilots (#1,2,5,11,12): Straight-in\n0.04\n\nPSD\n\n0.03\n0.02\n0.01\n0\n\n1\n\n2\n\n3\n\n4\n\nOffset Approach\n0.1\n\nPSD\n\n0.08\n0.06\n\nNo Compensation\nMcFarland Predictor\nMcFarland Predictor, Spike Reduced\nAdaptiv e Predictor\nState Space Predictor\n\n0.04\n0.02\n0\n\n1\n2\n3\n4\nAdded Delay (1: 0 ms; 2: 48 ms; 3: 96 ms; 4: 192 ms)\n\nFig. 4.33. Mean & STD of Integrated Pitch Input PSD for Pilots #1,2,5,11,12\n\nFig. 4.33 shows the mean values and standard deviations of the integrated pitch\ninput PSD of the selected pilots with all compensation algorithms. As a comparison to\nFig. 4.24, which includes data from the 13-pilot group, this plot group demonstrated\nbetter compensation for most cases in terms of the mean values of PSD. The standard\ndeviation was reduced for two cases out of eight for all four compensation algorithms,\nand it was considerably decreased for the offset approach. Significant compensation was\nfound when using the McFarland compensator for the 96 ms delay offset approach case,\nthe spike-reduced McFarland compensator and the adaptive compensator for the 192 ms\ndelay offset approach case, and the state space compensator for the 96 ms delay straightin approach case.\n\n69\n\n4.4.6. Analysis of PSD in Certain Frequency Intervals\n\nThis analysis was undertaken to determine if there is any relationship between the\nintervals in which the PSD increases with the delay and the intervals in which the PSD\ndecreases with the compensation.\nFig. 4.26 also shows that the movement of the highest PSD peak as the result of\ntime delay and compensation was accompanied by an increase or decrease in the PSD in\nthe frequency intervals in the neighborhood of the highest peak. These frequency\nintervals are summarized in Tables 4.2, 4.3 and 4.4.\nTable 4.2 shows the frequency intervals in which the PSD of the four pilot control\ninputs decreased for different delay cases. The interval for a specific delay amount (48,\n96 or 192 ms) was obtained by comparing the PSD for that amount of delay to the PSD of\nthe zero added delay case. No compensation was applied. As stated in section 4.4.1, 95%\nof the power of the roll and pitch inputs fell within the interval [0 1] Hz. The frequency\ninterval in which the time delay raised the PSD of the two control inputs was narrower\nthan [0 1] Hz. The lower limit of the interval was not necessarily zero but was close to\nzero, and the upper limit was around 0.5 \xe2\x80\x93 0.6 Hz, seldom exceeding 0.7 Hz. For both\nprimary control inputs, in both approaches, one interesting trend was that the PSD\nfrequency-increase interval tended to shrink with increasing delay: the upper bound\ndecreased as the added delay got longer, while the lower limit revealed no consistent\nchange. For both control inputs, the upper limit of the PSD frequency-increase interval\nwas considerably lower for the offset approach than for the straight-in approach.\n\n70\n\nTable 4.2. Frequency intervals in which the PSD increases by time delay\n\nDelay (ms)\n\nStraight-in\nApproach\n(Hz)\n\nOffset\nApproach\n(Hz)\n\n48\n\n[0 0.656]\n\n[0.063 0.605]\n\n96\n\n[0 0.602]\n\n[0.062 0.573]\n\n192\n\n[0 0.531]\n\n[0.056 0.471]\n\nMean\n\n[0 0.596]\n\n[0.060 0.550]\n\n48\n\n[0.017 0.68]\n\n[0.188 0.632]\n\n96\n\n[0.114 0.62]\n\n[0 0.47]\n\n192\n\n[0 0.505]\n\n[0.108 0.416]\n\nMean\n\n[0.044 0.632]\n\n[0.099 0.506]\n\n48\n\n/\n\n/\n\n96\n\n[0.039 0.16]\n\n[0.114 0.408]\n\n192\n\nManeuver\n\n[0 0.5]\n\n[0.063 .5]\n\nRoll Stick\n\nPitch Stick\n\nPedal\n\n48\n96\n\n[0 0.065]\n\n[0.082 .5]\n\n192\n\nThrottle\n\n[0\n\n0.325]\n\n/\n\n/\n\n/\n\nFor the pedal and throttle, there was no consistent PSD frequency-increase\ninterval. It might be due to the fact that the PSDs of both had one major peak near 0.05\nHz that did not move much for the two conditions. Therefore, in the analysis, reguarding\nthe effects of the compensation on the frequency interval, only the PSD of the two\nprimary controls are described.\nTable 4.3 shows the frequency intervals in which the PSD of both control inputs\nwas reduced by different compensation algorithms. Each interval was the result of\naveraging four intervals corresponding to the four amounts of delay. In general, the four\n\n71\n\npredictors did not show substantial or consistent difference in the PSD-reduction interval\nof frequency. However, for most cases, the adaptive predictor resulted in the narrowest\nPSD-reduction intervals of frequency, while the state space predictor resulted in the\nwidest intervals.\nTable 4.3. Frequency intervals in which the PSD decreases by different predictors\n\nDelay (ms)\n\nStraight-in\nApproach\n(Hz)\n\nOffset\nApproach\n(Hz)\n\nMcFarland\n\n[0.105 0.492]\n\n[0.039 0.537]\n\nSpike Reduced\n\n[0.056 0.572]\n\n[0.037 0.560]\n\nAdaptive\n\n[0.078 0.541]\n\n[0.053 0.514]\n\nState Space\n\n[0.000 0.581]\n\n[0.025 0.581]\n\nMcFarland\n\n[0.102 0.608]\n\n[0.136 0.494]\n\nSpike Reduced\n\n[0.100 0.525]\n\n[0.089 0.510]\n\nAdaptive\n\n[0.038 0.549]\n\n[0.113 0.452]\n\nState Space\n\nManeuver\n\n[0.062 0.586]\n\n[0.129 0.540]\n\nRoll Stick\n\nPitch Stick\n\nTable 4.4 gives the PSD frequency-reduction intervals caused by the\ncompensation grouped by the amounts of delay. With the exception of the transition from\nzero added delay to 48 ms delay for the roll input PSD on the straight-in approach, the\nPSD-frequency-reduction interval with compensation always shrank with increasing\nadded delay. This resembled the PSD-increase interval caused by the time delay.\nHowever, the mean PSD-reduction interval, caused by the addition of compensation, for\neach of the four cases (a combination of the two primary inputs and the two approaches),\nwas narrower than the corresponding mean PSD-increase interval resulting from the time\ndelay. This can be observed by comparing each interval in bold in Table 4.4 with the\n\n72\n\ncorresponding item in bold in Table 4.2. The reduced upper limit of the PSD-reduction\ninterval implies that the PSD between the upper limit and 1 Hz was also increased by the\ncompensation. This proves that compensators introduced gain distortion at high\nfrequencies. This means that, the current compensators cannot restore the system\nperformance to one hundred percent. In other words, the compensated system cannot be\nexactly the same as the undelayed system.\nTable 4.4. Frequency intervals of reduced PSD by compensation of different delays\n\nOffset\nApproach\n(Hz)\n\n[0.094 0.529]\n\n[0.037 0.735]\n\n[0.116 0.626]\n\n[0.000 0.529]\n\n96\n\n[0.032 0.567]\n\n[0.056 0.526]\n\n192\n\n[0.000 0.448]\n\n[0.059 0.403]\n\nMean\n\n[0.060 0.54]\n\n[0.038 0.548]\n\n0\n\n[0.109 0.686]\n\n[0.094 0.622]\n\n48\n\n[0.070 0.638]\n\n[0.199 0.527]\n\n96\n\n[0.101 0.549]\n\n[0.062 0.469]\n\n192\n\n[0.022 0.436]\n\n[0.112 0.378]\n\nMean\n\nPitch Stick\n\nStraight-in\nApproach\n(Hz)\n\n48\n\nRoll Stick\n\nDelay (ms)\n0\n\nManeuver\n\n[0.076 0.577]\n\n[0.117 0.499]\n\n4.5. Summary of Results\n\nSo far the analyses results have been presented individually in terms of four\nmetrics: glideslope error (GSE), touchdown error (TDE), Cooper-Harper Rating (CHR)\n(on glideslope and on touchdown) and power spectral density (integrated PSD and the\nfrequency of the highest PSD peak). Cross-metric comparisons have been made only\nbetween the CHR and the performance errors (GSE and TDE). These are inadequate\n\n73\n\nbecause there was no overall comparison. An overall comparison would have to cover all\nfour metrics (10 sub-metrics) and eight conditions (four amounts of delay times two\ndifferent approaches) among the four predictors\xe2\x80\x94McFarland predictor (MF), McFarland\npredictor with spike reduction (MFR), adaptive predictor (AP) and state space predictor\n(SS). The 10 sub-metrics are: GSE, TDE (in the X direction), CHR on GS, CHR on TD,\nTLX, integrated PSD (IPSD) of the roll control input (RS), pitch control input (PS) and\nrudder input (RP), and the frequencies of the highest PSD peak (FPSD) of the roll input\nand pitch input. This section presents an overall comparison.\nTable 4.5 is a summary of the compensation results, in which a \xe2\x80\x9c\xe2\x86\x93\xe2\x80\x9d means the\nmean value of a certain sub-metric is decreased by the compensation compared to that of\nthe uncompensated case, and a \xe2\x80\x9c\xe2\x86\x91\xe2\x80\x9d means the opposite. The last column gives the total\noccurrences of \xe2\x80\x9c\xe2\x86\x93\xe2\x80\x9d for that condition. This table shows that for all four predictors, the\ncompensation was more obvious for a long added delay (96 ms or more) than for a short\none (48 ms or less). For the short delay compensation, these 10 sub-metrics showed\ndiscrepancies: about one half increased while the other half decreased. As was previously\nstated, the discrepancy might be the result of an obscure and inconsistent increase of each\nsub-metric due to the short amount of delay. A second possible cause might come from\nfactors in the simulation other than the delay and compensation, such as the wind vector\nor the turbulence, which might become dominant over the compensation for a short delay.\nFinally, the pilots themselves might produce anomalies.\n\n74\n\nTable 4.5. Summary of compensation results\n\nPredictor Approach\n\n0\n48\n96\n192\n0\n48\nOffset\n96\n192\n0\nStraight- 48\nin\n96\n192\n0\n48\nOffset\n96\n192\n0\nStraight- 48\nin\n96\n192\n0\n48\nOffset\n96\n192\n0\n48\nStraight-in\n96\n192\n0\n48\nOffset\n96\n192\n\nStraightin\n\nMF\n\nMFR\n\nAP\n\nSS\n\nDelay\n(ms)\n\nMetrics\nCHR CHR\nIPSD IPSD IPSD FPSD FPSD\nGSE TDE\nTLX\n# of \xe2\x86\x93\n(GS) (TD)\n(RS) (PS) (RP) (RS) (PS)\n5\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n5\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n7\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n9\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n7\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n3\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n7\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n7\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n5\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n5\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n8\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n8\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n1\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n7\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n8\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n9\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n5\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n4\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n9\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n10\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n4\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n4\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n9\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n10\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n5\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n5\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n10\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n9\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n7\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n9\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n8\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x91\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n10\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\xe2\x86\x93\n\nThe spike reduction algorithm seemed to make very little difference to the\nMcFarland predictor. In the offset approaches, it produced significantly more increased\nsub-metrics for zero added delay case, somewhat fewer increases for the 48 ms delay\ncase, and slightly fewer increases for the longer delay cases.\n\n75\n\nThe adaptive predictor showed slightly more increased sub-metrics than the\nMcFarland predictor when compensating for the 48 ms delay in the straight-in approach,\nand twice as many increased sub-metrics for the zero delay offset approach. However, it\nrevealed an obvious improvement over the McFarland predictor when compensating long\ndelays for both approaches. This is reminiscent of the theoretical analysis results given in\nTable 4.5, NASA CR 2007-215095, which also shows that the adaptive predictor\nproduces larger gain distortion for short delays, but smaller gain distortion for long delays\nwhen compared to the McFarland predictor. The results from the theoretical data and\nfrom piloted experimental data agree with each other.\nTable 4.6. Compensation results for the state space predictor with short delay\nTotal\n\nMetrics\n\nDelay\n\xe2\x86\x93\nPredictor Approach\n(ms) GSE TDE CHR CHR TLX IPSD IPSD IPSD FPSD FPSD out of\n(GS) (TD)\n\n(RS) (PS) (RP) (RS) (PS)\n\n10\n\nOffset\nTotal \xe2\x86\x93 out of 4\n\n\xe2\x86\x91\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x91\n\n\xe2\x86\x93\n\n\xe2\x86\x91\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n7\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x91\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x91\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n8\n\n0\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x91\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x91\n\n8\n\n48\n\nSS\n\n0\n48\n\nStraight-in\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n\xe2\x86\x93\n\n10\n\n3\n\n4\n\n3\n\n2\n\n4\n\n3\n\n3\n\n4\n\n4\n\n3\n\n33 of 40\n\nThe state space predictor resulted in exactly the same number of reduced submetrics as the McFarland predictor for short delays in the straight-in approach, and in the\n0ms added delay case for the offset approach. The state space predictor also produced\nsignificantly more reduced submetrics in the 48 ms added delay offset approach case,\nwhile it showed substantially fewer increased sub-metrics for the long delays when\ncompared to the McFarland predictor. Notice that for short delays, there were fewer\nincreased objective sub-metrics, especially the direct measures of the system performance\n(GSE and TDE), associated with the state space predictor. Another comparison between\n76\n\nthe two for only short delays is shown in Table 4.6, where a \xe2\x80\x9c\xe2\x86\x93\xe2\x80\x9d means the state space\npredictor produces a lower mean value of a specific sub-metric than the McFarland\npredictor, and a \xe2\x80\x9c\xe2\x86\x91\xe2\x80\x9d means the opposite. The state space predictor showed better\ncompensation than the McFarland predictor with a ratio of 31:9. Obvious improvement\nhas been demonstrated with the state space predictor.\nDifferent compensation results among the four predictors can also be seen by\ncomparing the number of significant compensations, as summarized in Table 4.7. While\nthe McFarland predictor (with or without spike reduction) and the adaptive predictor\nproduced almost the same number of significant compensation cases, the state space\npredictor achieved considerably more significant compensation cases. Note that most of\nthe significant compensation cases were associated with the long delays especially the\n192 ms delay, indicating that compensation was more beneficial for a long time delay.\nThere were also more significant compensation cases associated with the straight-in\napproach than the offset one, however this might not indicate that compensation was\nmore beneficial for the straight-in approach, but instead might be a result of the\ndifferences between the winds and turbulence between the two approaches.\nSignificant difference among the four compensators can also be seen by directly\ncomparing their 10 sub-metrics, with the results summarized in Table 4.8. In this table,\nthe first number in the second column is the total number of cases in which the\ncompensator in the first column showed significantly better performance than the\ncompensators in the last column, at the conditions listed in column 4. Conversely, the\nsecond number in the second column (in parentheses) is the total number of cases in\nwhich the compensator in the first column showed significantly worse performance than\n\n77\n\nthe compensators in the last column, at the conditions listed in column 4. For example, in\nthe second row the numbers \xe2\x80\x9c6 (17)\xe2\x80\x9d mean that the McFarland predictor showed\nsignificantly better performance than the other three compensators for 6 cases, but\nshowed significantly worse performance for 17 cases. This table reveals three obvious\nresults. First, the reduced-spike McFarland compensator and the adaptive compensator\nshowed approximately the same number of significantly better cases and fewer\nsignificantly worse cases than the McFarland compensator. Second, the reduced-spike\nMcFarland compensator resulted in almost the same number of significantly better cases\nand significantly worse cases as the adaptive predictor. Third, the state space filter\nshowed significantly more \xe2\x80\x9cbetter cases\xe2\x80\x9d and fewer \xe2\x80\x9cworse cases\xe2\x80\x9d than the other three\ncompensators.\n\n78\n\nTable 4.7. Summary of significant compensations\n\nPredictor\n\nTotal\n\nMcFarland\n\n7\n\nSpike Reduced\n\n6\n\nAdaptive\n\n7\n\nState Space\n\n11\n\nMetric\n\nConditions\n\nCHR (GS)\nIPSD (RS)\nIPSD (RS)\nIPSD (PS)\nIPSD (RP)\nFPSD (PS)\nFPSD (PS)\nIPSD (RS)\nIPSD (RS)\nIPSD (PS)\nIPSD (RP)\nIPSD (RP)\nIPSD (RP)\nCHR (GS)\nCHR (TDE)\nIPSD (RS)\nIPSD (RS)\nIPSD (PS)\nIPSD (RP)\nIPSD (RP)\nCHR (TD)\nIPSD (RS)\nIPSD (RS)\nIPSD (RS)\nIPSD (RP)\nIPSD (RP)\nIPSD (RP)\nFPSD (RS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\n\n192 ms, straight-in\n96 ms, straight-in\n192 ms, offset\n192 ms, straight-in\n192 ms, straight-in\n0 ms, offset\n96 ms, offset\n96 ms, straight-in\n192 ms, straight-in\n192 ms, straight-in\n0 ms, straight-in\n192 ms, straight-in\n192 ms, offset\n192 ms, straight-in\n192 ms, straight-in\n192 ms, straight-in\n192 ms, offset\n192 ms, straight-in\n192 ms, straight-in\n192 ms, offset\n192ms, straight-in\n96 ms, straight-in\n192 ms, straight-in\n192 ms, offset\n0 ms, straight-in\n96 ms, straight-in\n192 ms, straight-in\n192 ms, offset\n96 ms, straight-in\n0 ms, offset\n192 ms, offset\n\nAlmost all of the significant compensation cases listed in Table 4.7 were\nassociated with PSD metrics (except the first case which is associated with CHR) . This\nmeans that the PSD metric showed clearer difference between the compensators. The two\nnovel predictors showed more substantial improvement in moving the highest PSD peak\nback to lower frequencies than did the McFarland predictor.\n\n79\n\nTable 4.8. Summary of significant difference among the four predictors\n\nPredictor\nTotal\n(Better) Better (Worse)\nMcFarland\n(MF)\n\n6 (17)\n\nMcFarland\nSpike\nReduced\n(MFR)\n\n4 (6)\n\nAdaptive\nPredictor\n(AP)\n\n5 (8)\n\nState Space\n(SS)\n\n17 (1)\n\nMetric\n\nConditions\n\nPredictor\n(Worse)\n\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nIPSD (RP)\nFPSD (RS)\nFPSD (PS)\nFPSD (PS)\nIPSD (RS)\nIPSD (RP)\nIPSD (RP)\nFPSD (RS)\nFPSD (PS)\nTDEX\nIPSD (RP)\nIPSD (RP)\nIPSD (RP)\nFPSD (RS)\nFPSD (RS)\nFPSD (RS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\nFPSD (PS)\n\n0 ms, offset\n0 ms, offset\n48 ms, offset\n96 ms, offset\n96 ms, offset\n96 ms, offset\n192 ms, offset\n48 ms, offset\n48 ms, straight-in\n48 ms, offset\n192 ms, straight-in\n96 ms, offset\n192 ms, offset\n192 ms, straight-in\n48 ms, straight-in\n96 ms, straight-in\n96 ms, straight-in\n96 ms, offset\n192 ms, offset\n192 ms, straight-in\n48 ms, offset\n192 ms, offset\n48 ms, straight-in\n96 ms, straight-in\n96 ms, straight-in\n96 ms, straight-in\n0 ms, offset\n0 ms, offset\n48 ms, offset\n192 ms, offset\n192 ms, offset\n192 ms, offset\n\nMFR\nAP\nAP\nMFR\nAP\nSS\nMF\nMF\nMF\nAP\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMF\nMFR\nAP\nMFR\nAP\nAP\nMF\nMFR\nAP\n\nFinally, only the McFarland predictor resulted in runs with a full CHR, in each of\nwhich the pilot reported pilot induced oscillation.\nLearning among the pilots may have been a problem. But, the randomization of\nthe runs removes any ability to track this effect. Given more time, we would have\n\xe2\x80\x9ctrained\xe2\x80\x9d the pilots to minimize learning in the tests.\n\n80\n\n5. Conclusions and Future Research\n5.1. Conclusions\n\nA device called SIMES was used to measure the transport delay in the Visual\nMotion Simulator (VMS) at the NASA Langley Research Center. The transport delays in\nthe visual system, motion system and instrument system were measured to be 58, 56 and\n40 ms, respectively, with the frame cycle being 16.7 ms. The average total transport\ndelays from the pilot control input to the outputs of these three sub-systems were\ndetermined to be 89.7, 87.7 and 71.7 ms, with the frame length of the simulation\ncomputer being 16.7 ms. Therefore, the average baseline transport delay of the visual cue\nwas 90 ms (rounded from 89.7 ms). This formed a basis for the time delay compensator\ndesigns for the final piloted simulation tests.\nTwo objective metrics, the power spectral density (PSD) of the pilot control\ninputs and the errors in the glideslope and the touchdown position during the approaches,\nwere used in conjunction with two quasi-objective metrics, the Cooper-Harper rating\n(CHR) and NASA Task Load index (TLX), to assess the effectiveness of the three\ncompensators in piloted simulation tests. Ten sub-metrics were derived from these four\nevaluations: glideslope error (GSE), touchdown error (TDE), CHR on GS, CHR on TD,\nTLX, integrated PSD (IPSD) of the roll input (RS), the pitch input (PS) and the rudder\ninput (RP), and the frequency of the highest PSD peak (FPSD) of the RS and PS. These\nshowed considerably more discrepancies for the short delay than for the long delays\nwhen evaluating the effectiveness of the compensators. Some obvious discrepancies\nexisted among these sub-metrics between various cases. There were more discrepancies\nbetween the GSE and the CHR on GS than between the TDE and CHR on TD. The CHR\n\n81\n\nand TLX agreed with each other fairly well. These discrepancy cases indicate that not all\nof the sub-metrics are sensitive enough, and none of them is perfect. Nevertheless,\ncombining them as a whole should yield a generally correct evaluation.\nAbout 95% of the PSD of the roll and pitch inputs was distributed within the\nfrequency interval [0 1] Hz. The PSD interval of the rudder input and throttle was [0 0.5]\nHz and [0 0.2] Hz, respectively. The PSD of the throttle did not show obvious or\nconsistent changes with the addition of time delay and compensation. The PSDs of the\ntwo primary inputs had many peaks, whereas the PSDs of the rudder and throttle usually\nhad only a dominant peak at around 0.035 Hz (for the pedal) or 0.02 Hz (for the throttle),\nwhich did not move much with the delay or compensation. The PSD of the roll angle\nshowed a dominant peak at 0.0288 Hz, which appeared to be the inverse of the duration\nof the offset approach.\nAll ten sub-metrics revealed a fairly consistent, but not substantial, increase for\nthe 48 ms delay, and showed a substantial increase for the 96 and 192 ms added delays\nwith few exceptions. Adding 192 ms delay resulted in several full-scale CHRs, in which\npilot induced oscillation were reported. With the exception of the longitudinal touchdown\nerror, all the metrics showed larger mean values for the offset approach than for the\nstraight-in approach.\nApproximately five sub-metrics showed a decreased mean value by all four of the\npredictors, while the remaining five resulted in an increased mean value. The discrepancy\nmight be the result of an obscure and inconsistent increase of each sub-metric by the\nshort time delay, and the compensation effects for short delays might be dominated by\nother simulation conditions, such as the wind vector or turbulence, combined with pilot\n\n82\n\nanomalies. All predictors showed obvious compensation for long delays. The two novel\npredictors resulted in more cases of reduced objective evaluations in compensating short\ndelays than the other two predictors (Table 4.5).\nNone of the compensators showed obvious or consistent changes to the TLX for\nshort delays. However, they tended to reduce the ratings of the physical and temporal\ndemands, increase the ratings of the mental demand and performance, and produce\ninconsistent changes in the ratings of the effort and frustration for the zero and 48 ms\nadded delay.\nOnly the McFarland compensator resulted in multiple full-scale CHR cases.\nThese were cases in which the uncompensated CHR did not exceed 4. In all full CHR\ncases, pilot-induced oscillations (PIO) were cited. The lack of any full scale CHRs by the\nother three predictors, indicates some improvement in their ability to avoid PIO.\nThe spike reduction algorithm made an inconsistent impact on the McFarland\ncompensator. With the spike-reduction algorithm, the McFarland compensator revealed\nslightly worse compensation for short delays, but slightly better compensation for long\ndelays. The McFarland compensator produced only one fewer superior compensation\ncase, and many fewer inferior compensation cases, when compared to the other\ncompensators, then did the spike reduction algorithm (Table 4.7). The spike reduction\nalgorithm did reduce the jitter in the visual image and made the compensator more\ntolerable for the pilot.\nThe adaptive predictor seemed to be slightly inferior to the McFarland predictor\nin compensating for short delays, but obviously superior to it in compensating for the\nlong delays. This agreed with the theoretical analysis. While these two predictors resulted\n\n83\n\nin about the same number of significant compensation cases, the adaptive predictor\nshowed more cases of significant superiority, and fewer cases of significant inferiority,\nwhen compared to other predictors, than did the McFarland predictor (Table 4.7).\nThe state space predictor resulted in exactly the same number of reduced submetrics as the McFarland predictor for the short delays in both approaches, while it\nshowed substantially fewer increased sub-metrics for long delays as compared to the\nlatter (Table 4.5). For short delays, the state space predictor resulted in 31 better\ncompensation cases than the McFarland predictor, and only 9 worse compensation cases\n(Table 4.6). The state space predictor also revealed more significant compensation cases\nthan the McFarland compensator (Table 4.7). The McFarland predictor resulted in 6 cases\nof significant superiority and 17 cases of significant inferiority to other predictors, while\nthe corresponding numbers of cases for the state space predictor were 17 and 1. All these\nresults showed that the state space predictor made a substantial improvement over the\nMcFarland predictor for all delays (Table 4.8).\nFor both the straight-in and offset approaches, when there was no time delay, the\nhighest peak of the PSD of the roll input or the pitch input was either the first peak, or\nnear the first peak. When time delay was presented, the highest peak tended to move to\nthe right, or into a higher frequency area, but the compensation moved it back to lower\nfrequencies. In other words, time delay increased the operator\xe2\x80\x99s workload in the high\nfrequencies but the compensation decreased it.\nThe transport delay and compensation did not affect the PSD of the two control\ninputs in the whole interval [0 1] Hz, instead, they changed the PSD in certain subintervals. The averaged sub-intervals in which the time delay increased the PSD of the\n\n84\n\nroll input were [0\n\n0.596] and [0.060\n\n0.550] Hz for the two approaches, respectively,\n\nand for the pitch input they were [0.044 0.632] and [0.099 0.506] Hz. These frequency\nintervals tended to shrink with the amount of delay; that is the longer the delay, the\nnarrower the intervals were.\nSimilar to the PSD-increase intervals associated with the time delay, there were\nalso PSD-reduction intervals associated with the compensation. The mean PSD-reduction\nintervals for the roll input are [0.060 0.54] and [0.038 0.548] Hz for the two approaches,\nrespectively, and for the pitch input they were [0.076 0.577] and [0.117 0.499] Hz. The\nPSD-reduction intervals of the compensation were narrower than the corresponding PSDincrease intervals. The PSD beyond the PSD-reduction intervals even increased with the\ncompensation because of the gain distortion of the predictors at high frequencies. The\nPSD-reduction interval also shrank with the amount of delay, indicating the gain\ndistortion is likely to occur at a lower frequency for longer delay compensation. The\nwidth of the interval did not vary considerably between the predictors. For most cases,\nthe adaptive predictor resulted in the narrowest PSD frequency reduction intervals, while\nthe state space predictor resulted in the widest intervals.\nThe two novel predictors did not demonstrate the superiority to the McFarland\npredictor in the piloted tests that was indicated in the theoretical offline tests, primarily\nbecause of the large standard deviations, which resulted from two factors. First, the\nsubject population could not be optimally chosen because the subjects were volunteers.\nSecondly, the 13-pilot population was not large enough to generate statistically\nsignificant results. Therefore, the theoretical analyses better reveal the improved\nperformance of the two novel predictors over the McFarland predictor.\n\n85\n\n5.2. Suggested Future Research\n\nIt would be worth while to implement a frequency domain method to measure the\nsimulator transport delay and phase lag, and compare the results with those determined\nwith the time domain method. Although some frequency domain data were collected with\nthe SIMES while it generated sweep signals as control inputs to the VMS, this method\ndid not result in satisfactory results because aliasing was present in the output aircraft\nstates of the EOM. The frequency of the sweep signal was increased too quickly and the\nlower frequency input did not last long enough. A high percentage of high frequency\ninput signals caused the aliasing. This can be avoided by choosing a lower rate of\nfrequency increase in the sweep signal.\nOne additional problem could be learning among the pilots. The randomization of\nthe cases removes any ability to track the effect. Given more time, the pilots could be\n\xe2\x80\x9ctrained\xe2\x80\x9d to minimize learning during the tests.\n\n86\n\nAppendix A. Run Matrices and Print Variables\nNomenclature:\nCompensation: AP Adaptive Predictor\nMF McFarland Predictor\nMFR McFarland Predictor with Spike Reduction\nSS State Space Predictor\nNC No Compensation\nTable A.1. Straight-in approach run matrix\n\nRun\n\nDelay (ms)\n\nCompensation\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n0\n48\n0\n192\n96\n48\n96\n48\n48\n0\n96\n192\n192\n0\n192\n48\n96\n192\n96\n\nSS\nSS\nMF\nSS\nAP\nMF\nNC\nNC\nMFR\nAP\nMFR\nMF\nNC\nMFR\nMFR\nAP\nMF\nAP\nSS\n\n20\n\n0\n\nNC\n\n87\n\nNomenclature:\nCompensation: AP Adaptive Predictor\nMF McFarland Predictor\nMFR McFarland Predictor with Spike Reduction\nSS State Space Predictor\nNC No compensation\nTable A.2. Offset approach run matrix\n\nRun\n\nDelay (ms)\n\nCompensation\n\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n100\n50\n100\n0\n100\n200\n200\n100\n50\n0\n0\n50\n0\n0\n200\n200\n50\n200\n50\n\nSS\nMF\nNC\nMFR\nMFR\nMFR\nNC\nAP\nAP\nMF\nAP\nMFR\nNC\nSS\nAP\nMF\nNC\nSS\nSS\n\n40\n\n100\n\nMF\n\n88\n\nTable A.3. Piloted test evaluation printed variables\nVariable\n\nNo.\n\ntime\n\nUnits\nSec\n\nalt, lat, long\nalt_dot, lat_dot, long_dot\nalt_d_dot, lat_d_dot, long_d_dot\nIas\n\nacc of altitude, latitude & long\n\nft/s\n\n7\n\nrates of altitude, latitude & long\n\nft/s/s\n\n42,36,\n39\n43,37,\n40\n\nAltitude, latitude and longitude\n\nft/s\n\n6, 72-73\n\nPilot control inputs\n\nft, rad, rad\n\n2-5\n\ntime\n\n%\n\n1\n\npitch_stic , roll_stick ,\nrudder_ped , throttle\n\nDescription\n\nindicated air speed\n\np, q, r\n\n10-12\n\nrad/s\n\na/c angular velocity\n\npdot, qdot, rdot\n\n13-15\n\nrad/s/s\n\na/c angular acceleration\n\nu, v, w\n\n16-18\n\nm/s\n\na/c linear velocity\n\nudot, vdot, wdot\n\n19-21\n\nm/s/s\n\na/c linear acceleration\n\nrad\n\na/c Euler angles\n\nrad/s\n\nEuler angle rates\n\nrad/s/s\n\nEuler angle accelerations\n\nphi, theta, psi\nphi_dot, theta_dot, psi_dot\nphi_d_dot, theta_d_dot, psi_d_dot\n\n24,23,\n22\n50,47,\n44\n51,48,\n45\n\nnx_ps, ny_ps, nz_ps\n\n25-27\n\nG\n\na/c normal force at pilot station\n\nsx, sy, sz\n\n69-71\n\nM\n\nEarth-frame positions (x,y,z)\nwith respect to runway threshold\n\ngs_error\n\n8\n\ndeg\n\nGlideslope error\n\nloc_error\n\n9\n\ndeg\n\nlocalizer error\n\nvolt_leg_[1:6]\n\n52-57\n\nvolts\n\ncommanded leg lengths\n\nlin_accel[1:6]\n\n58-63\n\nG\n\nlinear accelerometers (six)\n\npitchincl, rollincl\n\n64,65\n\ndeg\n\ninclinometer angles (roll and\npitch)\n\nu_gust, v_gust, w_gust\n\n66-68\n\nGust \xe2\x80\x93 magnitude & direction\n\n49,46,30,\n41,35,38\n\nrad\n\nCompensated aircraft state\n\nTdelay\n\n29\n\nsec\n\nadded delay\n\nIcom\n\n28\n\nphic, thec, psic, altc, latc, longc\n\nSampling Rate:\n\npredictor type\n\n62.5 Hz Data Sampling Rate: 15.6 Hz (Every 4th Frame)\n\n89\n\nTable A.4. NASA TLX Subscale rating definitions (from Telban\xe2\x80\x99s thesis)\n\nTitle\nMENTAL DEMAND\n\nPHYSICAL DEMAND\n\nEndpoints\n\nDescriptions\n\nLow/High\n\nHow much mental and perceptual activity was required (e.g.,\nthinking, deciding, calculating, remembering, looking,\nsearching, etc.)? Was the task easy or demanding, simple or\ncomplex, exacting or forgiving?\n\nHow much physical activity was required (e.g., pushing,\npulling, turning, controlling, activating, etc.)? Was the task easy\nLow/High\nor demanding, slow or brisk, slack or strenuous, restful or\nlaborious?\n\nTEMPORAL DEMAND\n\nLow/High\n\nHow much time pressure did you feel due to the rate or pace at\nwhich the tasks or task elements occurred? Was the pace slow\nand leisurely or rapid and frantic?\n\nEFFORT\n\nLow/High\n\nHow hard did you have to work (mentally and physically) to\naccomplish your level of performance?\n\nPERFORMANCE\n\nGood/Poor\n\nHow successful do you think you were in accomplishing the\ngoals of the task set by the experimenter (or yourself)? How\nsatisfied were you with your performance in accomplishing\nthese goals?\n\nFRUSTRATION LEVEL\n\nLow/High\n\nHow insecure, discouraged, irritated, stressed and annoyed\nversus secure, gratified, content, relaxed and complacent did\nyou feel during the task?\n\nFig. A.1. NASA TLX Subscale data sheet (from Telban\xe2\x80\x99s thesis)\n\n90\n\nTable A.5. Resumes of the pilot subjects\nPilot\n\nCategory\n\n#1\n\nSimulator\nEngineer/Pilot\n\n#4\n\nSimulator\nEngineer/Pilot\n\n#5\n\nSimulator\nEngineer/Pilot\n\n#2\n\nResearch Pilot\n\n#3\n\nResearch Pilot\n\n#7\n\nResearch Pilot\n\n#8\n\nCorporate Pilot\n\n#10\n\nCorporate Pilot\n\n#6\n\nFAA Pilot\n\n#9\n\nCommercial Pilot\n\n#11\n\nCommercial Pilot\n\n#12\n\nCommercial Pilot\n\n#13\n\nCommercial Pilot\n\nDescription\n\nVarious simulators including B-757, B737, DC-9, L1011, various rotorcraft,\ngeneral aviation, and fighters\nPrivate Pilot, various simulators including\nB-757, B-737, DC-9, general aviation,\netc.\nPrivate Pilot, various simulators including\nB-757, B-737, DC-9, general aviation,\nspace shuttle, HL-20, etc.\nMilitary Aircraft (200h), Transport Aircraft\n(750h), Corporate Aircraft (1200h),\nGeneral Aviation (2700h), Helicopter\n(600h)\nMilitary Aircraft (1275h), Transport\nAircraft (5350h), Corporate Aircraft\n(3650h)\nMilitary Aircraft (3300h), Transport\nAircraft (350h), Corporate Aircraft\n(3800h), Other Aircraft (600h)\nMilitary Aircraft (5800h), Helicopter\n(2800h)\nTransport Aircraft (3400h), Corporate\nAircraft (5800h), General Aviation\n(1200h)\nMilitary Aircraft (1950h), Transport\nAircraft (14500h), Corporate Aircraft\n(360h)\nMilitary Aircraft (2320h), Transport\nAircraft (16425h), Various Aircraft\n(400h)\nMilitary Aircraft (3950h), Transport\nAircraft (26h)\nMilitary Aircraft (3000h), Transport\nAircraft (2500h)\nMilitary Aircraft (3500h), Transport\nAircraft (11400h)\n\n91\n\nExperience\n35 years\n\n30 years\n\n35 years\n\n6,000 hours\n\n10,275 hours\n\n8,000 hour\n9,000 hours\n10,000 hours\n\n16,000 hours\n\n19,100 hours\n4,000 hours\n5,500 hours\n14,900 hours\n\nAppendix B. More Results of the Piloted Tests\nB.1. Glideslope Error\nIntegrated PSD and RMSE of Glide Slope with Delay td = 0ms: Straight-in\n\nPSD or RMSE\n\n0.6\n\nFrom pilot #1 to pilot #13\n\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nPSD or RMSE\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: Integrated PSD; 2: RMSE)\n\nFig. B.1.1. Integrated PSD & RMSE of GSE with td=0 ms (No compensation)\n\n92\n\nIntegrated PSD and RMSE of Glide Slope with Delay td = 48ms: Straight-in\n\nPSD or RMSE\n\n0.6\n\nFrom pilot #1 to pilot #13\n\n0.4\n0.2\n1\n\n0\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nPSD or RMSE\n\n0.8\n0.6\n0.4\n0.2\n1\n\n0\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: Integrated PSD; 2: RMSE)\n\nFig. B.1.2. Integrated PSD & RMSE of GSE with td=48 ms (No compensation)\nIntegrated PSD and RMSE of Glide Slope with Delay td = 96ms: Straight-in\n\nPSD or RMSE\n\n0.6\n\nFrom pilot #1 to pilot #13\n\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nPSD or RMSE\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: Integrated PSD; 2: RMSE)\n\nFig. B.1.3. Integrated PSD & RMSE of GSE with td=96 ms (No compensation)\n\n93\n\nIntegrated PSD and RMSE of Glide Slope with Delay td = 192ms: Straight-in\nFrom pilot #1 to pilot #13\n\nPSD or RMSE\n\n0.6\n0.4\n0.2\n\n1\n\n0\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nPSD or RMSE\n\n0.8\n0.6\n0.4\n0.2\n1\n\n0\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: Integrated PSD; 2: RMSE)\n\nFig. B.1.4. Integrated PSD & RMSE of GSE with td=192 ms (No compensation)\nIntegrated PSD of the Glide Slope Error for all Pilots in Straight-in Approach\n0.5\ntd=0\ntd=48\ntd=96\ntd=192\n\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the Glide Slope Error for all Pilots in Straight-in Approach\ntd=0\ntd=48\ntd=96\ntd=192\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.5. GSE of Different Time Delay for 13 Pilots: Straight-in Approach\n\n94\n\nIntegrated PSD of the Glide Slope Error for all Pilots in Offset Approach\ntd=0\ntd=48\ntd=96\ntd=192\n\nPSD\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the Glide Slope Error for all Pilots in Offset Approach\n\nRMSE\n\n0.8\n\ntd=0\ntd=48\ntd=96\ntd=192\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.6.GSE of Different Time Delay for 13 Pilots: Offset Approach\nIntegrated PSD of the GS Error with td= 0 ms in Straight-in Approach\n0.5\n\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 0 ms in Straight-in Approach\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.7. Compensation Effects to GSE by Individual Pilot: td=0 ms, Straight-in\n\n95\n\nIntegrated PSD of the GS Error with td= 48 ms in Straight-in Approach\n0.5\n\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 48 ms in Straight-in Approach\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.8. Compensation Effects to GSE by Individual Pilot: td=48 ms, Straight-in\nIntegrated PSD of the GS Error with td= 96 ms in Straight-in Approach\n0.5\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 96 ms in Straight-in Approach\n0.8\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.9. Compensation Effects to GSE by Individual Pilot: td=96 ms, Straight-in\n\n96\n\nIntegrated PSD of the GS Error with td= 192 ms in Straight-in Approach\n0.5\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 192 ms in Straight-in Approach\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.10. Compensation Effects to GSE by Individual Pilot: td=192ms, Straight-in\n\n97\n\nIntegrated PSD of the GS Error with td= 0 ms in Offset Approach\n0.5\n\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 0 ms in Offset Approach\n0.8\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.11. Compensation Effects to GSE by Individual Pilot: td=0 ms, Offset\nIntegrated PSD of the GS Error with td= 0 ms in Offset Approach\n0.5\n\nPSD\n\n0.4\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 0 ms in Offset Approach\n0.8\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.12. Compensation Effects to GSE by Individual Pilot: td=48 ms, Offset\n\n98\n\nIntegrated PSD of the GS Error with td= 96 ms in Offset Approach\n\nPSD\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 96 ms in Offset Approach\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.13. Compensation Effects to GSE by Individual Pilot: td=96 ms, Offset\nIntegrated PSD of the GS Error with td= 192 ms in Offset Approach\n\nPSD\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nRMSE of the GS Error with td= 192 ms in Offset Approach\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nRMSE\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.1.14. Compensation Effects to GSE by Individual Pilot: td=192 ms, Offset\n\n99\n\nB.2. Glideslope Error\nTouchdown Erorr for 13 Pilots with Delay td = 0ms: Straight-in Approach\n3000\n\nTD Error, ft\n\nFrom pilot #1 to pilot #13\n2000\n\n1000\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nTD Error, ft\n\n6000\n4000\n2000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: X Direction; 2: Y Direction)\n\nFig. B.2.1. TDE for 13 Pilots with td=0 ms (No compensation)\nTouchdown Erorr for 13 Pilots with Delay td = 48ms: Straight-in Approach\n\nTD Error, ft\n\n2500\n\nFrom pilot #1 to pilot #13\n\n2000\n1500\n1000\n500\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nTD Error, ft\n\n6000\n4000\n2000\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: X Direction; 2: Y Direction)\n\nFig. B.2.2. TDE for 13 Pilots with td=48 ms (No compensation)\n\n100\n\nTouchdown Erorr for 13 Pilots with Delay td = 96ms: Straight-in Approach\nFrom pilot #1 to pilot #13\nTD Error, ft\n\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nTD Error, ft\n\n5000\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: X Direction; 2: Y Direction)\n\nFig. B.2.3. TDE for 13 Pilots with td=96 ms (No compensation)\nTouchdown Erorr for 13 Pilots with Delay td = 192ms: Straight-in Approach\nFrom pilot #1 to pilot #13\nTD Error, ft\n\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nTD Error, ft\n\n8000\n6000\n4000\n2000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (TD Error) in (1: X Direction; 2: Y Direction)\n\nFig. B.2.4. TDE for 13 Pilots with td=192 ms (No compensation)\n\n101\n\nTD Error in X, ft\n\nTouchdown Error for all Pilots in Straight-in Approach: in X Direction\ntd=0\ntd=48\ntd=96\ntd=192\n\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nIn Y Direction\ntd=0\ntd=48\ntd=96\ntd=192\n\n40\n30\n20\n10\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.2.5. TDE of Different Time Delays for 13 Pilots: Straight-in Approach\nTouchdown Error for all Pilots in Offset Approach: in X Direction\n\nTD Error in X, ft\n\n4000\ntd=0\ntd=48\ntd=96\ntd=192\n\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nIn Y Direction\ntd=0\ntd=48\ntd=96\ntd=192\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.2.6. TDE of Different Time Delays for 13 Pilots: Offset Approach\n\n102\n\nTouchdown Error of Compensations (td= 0ms) in Straight-in Approach: X Direction\n\nTD Error in X, ft\n\n2500\n2000\n1500\n1000\n500\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTD Error in Y, ft\n\n50\n40\n30\n20\n10\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.2.7. Compensation Effects to TDE by Individual Pilot: td=0 ms, Straight-in\nTouchdown Error of Compensations (td= 48ms) in Straight-in Approach: X Direction\n\nTD Error in X, ft\n\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n40\n30\n20\n10\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.2.8. Compensation Effects to TDE by Individual Pilot: td=48 ms, Straight-in\n\n103\n\nTouchdown Error of Compensations (td= 96ms) in Straight-in Approach: X Direction\n\nTD Error in X, ft\n\n6000\n\n4000\n\n2000\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n40\n30\n20\n10\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.2.9. Compensation Effects to GSE by Individual Pilot: td=96 ms, Straight-in\nTouchdown Error of Compensations (td= 192ms) in Straight-in Approach: X Direction\n\nTD Error in X, ft\n\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTD Error in Y, ft\n\n50\n40\n30\n20\n10\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.2.10. Compensation Effects to TDE by Individual Pilot: td=192ms, Straight-in\n\n104\n\nTD Error in X, ft\n\nTouchdown Error of Compensations (td= 0ms) in Offset Approach: X Direction\n5000\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.2.11. Compensation Effects to TDE by Individual Pilot: td=0 ms, Offset\n\nTD Error in X, ft\n\nTouchdown Error of Compensations (td= 48ms) in Offset Approach: X Direction\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.2.12. Compensation Effects to TDE by Individual Pilot: td=48 ms, Offset\n\n105\n\nTouchdown Error of Compensations (td= 96ms) in Offset Approach: X Direction\n\nTD Error in X, ft\n\n8000\n6000\n4000\n2000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTD Error in Y, ft\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.2.13. Compensation Effects to TDE by Individual Pilot: td=96 ms, Offset\n\nTD Error in X, ft\n\nTouchdown Error of Compensations (td= 192ms) in Offset Approach: X Direction\n4000\n3000\n2000\n1000\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTD Error in Y, ft\n\nY Direction\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n100\n\n50\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.2.14. Compensation Effects to TDE by Individual Pilot: td=192ms, Offset\n\n106\n\nB.3. Cooper-Harper Rating\nCHR for all Pilots with Delay td = 0ms: Straight-in Approach\n10\nFrom pilot #1 to pilot #13\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (CHR) for (1: Glideslope; 2: Touchdown)\n\nFig. B.3.1. CHR for 13 pilots with td=0 ms (no compensation)\nCHR for all Pilots with Delay td = 48ms: Straight-in Approach\n10\nFrom pilot #1 to pilot #13\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (CHR) for (1: Glideslope; 2: Touchdown)\n\nFig. B.3.2. CHR for 13 pilots with td=48 ms (no compensation)\n\n107\n\nCHR for all Pilots with Delay td = 96ms: Straight-in Approach\n10\nFrom pilot #1 to pilot #13\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (CHR) for (1: Glideslope; 2: Touchdown)\n\nFig. B.3.3. CHR for 13 pilots with td=96 ms (no compensation)\nCHR for all Pilots with Delay td = 192ms: Straight-in Approach\n10\nFrom pilot #1 to pilot #13\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nEvaluated (CHR) for (1: Glideslope; 2: Touchdown)\n\nFig. B.3.4. CHR for 13 pilots with td=192 ms (no compensation)\n\n108\n\nCHR for all Pilots Straight-in Approach: Glideslope\n10\ntd=0\ntd=48\ntd=96\ntd=192\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\ntd=0\ntd=48\ntd=96\ntd=192\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.5. CHR of different time delays for 13 pilots: straight-in approach\nCHR for all Pilots Offset Approach: Glideslope\n10\ntd=0\ntd=48\ntd=96\ntd=192\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\ntd=0\ntd=48\ntd=96\ntd=192\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.1.6. CHR of different time delays for 13 pilots: offset approach\n\n109\n\nCHR of Compensations (td= 0ms) for all Pilots in Straight-in Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.7. Compensation effects to CHR by individual pilot: td=0 ms, straight-in\nCHR of Compensations (td= 48ms) for all Pilots in Straight-in Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.8. Compensation effects to CHR by individual pilot: td=48 ms, straight-in\n\n110\n\nCHR of Compensations (td= 96ms) for all Pilots in Straight-in Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.9. Compensation effects to CHR by individual pilot: td=96 ms, straight-in\nCHR of Compensations (td= 192ms) for all Pilots in Straight-in Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.10. Compensation effect to CHR by individual pilot: td=192ms, straight-in\n\n111\n\nCHR of Compensations (td= 0ms) for all Pilots in Offset Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.11. Compensation effect to CHR by individual pilot: td=0 ms, offset\nCHR of Compensations (td= 48ms) for all Pilots in Offset Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.12. Compensation effect to CHR by individual pilot: td=48 ms, offset\n\n112\n\nCHR of Compensations (td= 96ms) for all Pilots in Offset Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.13. Compensation effect to CHR by individual pilot: td=96 ms, offset\nCHR of Compensations (td= 192ms) for all Pilots in Offset Approach: Glideslope\n10\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nTouchdown\n10\n\nCHR\n\n8\n6\n4\n2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.3.14. Compensation effect to CHR by individual pilot: td=192 ms, offset\n\n113\n\nB.4. Task Load Index\nTLX for all Pilots with Delay td = 0ms: Straight-in Approach\n100\nFrom pilot #1 to pilot #13\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nType of TLX (1: Mean TLX; 2: Weighted TLX)\n\nFig. B.4.1. TLX for 13 pilots with td=0 ms (no compensation)\nTLX for all Pilots with Delay td = 48ms: Straight-in Approach\n100\nFrom pilot #1 to pilot #13\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nType of TLX (1: Mean TLX; 2: Weighted TLX)\n\nFig. B.4.2. TLX for 13 pilots with td=48 ms (no compensation)\n\n114\n\nTLX for all Pilots with Delay td = 96ms: Straight-in Approach\n100\nFrom pilot #1 to pilot #13\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nType of TLX (1: Mean TLX; 2: Weighted TLX)\n\nFig. B.4.3. TLX for 13 pilots with td=96 ms (no compensation)\nTLX for all Pilots with Delay td = 192ms: Straight-in Approach\n100\nFrom pilot #1 to pilot #13\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nType of TLX (1: Mean TLX; 2: Weighted TLX)\n\nFig. B.4.4. TLX for 13 pilots with td=192 ms (no compensation)\n\n115\n\nTLX for all PilotsStraight-in Approach: Mean TLX\n100\ntd=0\ntd=48\ntd=96\ntd=192\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n11\n\n12\n\n13\n\nWeighted TLX\n100\ntd=0\ntd=48\ntd=96\ntd=192\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\nFig. B.3.5. TLX of different time delays for 13 Pilots: straight-in approach\nTLX for all PilotsOffset Approach: Mean TLX\n100\ntd=0\ntd=48\ntd=96\ntd=192\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n100\ntd=0\ntd=48\ntd=96\ntd=192\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.6. TLX of different time delays for 13 Pilots: offset approach\n\n116\n\nTLX of Compensations (td= 0ms) for all Pilots in Straight-in Approach: Mean TLX\n100\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.7. Compensation effect to TLX by individual pilot: td=0 ms, straight-in\nTLX of Compensations (td= 48ms) for all Pilots in Straight-in Approach: Mean TLX\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n100\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.4.8. Compensation effect to TLX by individual pilot: td=48 ms, straight-in\n\n117\n\nTLX of Compensations (td= 96ms) for all Pilots in Straight-in Approach: Mean TLX\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n100\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.4.9. Compensation effect to TLX by individual pilot: td=96 ms, straight-in\nTLX of Compensations (td= 192ms) for all Pilots in Straight-in Approach: Mean TLX\n100\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n100\n\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.10. Compensation effect to TLX by individual pilot: td=192ms, straight-in\n\n118\n\nTLX of Compensations (td= 0ms) for all Pilots in Offset Approach: Mean TLX\n120\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n100\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n120\n100\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.11. Compensation effects to TLX by individual pilot: td=0 ms, offset\nTLX of Compensations (td= 48ms) for all Pilots in Offset Approach: Mean TLX\n120\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n100\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n120\n100\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.12. Compensation effects to TLX by individual pilot: td=48 ms, offset\n\n119\n\nTLX of Compensations (td= 96ms) for all Pilots in Offset Approach: Mean TLX\n120\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n100\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n120\n100\nTLX\n\n80\n60\n40\n20\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.13. Compensation effects to TLX by individual pilot: td=96 ms, offset\nTLX of Compensations (td= 192ms) for all Pilots in Offset Approach: Mean TLX\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nTLX\n\n100\n\n50\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nWeighted TLX\n\nTLX\n\n100\n\n50\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.14. Compensation effects to TLX by individual pilot: td=192 ms, offset\n\n120\n\nB.5. Power Spectral Density\nTotal PSD for all Pilots with Delay td = 0ms: Straight-in Approach\n0.08\n\nFrom pilot #1 to pilot #13\n\nPSD\n\n0.06\n0.04\n0.02\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n0.2\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.5.1. PSD for 13 plots with td=0 ms (no compensation)\nTotal PSD for all Pilots with Delay td = 48ms: Straight-in Approach\nFrom pilot #1 to pilot #13\n\nPSD\n\n0.1\n\n0.05\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.5.2. PSD for 13 pilots with td=48 ms (no compensation)\n\n121\n\nTotal PSD for all Pilots with Delay td = 96ms: Straight-in Approach\nFrom pilot #1 to pilot #13\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.5.3. PSD for 13 pilots with td=96 ms (no compensation)\nTotal PSD for all Pilots with Delay td = 192ms: Straight-in Approach\nFrom pilot #1 to pilot #13\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n0.4\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.5.4. PSD for 13 pilots with td=192 ms (no compensation)\n\n122\n\nPSD for all PilotsStraight-in Approach: Roll Stick\ntd=0\ntd=48\ntd=96\ntd=192\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\ntd=0\ntd=48\ntd=96\ntd=192\n\n0.25\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.5. PSD of different time delays for 13 pilots: straight-in approach\nPSD for all PilotsOffset Approach: Roll Stick\n0.4\n\ntd=0\ntd=48\ntd=96\ntd=192\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\ntd=0\ntd=48\ntd=96\ntd=192\n\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.6. PSD of different time delays for 13 Pilots: offset approach\n\n123\n\nPSD of Compensations (td= 0ms) for all Pilots in Straight-in Approach: Roill Stick\n0.2\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n0.1\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.08\n0.06\n0.04\n0.02\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.7. Compensation effect on PSD by individual pilot: td=0 ms, straight-in\nPSD of Compensations (td= 48ms) for all Pilots in Straight-in Approach: Roill Stick\n\nPSD\n\n0.1\n\n0.05\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.1\n\n0.05\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.4.8. Compensation effect on PSD by individual pilot: td=48 ms, straight-in\n\n124\n\nPSD of Compensations (td= 96ms) for all Pilots in Straight-in Approach: Roill Stick\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.1\n\n0.05\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.5.9. Compensation effect on PSD by individual pilot: td=96 ms, straight-in\nPSD of Compensations (td= 192ms) for all Pilots in Straight-in Approach: Roill Stick\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n0.25\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.10. Compensation effect on PSD by individual pilot: td=192ms, straight-in\n\n125\n\nPSD of Compensations (td= 0ms) for all Pilots in Offset Approach: Roill Stick\n\nPSD\n\n0.3\n\n0.2\n0.1\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n0.2\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.5.11. Compensation effect on PSD by individual pilot: td=0 ms, offset\nPSD of Compensations (td= 48ms) for all Pilots in Offset Approach: Roill Stick\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n0.2\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.5.12. Compensation effect on PSD by individual pilot: td=48 ms, offset\n\n126\n\nPSD of Compensations (td= 96ms) for all Pilots in Offset Approach: Roill Stick\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.13. Compensation effect on PSD by individual pilot: td=96 ms, offset\nPSD of Compensations (td= 192ms) for all Pilots in Offset Approach: Roill Stick\n0.4\n\nPSD\n\n0.3\n0.2\n0.1\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nPSD\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.14. Compensation effect on PSD by individual pilot: td=192 ms, offset\n\n127\n\nB.5. Frequency of the Highest PSD Peak\nHighest PSD Peak Frequency for all Pilots with Delay td = 0ms: Straight-in Approach\nFrom pilot #1 to pilot #13\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.6.1. Highest PSD peak frequency for 13 pilots with td=0ms (no compensation)\nHighest PSD Peak Frequency for all Pilots with Delay td = 48ms: Straight-in Approach\nFrom pilot #1 to pilot #13\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.6.2. Highest PSD peak frequency for 13 pilots with td=48ms (no compensation)\n\n128\n\nHighest PSD Peak Frequency for all Pilots with Delay td = 96ms: Straight-in Approach\n1\n\nFrom pilot #1 to pilot #13\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\n1\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.6.3. Highest PSD peak frequency for 13 pilots with td=96ms (no compensation)\nHighest PSD Peak Frequency for all Pilots with Delay td = 192ms: Straight-in Approach\n0.8\n\nFrom pilot #1 to pilot #13\n\nHz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n1\n\n7\n\n8\n\n9 10 11 12 13\n\n8\n\n9 10 11 12 13\n\n2\nOffset Approach\n\nHz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9 10 11 12 13\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n1\n2\nControl Input for PSD (1: Roll Stick; 2: Pitch Stick)\n\nFig. B.6.4. Highest PSD peak frequency for 13 pilots for td=196ms (no compensation)\n\n129\n\nFrequency of the Highest PSD Peak for all PilotsStraight-in Approach: Roll Stick\ntd=0\ntd=48\ntd=96\ntd=192\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\ntd=0\ntd=48\ntd=96\ntd=192\n\n0.8\n\nHz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig.B.6.5. Highest PSD peak frequency of different delays: straight-in approach\nFrequency of the Highest PSD Peak for all PilotsOffset Approach: Roll Stick\ntd=0\ntd=48\ntd=96\ntd=192\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n11\n\n12\n\n13\n\nPitch Stick\n0.8\ntd=0\ntd=48\ntd=96\ntd=192\n\nHz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\nFig. B.6.6. Highest PSD peak frequency of different delays: offset approach\n\n130\n\nHighest PSD Peak Migration (td= 0ms) in Straight-in Approach: Roill Stick\n1.5\n\nHz\n\n1\n0.5\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n0.25\n\nHz\n\n0.2\n0.15\n0.1\n0.05\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.6.7. Highest PSD peak migration by compensation: td =0ms, straight-in\nHighest PSD Peak Migration (td= 48ms) in Straight-in Approach: Roill Stick\n1.5\n\nHz\n\n1\n0.5\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n1\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n0.8\nHz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.6.8. Highest PSD peak migration by compensation: td =48ms, straight-in\n\n131\n\nHighest PSD Peak Migration (td= 96ms) in Straight-in Approach: Roill Stick\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n1\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.6.9. Highest PSD peak migration by compensation: td96ms, straight-in\nHighest PSD Peak Migration (td= 192ms) in Straight-in Approach: Roill Stick\n1\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n0.8\nHz\n\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.6.10. Highest PSD peak migration by compensation: td=0ms, straight-in\n\n132\n\nHighest PSD Peak Migration (td= 0ms) in Offset Approach: Roill Stick\n\nHz\n\n1.5\n1\n0.5\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n1.5\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nHz\n\n1\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.5.11. Highest PSD peak migration by compensation: td=0ms, offset\nHighest PSD Peak Migration (td= 48ms) in Offset Approach: Roill Stick\n1.5\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\n1\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.6.12. Highest PSD peak migration by compensation: td=48ms, offset\n\n133\n\nHighest PSD Peak Migration (td= 96ms) in Offset Approach: Roill Stick\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n1\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\nFig. B.6.13. Highest PSD peak migration by compensation: td=96ms, offset\nHighest PSD Peak Migration (td= 192ms) in Offset Approach: Roill Stick\n\nHz\n\n1\n\n0.5\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\nPitch Stick\n1\n\nNo compensation\nMcFarland Filter\nMcFarland Filter, Spike Reduced\nAdaptiv e Filter\nState Space Filter\n\nHz\n\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n7\n8\nPilot (# 1 - #13)\n\n9\n\n10\n\n11\n\n12\n\n13\n\nFig. B.6.14. Highest PSD peak migration by compensation: td=192ms, offset\n\n134\n\nAppendix C. MATLAB Source Codes\nC.1. Converting ASCII Data to MATLAB Data Structure\n%\n%\n%\n%\n%\n\nProgram name: tfgetlFinal.m\nThis MATLAB script converts the ASCII text data files from the\nNASA LaRC real-time sim.\nVariables are saved in MATLAB structure with NAMES, UNITS and\nDATA\n\n% Oct. 24, 2004\nclear\n% Read variable names and units\nfilname1=\'rt_run\';\nfilname3=\'_0202.txt\';\nfilname4=\'_p13\';\n% pilot 13. The number is different for other pilots\nfor z=1:40 % there are 40 runs for each pilot\nfilname2=num2str(z);\nSourceFile=[filname1 filname2 filname3];\nfid=fopen(SourceFile);\nflag=0;\nwhile flag<75 %from line 3 to 63, list of variable names and units\ntline = fgetl(fid);\nflag=flag+1;\nlen=length(tline);\nif flag>=2\nfor i=8:18\n% from column 8 to 18, the variable name\nif tline(i)~=\' \'\nname(flag-1,i-7)=tline(i);\nelse\nbreak;\nend\nend\nfor i=19:28 % from column 8 to 18, the variable unit\nif tline(i)~=\' \'\nunit(flag-1,i-18)=tline(i);\nelse\nbreak;\nend\nend\nend\nend\n%\n\nRead data\nwhile 1\ntline = fgetl(fid);\n\n135\n\nlen=length(tline);\nflag=flag+1;\nif ~ischar(tline), break, end\nif flag>=91\n% the data begin from line 79\ndatan=floor((flag-91)/13)+1; % data start from line 91\nline1=91+13*(datan-1);\n% 13 digits for each variable\ndatam=(flag-line1)*6;\n% there are 6 variables in each row\nfor l=0:5\nif (datam==72)&(l==2), break, end\nlcol=l*13;\nclear temp\nfor i=lcol+1:lcol+13\n% from column 8 to 18, the variable name\nif i<=len\nif tline(i)~=\' \'\ntemp(i-lcol)=tline(i);\nelse\nbreak;\nend\novfl=0;\nelse\novfl=1;\nend\nend\nif ovfl==0\ndata(datam+l+1,datan)=str2num(temp);\nend\nend\nend\n%\n\nCreate the data structure. Save it in a file that a MATLAB\nanalysis script can read\nfclose(fid);\ndisp(filname2)\nrun=struct(\'name\',name,\'unit\',unit,\'data\',data);\nTargetFile=[filname1 filname2 filname4];\nsave(TargetFile, \'run\')\nclear name unit data run\n\nend\n\n136\n\nC.2. Calculate Smoothed PSD (Periodogram)\n% Program name: smPSD.m. Date: June, 2002\nfunction [P, f] = smPSD(x, T, ifNorm)\n% This function calculates the normalized PSD of a real signal and the\n% frequency of the PSD\n% the called function smooper.m must be in the same directory\n%\n%\n%\n%\n%\n\ninput: x--the signal\ninput: T--the sampling rate of the signal\ninput: ifNorm--flag for normalization (1) or not (0)\noutput: P--the PSD\noutput: f--the frequency (Hz)\n\nx=x-mean(x);\nlen=length(x);\nlfft=4096;\n% Total number of PSD points\nxz=[x zeros(1,lfft-len)];\n% zero padding\n% determine the length of the window, it must be odd\nif (rem(len,2) == 0)\nlwin=len-1;\nelse\nlwin=len;\nend\n% Use hamming window. Other window can also be used\nw = window(@hamming,lwin);\nP = smpgram(xz,w\');\n% smpgram is available in Appendix C.3\nif ifNorm==1\nP = P/max(P);\n% normalization, optimal\nend\n% Determine the frequency sequence whose length is the same as the PSD\n% sequence\nFs = 1/T;\ndf = Fs/length(P)/2;\nf = 0:df:Fs/2-df;\n\n% T is the sampling period\n% Frequency step size\n\n137\n\nC.3. Function (Subroutine) Called by smPSD.m (Appendix C.2)\n% Program name: smpgram.m. Date: June, 2002\n% Computes the smoothed periodogram of the data vector x with w as the\n% windowing sequence.\nfunction s = smpgram(x,w)\n%\n%\n%\n%\n%\n%\n\nSyntax: s = smpgram(x,w).\nInput:\nx: the data vector\nw: the window; must have odd length.\nOutput:\ns: the smoothed periodogram of length equal to that of x.\n\nif (rem(length(w),2) == 0)\n%\nThe function \xe2\x80\x9crem\xe2\x80\x9d calculates the remains\nerror(\'Window in SMOOPER must have an odd length\');\nend\nx = reshape(x,1,length(x));\n% change x to a column vector\n% \xe2\x80\x9cconv\xe2\x80\x9d calculate the convolution of a signal\n% \xe2\x80\x9cfliplr\xe2\x80\x9d reverse the input vector\n% Therefore, \xe2\x80\x9cconv(x,fliplr(x))\xe2\x80\x9d returns the autocorrelation of x\nkappa = (1/length(x))*conv(x,fliplr(x));\nn = 0.5*(length(kappa)-length(w));\n% \xe2\x80\x9cfft\xe2\x80\x9d calculates the FFT of the input\ns = fft([zeros(1,n),w,zeros(1,n)].*kappa);\n% \xe2\x80\x9cabs\xe2\x80\x9d returns the absolute value of the input.\n% If the input is a complex number, it returns the magnitude\n% For PSD, it only needs the magnitude information\ns = abs(s(1:length(x)))\n\n138\n\nC.4. Adaptive Predictor: Stochastic Approximation Algorithm\n% MATLAB function to implement the adaptive predictor using the\n% stochastic approximation algorithm\n% Program name: adaptiveSA.m. Date: September 2003\nfunction yp=adaptiveSA(y,v,T,td);\n%\n%\n%\n%\n%\n%\n\ninput: y-the sequence of the aircraft state to be predicted\ninput: v-the velocity of y\ninput: T-the update period (frame length)\ninput: td-the time delay\noutput: yp-the prediction of y with the stochastic approximation\nmethod\n\n[numd,dend]=pade(td,2);\n% Pade approximation of td\nif td==0\nnumd=[0 0 1];\ndend=[0 0 1];\nend\n[A,B,C,D]=tf2ss(numd,dend);\n[Ad,Bd]=c2d(A,B,T);\n[b0,b1,b2]=mcfcoefs(td,T,3); % Calculate the McFarland coefficients\n%\n% Calculate the velocity vectors consisting of 3 steps of velocity\n%\nv0=v;\nfor i=1:len4\nif i==1\nv1(i)=v0(i);\nv2(i)=v1(i);\nelseif i==2\nv1(i)=v0(i-1);\nv2(i)=v1(i);\nelse\nv1(i)=v0(i-1);\nv2(i)=v1(i-1);\nend\nend\n%\n% Stochastic approximation algorithm\n%\nx=zeros(2,1);\niP=0;\n% iP is the epsilon in the SA algorithm\nfor i=1:length(y)\nx=Ad*x+Bd*y(i);\nyd(i)=C*x+D*y(i); % calculate the delayed y\n%\n%\nuse McFaland coefficients for the 1st 4 iterations\n%\nif i<5\nphi=[v0(i) v1(i) v2(i)]\';\niP=iP+phi\'*phi;\n%\n\n139\n\n%\n%\n\nuse left pseudo-inversion to realze LS regression for 5th iteration\nelseif i==5\nPhi=[v0(1:i)\' v1(1:i)\' v2(1:i)\'];\nphi=[v0(i) v1(i) v2(i)]\';\nY=y(1:i)\'-y4(1:i)\';\nP=inv(Phi\'*Phi);\ntheta=P*Phi\'*Y;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\niP=iP+phi\'*phi;\n\n%\n%\n%\n\nStart the stochastic approximation algorithm from 6th iteration\nelseif i>5\nphi=[v0(i) v1(i) v2(i)]\';\niP=iP+phi\'*phi;\ntheta=theta+phi*(y(i)-yd(i)-phi\'*theta)/iP;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\nend\n\n%\n% Calculate the prediction after the coefficients are updated\n%\nyp(i)=y(i)+b0*v0(i)+b1*v1(i)+b2*v2(i);\nend\n\n140\n\nC.5. Adaptive Predictor: Kalman Filter Algorithm\n% MATLAB function to implement the adaptive predictor using the Kalman\n% filter algorithm\n% Program name: adaptiveKalman.m. Date: September 2003\nfunction yp=adaptiveKalman(y,v,T,td);\n%\n%\n%\n%\n%\n\ninput: y--the sequence of the aircraft state to be predicted\ninput: v--the velocity of y\ninput: T--the update period (frame length)\ninput: td--the time delay\noutput: yp--the prediction of y with the Kalman method\n\n[numd,dend]=pade(td,2);\n% Pade approximation of td\nif td==0\nnumd=[0 0 1];\ndend=[0 0 1];\nend\n%\n% to state space form\n%\n[A,B,C,D]=tf2ss(numd,dend);\n[Ad,Bd]=c2d(A,B,T);\n[b0,b1,b2]=mcfcoefs(td,T,3);% Calculate the McFarland coefficients\n%\n% Calculate the velocity vectors consisting of 3 steps of velocity\n%\nv0=v;\nfor i=1:len4\nif i==1\nv1(i)=v0(i);\nv2(i)=v1(i);\nelseif i==2\nv1(i)=v0(i-1);\nv2(i)=v1(i);\nelse\nv1(i)=v0(i-1);\nv2(i)=v1(i-1);\nend\nend\n%\n% Kalman filter algorithm\n%\nx=zeros(2,1);\niP=0;\nfor i=1:length(y)\nx=Ad*x+Bd*y(i);\nyd(i)=C*x+D*y(i); % calculate the delayed y\n%\n%\nuse left pseudo-inversion to realze LS regression for 5th iteration\n%\nif i==5\nPhi=[v0(1:i)\' v1(1:i)\' v2(1:i)\'];\n\n141\n\nphi=[v0(i) v1(i) v2(i)]\';\nY=y(1:i)\'-yd(1:i)\';\nP=inv(Phi\'*Phi);\ntheta=P*Phi\'*Y;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\n%\n%\n%\n\nStart the Kalman filter algorithm from 6th iteration\nelseif i>5\nphi=[v0(i) v1(i) v2(i)]\';\nK=P*phi*inv(ff+phi\'*P*phi);\ntheta=theta+K*(y(i)-yd(i)-phi\'*theta);\nP=(eye(3)-K*phi\')*P;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\nend\n\n%\n% Calculate the prediction after the coefficients are updated\n%\nyp(i)=y(i)+b0*v0(i)+b1*v1(i)+b2*v2(i);\nend\n\n142\n\nC.6. Adaptive Predictor: Karzmarz Algorithm\n% MATLAB function to implement the adaptive predictor using\n% the Karzmarz algorithm\n% Program name: adaptiveKarzmarz.m. Date: September 2003\nfunction yp=adaptiveKarzmarz(y,v,T,td);\n%\n%\n%\n%\n%\n\ninput: y--the sequence of the aircraft state to be predicted\ninput: v--the velocity of y\ninput: T--the update period (frame length)\ninput: td--the time delay\noutput: yp--the prediction of y with the Karzmarz method\n\n[numd,dend]=pade(td,2);\n% Pade approximation of td\nif td==0\nnumd=[0 0 1];\ndend=[0 0 1];\nend\n%\n% to state space form\n%\n[A,B,C,D]=tf2ss(numd,dend);\n[Ad,Bd]=c2d(A,B,T);\n[b0,b1,b2]=mcfcoefs(td,T,3); % Calculate McFarland coefficients\n%\n% Calculate the velocity vectors consisting of 3 steps of velocity\n%\nv0=v;\nfor i=1:len4\nif i==1\nv1(i)=v0(i);\nv2(i)=v1(i);\nelseif i==2\nv1(i)=v0(i-1);\nv2(i)=v1(i);\nelse\nv1(i)=v0(i-1);\nv2(i)=v1(i-1);\nend\nend\n% Least mean square approximation algorithm\nx=zeros(2,1);\nlms=50;\nfor i=1:length(y)\nx=Ad*x+Bd*y(i);\nyd(i)=C*x+D*y(i);\n% calculate the delayed y\n%\n%\nuse left pseudo-inversion to realze LS regression for 5th iteration\n%\nif i==5\nPhi=[v0(1:i)\' v1(1:i)\' v2(1:i)\'];\nphi=[v0(i) v1(i) v2(i)]\';\n\n143\n\nY=y(1:i)\'-yd(1:i)\';\nP=inv(Phi\'*Phi);\ntheta=P*Phi\'*Y;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\n%\n%\n%\n\nStart the Karzmarz algorithm from 6th iteration\nelseif i>5\nphi=[v0(i) v1(i) v2(i)]\';\nK=nf*phi/(df+phi\'*phi);\ntheta=theta+K*(y(i)-yd(i)-phi\'*theta);\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\nend\n\n%\n% Calculate the prediction after the coefficients are updated\n%\nyp(i)=y(i)+b0*v0(i)+b1*v1(i)+b2*v2(i);\nend\n\n144\n\nC.7. Adaptive Predictor: Least Mean Square Algorithm\n% MATLAB function to implement the adaptive predictor using\n% the least mean square algorithm\n% Program name: adaptiveLMS.m. Date: September 2003\nfunction yp=adaptiveLMS(y,v,T,td);\n%\n%\n%\n%\n%\n\ninput: y--the sequence of the aircraft state to be predicted\ninput: v--the velocity of y\ninput: T--the update period (frame length)\ninput: td--the time delay\noutput: yp--the prediction of y with the least mean square method\n\n[numd,dend]=pade(td,2);\n% Pade approximation of td\nif td==0\nnumd=[0 0 1];\ndend=[0 0 1];\nend\n%\n% to state space form\n%\n[A,B,C,D]=tf2ss(numd,dend);\n[Ad,Bd]=c2d(A,B,T);\n[b0,b1,b2]=mcfcoefs(td,T,3); % Calculate McFarland coefficients\n%\n% Calculate the velocity vectors consisting of 3 steps of velocity\n%\nv0=v;\nfor i=1:len4\nif i==1\nv1(i)=v0(i);\nv2(i)=v1(i);\nelseif i==2\nv1(i)=v0(i-1);\nv2(i)=v1(i);\nelse\nv1(i)=v0(i-1);\nv2(i)=v1(i-1);\nend\nend\n% Least mean square approximation algorithm\nx=zeros(2,1);\nnf=1.2; % gamma\ndf=10; % alpha\nfor i=1:length(y)\nx=Ad*x+Bd*y(i);\nyd(i)=C*x+D*y(i);\n% calculate the delayed y\n%\n%\nuse left pseudo-inversion to realze LS regression for 5th iteration\n%\nif i==5\nPhi=[v0(1:i)\' v1(1:i)\' v2(1:i)\'];\n\n145\n\nphi=[v0(i) v1(i) v2(i)]\';\nY=y(1:i)\'-yd(1:i)\';\nP=inv(Phi\'*Phi);\ntheta=P*Phi\'*Y;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\n%\n%\n%\n\nStart the least mean algorithm from 6th iteration\nelseif i>5\nphi=[v0(i) v1(i) v2(i)]\';\ntheta=theta+phi*(y(i)-yd(i)-phi\'*theta)/lms;\nb0=theta(1);\nb1=theta(2);\nb2=theta(3);\nend\n\n%\n% Calculate the prediction after the coefficients are updated\n%\nyp(i)=y(i)+b0*v0(i)+b1*v1(i)+b2*v2(i);\nend\n\n146\n\nC.8. Calculate the McFarland Predictor Coefficients\n%\n% Function to calculate the McFarland filter\'s coefficients\n%\nfunction [b0,b1,b2]=mcfcoefs(td,T, f)\n%\n%\n%\n%\n\ninput: td -- time delay (second)\ninput: f -- bandpass frequency (Hz)\ninput: T -- update frame cycle (second)\noutputs: b0, b1, b2 -- McFarland filter coefficients\n\nw0=2*pi*f;\nt0=w0*T;\np0=w0*td;\n\n% theta0\n% psi0\n\n%\n% intermediate variables\n%\nst=sin(t0);\nct=cos(t0);\nsp=sin(p0);\ncp=cos(p0);\nstp=sin(t0+p0);\nctp=cos(t0+p0);\ns2tp=sin(2*t0+p0);\nc2tp=cos(2*t0+p0);\n%\n% The common denominator\n%\nden=2*w0*st*(1-ct);\n%\n% The numerators\n%\nnum0=(p0+sp*(1-2*ct))*st+(t0*st/2-cp*(1-ct))*(1+2*ct);\nnum1=st*(2*stp-2*p0*ct-t0*(1+ct));\nnum2=st*(p0-sp+t0/2)-cp*(1-ct);\nb0=num0/den;\nb1=num1/den;\nb2=num2/den;\n\n147\n\nC.9. State Space Predictor: 4th-Order Reference Model\n% MATLAB function to implement the state space predictor using\n% the 4th order large commercial transport landing model in pitch\n% Program name: ssPredictor4.m. Date: November 2003\nfunction yp=ssPredictor4(y,v,a,u,T,td)\n%\n%\n%\n%\n%\n%\n%\n\ninput: y--the sequence of the aircraft state to be predicted\ninput: v--the velocity of y\ninput: a--the acceleration of y\ninput: u--pilot control input\ninput: T--the update period (frame length)\ninput: td--the time delay\noutput: yp--the prediction of y with the state space predictor\n\n%\n% Transfor function of a large commercial transport landing model\n%\nn757L=0.852549*conv([1 0.103205], [1 0.360746]);\nw3=0.96671;\nxi3=0.66305;\nw4=0.155840;\nxi4=0.07393;\nd757L=conv([1 2*w3*xi3 w3^2], [1 2*w4*xi4 w4^4]);\n%\n% Change the mdoel into state space form (observable canonical form)\n%\nA7L=[[-d757L(2) -d757L(3) -d757L(4)]\' eye(3);-d757L(5) zeros(1,3)];\nB7L=[0 n757L]\';\nC7L=[1 0 0 0];\nD7L=0;\n%\n% Calculate the state transition matrix P7L and matric Q7L=Q*B7L,\n% where Q is the integral of P7L\n%\n[P7L,Q7L]=c2d(A7L,B7L,td);\n%\n% Alternative way of calculate the state transition matrix and its\nintegral\n%\nP7L=eye(4);\nn=15;\nf=1;\nfor i=1:n\nP7L=P7L+(A7L*td)^i/f;\nf=f*(i+1);\nend\nQ=eye(4);\nn=15;\nf=1;\nfor i=1:n\nf=f*(i+1);\nQ=Q+(A7L*td)^i/f;\nend\nQ=Q*td;\n\n148\n\nQ7L=Q*B7L;\n%\n% Calculate the five coefficients of the predictor\n%\nc7L0=P7L(1,1)+P7L(1,2)*d757L(2)+P7L(1,3)*d757L(3);\nc7L1=P7L(1,2)+P7L(1,3)*d757L(2);\nc7L2=P7L(1,3);\nc7L3=Q7L(1)-P7L(1,3)*n757L(1);\nc7L4=P7L(1,4)*n757L(3);\n%\n% Calculate the prediction\n%\nyp=C7L0*y+C7L1*v+C7L2*a+C7L3*u+C7L4*intAdam2(u,T);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% Adam Bashforth 2nd Order Integtration\n%\nfunction z=intAdam2(y,T)\n% input y: to be integrated\n% input T: sampling period\n% output z: integration of y by Adam Bashforth 2nd order\nlen=length(y);\nfor i=1:len\nif i==1\nz(i)=y(i)*T;\nelseif i==2\nz(i)=z(i-1)+(y(i-1)+y(i))*T/2;\nelse\nz(i)=z(i-1)+(3*y(i-1)-y(i-2))*T/2;\nend\nend\n\n149\n\nC.10. Discrete State Space Predictor: 4th-Order Reference Model\n% MATLAB function to implement the discrete state space predictor using\n% the 4th order large commercial transport landing model in pitch\n% Program name: dssPredictor4.m. Date: December 2003\nfunction yp=dssPredictor4(y,u,T,td)\n%\n%\n%\n%\n%\n\ninput: y--the sequence of the aircraft state to be predicted\ninput: u--pilot control input\ninput: T--the update period (frame length)\ninput: td--the time delay\noutput: yp--the prediction of y with the state space predictor\n\n% Transfor function of a large commercial transport landing model\n%\nn757L=0.852549*conv([1 0.103205], [1 0.360746]);\nw3=0.96671;\nxi3=0.66305;\nw4=0.155840;\nxi4=0.07393;\nd757L=conv([1 2*w3*xi3 w3^2], [1 2*w4*xi4 w4^4]);\n%\n% Change the mdoel into state space form (observable canonical form)\n%\nA7L=[[-d757L(2) -d757L(3) -d757L(4)]\' eye(3);-d757L(5) zeros(1,3)];\nB7L=[0 n757L]\';\nC7L=[1 0 0 0];\nD7L=0;\n[Ald, Bld]=c2d(A7L,B7L,T);\n%discretize the model\n%\n% Calculate the discrete state transition matrix Pd and matrix Qd=Q*Bld,\n% where Q is the integral of Pd\n%\nPd=Ald^nd;\n% Discrete state transition matrix\nQd=eye(4);\nfor i=1:nd-1\nQd=Qd*Ald+eye(4);\nend\nQd=Qd*Bld;\n% Integral of the discrete state transition matrix\n%\n% Calculate predictor state vector\n%\nxd1(1)=y(1);\nxd2(1)=0;\nxd3(1)=0;\nxd4(1)=0;\nfor i=1:lenngth(y)-1\nxd2(i+1)=Ald(2,1)*xd1(i)+xd3(i)+Bld(2)*u(i);\nxd3(i+1)=Ald(3,1)*xd1(i)+xd4(i)+Bld(3)*u(i);\nxd4(i+1)=Ald(4,1)*xd1(i)+Bld(4)*u(i);\nxd=[xd1(i+1);xd2(i+1);xd3(i+1);xd4(i+1)];\nxdp=Pd*xd+Qd*u(i);\nyp(i+1)=C7L*xdp;\n\n% Calculate the prediction\n\nend\n\n150\n\nC.11. Calculate the Accelerations in 6 DOF of the Topodetic Frame System\n% MATLAB scripts to calculate the accelerations in the 6 DOF of the\n% topodetic frame from the Euler angles, p, q, r, u, v, w, pd,\n% qd, rd, alititude, latitude and longitude.\n% Program name: topodeticAcc.m. Date: June 2004\nclear all\n% load data of the Euler angles, p, q, r, u, v, w, and pd, qd and rd.\nload testrun13\n% could be any data file containing the above data\n%\n% Calculate the accelerations of the Euler angles\n%\nphi_dd=pd+tan(the).*sin(phi).*qd+tan(the).*cos(phi).*rd;\nthe_dd=cos(phi).*qd-sin(phi).*rd;\npsi_dd=sin(phi)./cos(the).*qd+cos(phi)./cos(the).*rd;\n%\n% calculate the projection on the equatorial plane of the geocentric\n% radius of a point\n%\na=2.092565e+7;\n% Earth equatorial radius\nf=1/298.257;\n% Earth flatening parameter\nb=a*(1-f);\n% Earth polar radius\nc=sqrt(a^2-b^2);\ne=c/a;\n% Earth eccentricity\ne2=(a^2-b^2)/a^2;\nC=1./sqrt(cos(lat).^2+sin(lat).^2*b^2/a^2);\nrp=(a*C+alt).*cos(lat);\n% projected radius\nrp=rp/3.2808;\n% convert to meters\nre=alt/3.2808+6.3782e+006;\n%(radius of the Earth, in meter)\nre=(alt+rho)/3.2808;\n%(radius of the Earth, in meter)\n%\n% calculate rho\n%\ndrho=(b^2+(a^2-b^2)*cos(lat).^2).^1.5;\nrho=a^2*b^2./drho;\n%\n% calculate the velocities of the altitude, latitude and longitude\n%\npnd=u.*cos(the).*cos(psi)-v.*cos(phi).*sin(psi)\n+v.*sin(phi).*sin(the).*cos(psi)+w.*sin(phi).*sin(psi)\n+w.*cos(phi).*sin(the).*cos(psi);\nped=u.*cos(the).*sin(psi)+v.*cos(phi).*cos(psi)\n+v.*sin(phi).*sin(the).*sin(psi)-w.*sin(phi).*cos(psi)\n+w.*cos(phi).*sin(the).*sin(psi);\nhd=u.*sin(the)-v.*sin(phi).*cos(the)-w.*cos(phi).*cos(the);\n%\n%Change to angular latitude and longitude velocities\n%\npnd=pnd./re;\nped=ped./rp;\n%\n% Calculate the translational accelerations\n\n151\n\n%\n% 1. part a\n%\npna1=ud.*cos(the).*cos(psi)-vd.*cos(phi).*sin(psi)\n+vd.*sin(phi).*sin(the).*cos(psi)+wd.*sin(phi).*sin(psi)\n+wd.*cos(phi).*sin(the).*cos(psi);\n% in m/s/s\npea1=ud.*cos(the).*sin(psi)+vd.*cos(phi).*cos(psi)\n+vd.*sin(phi).*sin(the).*sin(psi)-wd.*sin(phi).*cos(psi)\n+wd.*cos(phi).*sin(the).*sin(psi);\n% in m/s/s\nha1 =ud.*sin(the)-vd.*sin(phi).*cos(the)-wd.*cos(phi).*cos(the);\n%\n% 2. part b\n%\npna2=(v.*cos(phi).*sin(the).*cos(psi)+v.*sin(phi).*sin(psi)\n+w.*cos(phi).*sin(psi)-w.*sin(phi).*sin(the).*cos(psi)).*phid\n+(-u.*sin(the).*cos(psi)+v.*sin(phi).*cos(the).*cos(psi)\n+w.*cos(phi).*cos(the).*cos(psi)).*thed+(-u.*cos(the).*sin(psi)\n-v.*sin(phi).*sin(the).*sin(psi)-v.*cos(phi).*cos(psi)\n+w.*sin(phi).*cos(psi)-w.*cos(phi).*sin(the).*sin(psi)).*psid;\npea2=(v.*cos(phi).*sin(the).*sin(psi)-v.*sin(phi).*cos(psi)\n-w.*cos(phi).*cos(psi)-w.*sin(phi).*sin(the).*sin(psi)).*phid\n+(-u.*sin(the).*sin(psi)+v.*sin(phi).*cos(the).*sin(psi)\n+w.*cos(phi).*cos(the).*sin(psi)).*thed...\n+(u.*cos(the).*cos(psi)+v.*sin(phi).*sin(the).*cos(psi)\n-v.*cos(phi).*sin(psi)+w.*sin(phi).*sin(psi)\n+w.*cos(phi).*sin(the).*cos(psi)).*psid;\nha2=(-v.*cos(phi).*cos(the)+w.*sin(phi).*cos(the)).*phid...\n+(u.*cos(the)+v.*sin(phi).*sin(the)+w.*cos(phi).*sin(the)).*thed;\npna=pna1+pna2;\npea=pea1+pea2;\nha=ha1+ha2;\npna=pna./re;\npea=pea./rp;\nha=ha*3.2808;\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n\n% in rad/s/s\n% in rad/s/s\n\nphi_dd is the phi acceleration\nthe_dd is the theta acceleration\npsi_dd is the psi accelerationm\npnd is the latitude velocity\nped is the longitude velocity\nhd is the altitude velocity\npna is the latitude velocity\npea is the longitude velocity\nha is the altitude velocity\n\n152\n\nC.12. Calculate State Transition Matrix Using the Cayley-Hamilton Theorem\n% MATLAB function to calculate the state transition matrix using\n% the Cayley-Hamilton theorem, which is introduced in Appendix A,\n% NASA CR 2007-215095.\n% Program name: dssPredictor4.m. Aug 10, 2001\nfunction z=stCH(A,td)\n% input A: a square matrix\n% input td: time delay\n% output z: state transitionmatrix of Atd-->z=exp(A*td)\nlamda=eig(A);\n% eigenvalues of am\nsd=sort(lamda);\n% sort lamda in ascending order\nlen=length(sd);\n% the order of A\n%\n% Check if there are repeated eigenvalues.\n%\nnrep=ones(len,1);\nnp=zeros(len,1);\ni=1;\nwhile i<len\nif sd(i)==sd(i+1)\ntmp=1;\nm=i+1;\nwhile sd(m)==sd(i)\nnp(m)=m-i;\ntmp=tmp+1;\nm=m+1;\nif m>len\nbreak\nend\nend\nfor k=i:i+tmp-1\nnrep(k)=tmp;\nend\ni=i+tmp;\nelse\ni=i+1;\nend\nend\n%\n% Form the vector of the powers of the eigenvalues\n%\nfor i=1:len\nfp(i)=td^np(i)*exp(sd(i)*td)/factorial(np(i);\nend\n%\n% Calculate the powers of the matrix A\n%\nPa(1)=eye(len);\nfor i=2:len\nPa(i)=A*Pa(i-1);\nend\n\n153\n\n%\n% Quasi-Vandemonde matrix\n%\nfor i=1:len\nif np(i)==0\nfor m=1:len\nqv(i,m)=sd(i)^(m-1);\nend\nelse\nfor m=1:np(i)\nqv(i,m)=0;\nend\nfor m=np+1:len\nc=1;\nfor n=m-1:-1:m-np(i)\nc=c*n;\nend\nqv(i,m)=c*sd(i)^(m-np(i)-1);\nend\nend\nend\n%\n% Calculate the inverse of qv\niqv=inv(qv);\nif abs(imag(iqv))<0.0001\niqv=real(iqv);\nend\n%\n% Calculate the alphas.\n%\nalpha=iqv*fp\';\nif abs(imag(alpha))<0.0001\nalpha=real(alpha);\nend\n%\n% finally , calculate the state transition matrix\n%\nz=zeros(len,len);\nfor i=1:len\nz=z+alpha(i)*Pa(i);\nend\n\n154\n\nC.13. Comprehensive Analysis of Sobiski/Cardullo Filter\n%\n%\n%\n%\n%\n%\n%\n\nThis program does the following designs and analyses:\n1. Feedforward Sobiski/Cardullo predictor analysis;\n2. Discrete state space compensation;\n3. Five-point method to design the feedforward gain;\n4. Least square fit method to design the feedforward gain;\n5. Observaor design;\n6. Analyze a S/C compensation system with an observor;\n\n% Program name: scgAnalysis.m. Date: April 2001\nclear all\n% Jet aircraft model from Ricard\'s paper in roll\n%\nnjr=1.1644*[1/3.46 0.48/1.86 1];\ndjr=conv(conv([1 0], [0.16 1]), [1/3.53 0.48/1.88 1]);\ndjr=djr/djr(1);\n%\n% Pilot model fron Sobiski\'s thesis\n%\nnump=18*[1 1];\ndenp=[1 9 18];\nx=-.3; % pilot lumped delay\nnumt=[x*x 6*x 12];\ndent=[x*x -6*x 12];\n[nump,denp]=series(nump,denp, numt,dent); % whole pilot model\n%\n% Artificial time delay\n%\ntd=0.4;\n[numt,dent]=pade(td,2);\n%\n% Change models into state space format\n%\n[Aa Ba Ca Da]=tf2ss(njr,djr);\n[Ap Bp Cp Dp]=tf2ss(nump,denp);\n[At Bt Ct Dt]=tf2ss(numt,dent);\n%\n% Cascade models together\n%\n[An Bn Cn Dn]=series(Aa,Ba,Ca,Da,Ap,Bp,Cp,Dp); % without added delay\n[Ad Bd Cd Dd]=series(An,Bn,Cn,Dn,At,Bt,Ct,Dt); % with added delay\nsysn=ss(An,Bn,Cn,Dn);\nsysd=ss(Ad,Bd,Cd,Dd);\n%\n% Feed forward compensation with state transition matrix\n%\n[P,Q]=c2d(Ad,Bd,td);\n% P=exp(Ad*td), Q=int(P)*Bd;\nsysc=ss(Ad,Bd,Cd*P,Cd*Q);\n% with compensation\n%\n% Frequency analysis\n%\nw1 = 0.1:0.1:1;\nw2 = 2:1:20;\n\n155\n\nw = [w1\n[mn,pn]\n[md,pd]\n[mc,pc]\n\nw2];\n% frequency interval (rad/s) for bode: open loop\n= bode(sysn, 1, w);\n= bode(sysd, 1, w);\n= bode(sysc, 1, w);\n\n%\n% plot Bode diagrams\n%\nfigure(1)\nsubplot(211);\nsemilogx(w, 20*log10(mn),\'-\',w, 20*log10(md),\'--\', w,20*log10(mc),\'.\');\nxlabel(\'Frequency, rad/s\');\nylabel(\'Magnitude, dB\');\nttl=[\'Bode Diagrams of Systems without Delay, \' num2str(td1)...\n\'s Delay, Sobiski/Cardullo Compensation\'];\ntitle(ttl);\ngrid;\naxis([0.1 max(w) -60 40])\nlgd2=[\'With \' num2str(td1) \'s Delay\'];\nlegend(\'With no delay\', lgd2, \'Sobiski/Cardullo Compensation\',3)\nsubplot(212);\nsemilogx(w, pn,\'-\',w, pd,\'--\', w,pc,\'.\'), grid;\nxlabel(\'Frequency, rad/s\');\nylabel(\'Phase, deg\');\naxis([0.1 max(w) -1200 0])\nlegend(\'With no delay\', lgd2, \'Sobiski/Cardullo Compensation\',3)\n%\n% Step responses: closed loop\n%\nT=1/60;\n% frame length\ntall=10;\n% total time for step response\nt=0:T:tall;\nlent=length(t);\nu=ones(1,lent); % step input\n%\nsysnc=ss(An-Bn*Cn,Bn,Cn,Dn);\n% closed-loop undelayed system\nsysdc=ss(Ad-Bd*Cd,Bd,Cd,Dd);\n% closed-loop delayed system\nG=inv(1+Cd*Q);\n% feedback gain with compensation\nsyscc=ss(Ad-Bd*G*Cd*P,Bd*G, Cd*P,Cd*Q); % closed-loop compensated\nsystem\n%\nyn=lsim(sysnc,u,t); % step response of undelayed system\nyd=lsim(sysdc,u,t); % step response of delayed system\nyc=lsim(syscc,u,t); % step response of compensated system\n%\n% Plot step responses\n%\nfigure(2)\nplot(t,yn,\'r\', t,yd,\'g-.\', t,yc,\'b--\')\ntitle(\'Step Responses of Undelayed, Delayed and Compensated (S/C)\nSystems\')\nxlabel(\'t, s\')\nylabel(\'Roll Angle, rad\')\nset(gca,\'FontSize\',8);\nlgd=[\'Delayed by \' num2str(td1) \'s\'];\nlegend(\'Undelayed\', lgd, \'Compensated\', 3)\n\n156\n\n%\n% Discrete Sobiski/Cardullo filter implementation\n%\n[Az,Bz]=c2d(Ad,Bd,T);\n% Discretize the system\nnd=floor(td/T);\ntau=td-nd*T;\n% td=nd*T+tau;\nPz=Az^nd;\n% Discrete state transition matrix\nI=eye(length(Az));\nQz=I;\n% eye creates identity matrix\nfor i=1:nd-1\nQz=Qz*Az+I;\nend\nQz=Qz*Bz;\n% Integral of the discrete state transition matrix\n%\nsysz=ss(Az,Bz,Cd*Pz,Cd*Qz); % Discretely compensated system\nif tau~=0\n[Ptau, Qtau]=c2d(Ad,Bd,tau);\nsysz=ss(Az,Bz,Cd*Ptau*Pz,Cd*(Ptau*Qz+Qtau));\nend\n[mz,pz] = bode(sysz, 1, w); % Bode diagram with discrete S/C filter\nsyszc=feedback(sysz,-1);\n% Closed loop of sysz\nyz=lsim(syszc,u,t); % step response of discretely compensated system\n%\n% 5-point method to design the feedback gain\n%\ns = [0.1 1 6 10 17]*j; % 5 frequency points\nI = eye(length(An));\nfor m=1:length(s)\nhn(m) = Cn*inv(s(m)*I-An)*Bn + Dn;\nend\nhnr = real(hn);\nhni = imag(hn);\nb = [hnr\' ; hni\'];\n%\nI = eye(length(Ad));\nfor m=1:length(s)\nina(:,:,m) = P*inv(s(m)*I-Ad);\ninab(:,m) = ina(:,:,m)*Bd;\ninabd(:,m) = inab(:,m) + Q;\nend\ninabdr = real(inabd);\ninabdi = imag(inabd);\na = [inabdr\' ; inabdi\'];\nK5 = (a\\b)\';\n% K5 is the feed forward gain by the 5-P method\n%\nsysc5=ss(Ad,Bd,K5*P,K5*Q);\n% compensated system with feedback gain K5\n[mc5,pc5] = bode(sysc5, 1, w); % frequency response\nG5=inv(1+K5*Q);\n% feedback gain with compensation\nsyscc5=ss(Ad-Bd*G5*K5*P,Bd*G, K5*P,K5*Q); % closed-loop compensated\nsystem\nyc5=lsim(syscc5,u,t); % step response of compensated system\n%\n% Least squares method to design the feedback gain\n%\n\n157\n\ns=w*j;\nI = eye(length(Ad));\nfor m=1:length(s)\np1(:,:,m) = P*inv(s(m)*I-Ad);\np2(:,m) = p1(:,:,m)*Bd;\np(:,m) = p2(:,m) + Q;\nend\nPr = real(p);\nPi = imag(p);\n%\nfor k=1:length(Ad)\nar(:,k) = Pr*(Pr(k,:)\');\nai(:,k) = Pi*(Pi(k,:)\');\nbr(k) = hnr*(Pr(k,:)\');\nbi(k) = hni*(Pi(k,:)\');\nend\na = ar+ai;\nb = br\' + bi\';\nKf = (a\\b)\';\n% Kf is the feed forward gain by the lsf method\n%\nsyscf=ss(Ad,Bd,Kf*P,Kf*Q);\n% compensated system with feedback gain Kf\n[mcf,pcf] = bode(syscf, 1, w); % frequency response\nGf=inv(1+Kf*Q);\n% feedback gain with compensation\nsysccf=ss(Ad-Bd*Gf*Kf*P,Bd*G, Kf*P,Kf*Q); % closed-loop compensated\nsystem\nycf=lsim(sysccf,u,t); % step response of compensated system\n%\n% Observer design\n%\npnd = eig(As - Bs*Cs)\';\npndr = real(pnd)*1.2;\npndl = pndr+j*imag(pnd);\npobsv = [pndl real(delaypol\')];\nL = plfun2(Ad\', Cd\', pobsv);\n% plfun2 is available in the next\nsection\nL = real(L);\nL = L\';\n% L is the observer gain\n%\n% Observer analysis\n%\nAr=Ad-L*Cd; % Ar is the Matrix Ac in Eq. (B.10), NASA CR-2005\nAo=[Ad, -Bd*G*Cd*P; L*Cd, Ar-Bd*G*Cd*P];\nBo=[Bd*G; Bd*G];\nCo=[Cd*P-Cd*Q*G*(Cd*P), zeros(size(Cd*P)];\nDo=Cd*Q*Bd*G;\nsyso=ss(Ao,Bo,Co,Do); % the observer system\nyco=lsim(syso,u,t); % step response of compensated system with an\nobserver\nsyse=ss(Ar,Bd*(1-G),Cd, 0); % Error system with the Observer\ne=lsim(syse,u,t); % error response\n\n158\n\nC.14. A Pole Placement Function Called by the Program in Appendix C.12\n%\n%\n%\n%\n%\n\nthis function implements the pole placement\nfor the case: 1. SISO, 2. repeated ploes:\none pole repeats once.\nIt is more robust than the MATLAB place function, which does not\naccept repeated Poles\n\n% Program name: plfun2.m. Date: May 2001\nfunction y=plfun2(a,b,L)\n% input: matrices a and b, pole vector L\n% the repeated poles must be in the end of L\n% output: state feedback control matrix k\nord=length(b);\nfor i=1:ord-1\ntemp = [L(i)*eye(ord)-a];\nif rank(temp)==ord\nai=temp;\nevt = ai\\b;\nka(:,i)=evt;\nkb(i)=-1;\n%kb(i)=last;\nelse\nfor m=1:ord-1\nai(:,m)=temp(:,m+1);\nend\nai(:,ord)=b;\nb1=temp(:,1);\nevt = ai\\b1;\nfor m=1:ord-1\nka(m+1,i)=evt(m);\nend\nka(1,i)=-1;\nkb(i)=evt(ord);\nend\nend\nt1 = [L(ord-1)*eye(ord)-a b];\n% t1 is the [lamda*I-a b] matrix, where lamda is the repeated pole.\n[m,n] = size(t1);\nfor i=2:n\nt2(:,i-1)=t1(:,i);\nend\nt3=ka(:,ord-1)-t1(:,1);\nt=t2\\t3;\nka(1,ord)=1;\nfor i=2:ord ka(i,ord)=t(i-1); end\nkb(ord)=t(ord);\ny=kb*inv(ka);\n\n159\n\nC.15. Design a 3-Velocity Predictor Using Frequency Least Squares Method\n% MATLAB program to design a 3-velocity predictor using\n% frequency domain least squares method\n% Program name: flsMcf.m. Date: July 2002\nclear\n% Jet aircraft model from Ricard\'s paper->output: roll velocity (P)\n%\nnac=1.1644*[1/3.46 0.48/1.86 1];\ndac=conv([0.16 1], [1/3.53 0.48/1.88 1]);\ndac=dac/dac(1);\nT=0.016;\n% sampling period\n[nad,dad]=c2dm(nac,dac,T);\n% discretize the A/C model\n%\n% EOM\n%\nnv2u=T*[1 1]/2; % trapezoid integration from velocity to acceleration\ndv2u=[1 -1];\n%\n% Pilot model fron Sobiski\'s thesis\n%\nnump=18*[1 1];\ndenp=[1 9 18];\nx=-.3; % pilot lumped delay\nnumt=[x*x 6*x 12];\ndent=[x*x -6*x 12];\n[nopc,dopc]=series(nump,denp, numt,dent); % whole pilot model\n%\n% Artificial time delay\n%\ntd=0.2;\n[ndlyc,ddlyc]=pade(td,2);\n[ndlyd,ddlyd]=c2dm(ndlyc,ddlyc,T,\'zoh\');\n%\n% cascade\n%\n[nvoc,dvoc]=series(nopc,dopc,nac,dac); % continuous A/C (P) & operator\n[nvod,dvod]=c2dm(nvoc,dvoc,T);\n% discrete A/C (P) & operator\n[nuoc,duoc]=series(nvoc,dvoc, 1,[1 0]);% continuous A/C & operator\n[nuod, duod]=series(nvod,dvod, nv2u,dv2u); % discrete A/C & operator\n[nallc, dallc]=series(nuoc,duoc, ndlyc,ddlyc);\n% continuous: all\n[nalld, dalld]=series(nuod,duod, ndlyd,ddlyd);\n% discrete: all\n[A0,B0,C0,D0]=tf2ss(nuoc,duoc); % State space: continuous A/C & Op\n%\n% Frequency analysis\n%\nw1 = 0.1:0.1:1;\nw2 = 2:1:20;\nw = [w1 w2];\n% frequency interval (rad/s) for bode: open loop\ns=w*j;\nlen=length(w);\n%\n% evaluate z the z-transform operator\n\n160\n\nz=exp(j*w*T);\nzi=1./z;\n%\n[m0,p0]=bode(nuoc,duoc,w);% frequency response (undelayed)\n[md,pd]=bode(nuod,duod,w); % frequency response (delayed)\n%\n% Add the McFarland compensator\n%\n[b0,b1,b2]=mcfcoefs(td,T,3); % Calculate McFarland coefficients\n%\nnmcfb=[b0 b1 b2];\ndmcfb=[1 0 0];\nnpara=nv2u;\ndpara=dv2u;\nnt1=conv(nmcfb,dpara);\nnt2=conv(dmcfb,npara);\nlen1=length(nt1);\nlen2=length(nt2);\nif len1==len2\nnpara=nt1+nt2;\nelse if len1>len2\nnpara=nt1+[zeros(len1-len2) nt2];\nelse\nnpara=nt2+[zeros(len2-len1) nt1];\nend\nend\ndpara=conv(dmcfb,dpara);\n[nf, df]=series(nvod,dvod, npara,dpara);\n[nf, df]=series(nf,df, ndlyd,ddlyd);\nlenn=length(nf);\nlend=length(df);\nfor m=1:len\nsumn=0;\nsumd=0;\nfor k=1:lenn\nsumn=sumn+nf(k)*z(m)^(lenn-k);\nend\nfor k=1:lend\nsumd=sumd+df(k)*z(m)^(lend-k);\nend\nhz(m)=sumn/sumd;\nend\nmf=abs(hz);\npf=unwrap(angle(hz))*180/pi;\n%\n% design a K=[b0 b1 b2], using the least square method\n%\nI = eye(length(A0));\nfor m=1:len\nh0(m) = C0*inv(s(m)*I-A0)*B0 + D0;\nend\n% h0 is the frequency characteristic function of undelayed system\n%\nlenn=length(nvod);\nlend=length(dvod);\nfor m=1:len\nsumn=0;\n\n161\n\nsumd=0;\nfor k=1:lenn\nsumn=sumn+nvod(k)*z(m)^(lenn-k);\nend\nfor k=1:lend\nsumd=sumd+dvod(k)*z(m)^(lend-k);\nend\nhs(m)=sumn/sumd;\nend\n% hs is the frequency characteristic function of A/C + operator\n%\n% least square design\n%\ntpa(1,:)=hs;\ntpa(2,:)=hs.*zi;\ntpa(3,:)=hs.*zi.*zi;\ntpb=h0-T*hs.*(z+1)./(z-1)/2;\ntpar = real(tpa);\ntpai = imag(tpa);\ntpbr = real(tpb);\ntpbi = imag(tpb);\nar=tpar*tpar\';\nbr=tpar*tpbr\';\nai=tpai*tpai\';\nbi=tpai*tpbi\';\na=ar+ai;\nb=br+bi;\nK=a\\b;\n% K contains the new set of predictor coefficients\nnmcf=K\';\ndmcf=[1 0 0];\n%\nnpara=nv2u;\ndpara=dv2u;\nnt1=conv(nmcf,dpara);\nnt2=conv(dmcf,npara);\nlen1=length(nt1);\nlen2=length(nt2);\nif len1==len2\nnpara=nt1+nt2;\nelse if len1>len2\nnpara=nt1+[zeros(len1-len2) nt2];\nelse\nnpara=nt2+[zeros(len2-len1) nt1];\nend\nend\ndpara=conv(dmcf,dpara);\n[nlsf, dlsf]=series(nvod,dvod, npara,dpara);\n[nlsf, dlsf]=series(nlsf,dlsf, ndlyd,ddlyd);\n%\nlenn=length(nlsf);\nlend=length(dlsf);\nfor m=1:len\nsumn=0;\nsumd=0;\nfor k=1:lenn\nsumn=sumn+nlsf(k)*z(m)^(lenn-k);\nend\n\n162\n\nfor k=1:lend\nsumd=sumd+dlsf(k)*z(m)^(lend-k);\nend\nhz(m)=sumn/sumd;\nend\nmlsf=abs(hz);\nplsf=unwrap(angle(hz))*180/pi;\n%\n% Bode plot\n%\nfigure(1)\nsubplot(2, 1, 1);\np=semilogx(w\', 20*log10(m0),\'r\',w\', 20*log10(mf),\'k--\',\nw\',20*log10(mlsf),\'k.\');\nset(p,\'LineWidth\',1)\nxlabel(\'Frequency - rad\');\nylabel(\'Magnitude - dB\');\naxis([0.1 20 -60 40]);\nttl=[\'Bode Diagrams of Systems with no Delay, with McFarland\nCompensations\'];\ntitle(ttl);\ngrid;\n%lgd2=[\'With \' num2str(Td) \' Delay\'];\nlegend(\'Undelayed\',\'McFarland\',\'3-V: Least Squares\',0)\nsubplot(2, 1, 2);\nsemilogx(w, p0,\'r\',w, pf,\'k--\', w,plsf,\'k.\');\nxlabel(\'Frequency - rad\');\nylabel(\'Phase - deg\');\ngrid;\nlegend(\'Undelayed\',\'McFarland\',\'3-V: Least Squares\',0)\naxis([0.1 20 -600 0]);\n\n163\n\nC.16. Function to Plot Multi-Normalized Data for the Delay Measurement\n% This program primarily was written by Tom Wolters, and Liwen Guo made\n% some chnages.\n% Program name: plfun2.m. Date: May 2000\nfunction nplot_data(var,nvar,tstart,tend,tstring)\n% NPLOT_DATA\n%\n%\n%\n%\n\nPlots a normalized version of the given variable/s with\nrespect to time. In the legend, the range of a variable\nwith unit follows the variable name. The optional tstart\nand tend limit the time of the plot. Tstring adds a\ntitle.\n\n% Other input:\n% var\xe2\x80\x94name of the data structure referencing the data\n% nvar\xe2\x80\x94sequence holding the indices of the data items in the structure\nstyle={\'b-\',\'r\',\'g-\',\'c-\',\'m-\',\'y-\',\'b--\',\'r--\',\'g--\',...\n\'c--\',\'m--\',\'y--\'};\nfor i=1:length(nvar)\n%\nusually = 4, nvar is seti, i=1~5, i!=4,sometimes, =3, ie,set4\nif(nargin<4)\n% usually = 5\nt2 = length(var(nvar(i)).time);\nelse\nt2 = max(find(var(nvar(i)).time<tend));\nend\n%\nif(nargin<3)\nt1 = 1;\nelse\nt1 = min(find(var(nvar(i)).time>tstart));\nend\n%\nt = [t1:t2];\n% time interval is formed\n%\nbias(i) = min(var(nvar(i)).data(t));% for normalizing.\nscale(i) = max(var(nvar(i)).data(t)) - bias(i);\nif(scale(i)==0)\nscale(i) = 1;\n% avoiding dividing by 0\nend\n%\nnstyle = mod(i-1,6)+1;\nplot(var(nvar(i)).time(t),(var(nvar(i)).data(t)-...\nbias(i))/scale(i),style{nstyle})\nhold on\nend\n%\n% Add labels, title, grid and legend\n%\nset(gca,\'FontSize\',8);\n% font of the 2 axes\ngrid on\nxlabel(\'Time (sec)\');\nif ( length(nvar) == 1 )\n\n164\n\nylabel([var(nvar(i)).name, \' (\', var(nvar(i)).unit, \') \']);\nelse\nylabel(\'Data\')\nfor i=1:length(nvar)\nmintext = num2str(bias(i));\nmaxtext = num2str(bias(i)+scale(i));\n%\nlegendtext{i}=[var(nvar(i)).name, \' (\',mintext,\' to \',...\nmaxtext, \' \', var(nvar(i)).unit, \') \'];\nend\n[hnd,ohnd] = legend(legendtext,0); % forming the legend parameters\nlen=length(ohnd);\nfor j=1:len\nif ( get(ohnd(j),\'Type\') == \'text\' )\nset(ohnd(j),\'FontSize\',10);\nend\nend\nlegend(hnd) % create the legend\nend\n%\nif(nargin==5)\ntitle(tstring);\nend\nhold off\n\n165\n\nC.17. Calculate the Platform Accelerations from Accelerometers Readings\n% MATLAB program to calculate the accelerations of the motion\n% platform in 6-DOF from six accelerometers mounted on the\n% platform as shown in Fig. 2.3\n% Program name: accPlatform.m. Date: Feb. 2000\nclear all\nfid=fopen(\'12_17Rollt.txt\',\'r\');\n% 12_17Rollt.txt is a text data file with 12 columns, the last 6\n% of which store the readings from the 6 accelerometers\n%\na = fscanf(fid,\'%f\',[12,2401]);\nfclose(fid);\n%\n% positions of the accelerometers\n%\nx1=-14.5;\ny1=91.375;\nz1=-13.375;\nx2=-5.5;\ny2=0;\nz2=-9.75;\nx3=-95;\ny3=-93.125;\nz3=-12.8125;\nx4=111.875; y4=0;\nz4=-12.25;\nx5=0;\ny5=91.375;\nz5=-13.5;\nx6=-14.5;\ny6=-91.375;\nz6=-13.5;\n%\nA=[1 0 0 0 z1\n-y1;\n0 1 0 -z2 0\nx2;\n0 0 1 y3 -x3 0;\n0 0 1 y4 -x4 0;\n0 0 1 y5 -x5 0;\n1 0 0 0 z6\n-y6;];\n%\ndt=0.025;\ntmax=6*0.628-dt;\nt=0:dt:tmax;\nn=length(t);\n%\nfor i=1:n\nfor j=1:6\nbt(j)=a(j+6,i)*192.9175;\nend\nB=bt\';\nC=A\\B;\nroll(i)=C(4)*57.296;\nend\n%\nplot(t, roll),grid\nylabel(\'Roll Acc., deg/s^2)\');\nxlabel(\'Time t ,s\');\ntitle(\'Roll Acceleration vs Time for 6 Periods\');\n\n166\n\nC.18. Realization of Inverse Newton-Raphson Transformation\n% This m-file is for Newton-Raphson inverse\n% transform, i.e., calculate simulator 6 DOF\'s\n% from the actuators\' extension.\n% Program name: inverseNR.m. Date: March 2000\nclear all\n% Initialize Parameters\nleneut=3.2649;\naais(1,1)=2.1117179;\naais(2,1)=0.0762;\naais(3,1)=0;\naais(1,2)=2.1117179;\naais(2,2)=-0.0762;\naais(3,2)=0;\naais(1,3)=-0.98986594;\naais(2,3)=-1.8669;\naais(3,3)=0;\naais(1,4)=-1.12184942;\naais(2,4)=-1.7907;\naais(3,4)=0;\naais(1,5)=-1.12184942;\naais(2,5)=1.7907;\naais(3,5)=0;\naais(1,6)=-0.98986594;\naais(2,6)=1.8669;\naais(3,6)=0;\nbbii(1,1)=1.5021179;\nbbii(2,1)=1.9812;\nbbii(3,1)=2.58064;\nbbii(1,2)=1.5021179;\nbbii(2,2)=-1.9812;\nbbii(3,2)=2.58064;\nbbii(1,3)=0.96471232;\nbbii(2,3)=-2.29147116;\nbbii(3,3)=2.58064;\nbbii(1,4)=-2.46682768;\nbbii(2,4)=-0.31027116;\nbbii(3,4)=2.58064;\nbbii(1,5)=-2.46682768;\nbbii(2,5)=0.31027116;\nbbii(3,5)=2.58064;\nbbii(1,6)=0.96471232;\nbbii(2,6)=2.29147116;\nbbii(3,6)=2.58064;\nfor i = 1 : 6\nxm(i) = aais(1,i);\nym(i) = aais(2,i);\nzm(i) = aais(3,i);\n\n167\n\nxs(i) = bbii(1,i);\nys(i) = bbii(2,i);\nzs(i) = bbii(3,i);\n% raml(i) = rli(i)+leneut;\nend\n%\n% Initialize Simulator Position.\n%\nt=0;\ns=0;\np=0;\nx=0;\ny=0;\nz=0;\n%\n% Set up the \'while\' loop criteria\n%\n%it=0;\n% # of steps\nzlim1=0.01;\n%step difference criterion for\ntranslational DOFs.\nzlim2=0.1/57.296;\n%step difference criterion for angular\nDOFs.\n%\n% Set up initial to some values greater than the criteria\n%\nfid=fopen(\'rmod.txt\',\'r\');\naa = fscanf(fid,\'%f\',[6,2401]);\nfclose(fid);\n%\ndt=0.025;\ntmax=6*0.628;\ntime=0:dt:(tmax-dt);\nn=length(time);\n%\nfor ii=1:n\nfor j=1:6\nrli(j)=aa(j,ii)*0.0254;\nraml(j) = rli(j)+leneut;\nend\n%\nmax1=100;\nmax2=100;\n%\n%\nstart the loop of computation\n%\nnstep=0;\nwhile ((max1 > zlim1) | (max2 > zlim2))\na(1,1) = cos(s)*cos(t);\na(1,2) = sin(s)*cos(t);\na(1,3) = -sin(t);\na(2,1) = cos(s)*sin(t)*sin(p) - sin(s)*cos(p);\na(2,2) = sin(s)*sin(t)*sin(p) + cos(s)*cos(p);\na(2,3) = cos(t)*sin(p);\na(3,1) = cos(s)*sin(t)*cos(p) + sin(s)*sin(p);\na(3,2) = sin(s)*sin(t)*cos(p) - cos(s)*sin(p);\na(3,3) = cos(t)*cos(p);\n%\n\n168\n\nfor i = 1 : 6\nf(i)=xm(i)^2 + ym(i)^2 + zm(i)^2 + xs(i)^2 + ys(i)^2...\n+zs(i)^2 + x^2 + y^2 + z^2 - raml(i)^2...\n+2*(x-xs(i))*(xm(i)*a(1,1)+ym(i)*a(2,1)+zm(i)*a(3,1))...\n+2*(y-ys(i))*(xm(i)*a(1,2)+ym(i)*a(2,2)+zm(i)*a(3,2))...\n+2*(z-zs(i))*(xm(i)*a(1,3)+ym(i)*a(2,3)+zm(i)*a(3,3))...\n-2*(x*xs(i)+y*ys(i)+z*zs(i));\n%\npfx(i)=2*(x+xm(i)*a(1,1)+ym(i)*a(2,1)+zm(i)*a(3,1)-xs(i));\npfy(i)=2*(y+xm(i)*a(1,2)+ym(i)*a(2,2)+zm(i)*a(3,2)-ys(i));\npfz(i)=2*(x+xm(i)*a(1,3)+ym(i)*a(2,3)+zm(i)*a(3,3)-zs(i));\npfs(i)=-2*(x-xs(i))*(xm(i)*a(1,2)+ym(i)*a(2,2)+zm(i)...\n*a(3,2)+2*(y-ys(i))*(xm(i)*a(1,1)+ym(i)*a(2,1)+zm(i)...\n*a(3,1));\n%\npft(i) =2*(x-xs(i))*(-xm(i)*sin(t)*cos(s)+ym(i)*sin(p)...\n*cos(t)*cos(s)+zm(i)*cos(p)*cos(t)*cos(s))+2*(y-...\nys(i))*(-xm(i)*sin(t)*sin(s)+ym(i)*sin(p)*cos(t)...\n*sin(s)+zm(i)*cos(p)*cos(t)*sin(s))-2*(z-zs(i))...\n*(xm(i)*cos(t)+ ym(i)*sin(p)*sin(t)+zm(i)*cos(p)...\n*sin(t));\n%\npfp(i)=2*(x-xs(i))*(ym(i)*a(3,1)-zm(i)*a(2,1))+2*(y-...\nys(i))*(ym(i)*a(3,2)-zm(i)*a(2,2))+2*(z-zs(i))...\n*(ym(i)*a(3,3)-zm(i)*a(2,3));\nend\n%\na = [pfx pfy pfz pfs pft pfp];\nn=6;\ntol=0.;\nks=0;\njj=-n;\nj=1;\ncondition=0;\nfreturn=0;\nwhile ((j<=n) & (condition == 0))\njy=j+1;\njj=jj+n+1;\nbiga=0.;\nit=jj-j;\nfor i=j:n\nij=it+i;\nif abs(biga)-abs(a(ij))<0\nbiga=a(ij);\nimax=i;\nend\nend\nif abs(biga)-tol<=0\ncondition=1;\nfreturn=1;\nelse\ni1=j+n*(j-2);\nit=imax-j;\nfor k=j:n\ni1=i1+n;\ni2=i1+it;\nsave=a(i1);\n\n169\n\na(i1)=a(i2);\na(i2)=save;\na(i1)=a(i1)/biga;\nend\nsave=f(imax);\nf(imax)=f(j);\nf(j)=save/biga;\nif (j~=n)\niqs=n*(j-1);\nfor ix=jy:n\nixj=iqs+ix;\nit=j-ix;\nfor jx=jy:n\nixjx=n*(jx-1)+ix;\njjx=ixjx+it;\na(ixjx)=a(ixjx)-a(ixj)*a(jjx);\nend\nf(ix)=f(ix)-f(j)*a(ixj);\nend\nelse\ncondition=1;\nend\nend\nj=j+1;\nend\nif freturn==0\nny=n-1;\nit=n*n;\nfor j=1:ny\nia=it-j;\nib=n-j;\nic=n;\nfor k=1:j\nf(ib)=f(ib)-a(ia)*f(ic);\nia=ia-n;\nic=ic-1;\nend\nend\nelse\nks=1;\nend\n%\nif ks == 1\ndisp(\'Matrix is singular\');\nbreak;\nelse\nx = x - f(1);\ny = y - f(2);\nz = z - f(3);\ns = s - f(4);\nt = t - f(5);\np = p - f(6);\nnstep = nstep+1;\nif nstep == 51\nbreak;\nelse\nabs1=[abs(f(1)), abs(f(2)), abs(f(3))];\n\n170\n\nabs2=[abs(f(4)), abs(f(5)), abs(f(6))];\nmax1=max(abs1);\nmax2=max(abs2);\nend\nend\nend\n%\nxp(ii)=x;\nyp(ii)=y;\nzp(ii)=z;\ntp(ii)=t;\nsp(ii)=s;\npp(ii)=p;\n%\nrec_step(ii)=nstep;\nend\ndof=[x y z p t s]\';\npp=pp*57.296;\nk=0.315*0.0254*57.296; %k=0.008\nphi=3.305;\ns=k*sin(2*pi/0.628*time+phi);\ndelta=s-pp;\nsqd=0;\nfor i=1:n\nsqd=sqd+delta(i)^2;\nend\n%\nplot(time,pp,\'r\', time,s,\'g\');\ngrid\nylabel(\'Roll Displacement (deg)\');\nxlabel(\'Time t (sec)\');\ntitle(\'Roll Displacement with LSESF by Newton Raphson\n\n171\n\nvs\n\nTime\');\n\nC.19. Determine the Phase Error Between Two Signals by Curve Fit\n% fit y and yc at the range of [a b] with a curve,\n% and calculate the phase difference between signals\n% y and yc\n% Program name: phaseError.m\n%\n%\n%\n%\n%\n%\n%\n%\n\nNov., 2004\n\ny--input: sequence 1 to be fit\nyc--input: sequence 2 to be fit\nta--input: starting time (s)\ntb--input: ending time (s)\nT--input: sampling period\nd--output: y(x)=mean(y), yc(xc)=mean(yc), d=xc-x\ne--output: fitting covariance for sequence 1\nec--output: fitting covariance for sequence 2\n\nfunction [d,e,ec]=phaseError(y, yc, ta, tb, T, td)\nleny=length(y);\nt=0:T:(leny-1)*T;\na=floor(ta/T);\nb=floor(tb/T);\ntp=t(a:b)\'-t(a);\nlp=length(tp);\n%\n% frequencies of the sinusoidal functions to fit the curve\n%\nwi=[0.18850, 0.31416, 0.50265, 0.87965, 1.44513, 2.13628, 3.07876...\n4.20973, 5.78053, 8.23097, 11.24690, 15.77079, 23.93894];\nA=[ones(lp,1) tp tp.^2];\nfor i=1:length(wi)\nA(:,i+3)=sin(wi(i)*tp+i*pi/7);\nend\nB=y(a:b)\';\nC=inv(A\'*A)*A\'*B;\n%\n% calculate the covariance\n%\nyf=C(1)+C(2)*tp+C(3)*tp.^2;\nfor i=1:length(wi)\nyf=yf+C(i+3)*sin(wi(i)*tp+i*pi/7);\nend\ndy=B-yf;\ne=sum(dy.^2);\n%\nf=[num2str(C(1)) \'+\' num2str(C(2)) \'*x+\' num2str(C(3)) \'*x^2\'];\nfor i=1:length(wi)\nf=[f \'+\' num2str(C(i+3)) \'*sin(\' num2str(wi(i)) \'*x+\'\nnum2str(i*pi/7) \')\'];\nend\nf=[f \'-\' num2str(ym)];\nym=mean(B);\ndtp=max(tp)/10;\nti=0:dtp:max(tp);\nz=-1;\ni=1;\n\n172\n\nwhile z<td\nz=fzero(inline(f),ti(i));\ni=i+1;\nend\n% for ym\nBm=yc(a:b)\';\nC=inv(A\'*A)*A\'*Bm;\n%\n% calculate the covariance\n%\nyfm=C(1)+C(2)*tp+C(3)*tp.^2;\nfor i=1:length(wi)\nyfm=yfm+C(i+3)*sin(wi(i)*tp+i*pi/7);\nend\ndy=Bm-yfm;\nec=sum(dy.^2);\n%\nf=[num2str(C(1)) \'+\' num2str(C(2)) \'*x+\' num2str(C(3)) \'*x^2\'];\nfor i=1:length(wi)\nf=[f \'+\' num2str(C(i+3)) \'*sin(\' num2str(wi(i)) \'*x+\'\nnum2str(i*pi/7) \')\'];\nend\nf=[f \'-\' num2str(ym)];\nzc=-1;\ni=1;\nwhile zc<0\nzc=fzero(inline(f),ti(i));\ni=i+1;\nend\nd=z-zc;\nd=floor(d*1000+0.5)/1000;Time\');\n\n173\n\nC.20. Calculate the Platform Accelerations from Accelerometers Readings (C++)\n/* C++ program to calculate the accelerations of the motion\nplatform in 6-DOF from six accelerometers mounted on the\nplatform as shown in Fig. 2.3\n*/\n\n// Program name: main.cpp,ReadDataFile.h & ReadDataFile.cpp, Nov., 2000\n\n/* main.cpp */\n//\n#include <iostream.h>\n#include <fstream.h>\n#include <stdio.h>\n#include "ReadDataFile.h"\nint main()\n{\nReadDataFile Solution;\ncout << "Start Reading Data\\n\\n";\nSolution.get_data();\nreturn 1;\n}\n/* ReadDataFile.h */\n//\n#ifndef __POPULATION_H\n#define __POPULATION_H\n#include <iostream.h>\n#include <stdlib.h>\n#include <math.h>\nclass ReadDataFile\n{\ndouble xx[3], yy[3], zz[3];\ndouble crame(double *xx, double *yy, double *zz);\npublic:\nvoid get_data();\nReadDataFile();\ndouble A[6],A1, A2, A3, A4, A5, A6, AA[2400][12];\ndouble x[6], y[6], z[6], den, num, a1, a2, a3, t1, t2, t3;\n};\n#endif\n\n/* ReadDataFile.h */\n\n174\n\n//\n#include\n#include\n#include\n#include\n#include\n\n<iostream.h>\n<fstream.h>\n<stdio.h>\n<stdlib.h>\n"ReadDataFile.h"\n\nReadDataFile :: ReadDataFile()\n{\n}\n// function to calculate the determinant for using Crame rule.\ndouble ReadDataFile :: crame(double *c1, double *yy, double *zz)\n{\ndouble sum;\nsum=c1[0]*yy[1]*zz[2]+yy[0]*zz[1]*c1[2]+zz[0]*c1[1]*yy[2]\n-c1[2]*yy[1]*zz[0]-yy[2]*zz[1]*c1[0]-zz[2]*c1[1]*yy[0];\nreturn sum;\n}\nvoid ReadDataFile ::\n{\nint i,j;\nfloat col[12];\n\nget_data()\n\n// Set the coordinates of the 6 accelerometers\nx[0]=-14.5; y[0]=91.375;\nx[1]=-5.5; y[1]=0;\nx[2]=-95; y[2]=-93.125;\nx[3]=111.875; y[3]=0;\nx[4]=0; y[4]=91.375;\nx[5]=-14.5; y[5]=-91.375;\nz[0]=-13.375;\nz[1]=-9.75;\nz[2]=-12.8125;\nz[3]=-12.25;\nz[4]=-13.5;\nz[5]=-13.5;\nfor (i=0; i<3; i++)\n{\nxx[i]=1;\nyy[i]=y[i+2];\nzz[i]=-x[i+2];\n}\nden=crame(xx, yy, zz);\nifstream fin("12_17Xt.txt");\nFILE *stream;\nstream = fopen( "xoutpt.txt", "w" );\n\n175\n\n// The total number of steps is 2400\nfor (j = 0; j <= 2400; j++)\n{\n// The original data file has 12 columns\nfor (i=0; i<12; i++)\n{\nfin >> col[i];\n}\n// the last 6 columns are sensed accelerations\nfor (i=0; i<6; i++)\n{\nA[i]=col[i+6]*192.9175;\n}\n// Calculate vertical acceleration t3\nfor (i=0; i<3; i++)\n{\nxx[i]=A[i+2];\nyy[i]=y[i+2];\nzz[i]=-x[i+2];\n}\nnum=crame(xx, yy, zz);\nt3=num/den;\nt3 = t3*57.296; // Converting to degree/s^2\ncout << "Translational acceleration t3: " << t3 << "\\n";\n// Calculate roll acceleration a1\nfor (i=0; i<3; i++)\n{\nyy[i]=xx[i];\nxx[i]=1;\n}\nnum=crame(xx, yy, zz);\na1=num/den;\na1=a1/385.835;\n// Converting to value in terms of g\n// Calculate pitch acceleration a2\nfor (i=0; i<3; i++)\n{\nzz[i]=yy[i];\nyy[i]=y[i+2];\n}\nnum=crame(xx, yy, zz);\na2=num/den;\na2=a2/385.835;\n// Converting to value in terms of g\n// Calculate yaw acceleration a3\na3 = (A[0]-A[5]-(z[0]-z[5])*a2)/(y[5]-y[0]);\na3=a3/385.835;\n// Converting to value in terms of g\n\n176\n\n// Calculate longitudinal acceleration t1\nt1 = A[0]+(A[0]-A[5]-(z[0]-z[5])*a2)/(y[5]-y[0])*y[0]z[0]*a2;\nt1 = t1*57.296; // Converting to degree/s^2\n// Calculate the lateral acceleration t2\nt2 = A[1]-x[1]*a3+z[1]*a1;\nt2 = t2*57.296; // Converting to degree/s^2\n// Save the 6 accelerations into a file\nfprintf( stream, "%f %f %f %f %f %f\\n",t1,t2,t3,a1,a2,a3);\n}\nfclose( stream );\n\n}\n\n177\n\nReferences\n\n1\n\nGuo L., Cardullo, F.M., and Kelly, L.C., \xe2\x80\x9cAdvanced Control Algorithms for\nCompensating the Phase Distortion Due to Transport Delay in Human-Machine\nSystems\xe2\x80\x9d, NASA CR 2007-215095, 2007\n2\nHorowitz, S. C., \xe2\x80\x9cMeasurements and Effects of Transport Delays in a State-of-the-Art\nF-16C Flight simulator\xe2\x80\x9d, (AFHRL-TP-87-11), Brooks Air Force Base, TX: Air Force\nHuman Resources Laboratory\n3\nNiemeyer, G. E., and Dougherty, B., \xe2\x80\x9cMeasurement of Flight Simulator Time Delays\xe2\x80\x9d,\n4\nHorowitz, S. C., \xe2\x80\x9cMeasurements and Effects of Transport Delays in a State-of-the-Art\nF-16C Flight simulator\xe2\x80\x9d, (AFHRL-TP-87-11), Brooks Air Force Base, TX: Air Force\nHuman Resources Laboratory\n5\nSmith, R.M., \xe2\x80\x9cA Method for Determining Transport Delays in the Flight Simulation\nEnvironment\xe2\x80\x9d, AIAA Flight Simulation Technologies Conference, 1991, New Orleans\n6\nGalloway, R.T., and Smith R.B., \xe2\x80\x9cCue Synchronization Measurement Using the Piloted\nFrequency Sweep Technique\xe2\x80\x9d, Proceedings of the 17th I/ITSEC, Nov 13-16, pp786-196\n7\nWolters, T.E, \xe2\x80\x9cResearch Flight Deck Transport Delay Study\xe2\x80\x9d, Simulation Systems\nBranch, Simulation and Research Aircraft division\n8\nParrish, R.V., Dieudonne, J.E., Martin, D.J., Jr., and Copeland, J.L., \xe2\x80\x9cCompensation\nBased on Linearized Analysis for a Six-Degree-of-Freedom Motion Simulator,\xe2\x80\x9d NASA\nTND-7349, 1973.\n9\nParrish, R.V., Dieudonne, J.E., and Martin, D.J., Jr., \xe2\x80\x9cMotion Software for a Synergistic\nSix-Degree-of-Freedom Motion Base,\xe2\x80\x9d NASA TND-7350, 1973.\n10\nTelban, R.J., "New Human-Centered Linear and Nonlinear Motion Cueing Algorithms\nfor Simulator Motion System", State University of New York at Binghamton.\nBinghamton, NY, 2003.\n11\nHart, S.G., and Staveland, L.E. (1988). \xe2\x80\x9cDevelopment of a Multi-dimensional\nWorkload Rating Scale: Results of Empirical and Theoretical Research\xe2\x80\x9d, In P. A.\nHancock, and Meshkati, N. (Ed.), Human Mental Workload. Amsterdam, The\nNetherlands: Elsevier.\n12\nMiddendorf, M..M., Fiorita, A.L., and McMillan G.R., \xe2\x80\x9cThe Effects of Simulator\nTransport Delay on Performance, Workload, and Control Activity\xe2\x80\x9d, AIAA-91-2965,\n1991\n13\nPorat B., \xe2\x80\x9cA Course in Digital Signal Processing\xe2\x80\x9d, John Wiley & Sons, Inc, 1996\n14\n\nHu, G., \xe2\x80\x9cDigital Signal Processing\xe2\x80\x9d, Press of Tsinghua University, 2000\n\n15\n\nPress, W.H., Teukolsky, S.A., Vetterling, W.T., and Flannery, B.P., \xe2\x80\x9cNumerical\nRecipes in C++\xe2\x80\x9d, Cambridge University Press, 2002\n\n178\n\nForm Approved\nOMB No. 0704-0188\n\nREPORT DOCUMENTATION PAGE\n\nThe public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources,\ngathering and maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this\ncollection of information, including suggestions for reducing this burden, to Department of Defense, Washington Headquarters Services, Directorate for Information Operations and\nReports (0704-0188), 1215 Jefferson Davis Highway, Suite 1204, Arlington, VA 22202-4302. Respondents should be aware that notwithstanding any other provision of law, no person\nshall be subject to any penalty for failing to comply with a collection of information if it does not display a currently valid OMB control number.\nPLEASE DO NOT RETURN YOUR FORM TO THE ABOVE ADDRESS.\n\n1. REPORT DATE (DD-MM-YYYY)\n\n2. REPORT TYPE\n\n01- 12 - 2007\n\n3. DATES COVERED (From - To)\n\nContractor Report\n\n4. TITLE AND SUBTITLE\n\n5a. CONTRACT NUMBER\n\nAdvanced Transport Delay Compensation Algorithms: Results of Delay\nMeasurement and Piloted Performance Tests\n\nNNL06AA74T\n5b. GRANT NUMBER\n5c. PROGRAM ELEMENT NUMBER\n5d. PROJECT NUMBER\n\n6. AUTHOR(S)\n\nGuo, Liwen; Cardullo, Frank M.; and Kelly, Lon C.\n5e. TASK NUMBER\n5f. WORK UNIT NUMBER\n\n160961.01.01.01\n7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES)\n\n8. PERFORMING ORGANIZATION\nREPORT NUMBER\n\nNASA Langley Research Center\nHampton, VA 23681-2199\n\n9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES)\n\n10. SPONSOR/MONITOR\'S ACRONYM(S)\n\nNational Aeronautics and Space Administration\nWashington, DC 20546-0001\n\nNASA\n11. SPONSOR/MONITOR\'S REPORT\nNUMBER(S)\n\nNASA/CR-2007-215096\n12. DISTRIBUTION/AVAILABILITY STATEMENT\n\nUnclassified - Unlimited\nSubject Category 54\nAvailability: NASA CASI (301) 621-0390\n13. SUPPLEMENTARY NOTES\n\nLangley Technical Monitor: Jacob A. Houck\nAn electronic version can be found at http://ntrs.nasa.gov\n14. ABSTRACT\nThis report summarizes the results of delay measurement and piloted performance tests that were conducted to assess the effectiveness of the adaptive\ncompensator and the state space compensator for alleviating the phase distortion of transport delay in the visual system in the VMS at the NASA Langley\nResearch Center. Piloted simulation tests were conducted to assess the effectiveness of two novel compensators in comparison to the McFarland predictor and\nthe baseline system with no compensation. Thirteen pilots with heterogeneous flight experience executed straight-in and offset approaches, at various delay\nconfigurations, on a flight simulator where different predictors were applied to compensate for transport delay. The glideslope and touchdown errors, power\nspectral density of the pilot control inputs, NASA Task Load Index, and Cooper-Harper rating of the handling qualities were employed for the analyses. The\noverall analyses show that the adaptive predictor results in slightly poorer compensation for short added delay (up to 48 ms) and better compensation for long\nadded delay (up to 192 ms) than the McFarland compensator. The analyses also show that the state space predictor is fairly superior for short delay and\nsignificantly superior for long delay than the McFarland compensator.\n\n15. SUBJECT TERMS\n\nDelay Compensation Algorithm; Flight Simulation; Simulator; Transport Delay; Visual System\n\n16. SECURITY CLASSIFICATION OF:\na. REPORT\n\nU\n\nb. ABSTRACT c. THIS PAGE\n\nU\n\nU\n\n17. LIMITATION OF\nABSTRACT\n\nUU\n\n18. NUMBER 19a. NAME OF RESPONSIBLE PERSON\nOF\nSTI Help Desk (email: help@sti.nasa.gov)\nPAGES\n19b. TELEPHONE NUMBER (Include area code)\n\n196\n\n(301) 621-0390\nStandard Form 298 (Rev. 8-98)\nPrescribed by ANSI Std. Z39.18\n\n'