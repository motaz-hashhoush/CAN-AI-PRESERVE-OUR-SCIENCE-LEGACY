b"NASA/TM\xe2\x80\x942011-216340\n\nCollocation and Galerkin Time-Stepping Methods\nH.T. Huynh\nGlenn Research Center, Cleveland, Ohio\n\nAugust 2011\n\nNASA STI Program . . . in Profile\n\nSince its founding, NASA has been dedicated to the\nadvancement of aeronautics and space science. The\nNASA Scientific and Technical Information (STI)\nprogram plays a key part in helping NASA maintain\nthis important role.\nThe NASA STI Program operates under the auspices\nof the Agency Chief Information Officer. It collects,\norganizes, provides for archiving, and disseminates\nNASA\xe2\x80\x99s STI. The NASA STI program provides access\nto the NASA Aeronautics and Space Database and\nits public interface, the NASA Technical Reports\nServer, thus providing one of the largest collections\nof aeronautical and space science STI in the world.\nResults are published in both non-NASA channels\nand by NASA in the NASA STI Report Series, which\nincludes the following report types:\n\t\n\xe2\x80\xa2\t TECHNICAL PUBLICATION. Reports of\ncompleted research or a major significant phase\nof research that present the results of NASA\nprograms and include extensive data or theoretical\nanalysis. Includes compilations of significant\nscientific and technical data and information\ndeemed to be of continuing reference value.\nNASA counterpart of peer-reviewed formal\nprofessional papers but has less stringent\nlimitations on manuscript length and extent of\ngraphic presentations.\n\t\n\xe2\x80\xa2\t TECHNICAL MEMORANDUM. Scientific\nand technical findings that are preliminary or\nof specialized interest, e.g., quick release\nreports, working papers, and bibliographies that\ncontain minimal annotation. Does not contain\nextensive analysis.\n\t\n\xe2\x80\xa2\t CONTRACTOR REPORT. Scientific and\ntechnical findings by NASA-sponsored\ncontractors and grantees.\n\n\xe2\x80\xa2\t\n\n\t\n\xe2\x80\xa2\t\n\n\t\n\xe2\x80\xa2\t\n\nCONFERENCE PUBLICATION. Collected\npapers from scientific and technical\nconferences, symposia, seminars, or other\nmeetings sponsored or cosponsored by NASA.\nSPECIAL PUBLICATION. Scientific,\ntechnical, or historical information from\nNASA programs, projects, and missions, often\nconcerned with subjects having substantial\npublic interest.\nTECHNICAL TRANSLATION. Englishlanguage translations of foreign scientific and\ntechnical material pertinent to NASA\xe2\x80\x99s mission.\n\nSpecialized services also include creating custom\nthesauri, building customized databases, organizing\nand publishing research results.\nFor more information about the NASA STI\nprogram, see the following:\n\xe2\x80\xa2\t\n\t\n\xe2\x80\xa2\t\n\t\n\xe2\x80\xa2\t\n\nAccess the NASA STI program home page at\nhttp://www.sti.nasa.gov\nE-mail your question via the Internet to help@\nsti.nasa.gov\nFax your question to the NASA STI Help Desk\nat 443\xe2\x80\x93757\xe2\x80\x935803\n\n\t\n\xe2\x80\xa2\t Telephone the NASA STI Help Desk at\n\t443\xe2\x80\x93757\xe2\x80\x935802\n\t\n\xe2\x80\xa2\t Write to:\nNASA Center for AeroSpace Information (CASI)\n7115 Standard Drive\nHanover, MD 21076\xe2\x80\x931320\n\nNASA/TM\xe2\x80\x942011-216340\n\nCollocation and Galerkin Time-Stepping Methods\nH.T. Huynh\nGlenn Research Center, Cleveland, Ohio\n\nPrepared for the\n19th Computational Fluid Dynamics Conference\nsponsored by the American Institute of Aeronautics and Astronautics\nSan Antonio, Texas, June 22\xe2\x80\x9325, 2009\n\nNational Aeronautics and\nSpace Administration\nGlenn Research Center\nCleveland, Ohio 44135\n\nAugust 2011\n\nLevel of Review: This material has been technically reviewed by technical management.\n\nAvailable from\nNASA Center for Aerospace Information\n7115 Standard Drive\nHanover, MD 21076\xe2\x80\x931320\n\nNational Technical Information Service\n5301 Shawnee Road\nAlexandria, VA 22312\n\nAvailable electronically at http://www.sti.nasa.gov\n\nCollocation and Galerkin Time-Stepping Methods\nH.T. Huynh\nNational Aeronautics and Space Administration\nGlenn Research Center\nCleveland, Ohio 44135\n\nAbstract\nWe study the numerical solutions of ordinary differential equations by one-step methods where the\nsolution at tn is known and that at tn+1 is to be calculated. The approaches employed are collocation,\ncontinuous Galerkin (CG) and discontinuous Galerkin (DG). Relations among these three approaches are\nestablished. A quadrature formula using s evaluation points is employed for the Galerkin formulations.\nWe show that with such a quadrature, the CG method is identical to the collocation method using\nquadrature points as collocation points. Furthermore, if the quadrature formula is the right Radau one\n(including tn+1), then the DG and CG methods also become identical, and they reduce to the Radau IIA\ncollocation method. In addition, we present a generalization of DG that yields a method identical to CG\nand collocation with arbitrary collocation points. Thus, the collocation, CG, and generalized DG methods\nare equivalent, and the latter two methods can be formulated using the differential instead of integral\nequation. Finally, all schemes discussed can be cast as s-stage implicit Runge-Kutta methods.\n\n1.0\n\nIntroduction\n\nCollocation is an idea widely applicable to numerical analysis. In the case of numerical solutions for\ndifferential equations (or time-stepping schemes), for the one-step methods where the data un at tn is\nknown and the solution un+1 at tn+1 is to be calculated, the collocation approach can be formulated as\nfollows (e.g., Hairer, Norsett, and Wanner 1987, Lambert 1991). The solution is first approximated on\n[tn, tn+1] by a polynomial P of degree s (for s-stage) interpolating the solution values at s points on\n[tn, tn+1] called collocation points together with the value un at tn. The polynomial P is determined by\nrequiring that it satisfies the differential equation at the s collocation points. The solution un+1 is given by\nP(tn+1). For these methods, their accuracy and stability are determined by the choice of collocation points.\nFor example, if the s points are chosen to be the Gauss, Radau, or Lobatto points, then the resulting\nmethod is accurate to order 2s, 2s \xe2\x80\x93 1, or 2s \xe2\x80\x93 2, respectively. Collocation methods were studied in\n(Cooper 1968, Axelsson 1969). Wright (1970) showed that the collocation process leads to an s-stage\nimplicit Runge-Kutta (IRK) method. His proof will be reproduced and utilized here.\nThe Galerkin method was introduced in 1915 for the elastic equilibrium of rods and thin plates (Fletcher\n1984). It was employed to solve ordinary differential equations by Hulme (1972). An introduction to both\ncontinuous Galerkin (CG) and discontinuous Galerkin (DG) methods for differential equations can be found\nin (Eriksson et al. 1996). The CG method seeks to approximate the solution by a continuous function which,\non each interval [tn, tn+1], is a polynomial of degree s. This polynomial is determined by requiring that on\n[tn, tn+1], the weak form of the differential equation holds for all test functions that are polynomials of degree\ns vanishing at tn. Hulme (1972) showed that if an s-point quadrature formula is employed, then the resulting\nCG method is equivalent to a collocation method provided that the step size is bounded by certain norms to\nensure the uniqueness of both solutions\xe2\x80\x94a condition which will be removed here. (Solution uniqueness is\nnot always available, e.g., for the three-dimensional Navier-Stokes equations, the problem of existence and\nuniqueness of the solution is still open.)\nThe discontinuous Galerkin method (DG) is currently popular for the spatial discretization of\nconservation laws (see the review paper by Cockburn, Karniadakis, and Shu, 2000). Formulated for\ndifferential equations by LeSaint and Raviart (1974), the DG method seeks to approximate the solution by\na function, which can be discontinuous across tn, and is a polynomial of degree k on each [tn, tn+1]. At each\ntn where the solution is discontinuous, the value chosen is that just to its left\xe2\x80\x94for conservation laws, such\nNASA/TM\xe2\x80\x942011-216340\n\n1\n\na choice is called \xe2\x80\x98upwinding\xe2\x80\x99; it serves the purpose of adding numerical dissipation and results in a more\nstable method. Here, after an integration by parts, this upwind value is employed to evaluate the boundary\nterm. The polynomial of degree k representing the solution is determined by requiring that on [tn, tn+1], the\nweak form of the differential equation (after the integration by parts) holds for all test functions that are\npolynomials of degree k. Using a quadrature formula with k + 1 evaluations including an evaluation at the\nleft boundary tn, LeSaint and Raviart showed that the DG formulation results in a (k + 1)-stage implicit\nRunge-Kutta (IRK) method accurate to order 2k +1 or less. In addition, they proved the strong A-stability\nproperty (see also Bauer 1995). The method was generalized by employing the boundary values to the\nright of tn+1 in (Delfour, Hager, and Trochu 1981). The relation between DG and collocation methods,\nhowever, has not been established. On a different but related subject, it was proven in (Adjerid et al.\n2002) that for conservation laws, the DG method is superconvergent to order 2k +1 at the \xe2\x80\x9cdownwind\xe2\x80\x9d\nboundary of each cell. Concerning the basic formulation, it was shown in (Huynh 2007) that for\nconservation laws (on a quadrilateral mesh), the DG method can be formulated using the differential\nform, and the result is a simple and economical algorithm.\nIn this paper, we first prove that if an s-point quadrature formula is employed, then the CG method\nusing polynomials of degree s is identical to the collocation method using the s quadrature points as\ncollocation points; in other words, the condition on the step size being small enough in (Hulme 1972) is\nremoved. Our proof is constructive; in addition, it shows the equivalence of the integral and differential\nforms: with appropriate choices of basis functions, one set for the space of trial solutions and another for\nthe space of test functions, the CG (integral) formulation is shown to result in a collocation (differential)\nformulation. In contrast, a typical CG formulation employs (essentially) the same basis functions for the\ntrial and test spaces. Next, we show that if the quadrature formula is the right Radau one (including the\nright boundary tn+1), then the DG and CG methods also become identical, and they reduce to a collocation\nmethod called Radau IIA. Compared to the proof of the fact that the DG method can be cast in the form of\nIRK by LeSaint and Raviart, our proof is more direct and leads to a specific member of the IRK class,\nnamely, Radau IIA. In addition, it results in a formulation of DG using the differential instead of integral\nequation. Such a formulation can simplify the time discretization of the space-time DG scheme (for\nstandard space-time DG methods, see (Van der Vegt and Van der Ven 2002)). Finally, we generalize the\nDG formulation in a manner that the resulting method becomes identical to CG. Our approach to this\ngeneralization does not involve the value to the right of tn+1; therefore, it is simpler than the approach of\nDelfour, Hager, and Trochu (1981).\nMost papers on this subject are written in a highly concise manner. Often, readers can find the\nmotivation and meaning of a technique or an equation only after plowing through complicated algebraic\nexpressions. Such conciseness may make for an elegant style; however, it can sometimes cause\nmisunderstanding. For example, in (Delfour et al. 1981), it was stated that their generalized DG method\nhas the property of \xe2\x80\x9csuperconvergence of order 2k +1\xe2\x80\x9d where k is the degree of the discontinuous\npiecewise polynomial. Concerning the CG method discussed by Hulme (1972), they stated: \xe2\x80\x9cNote,\nhowever, that these continuous approximations have order 2k at the mesh points instead of 2k +1\xe2\x80\x9d. It will\nbe shown here that the CG method is, in fact, more accurate than DG: if s is the number of stages for the\nresulting IRK method, then, concerning highest attainable accuracy, CG is of order 2s, whereas DG, order\n2s \xe2\x80\x93 1. To put it differently, for highest accuracy, CG corresponds to the Gauss quadrature, whereas DG,\nthe right Radau one; as a result, CG is more accurate than DG. Note that for stiff problems, an even more\ncritical criterion is stability, and here, the DG or right Radau collocation method is more advantageous.\nThis paper is written in an expository manner since several different methods are involved, and a\ntypical reader may be unfamiliar with one or more of them. Another goal of the expository style is to\navoid misunderstanding. The paper is organized as follows: the collocation method is discussed in Section\n2.0; CG in Section 3.0; and DG in Section 4.0. A brief review of Legendre and Radau polynomials and a\nfew examples of collocation methods can be found in the Appendices.\nWe now set up the problem and introduce notations and techniques common to all methods. Note that\nthe methods discussed here can be applied to systems of equations; for simplicity of notation, we deal\nonly with the scalar case. Consider the ordinary differential equation (ODE)\nNASA/TM\xe2\x80\x942011-216340\n\n2\n\nu\xe2\x80\xb2 (t ) = f (t , u (t ))\n\n(1.1)\n\nu (t0 ) = u0 .\n\n(1.2)\n\nwith the initial condition\n\nLet h be the step size and tn = t0 + nh where n = 0,1,\xe2\x80\xa6,N. Recall that a one-step method uses one starting\nvalue for each step; i.e., the data un at time tn is assumed to be known; the method provides a solution un+1\nat tn+1. For n = 0, un is the initial condition u0 in (1.2). Note that these methods can be applied to a variable\nstep size hn; the assumption of constant step size is only for convenience.\nThe following two well-known special cases are illuminating. For the first case, f depends only on t:\n\nu \xe2\x80\xb2 (t ) = f (t ) .\n\n(1.3)\n\nThe exact solution is\nu (t ) = u0 +\n\nt\n\n\xe2\x88\xabt\n\nf (\xcf\x84) d\xcf\x84 .\n\n0\n\n(1.4)\n\nIf un is known, the exact un+1 is\nu n +1, exact = u n +\n\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nf (t ) dt .\n\n(1.5)\n\nThus, each one-step method results in a quantity un+1 \xe2\x80\x93 un, which is a quadrature formula approximating\nthe integral above.\nFor the second case, f = \xce\xbbu where \xce\xbb is a complex constant; therefore,\n\nu \xe2\x80\xb2 (t ) = \xce\xbb u (t ) .\n\n(1.6)\n\nu (t ) = u0 e \xce\xbb (t \xe2\x88\x92 t 0 ) .\n\n(1.7)\n\nun +1, exact = un e \xce\xbb h .\n\n(1.8)\n\nThe exact solution is again obvious:\n\nIf un is known, the exact un+1 is given by\n\nEach one-step method yields a solution un+1. Define the stability function R by\n\nu n +1 = u n R (\xce\xbb h) .\n\n(1.9)\n\nThen with z = \xce\xbbh, (1.8) implies R(z) approximates ez. If the method is of order p, then the local error is\n\nE ( z ) = e z \xe2\x88\x92 R( z ) = O( z p +1 ) .\n\n(1.10)\n\nIn other words,\n\nR( z ) = 1 + z +\n\nNASA/TM\xe2\x80\x942011-216340\n\nz2\nzp\n+ ... +\n+ O( z p +1 ) .\np!\n2!\n\n3\n\n(1.11)\n\nThe converse, however, does not hold: due to nonlinear errors, (1.10) or (1.11) does not imply that the\nmethod is of order p. (Note that the quantities O(zp+1) in (1.10) and (1.11) are different from each other).\nThe stability domain is\n\nS = { complex number z such that R ( z ) \xe2\x89\xa4 1 } .\nWith z = \xce\xbbh, the solution for (1.6) after n steps is un = u0 R(z)n. If z is in S, then |R(z)n| \xe2\x89\xa4 1; therefore,\n|un| \xe2\x89\xa4 |u0| for all n, i.e., the solution is bounded for all time. Next, a method is A-stable if the\ncorresponding S contains the left half of the complex plane:\n\nS \xe2\x8a\x83\n\n{ z ; Re( z )\n\n\xe2\x89\xa4 0} .\n\n(1.12)\n\nAn A-stable method (such as the trapezoidal rule (B.3) below) can have the following property, which is\nnot always desirable,\n\nlim\n\nz\xe2\x86\x92\xe2\x88\x9e\n\nR( z ) = 1 .\n\nWith such a property, for an exact solution that damps quickly (say, e\xe2\x80\x931000t), the approximate solution\ndamps very slowly. A more desirable property is L-stability: a method is L-stable if it is A-stable and\n\nlim\n\nz\xe2\x86\x92\xe2\x88\x9e\n\nR( z ) = 0 .\n\n(1.13)\n\nL-stability implies that the method is suitable for stiff problems (the \xce\xbb values or eigenvalues of a stiff\nproblem have magnitudes in a wide range, from very small to very large).\nThe following rescaling technique is employed extensively below. Denote In = [tn,tn+1] and I = [0,1].\nInstead of In, it is often more convenient to work with I. For t on In, set\n\n\xcf\x84 = (t \xe2\x88\x92 tn ) h .\n\n(1.14a)\n\nt = tn + \xcf\x84 h .\n\n(1.14b)\n\nThen \xcf\x84 varies on I. The inverse maps I onto In,\n\n\xcb\x86\n\xcb\x86\nEach function g(t) on In corresponds to a function g (\xcf\x84) on I, namely, g (\xcf\x84) = g ( t n + \xcf\x84 h ) . Here, we use\n\xcb\x86\nthe notation g(tn + \xcf\x84h) instead of g . Denoting g\xe2\x80\xb2 = dg/dt, we have, by the chain rule,\nd\ndg (t )\ng (t n + \xcf\x84 h) = h\n= h g \xe2\x80\xb2(t ) .\nd\xcf\x84\ndt\n\n(1.15)\n\nAs for integrals,\nt n+1\n\n\xe2\x88\xabt\n2.0\n\nn\n\ng (t ) dt = h\n\n1\n\n\xe2\x88\xab 0 g (tn + \xcf\x84 h) d\xcf\x84 .\n\n(1.16)\n\nCollocation Methods\n\nTo describe these methods, let ci, i = 1,\xe2\x80\xa6,s be (collocation) points in ascending order on I,\n\n0 \xe2\x89\xa4 ci \xe2\x89\xa4 1 and ci < c j for i < j .\n\nNASA/TM\xe2\x80\x942011-216340\n\n4\n\n(2.1)\n\nLet the collocation points on In be defined by\n\nt n, i = t n + ci h .\n\n(2.2)\n\nSuppose, for the moment, the solution values un,i at tn,i, i = 1,\xe2\x80\xa6,s, are known. These s values together with\nthe value un at tn determine a polynomial P = P(t) of degree s (the case c1 = 0 will be discussed later),\n\nP (t n ) = u n\n\n(2.3)\n\nP (t n, i ) = u n, i .\n\n(2.4)\n\nand, for i = 1,\xe2\x80\xa6,s,\n\nThe quantities P\xe2\x80\xb2(tn,i) = (dP/dt)(tn,i) and f (tn,i,un,i) can then be evaluated for i = 1,\xe2\x80\xa6,s. The collocation\nmethod seeks a polynomial P that satisfies the following implicit equations: for i = 1,\xe2\x80\xa6,s,\n\nP\xe2\x80\xb2(t n, i ) = f (t n, i , u n, i ) = f (t n, i , P(t n, i ))\n\n(2.5)\n\nOnce P is determined, the solution at tn+1 is given by\n\nu n +1 = P (t n +1 ) .\n\n(2.6)\n\nTwo remarks are in order. First, the approximating polynomials for u and f of the ODE are of different\ndegrees. Indeed, if u is approximated by P of degree s, then u\xe2\x80\xb2 is approximated by P\xe2\x80\xb2 of degree s \xe2\x80\x93 1.\nSince u\xe2\x80\xb2 = f, we wish to approximate f by a polynomial of degree s \xe2\x80\x93 1. For the collocation method, this\npolynomial is determined by the values of f at tn,1,\xe2\x80\xa6,tn,s (and not the value at tn). As an example, for the\nequation u\xe2\x80\xb2 = \xce\xbbu, the function u of the left hand side is approximated by P, whereas, u of the right hand\nside, by the values at the collocation points tn,1,\xe2\x80\xa6,tn,s (a polynomial of degree s \xe2\x80\x93 1).\nThe second remark concerns the case c1 = 0. Here, the derivative P\xe2\x80\xb2(tn,1) = P\xe2\x80\xb2(tn) = f (tn,un) can be\ncalculated explicitly. Therefore, P is determined by (2.5) with i = 2,\xe2\x80\xa6,s and\n\nP (t n ) = u n and P\xe2\x80\xb2(t n ) = f (t n , u n ) .\n\n2.1\n\n(2.7)\n\nCollocation and Implicit Runge-Kutta (IRK) Methods\n\nIt was shown by Wright (1970) that the above collocation method results in an s-stage IRK method.\nThe proof of this fact (Lambert 1991) is reproduced below since it will be employed for our proof of\nequivalence between CG and collocation methods. It amounts to expressing P\xe2\x80\xb2 in terms of certain basis\nfunctions and then integrating P\xe2\x80\xb2 to obtain P in IRK form.\nConsider the s collocation points c1,\xe2\x80\xa6,cs on [0,1]. The values (of a function) at these points determine\na polynomial of degree s \xe2\x80\x93 1. With i fixed, 1 \xe2\x89\xa4 i \xe2\x89\xa4 s, let Li(\xcf\x84) be the Lagrange polynomial of degree s \xe2\x80\x93 1\ndefined by Li(cj) = \xce\xb4ij for j = 1,\xe2\x80\xa6,s; i.e., Li takes value 1 at \xcf\x84 = ci and 0 at all other cj, j \xe2\x89\xa0 i (see Fig. 2.1),\nL i (\xcf\x84) =\n\ns\n\n\xe2\x88\x8f\n\nj =1, j \xe2\x89\xa0 i\n\n\xcf\x84\xe2\x88\x92cj\nci \xe2\x88\x92 cj\n\n.\n\nThen Li, 1 \xe2\x89\xa4 i \xe2\x89\xa4 s, form a basis for the space of polynomials of degree s \xe2\x80\x93 1 on [0,1].\n\nNASA/TM\xe2\x80\x942011-216340\n\n5\n\n(2.8)\n\n1.5\n1\n0.5\n\nL1\n\n0.2\n\nL1\n\n1\n\nc2\n\nc1\n\n1.5\n\nL3\n\nL2\n\n0.4\n\n0.5\n\nc3\n0.6\n\n0.8\n\n1\n\nc1\n\nL2\n\n\xcf\x84\n\n-0.5\n\nc2\n0.4\n\n0.2\n\n0.6\n\n0.8\n\n1\n\n\xcf\x84\n\n-0.5\n\n(a)\n(b)\nFigure 2.1.\xe2\x80\x94(a) Functions Lj, j = 1,2,3 for the case of 3 Gauss points (s = 3) as collocation points on the interval\nI = [0,1]. (b) The same functions for the case of 2 right Radau points (c2 = 1).\n\nFor i = 1,\xe2\x80\xa6,s, set\n\nki = f (t n, i , u n, i ) .\n\n(2.9)\n\nNext, observe that P\xe2\x80\xb2 = dP/dt is a polynomial of degree s \xe2\x80\x93 1. Using j for the index instead of i (the reason\nfor this switch will be clear in (2.11)), since P\xe2\x80\xb2 interpolates the s data points (tn + cjh,kj),\nP\xe2\x80\xb2(t n + \xcf\x84 h) =\n\ns\n\n\xe2\x88\x91 j =1\n\nL j (\xcf\x84) k j .\n\n(2.10)\n\nConcerning the above left hand side, with t = tn + \xcf\x84h, we have\nh\n\nci\n\n\xe2\x88\xab0\n\nP\xe2\x80\xb2(t n + \xcf\x84 h) d\xcf\x84 =\n\nt n + ci h\n\n\xe2\x88\xabt\n\nn\n\nP\xe2\x80\xb2(t ) dt = P(t n + ci h) \xe2\x88\x92 P(t n ) .\n\nEquation (2.10) then implies, for the i-th stage,\nP(t n + ci h) \xe2\x88\x92 P(t n ) = h\n\nci\n\n\xef\xa3\xac\n\xe2\x88\x91 j =1 \xef\xa3\xab \xe2\x88\xab 0\n\xef\xa3\xad\ns\n\n\xef\xa3\xb6\nL j (\xcf\x84) d\xcf\x84 \xef\xa3\xb7 k j .\n\xef\xa3\xb8\n\n(2.11)\n\nAs for the solution un+1,\nu n +1 \xe2\x88\x92 u n = P(t n + h) \xe2\x88\x92 P(t n ) = h\n\n1\n\n\xef\xa3\xac\n\xef\xa3\xb7\n\xe2\x88\x91 j =1 \xef\xa3\xab \xe2\x88\xab 0 L j (\xcf\x84) d\xcf\x84 \xef\xa3\xb6 k j .\n\xef\xa3\xad\n\xef\xa3\xb8\ns\n\n(2.12)\n\nMotivated by (2.11), set\naij =\n\nci\n\n\xe2\x88\xab0\n\nL j (\xcf\x84) d\xcf\x84 ,\n\n(2.13)\n\nand, by (2.12), set\nbj =\n\n1\n\n\xe2\x88\xab 0 L j (\xcf\x84) d\xcf\x84 .\n\nThen, with un,j = P(tn,j) and kj = f (tn,j, un,j), (2.11) implies the following IRK form of the collocation\nmethod: for i = 1,\xe2\x80\xa6,s,\n\nNASA/TM\xe2\x80\x942011-216340\n\n6\n\n(2.14)\n\nu n, i = u n + h\n\ns\n\n\xe2\x88\x91 j =1 aij k j .\n\n(2.15)\n\nAfter obtaining un,i (and ki) by solving the above system of s implicit equations, the solution is given by\nu n +1 = u n + h\n\ns\n\n\xe2\x88\x91 j =1 b j k j .\n\n(2.16)\n\nThis completes the proof.\nThe Butcher array of an IRK method consists of ci, aij, and bj arranged as follows\n\nc1\n\na11\n\n\xef\x81\x8b\n\na1 s\n\n\xef\x81\x8d\ncs\n\n\xef\x81\x8d\nas 1\n\n\xef\x81\x8b\n\n\xef\x81\x8c\n\n\xef\x81\x8d\nas s\n\nb1\n\n\xef\x81\x8b\n\nbs\n\nHere, for each i-th row, aij, j = 1,\xe2\x80\xa6,s are the weights of a quadrature formula as will be shown in (2.18).\nNote that if c1 = 0, then tn,1 = tn, un,1 = un, and a1j = 0 for all j; in other words, the first row of the\nButcher array is identically zero. In addition, the quantity k1 = f (tn,un) can be calculated explicitly. Since\nun,1 = un is known, (2.15) for i = 2,\xe2\x80\xa6,s then yields the equations to calculate un,2,\xe2\x80\xa6,un,s.\nConcerning the stability function for the IRK method, define the s\xc3\x97s matrices A = [aij] and\nI = identity matrix, column vectors of s entries b = [b1,\xe2\x80\xa6,bs]T and e = [1,1,\xe2\x80\xa6,1]T where the superscript T\nstands for transpose, and det = determinant. Then, for the IRK method, the stability function R can be\ncalculated by one of the following two formulas (e.g., Lambert 1991)\n\nR( z ) = 1 + zbT (I \xe2\x88\x92 zA) \xe2\x88\x921 e\nor\nR( z ) =\n\n2.2\n\ndet [1 \xe2\x88\x92 zA + zebT ]\n.\ndet [I \xe2\x88\x92 zA]\n\nQuadratures Associated with IRK Method\n\nThe above IRK method relates to quadrature formulas as follows. By (2.16) and the definition of kj,\nun +1 \xe2\x88\x92 un = h\n\ns\n\n\xe2\x80\xb2\n\xe2\x88\x91 j =1 b j un, j .\n\nThe corresponding quadrature formula is, for any continuous function v on I = [0,1],\n1\n\ns\n\n\xe2\x88\xab0 v(\xcf\x84) d\xcf\x84 \xe2\x89\x88 \xe2\x88\x91 j =1 b j v(c j ) .\n\n(2.17)\n\nHere, bj are the weights given in (2.14), and the collocation points cj are the evaluation points. Similarly,\nby (2.15),\nun, i \xe2\x88\x92 un = h\n\nNASA/TM\xe2\x80\x942011-216340\n\ns\n\n\xe2\x80\xb2\n\xe2\x88\x91 j =1 aij un, j .\n\n7\n\nThe corresponding quadrature formula is\nci\n\n\xe2\x88\xab0\n\ns\n\n\xe2\x88\x91 j =1 aij v(c j ) .\n\nv(\xcf\x84) d\xcf\x84 \xe2\x89\x88\n\n(2.18)\n\nHere, we use the s collocation points on [0,1] to evaluate the integral from 0 to ci.\nAn observation concerning accuracy of these quadratures is in order. With appropriate choice of\nevaluation points on I, formula (2.17) has a degree of precision of up to 2s \xe2\x80\x93 1. (Recall that a quadrature is\nof degree of precision m if it is exact for polynomials of degree m or less.) Formula (2.18) for the stages,\nhowever, has a degree of precision no higher than s \xe2\x80\x93 1 since special points (say, Gauss points) on [0,1]\nare generally not special on [0,ci]. For example, if we use 2 Gauss points on [0,1] as collocation points,\nthen the degree of precision for (2.17) is 3, but that for (2.18) is only 1. As will be shown, the resulting\ncollocation method is of order 4.\n\n2.3\n\n~\n\nBasis Functions L j\n~\nWe next introduce the basis functions L j , which will be employed in the proof of equivalence\n\nbetween the collocation and CG methods. With t = tn + \xcf\x84h, similar to (2.11), by (2.10),\nP(t ) \xe2\x88\x92 P(t n ) = h\n\n\xce\xbe\n\n\xef\xa3\xac\n\xef\xa3\xb7\n\xe2\x88\x91 j =1 \xef\xa3\xab \xe2\x88\xab 0 L j (\xcf\x84) d\xcf\x84 \xef\xa3\xb6 k j .\n\xef\xa3\xad\n\xef\xa3\xb8\ns\n\n(2.19)\n\nDenote, for j = 1,\xe2\x80\xa6,s,\n~\nL j (\xcf\x84) =\n\n\xcf\x84\n\n\xe2\x88\xab 0 L j ( \xce\xbe ) d\xce\xbe .\n\n(2.20)\n\n~\n~\nThen L j is of degree s since Lj is of degree s \xe2\x80\x93 1. Some additional noteworthy properties of L j are:\n~\nd L j / d\xcf\x84 = L j ;\n\n(2.21a)\n\nin addition,\n\n~\nL j (0) = 0,\nmoreover, since\n\n~\nL j (ci ) = aij ,\n\nand\n\n~\nL j (1) = b j ;\n\n(2.21b)\n\ns\n\n\xe2\x88\x91 j =1 L j = 1 ,\ns\n\n~\n\n\xe2\x88\x91 j =1 L j (\xcf\x84)\n\n= \xcf\x84.\n\n(2.22)\n\nNext, by (2.19),\nP (t ) \xe2\x88\x92 P (t n ) = P (t n + \xcf\x84 h) \xe2\x88\x92 P (t n ) = h\n\nNASA/TM\xe2\x80\x942011-216340\n\n8\n\ns\n\n\xe2\x88\x91 j =1\n\n~\nk j L j (\xcf\x84) .\n\n(2.23)\n\n0.4\n0.3\n0.2\n\n0.6\n\n~\nL1\n\n0.4\n\n~\nL1\n\n~\nL2\n\n0.1\n0.2\n\n0.4\n\n~\nL3\n0.6\n\n0.2\n\n~\nL2\n\n1\xcf\x84\n\n0.8\n\n0.2\n\n0.4\n\n0.6\n\n1\n\n0.8\n\n\xcf\x84\n\n(a)\n(b)\n~\n~\nFigure 2.2.\xe2\x80\x94(a) Functions L j j = 1,2,3 for the case of 3 Gauss points on I = [0,1]. Note that d L j ( \xcf\x84) / d\xcf\x84 = L j ( \xcf\x84) ;\n~\ntherefore, the graph of L j has slope 1 at cj and slope 0 at all other ci as can be seen by the slopes at the\n~\ndots. (b) Functions L j for the case of 2 (right) Radau points.\n\nFor convenience, set\n\n~\nL0 = 1\n\n(2.24a)\n\nk0 = P(t n ) / h = u n / h .\n\n(2.24b)\n\nand\n\n~\nThen P (t n ) = h k 0 L0 , and (2.23) can be expressed as\nP (t n + \xcf\x84 h) = h\n\ns\n\n\xe2\x88\x91 j =0\n\n~\nk j L j (\xcf\x84) .\n\n(2.25)\n\n~\nObserve that L j , j = 0,\xe2\x80\xa6,s, are s + 1 polynomials of degree no higher than s. We will show that they\nare linearly independent; thus, they form a basis for the space of polynomials of degree s or less. That is,\nwe wish to show that if\n~\n\ns\n\n\xe2\x88\x91 j =0 \xce\xb1 j Lj = 0 ,\n\n(2.26)\n\n\xce\xb1 j = 0 for j = 0, ..., s .\n\n(2.27)\n\nthen\n\n~\ns\n~\nTo this end, observe that (2.26) implies\n\xce\xb1 j L j (0) = 0 . Since L j (0) = 0 for j = 1,\xe2\x80\xa6,s, we have\nj =0\n~\n~\n\xce\xb1 0 L0 (0) = 0 . By definition, L0 = 1 ; as a result,\n\n\xe2\x88\x91\n\n\xce\xb10 = 0 .\n\n(2.28)\n\nEquation (2.26) then takes the form\n~\n\ns\n\n\xe2\x88\x91 j =1 \xce\xb1 j L j = 0 .\nNote the starting value of 1 for j. Differentiating the above, we have\n\nNASA/TM\xe2\x80\x942011-216340\n\n9\n\n(2.29)\n\ns\n\n\xe2\x88\x91 j =1 \xce\xb1 j L j = 0 .\nSince Lj, j = 1,\xe2\x80\xa6,s, are independent, we conclude that \xce\xb11 = \xe2\x80\xa6 = \xce\xb1s = 0. This fact and (2.28) complete the\n~\nproof that L j are independent.\n~\nThe above observation implies that L j , j= 0,\xe2\x80\xa6,s, form a basis for the space of polynomials of degree\nno higher than s. Thus, if Q is any polynomial of degree s or less, then Q can be expressed as a linear\n~\ncombination of L j :\nQ(t n + \xcf\x84 h) = h\n\ns\n\n~\n\n\xe2\x88\x91 j = 0 \xce\xb1 j L j (\xcf\x84)\n\n(2.30a)\n\nwhere the coefficients \xce\xb1j relate to Q by\n\n\xce\xb1 0 = Q(t n ) / h and \xce\xb1 j = Q\xe2\x80\xb2(t n, j ) for j = 1, ..., s .\n\n(2.30b)\n\nAlso note that if Q is a polynomial of degree s and Q(tn) and Q\xe2\x80\xb2(tn,j), j = 1,\xe2\x80\xa6,s, are known, then Q is\ngiven by (2.30). Finally, examples of the Gauss, Radau, and Lobatto collocation methods can be found in\nappendix A.\n\n3.0\n\nContinuous Galerkin (CG) Methods\n\nThe CG method seeks to approximate the solution by a continuous function which, on each interval\n[tn, tn+1], is a polynomial U of degree s determined by using the weak form of the differential equation.\nAgain, assuming that U(tn) = un is known, we wish to calculate un+1 = U(tn+1).\nWe need some preparations. Let [\xce\xb1,\xce\xb2] be any interval; here, it is either I = [0,1] or In = [tn, tn+1]. For\nsimplicity, unless otherwise stated, we deal only with continuous functions (in fact, polynomials) on\n[\xce\xb1,\xce\xb2]. The inner product of two functions v1 and v2 is defined by\n(v1, v2 ) =\n\n\xce\xb2\n\n\xe2\x88\xab\xce\xb1 v1(t ) v2 (t ) dt .\n\n(3.1)\n\nNext, denote by Ps[\xce\xb1,\xce\xb2] the space of polynomials of degree s or less on [\xce\xb1,\xce\xb2]. In addition, denote by\ns\nP0 [\xce\xb1, \xce\xb2] the subspace of Ps[\xce\xb1,\xce\xb2] consisting of polynomials that vanish at the left boundary \xce\xb1. When\ns\nthere is no confusion concerning the interval, we use the notation Ps and P0 . Note that Ps is of dimension\ns , dimension s.\ns + 1, and P0\nIn general, the integrals, e.g., the inner product (3.1), are carried out by approximations rather than by\nexact integration. We can employ the quadrature (2.17) on I (the cj are now the evaluation points):\n1\n\n\xe2\x88\xab 0 v(\xcf\x84) d\xcf\x84\n\ns\n\n\xe2\x88\x91 j =1 b j v(c j ) .\n\n\xe2\x89\x88\n\n(3.2)\n\nThe quadrature on In differs from the above by a factor of h: for any continuous function v(t),\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nv(t ) dt \xe2\x89\x88 h\n\ns\n\n\xe2\x88\x91 j =1 b j v(tn, j ) .\n\n(3.3)\n\nWe often use (3.2) instead of the above (i.e., the factor h is understood) when there is no confusion.\nThe trial space or space of trial solutions on In is defined by\n\nS = { polynomial U of degree s such that U (t n ) = u n } .\nNASA/TM\xe2\x80\x942011-216340\n\n10\n\n(3.4)\n\nIn spite of its name, S is in fact not a space, but is a hyperplane in Ps[tn, tn+1].\nA test space or a space of test functions on In, commonly denoted by V, is a subspace of Ps which has\ndimension s. Among the most commonly used test spaces is the space consisting of polynomials that\nsatisfy the homogeneous boundary condition at tn\n\nV = { v of degree s such that v(t n ) = 0 } ,\n\n(3.5)\n\ns\ni.e., V = P0 . Note that if U is in S, then U \xe2\x80\x93 un is an element of the above V.\nNext, the weak form of the equation u\xe2\x80\xb2 = f can be written formally as\n\n(u \xe2\x80\xb2 , v) = ( f , v) .\n\n(3.6)\n\nThe CG method seeks a solution U in the trial space S that satisfies, for all v in the test space V,\n\n(U \xe2\x80\xb2, v) = ( f , v) .\n\n(3.7)\n\nIn other words, the projection of U\xe2\x80\xb2 and f (t,U(t)) onto V are the same.\nWe now show that the test space, as opposed to the case of trial space, must be a subspace, and it must\nhave dimension s. Indeed, first, suppose (3.7) holds for functions v1 and v2 (which take the place of v). Let\n\xce\xb1 and \xce\xb2 be real numbers. Then, one can easily verify that (U\xe2\x80\xb2, \xce\xb1v1 + \xce\xb2v2) = (f, \xce\xb1v1 + \xce\xb2v2); thus, the test\nspace must form a subspace. Next, since U is of degree s, and one condition is known, namely, U(tn) = un,\ns conditions remain to be determined. Therefore, the test space must be of dimension s.\nWe next discuss the choice of test spaces. Instead of solving for U, we can solve for U \xe2\x80\x93 un. Since\nU \xe2\x80\x93 un is in V, and V defined by (3.5) has the correct dimension, it is sensible to use V as a test space.\nThe following argument results in another choice of test space. Since U\xe2\x80\xb2 is of degree s \xe2\x80\x93 1, for the two\nsides of (3.7) to match, we should approximate f by a polynomial also of degree s \xe2\x80\x93 1. Such an\napproximation can be obtained by the projection of f on Ps\xe2\x80\x931. For this projection to be identical to U\xe2\x80\xb2, it\nsuffices to require that (3.7) holds for all v in Ps\xe2\x80\x931, i.e., the test space be Ps\xe2\x80\x931. It was observed in (Fletcher\n1984) and also in (Eriksson et al. 1996) that this test space yields a more accurate solution than the test\ns\nspace P0 . We will show in (3.34) below that with the quadrature (3.2), or equivalently, (3.3), the two test\ns\nspaces V = P0 and V = Ps\xe2\x80\x931 yield identical results. The following conclusion can then be drawn: for the\ns\nCG formulation with the test space V = P0 , the method using Gauss quadrature is more accurate than that\nusing exact integration. (This fact is contrary to the common belief that more accurate integration\nformulas yield more accurate solutions.)\n\n1.5\n1\n\n\xcf\x862\n\n\xcf\x861\n\n\xcf\x860\n\n1\n\n\xcf\x863\n\n0.8\n\n\xcf\x861\n\n0.6\n\n0.5\n\n-0.5\n\n\xcf\x860\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n\xcf\x84\n\n-1\n\n\xcf\x862\n\n0.4\n0.2\n-0.2\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n\xcf\x84\n\n(b)\n(a)\nFigure 3.1.\xe2\x80\x94(a) Basis functions \xcf\x86j j = 0,\xe2\x80\xa6,3 for the case of 3 Gauss points on I = [0,1]. (b) Basis functions \xcf\x860, \xcf\x861, and\ns\n\xcf\x862 for the case of 2 right Radau points. Note that \xcf\x861,\xe2\x80\xa6, \xcf\x86s form a basis for P0 .\n\nNASA/TM\xe2\x80\x942011-216340\n\n11\n\n~\nIn addition to L j defined by (2.20), we will need the following basis for Ps. On I, assuming c1 > 0, set\n\nc0 = 0 .\n\n(3.8)\n\nThen, c0 > c1 > \xe2\x80\xa6. cs \xe2\x89\xa4 1. Let \xcf\x860,\xe2\x80\xa6, \xcf\x86s be the corresponding basis functions: for each j,\n\xcf\x86 j (\xcf\x84) =\n\ns\n\n\xcf\x84 \xe2\x88\x92 ci\n.\nc j \xe2\x88\x92 ci\n\n\xe2\x88\x8f\n\ni = 0, i \xe2\x89\xa0 j\n\n(3.9)\n\nThat is, \xcf\x86j(ci) = \xce\xb4ij as shown in Figure 3.1. (Note that the definition of Li in (2.8) is different from the\ncurrent definition in that it does not include c0).\nSince \xcf\x860(0) = 1, we can employ \xcf\x860 to deal with the boundary condition at tn. For all j \xe2\x89\xa5 1, \xcf\x86j(0) = 0; as a\ns\nconsequence, \xcf\x861,\xe2\x80\xa6, \xcf\x86s form a basis for P0 . Also note that in the case of s Gauss points, \xcf\x860 defined above\nis identical to the Legendre polynomial of degree s on I; in the case of right Radau points, it is identical to\nthe Radau polynomial (see Appendix). In the case of Lobatto points, however, \xcf\x860 is not the Lobatto\npolynomial; this case corresponds to c1 = 0 and will be discussed later.\n\n3.1\n\nCG and Collocation Methods\n\nWe claim that if the quadrature formula (3.2) is employed to evaluate the inner product, then the\nresulting CG method is identical to the collocation method with quadrature points as collocation points.\nTo prove the above claim, we will start with the CG solution U and show that it can be expressed in\n~ s\ncollocation form. The key ingredient of the proof is the choice of {L j } j = 0 defined by (2.20) as a basis for\n~ s\ns\ns\nS and {\xcf\x86 j } j =1 defined by (3.9) as a basis for V = P0 . Since U \xe2\x80\x93 un is in V, and {L j } j =1 is a basis for V,\nU \xe2\x80\x93 un can be expressed in terms of these basis functions:\nU (t n + \xcf\x84 h) \xe2\x88\x92 u n = h\n\ns\n\n\xe2\x88\x91 j =1\n\n~\nd j L j (\xcf\x84) .\n\n(3.10)\n\nAs discussed in (2.30), dj and U are related by, for j = 1,\xe2\x80\xa6,s,\n\nd j = U \xe2\x80\xb2(t n, j ) .\n\n(3.11)\n\n~\nWe wish to show, by using the weak form (3.7), that dj = f (tn,j,U(tn,j)). To this end, because d L j / d\xcf\x84 = L j ,\nby differentiating (3.10) and employing the chain rule,\nU \xe2\x80\xb2(t n + \xcf\x84 h) =\n\ns\n\n\xe2\x88\x91 j =1\n\nd j L j (\xcf\x84) .\n\n(3.12)\n\nNext, recall that U is a CG solution. Noting that \xcf\x861,\xe2\x80\xa6,\xcf\x86s form a basis for V, they can serve as test\nfunctions: for i = 1,\xe2\x80\xa6,s,\n\n(U \xe2\x80\xb2, \xcf\x86i ) = ( f , \xcf\x86i ) .\n\n(3.13)\n\nWe will show that under the quadrature rule, the left hand side above yields U\xe2\x80\xb2(tn,i), and the right hand\nside, f (tn,i, U(tn,i)). Indeed, by (3.12),\n(U \xe2\x80\xb2, \xcf\x86i ) =\n\nNASA/TM\xe2\x80\x942011-216340\n\ns\n\n\xe2\x88\x91 j =1 d j ( L j , \xcf\x86i ) .\n12\n\n(3.14)\n\nWhen the inner product is evaluated by quadrature (3.2), we use the notation (.,.)q, e.g.,\n\n(v, w) q\n\n=\n\ns\n\n\xe2\x88\x91i =1 bi v(ci ) w(ci ) .\n\nIn (3.14), Lj vanishes at all collocation points except at cj, and \xcf\x86i vanishes at all collocation points except\nat ci. Consequently, the only nonzero term for the sum is di(Li,\xcf\x86i). Since Li(ci) = \xcf\x86i(ci) = 1, employing the\nquadrature rule, (3.14) implies\n\n(U \xe2\x80\xb2, \xcf\x86i ) q\n\n= bi d i .\n\n(3.15)\n\nConcerning the right hand side of (3.13), under the quadrature rule, only the values of f at the quadrature\npoints are needed. Since f\xcf\x86i takes on the value f (tn,i,U(tn,i)) at \xcf\x84 = ci and the value 0 at all other cj,\n\n( f , \xcf\x86i ) q = bi f (t n, i ,U (t n, i )) .\n\n(3.16)\n\nAgain, under the quadrature rule, by (3.15) and (3.16), equation (3.13) implies\n\nd i = f (t n, i ,U (t n, i )) .\nFrom the above and (3.11), for i = 1,\xe2\x80\xa6,s,\nU \xe2\x80\xb2(tn , i ) = f (tn , i ,U (tn , i ))\n\n.\n\n(3.17)\n\nThat is, U plays the role of P in the definition of the collocation method (2.23). This completes the proof.\n\n3.2\n\nStandard CG Method (Via Basis Functions)\n\nIn (3.7) above, the CG method is formulated via trial and test spaces. It can also be formulated via\nbasis functions (Hulme 1972, Delfour et al. 1981). This formulation is presented here with more\nexplanations and will be employed later in (3.35) to (3.45). Let \xcf\x860,\xe2\x80\xa6,\xcf\x86s be a set of basis functions for\nPs[0,1] with the following properties. First,\n(3.18)\n\n\xcf\x95 0 (0) = 1\n\nso that \xcf\x860 can deal with the boundary condition at tn. Next, for j = 1,\xe2\x80\xa6.,s,\n\n\xcf\x95 j (0) = 0\n\n(3.19)\n\n~\ns\nso that \xcf\x861,\xe2\x80\xa6,\xcf\x86s form a basis for P0 . Note that L j defined by (2.20) and (2.24a) and \xcf\x86j by (3.9) possess\nthese properties. Set\n\nd 0 = un h .\n\n(3.20)\n\nThen the trial solution U of (3.4) can be written as\nU (t n + \xcf\x84 h) = h\n\ns\n\n\xe2\x88\x91 j =0\n\nd j \xcf\x95 j (\xcf\x84)\n\nwhere d0 is given by (3.20) and d1,\xe2\x80\xa6,ds remain to be determined. Taking d/d\xcf\x84 of the above,\n\nNASA/TM\xe2\x80\x942011-216340\n\n13\n\n(3.21)\n\nU \xe2\x80\xb2(t n + \xcf\x84 h) =\n\ns\n\n\xe2\x88\x91 j =0\n\nd j d\xcf\x95 j (\xcf\x84) / d\xcf\x84 .\n\n(3.22)\n\nUsing the test function v = \xcf\x86i where i = 1,\xe2\x80\xa6,s, defined by (3.9) (these \xcf\x86i form a basis for V), the weak\nform (3.7) implies\ns\n\n\xe2\x88\x91 j = 0 ( \xcf\x95i ,\n\nd\xcf\x95 j / d\xcf\x84) d j = (\xcf\x95i , f ) .\n\n(3.23)\n\nWe thus obtain s implicit equations (since f also depends on di) for s unknowns d1,\xe2\x80\xa6,ds.\ns\nNote that in general, the expression f \xef\xa3\xab t ,\nd \xcf\x95 (t ) \xef\xa3\xb6 , which depends on the unknowns dj, can be\n\xef\xa3\xac\n\xef\xa3\xb7\nj =0 j j\n\xef\xa3\xad\n\xef\xa3\xb8\ncomplicated; as a result, evaluating (\xcf\x86i,f) via exact integration may become difficult. It is often more\nconvenient to evaluate the inner product by a quadrature formula employing only the values f (tn,j,U(tn,j))\nat the quadrature points.\n\n\xe2\x88\x91\n\n3.3\n\nEquivalence of Collocation and CG Methods Via Approximating the Dirac Delta\nFunction\n\nIf we use the Dirac delta function, the proof of this equivalence is shortened considerably. The basic\nidea is that on Ps with an inner product by quadrature (3.2), the Dirac delta function \xce\xb4i has the same effect\nas \xcf\x86i/bi where \xcf\x86i is the basis function given by (3.9) and bi is the quadrature weight. Indeed, on I = [0,1],\nlet \xce\xb4i be the Dirac delta function at ci defined by, for any v in Ps,\n\n(v, \xce\xb4i ) = v(ci ) .\n\n(3.24)\n\nUsing the quadrature rule (3.2), again for any v in Ps,\n\n(v, \xcf\x86i / bi ) q = v(ci ) = (v, \xce\xb4 i ) .\n\n(3.25)\n\nThat is, concerning the inner product on Ps via the quadrature rule, we have\n\n\xcf\x86i / bi = \xce\xb4 i .\n\n(3.26)\n\nThe collocation method (2.5), with P defined by (2.3) and (2.4), can be written as\n\n( P\xe2\x80\xb2, \xce\xb4i ) = ( f , \xce\xb4i ) .\n\n(3.27)\n\n( P\xe2\x80\xb2, \xcf\x86i ) q = ( f , \xcf\x86i ) q .\n\n(3.28)\n\nTherefore, by (3.25), for i = 1,\xe2\x80\xa6,s,\n\nThe above is the CG form (3.13) with the inner product evaluated by the quadrature (3.2) and U replaced\nby P.\nNote that for the above argument to hold, \xcf\x86i is required to be of degree s and thus, is defined by s + 1\nconditions, but only the s values of \xcf\x86i at the collocation points are needed in the above proof. The extra\ncondition can be arbitrary (i.e., the condition \xcf\x86i(0) = 0 is not required) as discussed further in (3.33)\nbelow.\n\nNASA/TM\xe2\x80\x942011-216340\n\n14\n\n3.4\n\nThe Case c1 = 0 (and c2 > 0)\n\nExamples for this case are the Lobatto and the left Radau quadrature points. Via the collocation\napproach, as discussed in (2.7), for this case, in addition to the boundary value un, the derivative\n\xe2\x80\xb2\nun = f ( xn , un ) is also known (easily evaluated). Concerning the CG approach, it needs to be modified to\n\xe2\x80\xb2\nincorporate the condition that un is known. To this end, the trial space is defined as\n\n\xe2\x80\xb2\n{ polynomial U of degree s such that U (t n ) = u n and U n = f ( xn , u n )} .\n\n(3.29)\n\nThis trial space is of dimension s \xe2\x80\x93 1. The test space can be modified accordingly:\n\n{ v of degree s such that v(t n ) = 0 and v\xe2\x80\xb2(t n ) = 0 } .\n\n(3.30)\n\nThis space is also of dimension s \xe2\x80\x93 1. For the case c1 = 0, the CG method seeks a solution U in the trial\nspace (3.29) that satisfies, for all v in the test space (3.30),\n\n(U \xe2\x80\xb2, v) = ( f , v) .\n~\nNext, the definition of L j in (2.20) remains valid. In addition, the definition of the basis functions \xcf\x86j in\n(3.9), except for \xcf\x860 and \xcf\x861, also remains valid. Since c0 = c1 = 0, to modify \xcf\x860, we define it to be a\npolynomial of degree s such that\n\n\xcf\x860 (0) = 1 , \xcf\x86 0\xe2\x80\xb2 (0) = 0 , and \xcf\x860 (ci ) = 0 for i = 2, ..., s .\n\n(3.31a)\n\nThat is\n\xcf\x86 0 (\xcf\x84) = (1 \xe2\x88\x92 a\xcf\x84)\n\ns\n\n\xe2\x88\x8f\ni =2\n\nci \xe2\x88\x92 \xcf\x84\nci\n\nwhere\n\n(3.31b)\n\xef\xa3\xab s ci \xe2\x88\x92 \xcf\x84\na = \xef\xa3\xac\n\xef\xa3\xac\n\xef\xa3\xad i = 2 ci\n\n\xe2\x88\x8f\n\n\xe2\x80\xb2\n\xef\xa3\xb6\n\xef\xa3\xb7 (0) .\n\xef\xa3\xb7\n\xef\xa3\xb8\n\nAs for \xcf\x861, it is defined to be a polynomial of degree s such that\n\n\xcf\x86 1 (0) = 0 , \xcf\x86 1\xe2\x80\xb2 (0) = 1 , and \xcf\x86 1 (ci ) = 0 for i = 2, ..., s .\n\n(3.32a)\n\nThat is\n\xcf\x86 1 (\xcf\x84) = \xcf\x84\n\ns\n\n\xe2\x88\x8f\ni=2\n\nci \xe2\x88\x92 \xcf\x84\n.\nci\n\n(3.32b)\n\nNote that \xcf\x860 serves the purpose of matching the value un, and \xcf\x861, the slope u n\xe2\x80\xb2 = f (t n , u n ) .\nThe claim of equivalence between CG and collocation methods still holds when c1 = 0. The proof,\n~\nwhich employs the basis functions \xcf\x862,\xe2\x80\xa6,\xcf\x86s for the test space (3.30), and the basis functions L j for the\ntrial space (3.29), is essentially the same as that of the case c1 > 0 and is omitted.\n\nNASA/TM\xe2\x80\x942011-216340\n\n15\n\n1\n0.8\n\n1.5\n\n\xcf\x860\n\n\xcf\x863\n\n\xcf\x862\n\n1\n\n0.6\n\n0.5\n\n0.4\n0.2\n-0.2\n\n\xcf\x861\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n\xcf\x860\n\xcf\x862\n\xcf\x861\n\n\xcf\x84\n\n-0.4\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n\xcf\x84\n\n-0.5\n\n(a)\n(b)\nFigure 3.2.\xe2\x80\x94(a) Basis functions \xcf\x86 0 , ..., \xcf\x863 for the case of 3 Lobatto points. (b) Basis functions \xcf\x86 0 , \xcf\x861 , and \xcf\x86 2 for the\ncase of 2 left Radau points. Note that \xcf\x862 ,..., \xcf\x86 s form a basis for the test space defined in (3.30).\n\n3.5\n\nTest Spaces\n\ns\nWe claim that using quadrature (3.2) with evaluation points ci\xe2\x80\x99s, the test spaces Ps\xe2\x80\x931 and P0 (or V)\ns\nyield identical results. The reason is that on P with such a quadrature, as far as the inner product is\nconcerned, \xcf\x86i defined by (3.9) has the same effect as Li defined by (2.8) for i = 1,\xe2\x80\xa6,s. Indeed, for any\ncontinuous function v, with i varies between 1 and s,\n\n(v, \xcf\x86i ) q = (v, Li ) q = (v, bi \xce\xb4 i ) q = bi v(ci ) .\n\n(3.33)\n\ns\nThus, if U is a solution of the standard CG method, then since \xcf\x86i is in the test space P0 , (U\xe2\x80\xb2,\xcf\x86i)q = (f,\xcf\x86i)q.\nAs shown above, we can replace \xcf\x86i by Li,\n\n(U \xe2\x80\xb2, Li ) q = ( f , Li ) q .\n\n(3.34)\n\nNoting that Li, i = 1,\xe2\x80\xa6,s form a basis for Ps\xe2\x80\x931, the claim follows.\nReaders who are interested only in the main results can omit the rest of this section with no loss of\ncontinuity.\n\n3.6\n\nA Dilemma\n\nThe question then is: What causes the difference between the established fact that the test space Ps\xe2\x80\x931\ns\nyields a more accurate solution than the test space P0 and the above claim that under the quadrature rule,\ns\xe2\x80\x931\ns\nthe test spaces P and P0 yield identical results? To answer this question, we need to derive the\nsolutions using exact integration. This derivation is similar to that in (Fletcher 1984); the key difference,\nhowever, is that instead of u\xe2\x80\xb2 = u, we use the equation\n\nu\xe2\x80\xb2 = \xce\xbb u .\n\n(3.35)\n\nAs a consequence, we can study not only which test space yields a more accurate numerical solution, but\ns\nalso the stability as well as order of accuracy of the corresponding method. We will show that with P0 as\nthe test space, an appropriate quadrature formula results in a method more accurate than that by exact\nintegration. In other words, such a quadrature provides the cancellation needed for high accuracy\nwhereas, with exact integration, the cancellation no longer occurs. This observation contrasts the common\nbelief that a more accurate integration procedure results in a solution with better accuracy.\nTo solve the above ODE, consider the following basis functions for Ps[0,1]\n\xcf\x95 j = \xcf\x84 j , j = 0, ..., s .\n\nNASA/TM\xe2\x80\x942011-216340\n\n16\n\n(3.36)\n\ns\nClearly, \xcf\x86j(0) = 0 for j = 1,\xe2\x80\xa6,s, and \xcf\x861,\xe2\x80\xa6, \xcf\x86s form a basis for P0 = V . Next, set\n\nd 0 = un h\n\n(3.37a)\n\nand\nU=h\n\ns\n\n\xe2\x88\x91 j =0\n\nd j \xcf\x95 j (\xcf\x84)\n\n(3.37b)\n\nas in (3.20) and (3.21) where, d1,\xe2\x80\xa6,ds are to be determined. For the equation u\xe2\x80\xb2 = \xce\xbbu, the standard CG\nformulation, namely (3.23), implies\ns\n\n\xe2\x88\x91 j =0\n\n(\xcf\x95i , d\xcf\x95 j / d\xcf\x84) d j = \xce\xbb\n\ns\n\n\xe2\x88\x91 j = 0 ( \xcf\x95i , \xcf\x95 j ) d j\n\n.\n\n(3.38)\n\ns\nHere, for the test space P0 , i varies from 1 to s; for the test space Ps\xe2\x80\x931, from 0 to s \xe2\x80\x93 1. Moving the two\nterms corresponding to j = 0 to the right hand side and the rest to the left, we have\ns\n\n\xe2\x88\x91 j =1 [ (\xcf\x95i ,\n\nd\xcf\x95 j / d\xcf\x84) \xe2\x88\x92 \xce\xbb (\xcf\x95i , \xcf\x95 j ) ] d j = \xe2\x88\x92 (\xcf\x95i , d\xcf\x950 / d\xcf\x84) + \xce\xbb (\xcf\x95i , \xcf\x950 ) d 0 .\n\n(3.39)\n\nSince \xcf\x860 = 1, the first term on the right hand side above drops out:\ns\n\n\xe2\x88\x91 j =1 [ (\xcf\x95i ,\n\nd\xcf\x95 j / d\xcf\x84) \xe2\x88\x92 \xce\xbb (\xcf\x95i , \xcf\x95 j ) ] d j = \xce\xbb (\xcf\x95i , \xcf\x950 ) d 0 .\n\n(3.40)\n\nWith exact integration, we obtain, for all i and j,\n(\xcf\x95i , d\xcf\x95 j / d\xcf\x84) =\n\n1\n\n\xe2\x88\xab0\n\nj\xcf\x84i + j \xe2\x88\x921d\xcf\x84 =\n\nj\ni+ j\n\n(3.41a)\n\nand\n(\xcf\x95i , \xcf\x95 j ) =\n\n1\n\n\xe2\x88\xab 0 \xcf\x84 i + j d\xcf\x84 =\n\n1\n.\ni + j +1\n\n(3.41b)\n\nConsider now the case s = 2. Assuming that un = 1, h = 1, then by (3.37a), d0 = 1. With exact\nintegration, the two cases concerning different test spaces are as follows.\nFor the test space Ps\xe2\x80\x931 = P1, using (3.41), the system (3.40) with i = 0 and i = 1 takes the form\n\xef\xa3\xab1\xe2\x88\x92 \xce\xbb\n2\n\xef\xa3\xac\n\xef\xa3\xac1 \xe2\x88\x92 \xce\xbb\n\xef\xa3\xad2 3\n\n1\xe2\x88\x92 \xce\xbb \xef\xa3\xb6\n3 \xef\xa3\xb7\n2 \xe2\x88\x92 \xce\xbb\xef\xa3\xb7\n3\n4\xef\xa3\xb8\n\n\xef\xa3\xab d1 \xef\xa3\xb6 \xef\xa3\xab \xce\xbb \xef\xa3\xb6\n\xef\xa3\xac \xef\xa3\xb7 =\xef\xa3\xac 1 \xef\xa3\xb7 ,\n\xef\xa3\xacd \xef\xa3\xb7 \xef\xa3\xac \xce\xbb\xef\xa3\xb7\n\xef\xa3\xad 2\xef\xa3\xb8 \xef\xa3\xad2 \xef\xa3\xb8\n\n(3.42)\n\nThe solutions are d1 = [6\xce\xbb(2 \xe2\x80\x93 \xce\xbb)]/(12 \xe2\x80\x93 6\xce\xbb + \xce\xbb2) and d2 = 6\xce\xbb2/(12 \xe2\x80\x93 6\xce\xbb + \xce\xbb2). Since un+1 = 1 + d1 + d2,\nu n +1 =\n\n12 + 6\xce\xbb + \xce\xbb2\n12 \xe2\x88\x92 6\xce\xbb + \xce\xbb2\n\nor R( z ) =\n\n1 + z / 2 + z 2 / 12\n.\n1 \xe2\x88\x92 z / 2 + z 2 / 12\n\n(3.43)\n\nThus, the method yields the same solution as the collocation method (2.37) using two Gauss points. It is\nof order 4, and the error can be found in (2.38). The stability region is shown in Figure 2.3(b).\n\nNASA/TM\xe2\x80\x942011-216340\n\n17\n\ns\nFor the test space P0 , using (3.41), the system (3.40) with i = 1 and i = 2 takes the form\n\n\xef\xa3\xab1 \xe2\x88\x92 \xce\xbb\n\xef\xa3\xac2 3\n\xef\xa3\xac1\xe2\x88\x92 \xce\xbb\n\xef\xa3\xad3 4\n\n2\xe2\x88\x92\xce\xbb\xef\xa3\xb6\n3 4\xef\xa3\xb7\n2 \xe2\x88\x92\xce\xbb\xef\xa3\xb7\n4 5\xef\xa3\xb8\n\n\xef\xa3\xab d1 \xef\xa3\xb6 \xef\xa3\xab 1 \xce\xbb \xef\xa3\xb6\n2\n\xef\xa3\xac \xef\xa3\xb7 =\xef\xa3\xac 1 \xef\xa3\xb7 ,\n\xef\xa3\xacd \xef\xa3\xb7 \xef\xa3\xac \xce\xbb\xef\xa3\xb7\n\xef\xa3\xad 2\xef\xa3\xb8 \xef\xa3\xad3 \xef\xa3\xb8\n\n(3.44)\n\nThe solutions are d1 = [4\xce\xbb(5 \xe2\x88\x92 3\xce\xbb)] (20 \xe2\x88\x92 12\xce\xbb + 3\xce\xbb2 ) , d 2 = 10\xce\xbb2 (20 \xe2\x88\x92 12\xce\xbb + 3\xce\xbb2 ) , and\nun +1 =\n\n20 + 8\xce\xbb + \xce\xbb2\n20 \xe2\x88\x92 12\xce\xbb + 3\xce\xbb2\n\nR( z ) =\n\nor\n\n20 + 8 z + z 2\n.\n20 \xe2\x88\x92 12 z + 3 z 2\n\n(3.45)\n\nThe error is\n\nE ( z ) = e z \xe2\x88\x92 R( z ) = 0.016667 z 3 + O( z 4 ) .\n\n(3.46)\n\nThus, the method is of order only 2. As |z|\xe2\x86\x92\xe2\x88\x9e, R(z)\xe2\x86\x921/3; as a result, the method is not L-stable. It is Astable, however.\nNote that if the Gauss quadrature is employed to evaluate the left hand side of (3.38), the result is the\nsame as that by exact integration since (\xcf\x86i,d\xcf\x86j/d\xcf\x84) is of degree 2s \xe2\x80\x93 1 or less. For the right hand side of\n(3.38), however, when i = j = s, \xcf\x86i,\xcf\x86j = \xcf\x842s, and the Gauss quadrature yields a result different from that by\ns\nexact integration. Thus, for the test space P0 , since the Gauss quadrature for CG results in a method\nequivalent to the Gauss point collocation, such a quadrature yields a CG method of order 4. For the same\ns\ntest space, i.e., P0 , exact integration, as shown above, results in a CG method of order only 2. Thus,\nconcerning the CG formulation, a well-matched quadrature can provide the cancellation needed for highorder accuracy, whereas exact integration may not, and the result is a less accurate solution.\n\n4.0\n\nDiscontinuous Galerkin (DG) Methods\n\nThe DG method seeks to approximate the solution by a function which is allowed to be discontinuous\nacross each tn and, on each interval In, is a polynomial of degree s \xe2\x80\x93 1 denoted by uh (i.e., one degree\nlower than that of U, the corresponding CG solution). This polynomial is determined by using the weak\nform of the ODE together with an integration by parts. Here, we assume that u h (t n\xe2\x88\x92 ) , which plays the\n\xe2\x88\x92\nrole of un, is known. For the first interval, u h (t0\xe2\x88\x92 ) = u0 . We wish to calculate u h (t n +1 ) , which plays the\nrole of un+1.\nOn In, formally (the correct expression is (4.4) below), the weak form for the equation u\xe2\x80\xb2 = f is, for any\nv in Ps\xe2\x80\x931,\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t )v(t ) dt =\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nf (t , u h (t )) v(t ) dt .\n\n(4.1)\n\nThe above equation contains no effect from the initial condition u h (t n\xe2\x88\x92 ) = u n . To involve this condition,\nwe use integration by parts:\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t )v(t ) dt = [ u h v ] t n+1 \xe2\x88\x92\nt\nn\n\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nu h (t )v\xe2\x80\xb2(t ) dt .\n\n(4.2)\n\nAt each tn, n = 0,\xe2\x80\xa6,N, the value uh is not well defined since u h (t n\xe2\x88\x92 ) is generally different from u h (t n+ ) .\nBy assuming that \xe2\x80\x98time marches forward\xe2\x80\x99, the value u h (t n\xe2\x88\x92 ) is employed for the boundary evaluations.\n\nNASA/TM\xe2\x80\x942011-216340\n\n18\n\nSuch a choice for the case of an advection (where \xe2\x80\x98the wind blows from the left\xe2\x80\x99) is called the \xe2\x80\x98upwind\xe2\x80\x99\nchoice, a term employed here as well. The choice adds numerical dissipation to the method whereas the\n\xe2\x80\x98centered\xe2\x80\x99 choice, i.e., [u h (t n\xe2\x88\x92 ) + u h (t n+ )] / 2 generally results in no numerical dissipation. Thus, between\nu h (t n\xe2\x88\x92 ) and u h (t n+ ) , the upwind value is u h (t n\xe2\x88\x92 ) . Note that for conservation laws, we deal with the\nupwind flux; here, the flux is u itself; therefore, we deal with the upwind value. As for the test function v\non In, the values v(tn) and v(tn+1) involve no ambiguity. The above equation then takes the form\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nt n+1\n\nu h\xe2\x80\xb2 (t )v(t ) dt = [u h (t n\xe2\x88\x92+1 )v(t n +1 ) \xe2\x88\x92 u h (t n\xe2\x88\x92 )v(t n )] \xe2\x88\x92\n\n\xe2\x88\xabt\n\nn\n\nu h (t )v\xe2\x80\xb2(t ) dt .\n\n(4.3)\n\nThe DG formulation is the following: with the value u h (t n\xe2\x88\x92 ) given, we wish to find, on In, a polynomial\nuh in Ps\xe2\x80\x931 that satisfies, for all v in Ps\xe2\x80\x931,\nt n+1\n\n[u h (t n\xe2\x88\x92+1 )v(t n +1 ) \xe2\x88\x92 u h (t n\xe2\x88\x92 )v(t n )] \xe2\x88\x92\n\n\xe2\x88\xabt\n\nn\n\nu h (t )v\xe2\x80\xb2(t ) dt =\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nf (t , u h (t )) v(t ) dt .\n\n(4.4)\n\nAs in (LeSaint and Raviart 1974), we need another integration by parts. On In, since uh is a polynomial,\n\n\xe2\x88\x92\nthe values at the two boundaries are respectively identical to u h (t n+ ) and u h (t n +1 ) . Consequently,\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nu h (t )v\xe2\x80\xb2(t ) dt = [u h (t n\xe2\x88\x92 1 )v(t n +1 ) \xe2\x88\x92 u h (t n+ )v(t n )] \xe2\x88\x92\n+\n\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t )v(t ) dt .\n\nNote that this equation involves no upwinding. Substitute it into (4.4), i.e., after integrating by parts twice,\nwe obtain the following DG formulation: with u h (t n\xe2\x88\x92 ) given, find uh in Ps\xe2\x80\x931 that satisfies, for all v in Ps\xe2\x80\x931,\n\xe2\x88\x92 [u h (t n\xe2\x88\x92 ) \xe2\x88\x92 u h (t n+ )] v(t n ) +\n\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t )v(t ) dt =\n\nt n +1\n\n\xe2\x88\xabt\n\nn\n\nf (t , u h (t )) v(t ) dt .\n\n(4.5)\n\nBetween the above and the formal expression (4.1), the difference is the \xe2\x80\x98correction\xe2\x80\x99 term\n\xe2\x88\x92 [uh (tn\xe2\x88\x92 ) \xe2\x88\x92 uh (tn+ )] v(tn ) . This term serves the purpose of enforcing the upwind value uh (tn\xe2\x88\x92 ) at the left\n\xe2\x88\x92\nboundary of In. The upwind value uh (tn +1 ) at the right boundary is built in as shown in (4.4). It is also the\nsolution we wish to calculate.\nAs an example, we solve u\xe2\x80\xb2(t) = 2t with initial condition u(0) = 0 via the above DG formulation. The\nexact solution is obvious: u(t) = t2. We use a linear element uh, i.e., s = 2. For simplicity of notation, set\na = tn and b = tn+1. Assuming that uh(a\xe2\x80\x93) is exact, i.e., uh(a\xe2\x80\x93) = a2, we wish to calculate uh on the interval\nIn = [a,b]. First, since uh is linear, the problem reduces to calculating uh(b\xe2\x80\x93)and uh(a+). Next, noting that\nh = b \xe2\x80\x93 a, on the interval (a,b), uh\xe2\x80\xb2 = [uh(b\xe2\x80\x93) \xe2\x80\x93 uh(a+)]/h. As a result, (4.5) implies\n\xe2\x88\x92 [a 2 \xe2\x88\x92 u h (a + )] v(a ) +\n\n1\n[u h (b \xe2\x88\x92 ) \xe2\x88\x92 u h (a + )]\nh\n\nb\n\n\xe2\x88\xaba\n\nv(t ) dt =\n\nb\n\n\xe2\x88\xab a 2t v(t ) dt .\n\nSet v = 1, the above results in\n\n\xe2\x88\x92 [a 2 \xe2\x88\x92 u h (a + )] + [u h (b \xe2\x88\x92 ) \xe2\x88\x92 u h (a + )] = b 2 \xe2\x88\x92 a 2 .\nThus, the solution at tn+1 = b is\n\nu h (b \xe2\x88\x92 ) = b 2 .\nThis solution is exact. Now, setting v = t for (4.6), it follows that\nNASA/TM\xe2\x80\x942011-216340\n\n19\n\n(4.6)\n\n\xe2\x88\x92 [a 2 \xe2\x88\x92 u h (a + )] a +\n\n1\n1 2\n2 3\n[b 2 \xe2\x88\x92 u h (a + )]\n(b \xe2\x88\x92 a 2 ) =\n[b \xe2\x88\x92 a 3 ] .\n(b \xe2\x88\x92 a )\n2\n3\n\nConsequently,\nu h (a + ) =\n\n1\n(2a 2 + 2ab \xe2\x88\x92 b 2 ) .\n3\n\nOr,\nu h (a + ) = a 2 \xe2\x88\x92\n\nh2\n(b \xe2\x88\x92 a ) 2\n.\n= a2 \xe2\x88\x92\n3\n3\n\nThis solution is a poor approximation to the exact solution u(a) = a2. However, observe that at the Radau\npoint (away from the right boundary b), namely, t = a + h/3, the linear function uh takes on the value\n\nu h (a + h / 3) = (a + h / 3) 2 ,\nwhich is again exact. See Figure 4.1. The above observation is consistent with the next assertion.\n\n4.1\n\nEquivalence Between DG and Radau IIA Methods\n\nIf the right Radau quadrature is employed, then the DG method via (4.5) is identical to the collocation\nmethod using s right Radau points as collocation points, i.e., the Radau IIA method. (As a consequence,\ndue to the equivalence result in the previous section, with such a quadrature, the DG, CG, and collocation\nmethods become identical.)\nThe key idea for the proof is the following. Since uh has a discontinuity or a jump across tn, the value\nuh\xe2\x80\xb2(tn) is not well defined (it includes the derivative of a jump, which involves the Dirac delta function).\nViewing this from another angle, the derivative uh\xe2\x80\xb2(t) on In incorporates no effect from the known\nboundary value uh (tn\xe2\x88\x92 ) . As a result, u\xe2\x80\xb2 for the ODE will be evaluated not by uh\xe2\x80\xb2 but by U\xe2\x80\xb2 where U, a\nfunction to be constructed, is continuous across all tn, and U (tn ) = uh (tn\xe2\x88\x92 ) . The continuous function U\nwill be obtained by adding a correction to uh.\n\n1\n\n8\n\n0.8\n\nuh\n\n0.6\n0.4\n\n6\n4\n\n0.2\n\nt0\n\n-0.2\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nt\n1 1\n\nuh\n\n2\n0.5\n\n(a)\n\n(b)\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nt\n\nFigure 4.1.\xe2\x80\x94The piecewise linear (s = 2) DG solution for u\xe2\x80\xb2(t) = 2t with initial condition u(0) = 0 and h = 1. (a) After\none step, the solution uh is exact at the Radau points t = 1 and t = 1/3; (b) the solution after three steps (note the\ndifferent scales).\n\nNASA/TM\xe2\x80\x942011-216340\n\n20\n\nTo define U, we need the following correction function g, which serves the purpose of eliminating the\ntrial function v (collocation methods do not use trial functions). This correction function, introduced for\nconservation laws in (Huynh 2006), is where the current approach differs from those in the literature. It\nleads to a DG formulation using the differential instead of integral equations, and results in a simplified\nversion of the DG method.\nTo deal with the correction term on the left hand side of (4.5), in view of the expression\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nuh\xe2\x80\xb2 (t )v(t ) dt , we ask the following question: can we define a polynomial g on In which possesses the\n\nproperty that for all v in P(s\xe2\x80\x931),\nt n+1\n\n\xe2\x88\xabt\n\nn\n\ng \xe2\x80\xb2 (t )v(t ) dt = \xe2\x88\x92 v(t n ) .\n\n(4.7)\n\nSuch a function will help eliminate the correction term and the test function. The answer to the above\nquestion is positive: applying integration by parts to the left hand side of (4.7), we have\nt n+1\n\n\xe2\x88\xabt\n\nn\n\ng \xe2\x80\xb2 (t )v(t ) dt = g (t n +1 )v(t n +1 ) \xe2\x88\x92 g (t n )v(t n ) \xe2\x88\x92\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\ng (t )v\xe2\x80\xb2(t ) dt .\n\n(4.8)\n\nThus, for (4.7) to hold, it suffices that\n\ng (t n ) = 1 , g (t n +1 ) = 0 ,\n\n(4.9)\n\nand\nt n+1\n\n\xe2\x88\xabt\n\nn\n\ng (t )v\xe2\x80\xb2(t ) dt = 0 for all v in P s \xe2\x88\x921 .\n\n(4.10)\n\nSince v is in Ps\xe2\x80\x931, v\xe2\x80\xb2 is in Ps\xe2\x80\x932; in addition, as v spans Ps\xe2\x80\x931, v\xe2\x80\xb2 spans Ps\xe2\x80\x932. Consequently, the above is\nequivalent to g being orthogonal to Ps\xe2\x80\x932:\nt n+1\n\n\xe2\x88\xabt\n\nn\n\ng (t ) w(t ) dt = 0 for all w in P s \xe2\x88\x92 2 .\n\n(4.11)\n\ng (t ) (t \xe2\x88\x92 t n ) j dt = 0 for j = 0, 1, ..., s \xe2\x88\x92 2 .\n\n(4.12)\n\nThat is,\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nIn other words, g approximates the function 0 in a least square sense. The requirement (4.11) or (4.12)\nprovides s \xe2\x80\x93 1 conditions to define g. Together with the two conditions in (4.9), we have a total of s + 1\nconditions. Therefore, we require g to be of degree s.\nOn the interval In, the right Radau polynomial of degree s satisfies conditions (4.11) and (4.9) (see\nFig. 4.2(a)). Let g be this right Radau polynomial. Then g can also defined by g(tn) =1 and g vanishes at\nthe s right Radau points on In. (For the relation between Legendre and Radau polynomials, see the\nAppendix.) Next, set\n\nU = uh + [uh (tn\xe2\x88\x92 ) \xe2\x88\x92 uh (tn+ )] g .\n\nNASA/TM\xe2\x80\x942011-216340\n\n21\n\n(4.13)\n\n1\n0.8\n0.6\n\n1.5\n\nuh (tn\xe2\x88\x92 ) 1.25\n\ng\n\n1\n\n0.4\n\nuh\n\n0.75\n\n0.2\n-0.2\n\nU\n\n0.2\n\n0.4\n\n0.8\n\n0.6\n\n1\n\n\xe2\x88\x92\nuh (tn +1 )\n\n0.5\n\n\xcf\x84\n\n0.25\n\nt\n\n-0.4\n\nt\n0.4\n\n0.2\n\n0.6\n\n0.8\n\n1\n\nn\ntn +1\n(b)\n(a)\nFigure 4.2.\xe2\x80\x94The DG method with s = 3. (a) The correction function g is the Radau polynomial of degree s on\ns\xe2\x80\x932\nI = [0,1]. It is defined by: g(0) =1, g(1) = 0, , and the projection of g onto P is the zero function. (b) The\npolynomial uh is of degree s \xe2\x80\x93 1 and is generally discontinuous across tn (thin curve); the polynomial U is of degree\n\xe2\x88\x92\ns and is continuous across tn (thick curve); U is defined by: U (t n ) = uh (t n\xe2\x88\x92 ) , U (t n +1 ) = uh (t n +1 ) , and the projections\ns\xe2\x80\x932\nof U and uh onto P are the same.\n\nThen, U is of degree s (whereas, uh is of degree s \xe2\x80\x93 1) as shown in Figure 4.2(b). Using (4.9), we obtain\n\nU (t n+ ) = u h (t n\xe2\x88\x92 )\n\n(4.14a)\n\nU (t n +\xe2\x88\x92 ) = u h (t n +\xe2\x88\x92 ) .\n1\n1\n\n(4.14b)\n\nand\n\nSince the above two equations hold for all n, replacing n + 1 by n in the latter, we have U (tn\xe2\x88\x92 ) = uh (tn\xe2\x88\x92 ) .\nTherefore, by (4.14a),\n\nU (t n+ ) = U (t n\xe2\x88\x92 ) = u h (t n\xe2\x88\x92 ) .\nThat is, U is continuous across all tn. Next, by (4.13),\n\nU \xe2\x80\xb2 = u h\xe2\x80\xb2 + [u h (t n\xe2\x88\x92 ) \xe2\x88\x92 u h (t n+ )] g \xe2\x80\xb2 .\nAs a consequence, using (4.7),\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nU \xe2\x80\xb2(t ) v(t ) dt = \xe2\x88\x92 [u h (t n\xe2\x88\x92 ) \xe2\x88\x92 u h (t n+ )] v(t n ) +\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t )v(t ) dt .\n\nTherefore, by (4.5),\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nU \xe2\x80\xb2(t ) v(t ) dt =\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nf (t , u h (t )) v(t ) dt .\n\n(4.15)\n\nNote that there is no correction term in the above weak formulation. Also note that whereas U appears on\nthe left hand side, uh appears on the right hand side. We need to replace uh by U. To this end, let tn,j,\nj = 1,\xe2\x80\xa6,s, be the s right Radau points. Since g vanishes at these points, by (4.13),\nU (t n, j ) = u h (t n, j ) .\n\nWe now use the right Radau quadrature. If the weights of the quadrature are bj, then (4.15) implies\nNASA/TM\xe2\x80\x942011-216340\n\n22\n\n(4.16)\n\ns\n\n\xe2\x88\x91 b j U \xe2\x80\xb2(tn, j ) v(tn, j )\nj =1\n\n=\n\ns\n\n\xe2\x88\x91 b j f (tn, j , uh (tn, j )) v(tn, j ) .\nj =1\n\nLet v be one of the basis functions Li, which are the Lagrangian polynomials of degree s \xe2\x80\x93 1 defined by\n(2.8) for the right Radau points. Then\n\nbi U \xe2\x80\xb2(t n, i ) = bi f (t n, i , u h (t n, i )) .\nTherefore, by (4.16), for i = 1,\xe2\x80\xa6,s,\n\nU \xe2\x80\xb2(t n, i ) = f (t n, i ,U (t n, i )) .\n\n(4.17)\n\nThe fact that U is of degree s, (4.14a), and the above shows that U is the solution by collocation method\nwith the right Radau points as collocation points. This completes the proof.\n\n4.2\n\nRemarks\n\nThe following remarks are in order.\nThe CG and DG solutions relate to each other as follows. Assume that the right Radau quadrature is\nemployed, and let u n = u h (t n\xe2\x88\x92 ) . For the CG method, the solution polynomial UCG is of degree s and\ndetermined by un and the values un,1,\xe2\x80\xa6,un,s at the s right Radau points. For the DG method, the\npolynomial uh is of degree s \xe2\x80\x93 1 and determined by the values un,1,\xe2\x80\xa6,un,s but not un. See Figure 4.2(b).\nThe polynomial UDG = U defined by (4.13) above is identical to UCG. Also note that with the right Radau\nquadrature, since cs = 1, we have tn,s = tn+1, and\nU DG (t n +1 ) = u n, s = u h (t n\xe2\x88\x92 1 ) = U CG (t n +1 ) .\n+\n\n(4.18)\n\nNext, we discuss accuracy. Since uh is of degree s \xe2\x80\x93 1, we expect uh(t) to have an error of O(hs). On the\nother hand, UCG is of degree s; therefore, its error on In is O(hs+1). Note that uh and UCG take on the same\nvalues at tn,1,\xe2\x80\xa6,tn,s, namely, un,1,\xe2\x80\xa6,un,s, respectively (see Fig. 4.2(b)). As a result, for the DG method, as\nvalues of uh, the solutions at the interior right Radau points, namely, un,1,\xe2\x80\xa6,un,s\xe2\x80\x931, have errors O(hs+1), one\norder higher than expected. As for u n, s = u h (t n\xe2\x88\x92 1 ) , it has an error of O(h2s). For example, with s = 2, i.e.,\n+\na piecewise linear uh, the value u n, 2 = u h (t n\xe2\x88\x92 1 ) is accurate to O(h4), and the method is of order 3,\n+\nwhereas, un,1 = uh(tn,1) has an error of O(h3), i.e., it is as good as a parabolic approximation.\nThe next remark concerns the function g defined by (4.7), i.e., for all v in Ps\xe2\x80\x931,\nt n+1\n\n\xe2\x88\xabt\n\nn\n\ng \xe2\x80\xb2 (t )v(t ) dt = \xe2\x88\x92 v(t n ) .\n\nThat is, for any v in Ps\xe2\x80\x931, the projection of v onto the line spanned by g\xe2\x80\xb2 is the value \xe2\x80\x93v(tn). Using\ndistribution theory, we can view g in the following manner. The above implies that on the subspace Ps\xe2\x80\x931,\nthe function \xe2\x80\x93g\xe2\x80\xb2 is equivalent to the Dirac delta function at t = tn:\n\n\xe2\x88\x92 g \xe2\x80\xb2 \xe2\x89\x88 \xce\xb4(t n ) .\nSince the integral of the Dirac delta function is the unitstep (or Heaviside) function,\n\xef\xa3\xb1 0 if t \xe2\x89\xa4 t n ,\n\xe2\x88\x92 g + constant \xe2\x89\x88 H (t \xe2\x88\x92 t n ) = \xef\xa3\xb2\n\xef\xa3\xb3 1 if t n < t \xe2\x89\xa4 t n +1.\nNASA/TM\xe2\x80\x942011-216340\n\n23\n\nBy choosing the constant to be 1, we obtain the result that g approximates the \xe2\x80\x98step-down function\xe2\x80\x99:\n\xef\xa3\xb1 1 if t \xe2\x89\xa4 t n ,\ng \xe2\x89\x88\xef\xa3\xb2\n\xef\xa3\xb3 0 if t n < t \xe2\x89\xa4 t n +1.\n\nThat is, g(tn) = 1, and g approximates the zero function on In.\n\n4.3\n\nA Generalization for DG Formulation\n\nThe DG formulation above can be generalized. One way is to use, for each boundary tn, a quantity that\nblends the upwind value u h (t n\xe2\x88\x92 ) and the downwind value u h (t n+ ) . Thus, for the left boundary\nevaluation in (4.3), the value to be employed is, with \xce\xb1 a parameter between 0 and 1,\n\nu n = \xce\xb1 u h (t n\xe2\x88\x92 ) + (1 \xe2\x88\x92 \xce\xb1 ) u h (t n+ ) .\n\n(4.19)\n\nIf \xce\xb1 = 1, then u n = u h (t n\xe2\x88\x92 ) ; \xce\xb1 = 1/2, then u n = [u h (t n\xe2\x88\x92 ) + u h (t n+ )] / 2 ; and, \xce\xb1 = 0, then un = uh (tn+ ) .\nThis approach to generalization was presented by Delfour, Hager, and Trochu (1981). For the right\n\xe2\x88\x92\n+\nboundary tn+1, in addition to u h (t n +1 ) , we also need u h (t n +1 ) . The use of such a value results in a\ncomplicated method.\n\n+\nHere, we introduce a generalization that does not employ u h (t n +1 ) by formulating the CG method in\nthe form of DG. Suppose un is given, and un+1 is to be calculated. Consider the CG method using, for the\nmoment, the Gauss quadrature whose evaluation points are the Gauss points denoted by tn,1,\xe2\x80\xa6,tn,s where\ntn < tn,1 < \xe2\x80\xa6 tn,s < tn+1. As shown in Section 3.0, the solution polynomial U = UCG is identical to the\ncollocation solution with collocation points tn,1,\xe2\x80\xa6,tn,s. That is, U is of degree s and interpolates un and the\ns collocation values un,1,\xe2\x80\xa6,un,s. Consider the polynomial of degree s \xe2\x80\x93 1 interpolating un,1,\xe2\x80\xa6,un,s (but not\nun) denoted by uh and shown in Figure 4.3(b). This polynomial plays the same role as uh of the DG\nmethod. In addition, on I = [0,1], let g be a polynomial of degree s that takes on the value 1 at \xcf\x84 = 0 and\nvanishes at \xcf\x84n,1,\xe2\x80\xa6,\xcf\x84n,s, i.e., g is the function \xcf\x860 defined in (3.9) and shown in Figure 4.3(a) (here, g is the\nLegendre polynomial on [0,1]). The polynomial U = UCG can be written as, with t = tn + \xcf\x84h,\n\nU (t ) = u h (t ) + [u n \xe2\x88\x92 u h (t n+ )] g ((t \xe2\x88\x92 t n ) / h) .\n\n(4.20)\n\nThe solution we are seeking is un+1 = U(tn+1),\n\nu n +1 = U (t n +1 ) = U (t n +\xe2\x88\x92 ) = u h (t n +\xe2\x88\x92 ) + [u n \xe2\x88\x92 u h (t n+ )] g (1) .\n1\n1\n\n(4.21)\n\nThat is, un+1 is obtained by adding to the value u h (t n +\xe2\x88\x92 ) a correction term which depends only on the\n1\njump u n \xe2\x88\x92 u h (t n+ ) at the left boundary. The question is: if U is the CG solution, then what is the\ncorresponding DG formulation for uh? Using the test space Ps\xe2\x80\x931 in the CG formulation, for any v in Ps\xe2\x80\x931,\n\n(U \xe2\x80\xb2, v) = ( f , v) .\n\n(4.22)\n\nApplying integration by parts to the left hand side above,\n(U \xe2\x80\xb2, v) = u n +1 v(t n +1 ) \xe2\x88\x92 u n v(t n +1 ) \xe2\x88\x92\n\nNext, by (4.20),\n\nNASA/TM\xe2\x80\x942011-216340\n\n24\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nU (t ) v\xe2\x80\xb2(t )dt .\n\n(4.23)\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nU (t ) v\xe2\x80\xb2(t )dt =\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\n{ u h (t ) + [u n \xe2\x88\x92 u h (t n+ )] g ((t \xe2\x88\x92 t n ) / h) } v\xe2\x80\xb2(t )dt .\n\nUsing the fact that g is orthogonal to Ps\xe2\x80\x932 (in fact, g is orthogonal to Ps\xe2\x80\x931),\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nU (t ) v\xe2\x80\xb2(t )dt =\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nu h (t ) v\xe2\x80\xb2(t )dt .\n\nwhere, again, v is in Ps\xe2\x80\x931 Thus, (4.23) implies\n(U \xe2\x80\xb2, v) = u n +1 v(t n +1 ) \xe2\x88\x92 u n v(t n ) \xe2\x88\x92\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nu h (t ) v\xe2\x80\xb2(t )dt .\n\n(4.24)\n\nApplying integration by parts on the last term above, we obtain\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nt n+1\n\n\xe2\x88\x92\nu h (t ) v\xe2\x80\xb2(t )dt = u h (t n +1 ) v(t n +1 ) \xe2\x88\x92 u h (t n+ ) v(t n ) \xe2\x88\x92\n\n\xe2\x88\xabt\n\nu h\xe2\x80\xb2 (t ) v(t )dt .\n\nn\n\nThe above two equations imply\nt n+1\n\n\xe2\x88\x92\n(U \xe2\x80\xb2, v) = [u n +1 \xe2\x88\x92 u h (t n +1 )] v(t n +1 ) \xe2\x88\x92 [ u n \xe2\x88\x92 u h (t n+ )] v(t n ) +\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t ) v(t )dt .\n\n(4.25)\n\nNext, by (4.21),\n\nu n +1 \xe2\x88\x92 u h (t n +\xe2\x88\x92 ) = [u n \xe2\x88\x92 u h (t n+ )] g (1) .\n1\nSubstitute the above into (4.25),\n(U \xe2\x80\xb2, v) = [u n \xe2\x88\x92 u h (t n+ )] g (1)v(t n +1 ) \xe2\x88\x92 [ u n \xe2\x88\x92 u h (t n+ )] v(t n ) +\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t ) v(t )dt .\n\nOr\n(U \xe2\x80\xb2, v) = [u n \xe2\x88\x92 u h (t n+ )] [ g (1)v(t n +1 ) \xe2\x88\x92 v(t n ) ] +\n\nt n+1\n\n\xe2\x88\xabt\n\nn\n\nu h\xe2\x80\xb2 (t ) v(t )dt .\n\n(4.26)\n\nTherefore, by (4.22),\n\n[u n \xe2\x88\x92 u h (t n+ )] [ g (1)v(t n +1 ) \xe2\x88\x92 v(t n ) ] + (u h\xe2\x80\xb2 , v) = ( f , v) .\n\n(4.27)\n\nNote that the above reduces to the DG formulation (4.5) if g(1) = 0, i.e., if \xcf\x84s =1.\nThis completes the generalization of the DG method. Also note that such a DG formulation is more\ninvolved than the CG formulation.\n\nNASA/TM\xe2\x80\x942011-216340\n\n25\n\n1\n\ng\n\n1.5\n\nun U\n1\n\n0.5\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n\xcf\x84\n\n0.5\n\n-0.5\n-1\n\nuh\n0.2\n\n-0.5\n\ntn\n\n(a)\n\n(b)\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nt\n\nun +1\n\ntn +1\n\nFigure 4.3.\xe2\x80\x94A generalization DG method for s = 3. (a) Here, the quadrature points are the Gauss points. The\nfunction g on I = [0,1] is of degree s and defined by the conditions that g(0) = 1, and g vanishes at the quadrature\npoints; for this case, g is the Legendre polynomial of degree s. (b) The polynomial uh is of degree s \xe2\x80\x93 1 and\ninterpolates the values un,1,\xe2\x80\xa6,un,s at the s quadrature points.\n\n5.0\n\nConclusions and Discussion\n\nIn summary, we studied the numerical solutions for ordinary differential equations using the\ncollocation, continuous Galerkin (CG), and discontinuous Galerkin (DG) methods. It was shown that if a\nquadrature formula using s evaluation points is employed, then the CG method is identical to the\ncollocation method using quadrature points as collocation points. Furthermore, if the quadrature formula\nis the right Radau one, then the DG and CG methods also become identical, and they reduce to the Radau\nIIA collocation method. We also present a generalization of DG that yields a method identical to CG and\ncollocation with arbitrary collocation points. As a result of these findings, both the CG and DG methods\ncan be formulated using the differential instead of integral form.\nIn addition to clarifying the relations among these methods, the equivalence results can be employed\nfor the high-order time discretization of conservation laws. It can also be applied to simplify the time\ndiscretization of the space-time DG methods.\n\nNASA/TM\xe2\x80\x942011-216340\n\n26\n\nAppendix A.\xe2\x80\x94Radau Polynomials\nSince the Radau polynomials are not widely known, we derive them below. The Radau polynomial of\ndegree s, which is determined by conditions (4.9) and (4.11) (or (4.12)), is defined here by using the\nLegendre polynomials. The advantage of such a definition is that it clarifies the relation between these\npolynomials as well as the orthogonality properties (to the various space of polynomials). Instead of the\ninterval [0,1], to be consistent with the standard Legendre polynomials, we employ the interval [\xe2\x80\x931,1]. If\ng is a polynomial on [\xe2\x80\x931,1], then the corresponding polynomial on [0,1] can easily be obtained by, for \xce\xb7\non [0,1], G(\xce\xb7) = g(2\xce\xb7 \xe2\x80\x93 1).\nWe now focus on I = [\xe2\x80\x931,1]. For any integer m \xe2\x89\xa5 0, let Pm be the space of polynomials of degree m or\nless. Then Pm is a vector space of dimension m + 1. A polynomial v is orthogonal to Pm if, for each l,\n0 \xe2\x89\xa4 l \xe2\x89\xa4 m,\n(v, \xce\xbe l ) =\n\n1\n\n\xe2\x88\xab \xe2\x88\x921 v(\xce\xbe) \xce\xbel d\xce\xbe = 0 .\n\nClearly, the criterion of being orthogonal to Pm provides m + 1 conditions (or equations).\nFor k = 0,1,2,\xe2\x80\xa6, let the Legendre polynomial Pk be defined on I = [\xe2\x80\x931,1] as the unique polynomial of\ndegree k satisfying the following k +1 conditions: it is orthogonal to Pk\xe2\x80\x931 and Pk (1) = 1. The Legendre\npolynomials are given by a recurrence formula (e.g., Hildebrand 1987):\n\nP0 = 1,\n\nP = \xce\xbe,\n1\n\nand, for k \xe2\x89\xa5 2,\nPk (\xce\xbe ) =\n\n2k \xe2\x88\x92 1\nk \xe2\x88\x921\n\xce\xbe Pk \xe2\x88\x921 (\xce\xbe ) \xe2\x88\x92\nPk \xe2\x88\x92 2 (\xce\xbe ) .\nk\nk\n\n(A.1)\n\nThe first few Legendre polynomials are plotted in Figure A.1(a). Useful properties of the Legendre\npolynomials are listed below. If k > m, then Pk is orthogonal to Pm. Next, Pk is an even function (involving\nonly even powers of \xce\xbe) for even k, and an odd function for odd k. For all k, the values at the boundaries\nare\n\nPk (\xe2\x88\x921) = (\xe2\x88\x921) k ,\n\n(A.2a)\n\nPk (1) = 1 .\n\n(A.2b)\n\nPk \xe2\x80\xb2 (\xe2\x88\x921) = (\xe2\x88\x921) k \xe2\x88\x921 k (k + 1) 2 ,\n\n(A.3a)\n\nPk \xe2\x80\xb2 (1) = k (k + 1) 2 .\n\n(A.3b)\n\nThe derivative values at the end points are\n\nIn addition, for k \xe2\x89\xa0 l, (Pk,Pl) = 0. Finally, the zeros of Pk are the k Gauss points on [\xe2\x80\x931,1].\nThe right Radau polynomial of degree k (k \xe2\x89\xa5 1) is defined by\nRR , k =\n\nNASA/TM\xe2\x80\x942011-216340\n\n(\xe2\x88\x921) k\n( Pk \xe2\x88\x92 Pk \xe2\x88\x921 ) .\n2\n\n27\n\n(A.4)\n\nThe letter R stands for \xe2\x80\x98Radau\xe2\x80\x99 and the subscript R for \xe2\x80\x98right\xe2\x80\x99. The factor (\xe2\x80\x931)k is nonstandard and is\nneeded so that (A.6a) below holds. The first few Radau polynomials are plotted in Figure A.1(b). The\nabove definition implies that RR,k is orthogonal to Pk\xe2\x80\x932. In addition, by (A.2),\n\nRR , k (\xe2\x88\x921) =1 .\n\n(A.5a)\n\nRR , k (1) = 0\n\n(A.5b)\n\nIt is important to note that RR,k, which is of degree k, is defined by the above two conditions and the k \xe2\x80\x93 1\nconditions that it is orthogonal to Pk\xe2\x80\x932. This definition of the Radau polynomial shows that it\napproximates the zero function in the sense of least squares. At the two boundaries, by using (A.3),\nR R , k \xe2\x80\xb2 (\xe2\x88\x921) = \xe2\x88\x92 k 2 2 ,\n\n(A.6a)\n\nR R , k \xe2\x80\xb2 (1) = (\xe2\x88\x921) k \xe2\x88\x921 k 2 .\n\n(A.6b)\n\nThe zeros of the Radau polynomial RR,k are the k right Radau points.\nFor later use, the Lobatto polynomial of degree k (k \xe2\x89\xa5 1) is defined by\n\nLo k = Pk \xe2\x88\x92 Pk \xe2\x88\x92 2 .\n\n(A.7)\n\nThe zeros of the Lobatto polynomial of degree k are the k Lobatto points; they include the two boundaries\n\xc2\xb11.\n1\n\nP2\n\n0\n-0.5\n\n0.6\n\nP3\n\n\xce\xbe\n\n-0.5\n\n0.4\n0.2\n\nP4\n\n0\n\nLegendre Polynomials\nand Gauss Points\n-1\n\nRadau Polynomials\nRR, 1\n\n0.8\n\nP1\n\n0.5\n\n-1\n\n1\n\nP0\n\n-0.2\n\nRR, 2\nRR, 3\nRR, 4\n\n-0.4\n-1\n-0.5\n0\n1\n0.5\n0\n(b)\n(a)\nFigure A.1.\xe2\x80\x94(a) Legendre polynomials and (b) right Radau polynomials.\n\nNASA/TM\xe2\x80\x942011-216340\n\n28\n\n0.5\n\n1\n\nAppendix B.\xe2\x80\x94Examples of Collocation Methods\nIn the following examples of collocation methods, we make several uncommon observations, which,\nhopefully, will shed some light on the matter. First, we write the collocation method in IRK form. Then\nwe calculate the solution for the ODE u\xe2\x80\xb2 = \xce\xbbu by assuming that\n\nun = 1 and h = 1 .\n\n(B.1)\n\nThe assumption h = 1 means, loosely put, h is absorbed into z where z = \xce\xbbh = \xce\xbb and, for order of accuracy\ncalculation, halving the step size takes the form of halving z. As for the stability function,\n\nR( z ) = u n +1 .\n\n(B.2)\n\nThe case of 2 Lobatto points corresponds to a Butcher array shown in Table B.1(a). The resulting\ncollocation method reduces to the Trapezoidal Rule:\nu n +1 = u n +\n\n1\n2\n\nh ( f n + f n +1 ) .\n\n(B.3)\n\nThe stability function and its error are, respectively,\n\n(\n\n)(\n\n)\n\nR( z ) = 1 + 1 z 1 \xe2\x88\x92 1 z , and E ( z ) = e z \xe2\x88\x92 R( z ) = \xe2\x88\x92\n2\n2\n\n1 3\nz + O( z 4 ) .\n12\n\n(B.4)\n\nThus, the method using 2 Lobatto points is of order 2. It is also A-stable as can be seen by Figure B.1(a).\n\nTABLE B.1.\xe2\x80\x94BUTCHER ARRAYS FOR 2-POINT COLLOCATION METHODS.\n\n1/ 4\n\n1/ 2 \xe2\x88\x92 3 6\n\n0\n\n0\n\n0\n\n1\n\n1/2\n\n1/2\n\n1/2\n\n1/2\n\n1/ 2 +\n\n3 6\n\n1/ 4 +\n\n1/ 4 \xe2\x88\x92\n3 6\n\n1/2\n\n(a) Lobatto\n\n3 6\n\n1/ 4\n1/2\n\n(b) Gauss\n\nFor the case of two Gauss points, the Butcher array is shown in Table B.1(b). Using assumption (B.1),\nu n,1 =\n\n1\xe2\x88\x92 \xce\xbb 3 / 6\n1 \xe2\x88\x92 \xce\xbb / 2 + \xce\xbb2 / 12\n\nand\n\nu n, 2 =\n\n1+ \xce\xbb 3 / 6\n.\n1 \xe2\x88\x92 \xce\xbb / 2 + \xce\xbb2 / 12\n\n(B.5)\n\n1 + z / 2 + z 2 / 12\n1 \xe2\x88\x92 z / 2 + z 2 / 12\n\n(B.6)\n\nThe solution at tn+1 and the stability function are, respectively,\nu n +1 =\n\n1 + \xce\xbb / 2 + \xce\xbb2 / 12\n1 \xe2\x88\x92 \xce\xbb / 2 + \xce\xbb2 / 12\n\nand\n\nR( z ) =\n\nAt the collocation points, un,1 and un,2 respectively approximate e z c1 and e z c2 ; the errors are,\nen,1 = e z c1 \xe2\x88\x92 u n,1 \xe2\x89\x88 0.008019 z 3 + 0.005167 z 4 + 0.002008 z 5 + O( z 6 ) ,\nen, 2 = e z c 2 \xe2\x88\x92 u n, 2 \xe2\x89\x88 \xe2\x88\x92 0.008019 z 3 \xe2\x88\x92 0.005167 z 4 + 0.002008 z 5 + O( z 6 ) .\n\nNASA/TM\xe2\x80\x942011-216340\n\n29\n\nand\n\n(B.7)\n\n1\n0.8\n0.6\n0.4\n0.2\n0\n\n1\n0.8\n0.6\n0.4\n0.2\n0\n\n4\n2\n-4\n\n0\n\n-2\nx\n\n-2\n\n0\n\n2\n\n4\n\niy\n\n4\n2\n\n-4\n\n0\n\n-2\nx\n\n-4\n\n(a) 2 Lobatto points\n\n0\n\n-2\n\n2\n\n4\n\niy\n\n-4\n\n(b) 2 Gauss points\n\nFigure B.1.\xe2\x80\x94Plot of |R(z)| for 2-point collocation methods where z = x + iy varies on the complex plane. On the region\n{z; |R(z)| > 1}, the plot is cut off (flat part); the region z; |R(z)| \xe2\x89\xa4 1} is the stability domain S. The two methods are Astable: (a) 2 Lobatto points and (b) 2 Gauss points.\n\nAs expected, these errors are O(z3). The cancellation of errors yields a solution un+1 with an error of O(z5):\n\nE ( z ) = e z \xe2\x88\x92 R( z ) = z 5 / 720 + O( z 6 ) = 0.001389 z 5 + O( z 6 ) .\n\n(B.8)\n\nThus, the (2-stage) collocation method using 2 Gauss points is of order 4. For comparison, the leading term\nof the error of the 4-stage explicit RK method is z5/5! = z5/120 = 0.008333z5, which is six times larger.\nConcerning stability, the method using two Gauss points is A-stable as can be seen in Figure B.1(b).\nNote that with two points (or two evaluations), the Gauss quadrature is exact for a cubic (its degree of\nprecision is 3). Next, if the exact u\xe2\x80\xb2 is a cubic, then the exact u is a quartic and, in this case, un+1 is exact.\nSince un+1 is exact for the case of a quartic u, for the general case, un+1 has an error of O(h5), a fact\nconsistent with (B.8).\nFor the case of 2 left Radau points, the Butcher array is shown in Table B.2(a). Using assumption\n(B.1),\n\nu n,1 = 1\n\nand\n\nu n, 2 = (1 + \xce\xbb / 3) (1 \xe2\x88\x92 \xce\xbb / 3) .\n\n(B.9)\n\nThe solution at tn+1 and the stability function are, respectively,\nun +1 =\n\n1 + 2\xce\xbb / 3 + \xce\xbb 2 / 6\n1\xe2\x88\x92 \xce\xbb / 3\n\nand R( z ) =\n\n1 + 2z / 3 + z 2 / 6\n1\xe2\x88\x92 z / 3\n\n(B.10)\n\nAt c2 = 2/3, un,2 approximates e2z/3 with an error of\nen, 2 = e 2 z / 3 \xe2\x88\x92 u n, 2 = \xe2\x88\x92 (2 / 81) z 3 + O( z 4 ) .\n\n(B.11)\n\nThe solution un+1 approximates ez with an error of\n\nE ( z ) = e z \xe2\x88\x92 R( z ) = \xe2\x88\x92 z 4 / 72 + O( z 5 ) .\n\n(B.12)\n\nThat is, un,2 has an error of O(z3), whereas un+1, O(z4). Thus, the collocation method using 2 left Radau\npoints is of order 3. Concerning stability, this method is not A-stable as can be seen in Figure B.2(a).\n\nNASA/TM\xe2\x80\x942011-216340\n\n30\n\n| R( z ) |\n\n1\n0.8\n0.6\n0.4\n0.2\n0\n-7.5\n\n| R( z ) |\n\n1\n0.8\n0.6\n0.4\n0.2\n0\n\n5\n2.5\n0\n\n-5\n\n-2.5\nx\n\niy\n\n(a) 2 left Radau points\n\n2.5\n0\n\n-2.5\n\n0\n\n5\n\n-5\n\n0\n2.5\nx\n\n5\n\niy\n\n-2.5\n7.5\n75\n\n-5\n\n(b) 2 right Radau points\n\nFigure B.2.\xe2\x80\x94Plot of |R(z)| for 2-point collocation methods where z = x + iy varies on the complex plane. On the region\n{z; |R(z)| > 1}, the plot is cut off; the region {z; |R(z)| \xe2\x89\xa4 1} is the stability domain S. (a) The left Radau method is not\nA-stable. (b) The right Radau method is L-stable, thus, also A-stable.\nTABLE B.2.\xe2\x80\x94BUTCHER ARRAYS FOR 2-POINT COLLOCATION METHODS\n1/3\n5/12\n\xe2\x88\x921 / 12\n0\n0\n0\n2/3\n1/3\n1/3\n1\n3/4\n1/ 4\n1/4\n3/4\n3/4\n1/4\n(a) 2 left Radau points\n(b) 2 right Radau points\n\nFor the case of 2 right Radau points, the Butcher array is shown in Table 2.2(b). Using assumption\n(B.1),\nu n ,1 =\n\n1\xe2\x88\x92 \xce\xbb / 3\n1 \xe2\x88\x92 2\xce\xbb / 3 + \xce\xbb2 / 6\n\nand\n\nun, 2 =\n\n1+ \xce\xbb / 3\n.\n1 \xe2\x88\x92 2\xce\xbb / 3 + \xce\xbb2 / 6\n\n(B.13)\n\nSince c2 = 1, we have un,2 = un+1, and\nR( z ) =\n\n1+ z / 3\n1 \xe2\x88\x92 2z / 3 + z2 / 6 .\n\n(B.14)\n\nAt c1 = 1/3, un,1 approximates ez/3 with an error of\nen,1 = e z / 3 \xe2\x88\x92 un,1 = (2 / 81) z 3 + O( z 4 )\n\n.\n\n(B.15)\n\nThe solution un+1 approximates ez with an error of\n\nE ( z ) = e z \xe2\x88\x92 R( z ) = e z \xe2\x88\x92 un +1 =\n\nz 4 / 72 + O( z 5 ) .\n\n(B.16)\n\nThat is, un,1 has an error of O(z3), whereas, un+1, O(z4). Thus, the (2-stage) collocation method using 2\nright Radau points is of order 3. For comparison, the error of the standard 3-stage explicit Runge-Kutta\n(RK) method is \xce\xbb4/(4!) = \xce\xbb4/24, which is three times larger. Concerning stability, this Radau method is Lstable as can be seen in Figure B.2(b). Collocation methods using right Radau points are called Radau IIA\nmethods (see, e.g., Lambert 1991 or Hairer and Wanner 1991).\nNote that the errors for the left Radau case in (B.11) and (B.12) and those for the right Radau case in\n(B.15) and (B.16) are of opposite sign and same magnitude. Also note that the curve {z; |R(z)| = 1} for the\n\nNASA/TM\xe2\x80\x942011-216340\n\n31\n\nleft Radau method in Figure B.2(a) and that for the right Radau method in Figure B.2(b) are reflections of\neach other about the origin of the complex plane. Indeed, the equations for these curves are, respectively,\nby (B.10) and (B.14),\n| 1 + 2 z + 1 z 2 | = | 1 \xe2\x88\x92 1 z | and | 1 \xe2\x88\x92 2 z + 1 z 2 | = | 1 + 1 z | .\n3\n3\n3\n6\n3\n6\n\n(B.17)\n\nReplacing z by \xe2\x80\x93z for the equation on the left, we obtain that on the right, and the observation follows.\nThe above observations on the errors as well as the symmetry of the curves {z; |R(z)| = 1} between the left\nand right Radau methods hold for the general case of s collocation points as well.\nFinally, loosely put, the more biased toward tn+1 are the collocation points (e.g., right Radau points),\nthe more stable is the method.\n\nReferences\nS. Adjerid, K.D. Devine, and J.E. Flaherty and L. Krivodonova, \xe2\x80\x9cA posteriori error estimation for\ndiscontinuous Galerkin solutions of hyperbolic problems,\xe2\x80\x9d Computer Methods in Applied Mechanics and\nEngineering, 191 (2002), pp. 1097\xe2\x80\x931112.\nO. Axelsson, \xe2\x80\x9cA class of A-stable Methods,\xe2\x80\x9d Nordisk Tidskr. Informationbehandling (BIT), v. 9, 1969,\npp. 185\xe2\x80\x93199.\nR.E. Bauer, \xe2\x80\x9cDiscontinuous Galerkin methods for ordinary differential equations,\xe2\x80\x9d Master Thesis, Applied\nMathematics, University of Colorado, 1995.\nB. Cockburn, G. Karniadakis, and C.-W. Shu, \xe2\x80\x9cThe development of discontinuous Galerkin methods,\xe2\x80\x9d in\nDiscontinuous Galerkin methods: Theory, Computation, and Application, B. Cockburn, G. Karniadakis,\nand C.-W. Shu, eds., Lecture Notes in Computational Science and Engineering, Springer (2000), pp. 3\xe2\x80\x9350\nG. J. Cooper, \xe2\x80\x9cInterpolation and quadrature methods for ordinary differential equations,\xe2\x80\x9d Math. Comp., v. 22,\n1968, pp. 69\xe2\x80\x9376.\nM. Delfour, W. Hager, and F. Trochu, \xe2\x80\x9cDiscontinuous Galerkin methods for ordinary differential equations,\xe2\x80\x9d\nMath. Comp., v. 36, 1981, pp. 455\xe2\x80\x93473.\nK. Eriksson, D. Estep, P. Hansbo, and C. Johnson, \xe2\x80\x9cComputational Differential Equations,\xe2\x80\x9d Cambridge\nUniversity Press (1996).\nC.A.J. Fletcher, \xe2\x80\x9cComputational Galerkin Methods,\xe2\x80\x9d Springer-Verlag (1984).\nE. Hairer, S.P. Norsett, and G. Wanner, \xe2\x80\x9cSolving ordinary differential equations I,\xe2\x80\x9d 2nd edition, SpringerVerlag (1993).\nE. Hairer and G. Wanner, \xe2\x80\x9cSolving ordinary differential equations II,\xe2\x80\x9d Springer-Verlag (1991).\nF.B. Hildebrand, \xe2\x80\x9cIntroduction to Numerical Analysis,\xe2\x80\x9d Dover (1987).\nB. Hulme, \xe2\x80\x9cDiscrete Galerkin and related one-step methods for ordinary differential equations,\xe2\x80\x9d Math. Comp.,\nv. 26, 1972, pp. 881\xe2\x80\x93891.\nH.T. Huynh, \xe2\x80\x9cA flux reconstruction approach to high-order schemes including discontinuous Galerkin\nmethods,\xe2\x80\x9d 18th AIAA-CFD Conference, AIAA\xe2\x80\x932007\xe2\x80\x934079.\nJ.D. Lambert, \xe2\x80\x9cNumerical methods for ordinary differential systems,\xe2\x80\x9d John Wiley and Sons (1991).\nP. LeSaint and P.A. Raviart, \xe2\x80\x9cOn the finite element method for solving the neutron transport equation,\xe2\x80\x9d in C.\nde Boor, ed., \xe2\x80\x9cMathematical aspects of finite elements in partial differential equations,\xe2\x80\x9d Academic Press\n(1974), pp. 89\xe2\x80\x93145.\nW.H. Reed and T.R. Hill, Triangular mesh methods for the neutron transport equation, Tech. Report LA\xe2\x80\x93UR\xe2\x80\x93\n73\xe2\x80\x93479, Los Alamos Scientific Laboratory, 1973.\nJ.J.W. van der Vegt and H. van der Ven \xe2\x80\x9cSpace-time discontinuous Galerkin finite element method with\ndynamic grid motion for inviscid compressible flows, Part I. General formulation,\xe2\x80\x9d J. Comput. Phys., 182\n(2002) 546\xe2\x80\x93585.\nK. Wright, \xe2\x80\x9cSome relationship between implicit Runge-Kutta, Collocation and Lanczos \xcf\x84-methods, and their\nstability properties,\xe2\x80\x9d BIT, v. 10, 1970, pp. 217\xe2\x80\x93227.\n\nNASA/TM\xe2\x80\x942011-216340\n\n32\n\nForm Approved\nOMB No. 0704-0188\n\nREPORT DOCUMENTATION PAGE\n\nThe public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, gathering and maintaining the\ndata needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this collection of information, including suggestions for reducing this\nburden, to Department of Defense, Washington Headquarters Services, Directorate for Information Operations and Reports (0704-0188), 1215 Jefferson Davis Highway, Suite 1204, Arlington, VA 22202-4302.\nRespondents should be aware that notwithstanding any other provision of law, no person shall be subject to any penalty for failing to comply with a collection of information if it does not display a currently valid OMB\ncontrol number.\nPLEASE DO NOT RETURN YOUR FORM TO THE ABOVE ADDRESS.\n\n1. REPORT DATE (DD-MM-YYYY)\n\n2. REPORT TYPE\n\n01-08-2011\n\nTechnical Memorandum\n\n3. DATES COVERED (From - To)\n5a. CONTRACT NUMBER\n\n4. TITLE AND SUBTITLE\n\nCollocation and Galerkin Time-Stepping Methods\n5b. GRANT NUMBER\n5c. PROGRAM ELEMENT NUMBER\n5d. PROJECT NUMBER\n\n6. AUTHOR(S)\n\nHuynh, H., T.\n5e. TASK NUMBER\n5f. WORK UNIT NUMBER\n\nWBS 599489.02.07.03.03.03.03\n7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES)\n\n8. PERFORMING ORGANIZATION\nREPORT NUMBER\n\nNational Aeronautics and Space Administration\nJohn H. Glenn Research Center at Lewis Field\nCleveland, Ohio 44135-3191\n\nE-17277\n\n9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES)\n\n10. SPONSORING/MONITOR'S\nACRONYM(S)\n\nNational Aeronautics and Space Administration\nWashington, DC 20546-0001\n\nNASA\n11. SPONSORING/MONITORING\nREPORT NUMBER\n\nNASA/TM-2011-216340\n12. DISTRIBUTION/AVAILABILITY STATEMENT\n\nUnclassified-Unlimited\nSubject Category: 02\nAvailable electronically at http://www.sti.nasa.gov\nThis publication is available from the NASA Center for AeroSpace Information, 443-757-5802\n13. SUPPLEMENTARY NOTES\n\n14. ABSTRACT\n\nWe study the numerical solutions of ordinary differential equations by one-step methods where the solution at tn is known and that at tn+1 is\nto be calculated. The approaches employed are collocation, continuous Galerkin (CG) and discontinuous Galerkin (DG). Relations among\nthese three approaches are established. A quadrature formula using s evaluation points is employed for the Galerkin formulations. We show\nthat with such a quadrature, the CG method is identical to the collocation method using quadrature points as collocation points. Furthermore,\nif the quadrature formula is the right Radau one (including tn+1), then the DG and CG methods also become identical, and they reduce to the\nRadau IIA collocation method. In addition, we present a generalization of DG that yields a method identical to CG and collocation with\narbitrary collocation points. Thus, the collocation, CG, and generalized DG methods are equivalent, and the latter two methods can be\nformulated using the differential instead of integral equation. Finally, all schemes discussed can be cast as s-stage implicit Runge-Kutta\nmethods.\n15. SUBJECT TERMS\n\nNumerical solution for ordinary differential equations\n16. SECURITY CLASSIFICATION OF:\na. REPORT\n\nb. ABSTRACT\n\nU\n\nU\n\n17. LIMITATION OF\nABSTRACT\nc. THIS\nPAGE\n\nU\n\nUU\n\n18. NUMBER\nOF\nPAGES\n\n38\n\n19a. NAME OF RESPONSIBLE PERSON\n\nSTI Help Desk (email:help@sti.nasa.gov)\n19b. TELEPHONE NUMBER (include area code)\n\n443-757-5802\nStandard Form 298 (Rev. 8-98)\nPrescribed by ANSI Std. Z39-18\n\n"