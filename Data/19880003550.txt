b'~\n\nNASA Technical Memorandum 86703\n\nCGI Delay Compensation\n\nRichard E. McFarland\nAmes Research Center\nMoflett FieZd, CaZifoomia\n\nNational Aeronautics\nand Space Administration\n\nScientific and Technical\nInformation Branch\n1986\n\nTABLE OF CONTENTS\nPage\n\n..........................................................................\n\n1\n\nINTRODUCTION . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nPerkin-Elmer Computer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nFrameCalculator . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nScan Line Processor . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n1\n1\n1\n1\n\nTHROUGHPUT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nDelaysources . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2\n2\n\nSCENE PRESENTATION DELAY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nSample Rate Conversion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nMaximumTimeDelay . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2\n2\n3\n\nSUMMARY\n\n..........................................................\n\n3\n\nCOMPENSATION . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nLinearApproach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nTheTunedCorrector . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nSymmetricData . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nTheAlgorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4\n4\n5\n6\n6\n\nASYNCHRONOUS MODEL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nModel Verification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nProjection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nApplication of the Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n7\n7\n7\n8\n\n.......................................................................\n\n8\n\n.........................................................\n\n10\n\n.......................................................................\n\n11\n\nMODEL TRANSFER FUNCTION\n\nCONCLUSIONS\nAPPENDIX I\n\n.\nPERIODIC\n\nREFERENCES\n\nDELAY\n\nTABLES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n12\n\n...........................................................................\n\n14\n\nFIGURES\n\nPRECEDLNG PAGE BLANK NOT f U E D\n\niii\n\nSUMMARY\n\nComputer-generated graphics in real-time helicopter simulation produces objectionable scenepresentation time delays. In the flight simulation laboratory at Ames Research Center, it has been\ndetermined that these delays have an adverse influence on pilot performance during aggressive tasks\n(NOE)maneuvers.\nsuch as nap-of-the-Earth\nUsing contemporary equipment, computer generated image (CGI) time delays are an unavoidable\nconsequence of the operations required for scene generation. However, providing that magnitude\ndistortions at higher frequencies are tolerable, delay compensation is possible over a restricted frequency range. This range, assumed to have an upper limit of perhaps 10 or 15 radlsec, conforms\napproximately to the bandwidth associated with helicopter handling qualities research.\nA compensation algorithm is introduced here and evaluated in terms of tradeoffs in frequency\nresponses. The algorithm has a discrete basis and accommodates both a large, constant transport\ndelay interval and a periodic delay interval, as associated with asynchronous operations.\n\nINTRODUCTION\n\nFlight simulation research at the Ames facility includes\nvarious computer, motion base, and subsystem configuration\noptions. Either an electro-mechanical camera/model board\ndevice, or a Singer-Link CGI system are available for scene\npresentation. Despite an adequate bandwidth capacity for\nhelicopter research, the model-board\xe2\x80\x99s display leaves something to be desired because of its restricted field of view. In\ncontrast, the multi-window CGI, while manifesting minor\ndeficiencies in scene content and texture, is valuable for pilot\ncues. However, owing to delays in the transmission of position and orientation information, CGI frequency responses\nare degraded within the operational bandwidth of the pilot.\nThe Singer-Link CGI system operates asynchronously\nwith a host computer, although the \xe2\x80\x9ctime of data transfer\xe2\x80\x9d\nis tagged by an accompanying interrupt signal. Data flows\nsequentially through three CGI processors: (1) the PerkinElmer Computer, (2) the Frame Calculator, and (3) the Scan\nLine Processor. This flow is outlined in figure 1. The processors have the following functions:\n\nPerkin-Elmer Computer\nThe P-E computer is also called the scene management\ncomputer. One of its functions includes the collecting of\nmathematical descriptions of objects to be used in the scene\nwhich requires extensive data retrieval from disc storage.\nThe arrival of new position and orientation data in the P-E\n\ncomputer is accompanied by an interrupt signal; however,\nscene management proceeds with previous data at a 30 Hz\nrate.\n\nFrame Calculator\nThe Frame Calculator is also called the geometric processing computer, or digital image generator (DIG). Geometric\nprocessing is the conversion of mathematical descriptions of\nthree-dimensional data base objects into two dimensions, as\nassociated with the coordinates at the display.\n\nScan Line Processor\nThe Scan Line Processor is also called the video processor.\nIt performs the steps necessary to define the image at each\npicture element (including considerations of occlusion),\nand generates the video display signals.\nWhen these processors perform their required functions, a\ntime delay occurs between the commanded presentation of\nthe host computer and the actual display. This delay consists\nof \xe2\x80\x9ca pure transport delay\xe2\x80\x9d component plus a \xe2\x80\x9cperiodic\xe2\x80\x9d\ncomponent, which are quantified herein. The discrete nature\nof these delay sources suggests that a compensation scheme\nalso have a discrete (rather than continuous) basis. This\nis the approach used here. Whenever possible, the results are\ndisplayed using conventional parametric representations,\nsuch as magnitude and phase diagrams.\n\nTHROUGHPUT\n\nvalue is constant, and is given here by Tc; it is the major\nsource of CGI response degradation.\n\nThe major component of time delay is the workload\nrequired to perform the above processes. This workload is\nequivalent to the CGI system throughput:\n\nPeriodic d e l a p Asynchronous operation of a CGI processor with respect to a host computer produces a time delay\nthat appears to be random, but is actually periodic. Harmonics of this delay may also be present, depending upon the\nhost computer cycle time T. Periodic delay, given here by\nT~(rn),\nvaries at a 30-Hz rate. (This will be discussed under\nMaximum Time Delay.)\n\n\xe2\x80\x9c. . . the system throughput (defined as the\ntime it takes to complete a scene after the\nparameters of the viewpoint become available)\nmust be so fast that the delay does not distract the observer. The commonly used\nupdate requirement is 100 msec\xe2\x80\x9d (ref. 1).\n\xe2\x80\x9cThroughput\xe2\x80\x9d is pure transport delay. However, other\ncomponents of time delay also exist in simulation; the sum\nof these components degrades simulation fidelity.\nDelay Sources\nFive sources of time delay in discrete simulation are\nidentified in this section. Two of these, pure transport delay\nand periodic delay, are the major causes of CGI response\ndegradation.\n\nTime delay due to discrete realization- When the discrete\nsample rate is high compared to the frequency content\ndelivered by the model, phase differences between continuum and discrete representations are generally small.\nEquivalent time delays are functions of frequency, and over\nsome bandwidth may actually produce lead rather than lag,\ndepending upon the discrete parameters. This influence is\nrelatively negligible for a \xe2\x80\x9csufficiently band-limited\xe2\x80\x99\xe2\x80\x99 system\n(ref. 2 ) , such as that assumed here.\nLoiter delay- In the context of this paper, loiter delay\ndoes not exist. Quoted values for loiter delay, on the order\nof 20 msec, indicate that it is usually identified with the\nmean value of the P-E computer\xe2\x80\x99s asynchronous operational\ndelay, more properly given as 16.67 msec. However, this\nquantity is not significant here; the host computer\xe2\x80\x99s 1/0\ncycle time T actually determines the frequency distribution\nfunction of the delay, and it is periodic rather than random.\nPeriodic delay is handled below, and includes this \xe2\x80\x9cloiter\xe2\x80\x9d\ncontribution.\nThere is some evidence that a small transmission delay\n(which might be called loiter delay) of approximately 6 msec\nexists in our facility configuration (ref. 3), but this value is\nso small that it is ignored here.\nPure transport delay- The P-E Processor, the Frame\nCalculator, and the Scan Line Processor operate in parallel at\n30 Hz. However, information flows serially through each of\nthese components because of their pipeline architecture.\nScene presentation thus occurs 100 msec after information\nutilization (not acceptance) by the P-E computer. This delay\n2\n\nZero-order hold delay- Because of the 30-Hz data refresh\nrate of CGI monitors, scenes are presented in accordance with\nthe zero-order hold phenomenon, with an average equivalent\ntime delay of 16.67 msec. When this phenomenon is considered along with the electronics of continuous scan line\ngeneration by the video processor, which also has an average\ntime delay of 16.67 msec, the net result is a pure transport\ndelay of 33.33 msec. The zero-order hold delay may thus be\nignored when the total value of 33.33 msec is attributed to\nthe Scan Line Processor.\nSCENE PRESENTATION DELAY\n\nFigure 1 outlines the relevant processes in the CGI loop\nfor the purpose of examining scene presentation delays\nwhich are caused by pure transport delay and periodic\ndelay. The host computer produces data each T , which is\nassumed to be correctly synchronized with real time, and 1\nimmediately transferred (neglecting any residual loiter delay)\nAs shown in figure 1, this transfer is\nto the P-E buffer\naccompanied by an interrupt signal. This Data-Ready Interrupt (DRI) is transmitted by the host computer each I/O\ncycle time T , and accompanied by the data buffer X . The\ninterrupt is serviced by the P-E computer without interfering\nwith current operations on the extant buffer Y . The data\nbuffer X replaces the data buffer Y every 33.33 msec within\nthe P-E computer.\n\n(a.\n\nSample Rate Conversion\nDetermining the maximum value of periodic time delay\nfor an arbitrary host-computer cycle time T requires a\nnumerical analysis based upon least common multiples. For\ncycle times restricted to integer multiples of milliseconds, the\nanalysis proceeds as follows:\nThe host computer produces a signal x(n) sampled at the\nrate F = 1/T, and the P-E computer observes the signal\ny(m) sampled at the rate F = l/T\xe2\x80\x98. Where N and M are\nintegers, the ratio of sampling periods may be expressed as a\nrational fraction:\n\n1\n\ni\n\nI\n\nI\nt\nI\n1\n\nThe ratios of integers ( M / N ) will be seen to be important in\nthe following material. Using the P-E\xe2\x80\x99s sample rate of 30 Hz,\nequation (1) becomes\n\ncomponent is given by\n\nT A ( ~=)TA(m + N ) = T(m/(30T)- [m/(30T) J) (4)\n\n1\n\ni\nI\n\ni\n\n(33.33 ...)/T = 100/(3T) = M / N\n\n(2)\n\nwhere T is an integer number of milliseconds. Given that N\nis the least common divisor in equation ( l ) , it may be shown\n(ref. 4) that the system response is periodic in m with period\nN . The period of time delay is thus given by\n\nI\n\nP = NT\xe2\x80\x98 = N/30 (sec)\n\n1\nI\n\nIr\n\n(3)\n\nwhen the fraction given by equation (2) has been reduced to\nits lowest terms, i.e. M and N are relatively prime (to each\nother). Values for M and N over a wide range of hostcomputer cycle times T are shown in tables 1 and 2.\nFor example, when T = 60 msec equation (2) reduces to\nM/N = 5/9. In the range of host computer cycle times from\none to 70 msec the period P may be as small asO.1 sec (e.g.,\nwhen T = 50 msec), or as large as 100 times the host computer\xe2\x80\x99s cycle time (e.g., 6.9 sec for T = 69 msec). The period\nof time delay is given in figure 2(a), where the cycle time T\nof the host computer is an integer number of milliseconds.\nHarmonics of this period also occur for various cycle times.\n\nMaximum Time Delay\n\niI\nI\n\nI\n\nc\nc\n\nBoth the maximum and average scene presentation\ntime delays are shown in figure 2(b), as a function of cycle\ntime. This figure illustrates the discontinuous behavior\nof the asynchronous system as a function of its primary\nparameter, T .\nThe data in figure 2(b) agree with measured data acquired\nin a previous study (ref. 5), but this analysis draws a slightly\nmodified conclusion. Paulk reports a linear relationship\nbetween T and lag, but it is shown here that only to a first\napproximation does a linear relationship exist between the\nvisual time delay and the cycle time. Also, the additional\ncomputer cycle of the reference (a technique of measurement) is not pertinent. Without compensation of any sort,\nthe model/CGI average time delay may be approximated by\n100 msec plus one-half of the cycle time of the host computer; but for 50 msec, for instance, this is a very pessimistic\napproximation. It is assumed that the host computer will\ntransmit the correct command as synchronized with real\ntime; otherwise the results are distorted by the discrete integration algorithms. This assumption is not invalidated if the\ndrive signal is a control input of the pilot. Inputs, which are\ngenerally force or moment proportional, may be assumed to\nbe correctly integrated within the host computer.\nThe periodic component of time delay may be written\nanalytically. At the 30-Hz rate, where \xe2\x80\x9ctime\xe2\x80\x9d may be given\nas t = m/30 sec (within the P-E computer), the periodic delay\n\nIn this expression the half brackets([ 1) denote the least\ninteger operation. The interval of time TA(m) constitutes\nthe \xe2\x80\x9cprojection interval\xe2\x80\x9d over which the P-E computer\ncalculates extrapolated positions by use of the products of\nvelocity times TA(m). This projection operation will be\ndiscussed further once the subject of compensation is\nintroduced. (See \xe2\x80\x9cProjection.\xe2\x80\x9d)\nThe total time delay in the asynchronous system of\nfigure 1 has the periodic component given in equation (4).\nThe minimum time delay is the pure transport delay\nTc = 100 msec, while the maximum time delay is given by\nTc t TA(m), where m increments at 30-Hz. Time delays as\nfunctions of cycle time are illustrated in figures 3(a) through\n3(1) for cycle times in the range of 49 to 60 msec (each\nmsec). The fundamental period of time delay is also shown in\neach of these figures, and agrees with values previously given\nin figure 2(a) for a large range of cycle times. Harmonics are\nalso observed for certain cycle times. The maximum value for\nTA(m) is less than the cycle time T , and the average value\nis one-half the maximum value. These facts are demonstrated\nin the Appendix. Tables 1 and 2 are provided for clarification. In these tables the value rn(m\xe2\x80\x99ax) is the value of m\nwhen TA(m) achieves its maximum value over the period P.\nFrom the above it is concluded that total time delay is\nalways less than the sum of cycle time plus pure transport\ndelay.\nMODEL TRANSFER FUNCTION\nIn this section a second-order transfer function is developed that approximates specific aircraft behavior; in simulation this behavior was recently used to identify delay\nproblems in CGI responses. rhis transfer function is selected\nas a basis for the study of the asynchronous logic of figure 1.\nScene presentation delays have been identified as causing\ndegradation related to erroneous pilot cues in the XV-15\n(Tilt Rotor, UH-60A) simulation model, (ref. 6) especially\nin roll response (ref. 7). For the purpose of simplification,\nan approximate second-order system is used in this analysis.\nThe system closely matches the observed hover response\nof the XV-15 in the roll axis. The second-order system\nhas the natural frequency w = 7.259 rad/sec and damping\n= 0.4547. Using these parameters, the continuous response\nof the model is shown as a parametric curve in both\nfigures 4(a) and 4(b). The discrete equivalent of this system\nis also given at the specific cycle time of 60 msec.\nIn order to convert the system into an equivalent discrete\nmodel, the specific integration algorithms (ref. 8) used at\nAmes Research Center have been used, and are given here in\nz-transform notation. These algorithms consist of the Adams\xe2\x80\x99\n\nI\n\nI\n\n3\n\nsecond-order integration formula for the acceleration-tovelocity integration (a predictor),\n\nand the trapezoidal formula for the velocity-to-position\nintegration (a corrector).\n\nBy using these algorithms and defining the parameters,\n\nA = UT\na, = (4C-A)A\naI = 2A2 - 16CA + 4\na2 = 3A2 t 12CA - 8\n\n(7)\n\nthe discrete system response function (z transform) is\nproduced:\nA2(3z2 t 22\nF(z) =\n\n- 1)\n\n4z3 t a2z2 t a l z t a.\n\n(8)\n\nMagnitude and phase responses of the discrete system given\nby equation 8 are a function of the cycle time of the host\ncomputer T. The resultant curves are tagged \xe2\x80\x9cdiscrete simulation\xe2\x80\x9d in figures 4(a) and q b ) , where the cycle time is\nassumed to be 60 msec; they show that this relatively large\ncycle time is sufficient (small enough) for the approximation\nof continuum results for this transfer function out to about\n20 radlsec.\nTo approximate the influence of CGI time delay on the\nsystem F(z), the total phase angles owing to the minimum,\naverage and maximum delays are shown in figure 4(b) as\ncomputed by simple algebraic operations. (Time delays do\nnot influence the magnitude responses of figure 4(a), but do\nproduce large phase errors, as shown in figure 4(b)).\nFigures 4(a) and (b) have been obtained by usingz transforms. They constitute a basis for comparison with other\ndata in this document which has been obtained by use\nof time-series data.\n\nCOMPENSATION\n\nIn this section, modified position and velocity terms are\ndeveloped that project positions (and orientations) much\nfurther than previous formulations. The assumptions of this\nprojection are such that the entire delay interval is\n4\n\naccommodated, with good frequency response characteristics\nover the entire operational bandwidth. Acceleration terms\nhave been avoided in the development of t h s algorithm\nbecause: 1) they are not concurrent with velocity and\nposition terms in real-time simulation, and 2) their highfrequency components, prior to \xe2\x80\x9cairframe attenuation,\xe2\x80\x9d are\nnot generally consistent with the assumed band-limited\nbehavior.\nIn the host computer, operations by the integration\nalgorithms (5) and (6) produce the vehcle velocity v(n)\nand position u(n), which are transmitted to the X buffer of\nthe P-E computer with an accompanying data-ready interrupt\nsignal, as indicated in figure 1. Heretofore, only compensation for the periodic in\xe2\x80\x99terval TA(m) has been used because\nthe projection of an interval greater than t h s value cannot be\nsupported under a purely linear hypothesis. It is known,\nhowever, that the additional pure transport delay component\nTc of 100 msec also exists prior to scene presentation.\nIndeed, for less exacting tasks than helicopter research,\nthis delay seems to be generally accepted (ref. 1). Failure\nto account for t h s larger delay interval is due to the fact\nthat general delay compensation does not exist. The compensation problem is put in its proper context in the \xe2\x80\x9clinear\napproach\xe2\x80\x9d section.\n\nLinear Approach\n\xe2\x80\x9cProjection\xe2\x80\x9d has been defined as the linear extrapolation\nover T A ( ~ that is performed within the P-E computer.\n)\nThe question arises as to the influence of also extrapolating\npositions over the pure transport delay interval within the\nhost computer. The resultant pure linear compensation for\nthe entire delay interval is here examined in terms of its\ncomponent parts.\nThe technique of linearly extrapolating position over the\nadditional pure transport delay interval of 100 msec successfully eliminates the phase angle error given in figure 4(b),\nbut deteriorates the magnitude response of figure 4(a).\nThese phenomena are illustrated in figures 5(a) and 5(b).\nwhere the discrete curves were obtained from a statistical\nanalysis of time series data with Gaussian inputs. The time\nseries data was created from a model of the asynchronous\nlogic as shown in figure 1. The use of the unusual cycle time\nT = 66.66 msec is related to the statistical analysis of (what\nappears to be) a nonstationary system, under the conditions\nof minimal data acquisition.\nFigures 5(a) and (b) each contain four parametric curves in\norder to illustrate the components of the extrapolation process, and the standard \xe2\x80\x9cprojection\xe2\x80\x9d process. The continuous\nsystem curves are identical to those in figures 4(a) and 4(b).\nThe curves labled \xe2\x80\x9cdiscrete, without linear compensation\xe2\x80\x9d\nrepresent the scene presentation without any attempt at either\nextrapolation or projection. Since this particular system does\nnot use the standard, linear projection operation of the P-E\ncomputer, these curves approximate the average time delay.\n\nI\n\nAs will be discussed under \xe2\x80\x9cModel Verification,\xe2\x80\x9d this average\ndelay is 116.66 msec when T = 66.66 msec. The remaining\ntwo parametric curves in figures 5(a) and (b) show both the\ninfluence of linear extrapolation, or compensation, and the\ncombined influence of linear compensation plus projection.\nThe combined operations thus constitute the direct application of linear terms to the prediction of positional data.\nFigure S(a) illustrates the basic problem encountered\nwhen linear compensation is used. As an extension of this\napproach, the lead-lag technique implies that sufficient lag\nmust be superimposed to attenuate the magnitude error\n(linearly compensated, with projection) of figure 5(a), while\nretaining the phase characteristics of figure 5(b). Using\nlinear analysis, recent work has been performed at Ames to\n\xe2\x80\x9cdistribute the attendant system gain distortion (over frequency) so as to minimize gain-distortion effects on system\nresponsiveness (wc), pilot workload, and tracking accuracy\n(ref. 9).\xe2\x80\x9d This approach addresses the pilot-aircraft dynamics\nin the region of \xe2\x80\x9ccrossover.\xe2\x80\x9d The nonlinear, double-tuned\nalgorithm developed here is not an extension ot this technique, although the applicable bandwidth is assumed to\ncontain the crossover frequency.\nModified commands are developed below that account for\nthe total delay interval, under assumptions that include\ntuning increments to both a specified frequency, and to the\nconstant velocity condition. The resultant algorithm will be\nseen to retain its features in the interval between these\ndiscrete assumption points, and thus enhance the quality of\nposition information (both translational and rotational)\nover the operational bandwidth.\n\nby substituting uk = exp (jWkT,). When equation (9) is\ntuned to a specific \xe2\x80\x9ccutoff frequency\xe2\x80\x9d W ,the following two\nrelationships are produced,\n\nvo-f2)sin U = (1 -cos U ) / U\n\n(1 1)\n\ncfo t f,) cos U t f, = sin UJU\n\n(1 2)\n\nwhere the cutoff bandwidth is given by\n\nU = WTc\n\n(1 3)\n\nThe specific frequency W is defined as the upper limit of\nsome \xe2\x80\x9coperational bandwidth.\xe2\x80\x9d The lower limit of this\nbandwidth is the zero frequency, or constant velocity coikition. By also tuning equation (9) to this condition, the\nadditional relationship\n\nis produced. The simultaneous solution of equations (1 l),\n(1 2) and (14) then produces the intermediate coefficients\n\nf~\n\n=\n\nUsin U - 2 cos U(l -cos U)\n2 Usin ~ ( 1 cos U)\n-\n\n2 sin U(sin U - U cos U l\n\nThe Tuned Corrector\nIn this section, a position increment is derived that\naccounts for the interval of pure transport delay. A sequence\nof velocity values is assumed available at 100-msec intervals.\nThe compensation scheme is derived from this assumption,\nplus a selected parametric relationship. In the next section,\na technique for approximating the required velocity sequence\nis given.\nConsider the three-parameter, velocity-to-position corrector relationship given by\n\nUk+l = Uk + (fOVk+l\n\n,\n\n+flu/?\n\n+f,Vk-l)Tc\n\n(k = 0,1,2,\n...)\n\nUsin U - 2 ( 1 -cos U)\n= 2~sin~(l-cos~)\n\n(1 7)\n\nUsing these coefficients, equation (9) represents the position\ntransition from the point k to the point k + 1. By forcing\nthe point k to be coincident with ;he most recent data\nobservation point of the host computer n, we may write\nequation (9) as,\n\n(9)\n\nIn this expression time t is assumed to be incremented\naccording to\n\nt = kTc\n\nf2\n\nwhere the applicable velocity Y\xe2\x80\x98 for this increment has been\ngiven in terms of velocity values that are equally spaced- by\n100-msec intervals, i.e.,\n\n(10)\n\nwhere Tc is the large transport delay interval of 0.1 sec. In\nthe following material, the \xe2\x80\x9ctuned\xe2\x80\x9d condition simply means\nthat the stated condition satisfies the assumed relationship\n(eq. 9). For example, sinusoidal behavior may be described\n\nA form of this corrector has also been developed using\ngeometric relationships in an application to a system with a\nknown dominant mode. It has been successfully applied to\n5\n\nthe integration of aircraft states (ref. 10). In order to apply\nthe corrector to an asynchronous system, however, velocity\nvalues symmetrically located about the point k (or n ) with\ninterval T must be developed.\n\nUsing these intermediate coefficients,\nsequence for equation (19) is given by\n\nthe symmetric\n\nSymmetric Data\nThe point k is defined as the most recent point of data\ndelivery of the host computer. The point k t 1 thus defines\na point 100 msec in the future, and the point k - 1 defines a\npoint 100 msec in the past. Velocity values a: these two symmetric data points are estimated in this section using the\nactual data sequence within the host computer.\nIn order to create symmetrical data points consistent with\nthe above assumptions, sinusoidal prediction is used. Consider the velocity sequence\nv ~ - v~ ) , of the host\n,\ncomputer, where v, is the most recent value. In contrast to\nequation (lo), time t is related to the host computer\xe2\x80\x99s cycle\ntime T b y\n\ni ~ ~ - ~ ,\n\n(n = 0,1,2,. . .)\n\nt = nT\n\n(20)\n\nA sinusoidal curve fit to the velocity sequence is given in\nthe temporal space of the host computer by\n\n-\n\nwhere U was defined in equation (1 3).\n\nThe Algorithm\nIn view of the above developments, equation (9) may be\nconverted to a function of the velocity sequence of the host\ncomputer,\n\nwhere applicable coefficients for this difference equation are\ngiven by\n\nbo =\n\n(1 -cos U)(1 t 2 cos V)\nU t sin U(1 - 2 cos V)\nt\n2 W(1 -cos V)\n2 W sin V\n(3 1)\n\nv(t 2T) = g o t g , sin[ W ( t - 2T)] t g2 cos[ W ( t - 2271\n(sin U - U c o s V\nb1 = W(1 - cos v)\n\nwhere, for convenience\n\nv , - ~ = v(-2T)\n\nb2 =\n\nvn- 1 = v(-T)\nv, = v(0)\nBy defining the applicable bandwidth\nV = WT\nthe curve-fit coefficients may then be given by\n\nv,\ngo =\n\n2(1 - cos v)\nv)Vn\n\n1 -cos u\n2 W sin V\n\n(33)\n\nwhere the appropriate coefficients are given by\n\n- 2(1 t cos V)Vn-l t V n - 2\n\ndo\n\n=\n\n2 sin V\n\n(1 - 2 cos v ) v , t 2\n\n6\n\nU - sin U\nt\n2 W(l - cos V )\n\n(32)\n\nIn addition to estimating position, the velocity at k t 1\nmust be estimated for P-E projection purposes. This may be\naccomplished by using equations (24) through (27). The\nvelocity that accounts for pure time delay (for later projection purposes) may then also be written in terms of the\nhost-computer velocity history,\n\nd1 =\ng2 =\n\nW sin V\n\n- 2vn-1 cos v t vn-2\n\n(1 t 2 cos\ng1 =\n\n(1 - cos U,(.1 t cos V)\n\nVn-l\n\n2(1 - cos v)\n\ncos\n\nv- vn-2\n\n1 t (1 - 2 COS Vkos U (1 t 2 cos V)sin U\nt \xe2\x80\x98\n2(1 -cos v)\n2 sin V\ncos V(cos U - 1)\n1 -cos\n\nv\n\n-\n\n(35)\n\n(1 t cos o s i n U\nsin V\n\n(36)\n\ndz =\n\n1 - cos u\n2(1 - cos V)\n\nsin U\nt-\n\n2 sin V\n\n(37)\n\nSince the bk and dk coefficients are constant for a given\ncycle time, the applicable compensation equations are the\nsimple linear combinations given in equations (30) and (34).\nThey constitute the real time workload of the host computer\nfor each of the position and orientation commands. The\nworkload of the P-Ecomputer is not changed. It consists of\nextrapolation over the periodic interval, i.e.,\nU \xe2\x80\x99= Uktl 4- TA(rn)Vkt,\n\n(3 8)\n\nwhich has the same form as the original P-Ealgorithm. Note,\nhowever, that the symmetrical distribution of time delay\nabout Tc t TA(avg) suggests that the compensation interval\nof the algorithm may be further extended to include the\naverage value of periodic delay, with appropriate modification to the projection interval in the software of the P-E\ncomputer. Neither this extension nor the technique of\naccommodating the entire compensation algorithm within\nthe P-Ecomputer are discussed here.\nThe algorithm is outlined in figures 6(a) and (b). The\nmainframe operations are shown in figure 6(a), and the\nP-E operations are shown in figure 6(b). The previously\nestablished second-order system is used in figure 6(a)\nfor illustration, along with the standard integration\nalgorithms (5) and (6). In figure 6(b), the \xe2\x80\x9cup arrows\xe2\x80\x9d refer\nto sample rate expanders (ref. 4), an operation also referred\nto as \xe2\x80\x9cinterpolation.\xe2\x80\x9d If the host computer cycle time was\nless than 33.33 msec, these arrows should properly be\npointing down in an operation called \xe2\x80\x9cdecimation.\xe2\x80\x9d The\n\xe2\x80\x9cexpanded\xe2\x80\x9d operations are asynchronous with those of\nfigure 6(a), and produce periodic behavior in the quantity\nT\xe2\x80\x99(z,z\xe2\x80\x99).\nThe z-transform operations referred to by z\xe2\x80\x99 have\na 30-Hz update rate; the resultant time delay represented by\n(z\xe2\x80\x98)-3 is 100 msec.\n\nASYNCHRONOUS MODEL\nFor the purpose of computing frequency responses the\npertinent asynchronous data flow of the CGI system was\nmodeled. Interrupt logic was emulated by using time increments with the granularity of 1/3 msec. Pertinent mainframe\nand CGI operations are as outlined in figures 6(a) and (b),\nwhere the z and z\xe2\x80\x98 transformations refer to different sample\nintervals, with periodic interaction.\nFor statistical analyses, a worst-case cycle time of\n66.66 msec was selected for two reasons: First, this value\napproximates the value of 60 msec that was used in recent\nsimulation studies, and is therefore currently relevant.\n\nSecond, serious resolution bias errors (ref. 11) are avoided\nby using a sample rate that is a multiple of the P-Ecomputer\nspeed. Otherwise, the system appears to be nonstationary\nowing to its extremely long period, and conventional spectral\nanalysis techniques yield dubious estimates of frequency\nresponse functions.\n\nModel Verification\nFigures 4(a) and (b) were obtained by using z-transforms\nas convoluted to frequency space, and thus represent a\nstandard for verification of the asynchronous model, which is\nmeasured only by use of statistical analysis procedures.\nThe estimated frequency response functions of figures 7(a)\nand (b) were obtained from the asynchronous model by\nusing correlation and spectral analysis. Continuum results\nare also displayed in these figures, and parametric curves\nare presented from the analysis. In figures 7(a) and (b) the\ncompensation algorithm was not used, so that the P-E\ncomputer model received the primary values given by u(z)\nand ~ ( zas shown in figure 6(a). Two parametric curves are\n)\nshown, indicating whether the clock in figure 6(b) was used\n(with projection) or not (without projection).\nThe use of cycle time that is a multiple (two) of the\ncycle time of the P-E computer has minimized distortion\nin the spectral analysis so that the curves closely approximate\nthe results previously given in figures 4(a) and (b). Using this\nparticular cycle time, phase errors do not vary much from\nthe continuum results owing to the fact that N = 2 in equation ( 2 ) which results in a maximum TA(m) = 33.33 msec\nin equation (4). The average projection interval is only\n16.66 msec when T = 66.66 msec; hence, the phase angle\nhistory in figure 7(b) remains close to the \xe2\x80\x9cminimum bounddary\xe2\x80\x9d given in figure 4(b).\n\nProjection\nThe \xe2\x80\x9cprojection\xe2\x80\x9d operation of the P-Ecomputer does not\nappear to enhance performance in figures 7(a) and (b) to\nany great extent, but this is a misleading observation when\nviewed in frequency space. The small decrease in phase error\nis actually quite significant, and the resultant \xe2\x80\x9csmoothing\xe2\x80\x9d\nis quite important. Illustrations of this are made by converting to the time domain and using an accelerated sinusoidal drive signal. This particular drive signal illustrates the\nbandwidth of interest because its frequency ramps from 0 to\n20 rad/sec in the displayed interval of 7 sec.\nTo demonstrate the smoothing phenomenon in temporal\nspace, the traces \xe2\x80\x9cwithout projection\xe2\x80\x9d and \xe2\x80\x9cwith projection\xe2\x80\x9d\nare given in figures 8(a) and (b), respectively, using the\naccelerated sine wave as described above. The continuum\ncurves are also presented. The cycle time T = 60 msec has\nbeen used for these functions of time.\n7\n\nI\n\nIn terms of scene presentation delay, figure 8(b) represents the current state of the art in CGI technology. It\nexemplifies the phase problems for frequencies in the\nbandwidth out to about 20 rad/sec. For high frequencies\nthe projection operation of the P-E computer amplifies\nsignals slightly, but this amplification is minimal, especially\nwhen compared to the amplification that accompanies\ncompensation algorithms.\nThe projection operation of the P-Ecomputer is critical\nin minimizing the granularity caused by both asynchronous\noperations and large host computer cycle times. The clockmeasured projection interval TA is as given in both figures\n1 and 6(b). Note, however, that the applicable position and\nvelocity signals are modified within the host computer when\nthe compensation algorithm is used. The algorithm does not\nrequire changes within the CGI system.\nThe standard projection operation of the P-Ecomputer is\nused in all of the following material.\n\nApplication of the Algorithm\nBy using the compensation algorithm, decreases in phase\nerror (or time delay) are accompanied by alterations in\nmagnitude responses. This is demonstrated below by varying\nthe available parameter W which has been defined as the\ncutoff frequency. A satisfactory W selection is dependent\nupon the frequency content of the position and velocity\ndata transmitted by the host computer.\nWithout compensation, the applicable magnitude and\nphase responses have been given in figures 7(a) and (b) by\nthe particular curves labeled \xe2\x80\x9cwith projection.\xe2\x80\x9d The pertinent time response has been given in figure 8(b). These\ncurves are for comparison with the following cases where the\ncompensation algorithm is used.\nUsing the compensation algorithm, figures 9(a) and (b)\nare produced. They give the magnitude and phase variations\nas a function of the parameter W (cutoff frequency). For\nconvenience, the continuous system response is also included\nin these figures. Figures lO(a) and (b) complete the picture\nby giving time responses using two values of the selected\nparameter. From these figures, the tradeoff becomes\napparent: If the data is band-limited to 10 or 15 rad/sec,\namplification beyond this limit may be ignored, and the\nalgorithm clearly eliminates the objectionable phase error.\nIf higher frequencies are known to exist in the data, the\nparameter W must be increased with corresponding degradation in the lower frequency region. Although this degradation is not rapid, alternate techniques for attenuating the\nhigh-frequency gain may be required in certain applications.\nSpecifically, anti-aliasing or notch filters may be required\nfor bladeelement rotorcraft models (ref. 12).\nCompensation for time delay is invariably accompanied by magnitude variations. The essential differences\nbetween this discretely-designed compensation scheme and\n\n8\n\ncontinuously-designed schemes are: 1) the concomitant\nreduction to discrete form is avoided, with its resultant\ndeviation from the design objective; 2) two distinct frequencies are used in the design process, with good characteristics over the associated interval. By defining one\ndistinct frequency as d.c. and the other at 10 or 15 rad/sec,\nthe region of crossover is generally included (0 < wc < W).\nHence, the question of design relative to a particular aircraft\nor pilot is avoided. As with analogous compensation techniques, the \xe2\x80\x9cresulting increase in system gain at frequencies\n>w, is not normally a problem, because system amplitude\nratio and input and disturbance signal power usually decrease\nrapidly at frequencies >w,\xe2\x80\x9d (ref. 9).\nIf signal power does indeed decrease rapidly beyond the\ncrossover frequency, additional attenuation is not required.\nThe single parameter W should of course be small with\nrespect to the Nyquist frequency. Since the operational\nbandwidth of the pilot should also be small with respect to\nthe Nyquist frequency for successful real-time simulation,\nthe optimum placement of W can be at the discretion of the\nsimulation analyst. The results have proven to be relatively\ninsensitive t o this parameter.\nA typical single-axis dynamic check is shown in figure 11,\nwhere the parameter W = 10 rad/sec. For these particular\nreal-time simulation traces the required cycle time was\n62 msec. In figure 11, the positional lead of approximately\n130 msec is observed in the CGI commanded roll angle, as\npredicted. Also, modifications are apparent in the projection\nvelocity, as transmitted to the CGI system.\nA novel experiment was conducted to verify both the\nexistence of time delays, as quantified herein, and the compensation algorithm\xe2\x80\x99s ability to eliminate these delays. This\nexperiment used sinesoidal commands over a range of frequencies to drive both an oscilloscope display, and a CGIcreated horizon. Various host-computer cycle times were also\nused. By use of optical beam-splitting techniques the visual\nsignals appeared on the same CGI monitor. Superimposition\nof these signals was possible by manual adjustment of a phase\ncomponent in the oscilloscope drive signal. Researchers\nreplicated the standard CGI system\xe2\x80\x99s theoretical delay values\nto within negligible tolerances. Most importantly, they could\nnot identify time delays whenever the compensation\nalgorithm was used.\n\nCONCLUSIONS\nA compensation algorithm has been developed that\nvirtually eliminates CGI scene presentation delay for the\nfrequency bandwidth out to about 15 rad/sec, using a\nworst-case scenario with cycle times in the 60-msec range.\n\nIf position and orientation signals are known to be bandlimited by this value, the compensation algorithm is applicable without further consideration.\nIf high-frequency content is known to contaminate the\nCGI drive signals, further considerations may be necessary\nsuch as anti-aliasing or notch filters.\n\nIn general, the compensation algorithm described here\nshould enhance CGI performance, and be especially\nvaluable for high-gain tasks such as those required in\nhelicopter simulation.\n\nAmes Research Center\nNational Aeronautics and Space Administration\nMoffett Field, California 94035, May 14, 1985\n\n9\n\nAPPENDIX I\n\nPERIODIC DELAY\n\nThe periodic component of CGI time delay may be\nwritten\n\n\xe2\x80\x99T ( m ) = T { m / N -\n\nand second, we have the trivial summation\n\nN\n\n1mM/Nl }\n\nm = N ( N + 1)/2\nm=l\n\nwhere the half bracket operation denotes the least integer. In\nthis equation the ratio of sample rates\n\nThese produce the average periodic delay:\n\nP/T = 1/(30T) = M/N\n\nN\nTA(avg) = (T/N)\n\nhas been expressed in terms of M and N that are relatively\nprime. The average value for the periodic component of time\ndelay is given by\n\nm=l\n\n= (T/N)((M/N)[N(N+\n1)/2\n=(V)(1\n\nm=l\n\nwhich may be evaluated using the following relationships.\nFirst, when the greatest common divisor of the positive integers M and N is unity we have (ref. 12)\n\nN\n[mM/NJ= M t ( M - l ) ( N - 1)/2\nm=l\n\n10\n\n{m / N - l a / N J 1\n- [MU + N ) + 1 -Nl)\n\n- 1/n?\n\nAlso, it may be demonstrated that for m on (1,70) the maxi)\nmum value for T ~ ( r nis twice the average value. It is conjectured that for all m ,\n\nTA(max) = T( 1 - 1IN)\nwhich means that the total time delay is never quite as large\nas the sum of cycle time and pure transport delay.\n\nREFERENCES\n\n1. Erickson, Cliff; Fairchild, Kim M.; and Marvel, Orin:\nSimulation Gets a New Look. (Computer Generated\nSynthesis Imagery Development) Defense Electronics,\nvol. 16, no. 8 , Aug. 1984, pp. 76-87.\n2. Oppenheim, Alan V.; and Schafer, Ronald W.: Digital\nSignal Processing. Prentice-Hall, Inc., 1975, pp. 202203.\n3. Cleveland, William B.: A Time Lag Study of the Vertical\nMotion Simulator Computer System. NASA\nTM-81306, Aug. 1981, p. 12.\n4. Crochiere, Ronald E.; and Rabiner, Lawrence R.: Interpolation and Decimation of Digital Signals - A\nTutorial Review. IEEE Proceedings, vol. 69, no. 3,\nMarch 1981, pp. 300-331.\n\n5. Paulk, Clyde H., Jr.; Astill, David L.; and Donley,\nShawn T.: Simulation and Evaluation of the SH-2F\nHelicopter in a Shipboard Environment Using the\nInterchangeable Cab System. NASA TM-84387,\nAug. 1983, pp. 1 4 , 7 4 , 7 5 .\n6 . Harendra, P. B., Joglekar, M. J.; Gaffey, T. M.; and Marr,\nR. L.: A Mathematical Model for Real Time Flight\nSimulation of the Bell Model 301 Tilt Rotor Research\nAircraft. NASA CR-114614, April 1973.\n\n7. Churchill, Gary B.; and Dugan, Daniel C.: Simulation of\nthe XV-15 Tilt Rotor Research Aircraft, NASA\nTM-84222, March 1982, pp. 12-13.\n\n8. McFarland, Richard E.: A Standard Kinematic Model for\nFlight Simulation at NASA-Ames. NASA CR-2497,\nJan. 1975, p. 27.\n9. Crane, D. Francis: Compensation for Time Delay in\nFlight Simulator Visual-Display Systems. AIAA\nFlight Simulation Technologies Conference Collection of Technical Papers, Niagara Falls, NY, June\n1983, pp. 163-171.\n10. Rolston, David R.: Sinusoidal Integration for Simulation\nof Second-Order Systems. AIAA Flight Simulation\nTechnologies Conference Collection of Technical\nPapers, Niagara Falls, NY,\nJune 1983, pp. 52-63.\n11. Bendat, Julius S.; and Piersol, Allan G.: Engineering\nApplications of Correlation and Spectral Analysis,\nJohn Wiley & Sons, 1980, p. 105.\n12. McFarland, Richard E.: The N/Rev Phenomenon in\nSimulating a Blade-Element Rotor System. NASA\nTM-84344, March 1983, p. 2.\n13. Knuth, Donald E.: The Art of Computer Programming.\nVol. I, Fundamental Algorithms. 2nd ed. AddisonWesley, 1973, p. 42.\n\n11\n\nTABLE 1.-PARAMETERS FOR THE TIME DELAY\nCycle Time Range from 1 to 35 msec\n\n-\n\nT,\nmsec\n\nM\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n100\n50\n100\n25\n20\n50\n100\n25\n100\n10\n100\n25\n\n13\n\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\nP, m(max:\n- N\n\nsec\n\n3\n3\n9\n3\n3\n9\n21\n6\n27\n3\n33\n9\n\n0.1\n.I\n.3\n.1\n.1\n.3\n.7\n.2\n.9\n.1\n1.1\n.3\n\n2\n1\n8\n2\n1\n7\n17\n5\n17\n2\n32\n5\n\n100\n\n39\n\n1.3\n\n23\n\n50\n20\n25\n100\n50\n100\n5\n100\n50\n100\n25\n4\n50\n100\n25\n100\n10\n100\n25\n100\n50\n20\n\n21\n9\n12\n51\n27\n57\n3\n63\n33\n69\n18\n3\n39\n81\n21\n87\n9\n93\n24\n99\n51\n21\n\n.7\n.3\n.4\n1.7\n.9\n1.9\n\n13\n4\n11\n26\n7\n53\n1\n17\n31\n20\n5\n2\n7\n17\n5\n20\n8\n53\n23\n98\n1\n1\n\n--\n\n12\n\n-\n\n.I\n2.1\n1.1\n2.3\n.6\n.1\n1.3\n2.7\n.7\n2.9\n.3\n3.1\n.8\n3.3\n1.7\n.7\n-\n\n0.67\n1.33\n2.67\n2.67\n3.33\n5.33\n6.67\n6.67\n8.67\n6.67\n10.67\n10.67\n12.67\n13.33\n13.33\n14.67\n16.67\n17.33\n18.67\n13.33\n20.67\n21.33\n22.67\n22.67\n16.67\n25.33\n26.67\n26.67\n28.67\n26.67\n30.67\n30.67\n32.67\n33.33\n33.33\n\n0.33\n.67\n1.33\n1.33\n1.67\n2.67\n3.33\n3.33\n4.33\n3.33\n5.33\n5.33\n6.33\n\n6.67\n6.67\n7.33\n8.33\n8.67\n9.33\n6.67\n10.33\n10.67\n11.33\n11.33\n8.33\n12.67\n13.33\n13.33\n14.33\n13.33\n15.33\n15.33\n16.33\n16.67\n16.67\n\nTABLE 2.- PARAMETERS FOR THE TIME DELAY\nCycle Time Range from 36 to 70 msec\n\nT,\nmsec\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n\np, w(max)\nM\nN\nsec\n- -25\n100\n50\n100\n5\n100\n50\n100\n25\n20\n50\n100\n25\n100\n2\n25\n100\n50\n20\n25\n100\n50\n100\n\n27\n111\n57\n117\n6\n123\n63\n129\n33\n27\n69\n141\n36\n147\n3\n153\n39\n159\n81\n33\n42\n171\n87\n177\n\n5\n100\n50\n100\n25\n20\n50\n100\n25\n100\n10\n\n183\n93\n189\n48\n39\n99\n20 1\n51\n207\n21\n\n100\n\n9\n\n0.9\n3.7\n1.9\n3.9\n.2\n4.1\n2.1\n4.3\n1.1\n.9\n2.3\n4.7\n1.2\n4.9\n.1\n5.1\n1.3\n5.3\n2.7\n1.1\n1.4\n5.7\n2.9\n5.9\n.3\n6.1\n3.1\n6.3\n1.6\n1.3\n3.3\n6.7\n1.7\n6.9\n.7\n\n-\n\n14\n101\n49\n62\n1\n107\n34\n89\n29\n4\n40\n86\n23\n122\n1\n26\n14\n62\n34\n28\n5\n53\n40\n23\n7\n\n34.67\n36.67\n37.33\n38.67\n33.33\n40.67\n41.33\n42.67\n42.67\n43.33\n45.33\n46.67\n46.67\n48.67\n33.33\n50.67\n50.67\n52.67\n53.33\n53.33\n54.67\n56.67\n57.33\n58.67\n53.33\n\n17.33\n18.33\n18.67\n19.33\n16.67\n20.33\n20.67\n21.33\n21.33\n2 1.67\n22.67\n23.33\n23.33\n24.33\n16.67\n25.33\n25.33\n26.33\n26.67\n26.67\n27.33\n28.33\n28.67\n29.33\n26.67\n\n86\n\n60.67\n\n30.33\n\n13\n17\n23\n37\n97\n2\n2\n89\n2\n\n61.33\n62.67\n62.67\n63.33\n65.33\n66.67\n66.67\n68.67\n66.67\n\n30.67\n31.33\n3 1.33\n3 1.67\n32.67\n33.33\n33.33\n34.33\n33.33\n\n13\n\nPERKIN-ELMER LOOP\n\nDATA-READY INTERRUPT\n\n(30Hz)\n\n(1/T Hz)\nDRI DISABLE\n\nSTOP TIMER\nREAD TIMER: TA\nRESTART TIMER\nFROM CURRENT VALUE\n\nI\n\n1\n\nTRANSFER BUFFER\nXTOY\n\nSTOP TIMER\nRESET TIMER\nSTART TIMER\n\nI\n\n1\n\nACCEPT BUFFER X\n\nI\nDRI ENABLE\n\n>o\n-\n\n-\n\nINTERROGATE\nIMODE\nFROM Y BUFFER\n\nCOMPUTE\nCOMPENSATlON\nf (Y, TA)\n\nGO\n\nf(Y,TA) = 0\n\nCOMPUTE DESIRED PRESENTATION\n= Y i- f(Y,TA)\n\nI FRAME CALCULATOR I\n\n(30Hz)\n\n(30Hz)\n\nI\n\nSCAN LINE PROCESSOR\n\nI\n\nFigure 1.- Asynchronous data flow.\n\n14\n\n1\n\nRETURN TO\nINTERRUPT LOCATION\nIN P-E LOOP\n\n7\n\n6\n\n0\n\nI\nvi\n\nI\n3 5\nI\n\nz\n4\n\n5 4\n\n2\n\nw\n\nz3\nL\nm\n.\nJ\n\nQ:\n\n> 2\n\nU\nw\n\nI-\n\nz\n\n- 1\n\n0\n\n.17\n\n.16\n\n.15\n0\n\nI\n\n2 .14\nI\n\nw\n\nn\n\n- .13\nI.12\n\n.11\n\n.10\n\n(b)\n\nCYCLE TIME, msec\n\nFigure 2.- Time delay characteristics. (a) Period of time delay. (b) Maximum and average delay.\n\n15\n\n160\n\n8 140\nE\n\nT = 50 msec\n\nT\n1 = 49 msec\n-\n\nf 1204\n\nw\n\nw\n\n100-\n\nE\nF 80-\n\nPERIOD = 0.1 SEC\n\n1\n\nPERIOD = 4.9 SEC\n\nT = 51 msec\n160 1\n\nT = 52 msec\n\n1\n\n8 140\nE\n\n>-120\n\n4\n\nE 100\n\n/+\n\nPERIOD = 1.3 SEC\n\nPERIOD = 5.1 SEC\n60\n\nr\n--\n\nA i i i i i i 6 ;\nTIME, sec\n\n1 (d)\nc -,\n0\n1\n-\n\n7\n\n2\n\n-\n\n3\n4\nTIME, sec\n\n5\n\n6\n\n--\n\n?\n\nFigure 3.- Scene presentation delays. (a) Cycle time of 49 msec. (b) Cycle time of 50 msec. (c) Cycle time of 51 msec.\n(d) Cycle time of 52 msec.\n\n16\nI\n\nT = 53 msec\n160 1\n\nT = 54 rnsec\nI\n\nT = 55 rnsec\n160 1\n\n60\n0\n\n1\n\n2\n\nT = 56 msec\n\n1\n\n-\n\n3\n4\nTIME, sec\n\n__\n\n5\n\n6\n\n7\n\n0\n\n1\n\n2\n\n3\n4\nTIME, sec\n\n5\n\n6\n\n7\n\nFigure 3.- Continued. (e) Cycle time of 5 3 msec. ( f ) Cycle time of 54 msec. (g) Cycle time of 55 msec. (h) Cycle time of\n56 msec.\n\n17\n\nT = 58 rnsec\n\nT = 57 rnsec\n160 1\n\nw\n\nE\np 801\n\n4\n\n1I\n\nPERIOD = 5.7 SEC\n\n_--T = 59 msec\n\n2\n\nC\n\nr\n\nPERIOD = 0.3 SEC\n\n1\n\n1\n\nE\n\nT = 60 rnsec\n\nPERIOD = 5.9 SEC\n\n60 4\n0\n\nS\n\n3\n4\nTIME, sec\n\n5\n\n6\n\n7\n\nJ\n\n0\n\n(1)\n1\n\n1\n\n2\n\n3\nTIME, sec\n\n5\n\n6\n\n7\n\nFigure 3.- Concluded. (i) Cycle time of 57 msec. (j)\nCycle time of 58 msec. (k) Cycle time of 59 msec. (1) Cycle time of\n60 msec.\n\n18\n\n4\n\nT = 60 msec\n\n0\n\nm\nu - 4\nw\'\n\nn\n3\n\n5\n\n-8\n\n(3\n\na\nE\n\n(3\n\ns\n\n-12\n\n-1 6\n\n-20\n\n0\n\nT = 60 msec\n\n-30\n-60\n0)\n\ng\n\n-90\n\nJ\n\nW\n2 -120\n\na\nw\n\n2 -150\nI\nn\n\n-1 80\n\n-21 0\n\n-240\n1\n\n2\n\n3 4 567810\n\n20\n\nFREQUENCY, rad/sec\nFigure 4.- Continuous and discrete transfer function. (a) Magnitude. (b) Phase.\n\n19\n\n4\n\nT = 66.66 msec\n\n0\n\n0 -12\n\ns\n\n-1 6\n\n-20\n\n0\n\nT = 66.66 msec\n\n-30\n\n-60\na\nl\n\n8\n\n-90\n\nw\'\n\nI\n\n0\n\n2 -120\nw\n\n2 -150\nI\n\nn\n\n-1 80\n\n-210\nLINEAR COMPENS\n\n-240\n1\n\n2\n\n\\\n\nI\n\n3 4 567810\n20\nFREQUENCY, rad/sec\n\nFigure 5 .- Transfer function and linear compensation. (a) Magnitude. (b) Phase.\n\n20\n\nb\n"k+l\n\nb\n\'k+l\n\n"k+l\n\nSCENE\n\nTA(z,z\')\n\nb\n\nPR ESENTAT ION\n\nCLOCK\n\n\'k+l\n\nTRANSPORT\nDELAY\n\n(b)\nFigure 6.- Discrete operations. (a) Mainframe operations at l/THz. (b) CGI operations at 3Q Flz.\n\n21\n\nT = 66.66 msec\n\n4\n\n0\n\n-1 6\n\n-20\nT = 66.66 msec\n0\n\n-30\n-60\n0)\n\n4\n\n-90\n\nW\n\nW\nv)\n\n-150\n\n-1 80\n\n-210\n\n-240\n1\n\n2\n\n3 4 567810\n20\nFR EQUENCY, radhec\n\nFigure 7.- Transfer function without compensation. (a) Magnitude. (b) Phase.\n\n22\n\nT = 60 msec\n\n21\n\nT = 60 msec\n\n21\n\nFigure 8 .- Time history of system without compensation. (a) Without projection. (b) With projection.\n\n23\n\nT = 66.6 msec\n\n0\n\nT = 66.66 msec\n\n-30\n\n-1 50\n\n-1 80\n\n-210\n1\n\n2\n\n3 4567810\n20\nFREQUENCY, rad/sec\n\nFigure 9.- Transfer function with compensation. (a) Magnitude. (b) Phase.\n\n\'QRIGINAL PAGE I\nS\nL POOR QUALITY\nm\n\nT = 60 msec\n\n\'1\n\nT = 60 msec\n\n21\n\n-2\n\n1 (b)\n\nI\n\n0\n\nI\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\nTIME, sec\n\nFigure 10.- Time history of system with compensation. (a) Cutoff frequency of 10 rad/sec. (b) Cutoff frequency of 15 rad/sec.\n\n25\n\n25\n\nVEHICLE\nROLL ANGLE,\ndeg\n\n0\n\n-25\n25\n\nCGI COMMAND\nROLL ANGLE,\ndeg\n\n0\n\n-25\n50\n\nVEHICLE\nROLL RATE,\ndeglsec\n\n0\n\n-50\n50\n\nCGI COMMAND\nROLLRATE,\ndeglsec\n\n0\n\n-50\n0\n\n.5\n\n1.o\n\n1.5\n\n2.0\n\nTIME, sec\n\nFigure 11 .- Typical dynamic check, roll angle and rate with compensated CGI commands.\n\n26\n\n2.5\n\n2. G w a r n m t Accession No.\n\n1. Report No.\n\n3. Recipient\'s Cotslog No.\n\nNASA TM-86703\n~\n\n4. Title and Subtitle\n\n~~\n\n5. Report Date\n\nJ a n u a r y 1986\n\nCGI DELAY COMPENSATION\n\n6. Performing Organization Code\n\n8. Performing Orpnization Report No.\n\n7. Authorlrl\n\n85168\n\nRichard E. McFarland\n~~\n\n10. Work Unit No.\n\n~~~~\n\n9. Performing Organization Name and Address\n\nAmes Research Center\nMoffett Field, CA 94035\n\n1 1 . Contract or Grant :io.\n\n13. Type of Repon and hid Covered\n\nIt. Sponsoring Agency Name and Address\n\nTechnical Memorandum\n\nNational Aeronautics and Space Administration\nWashington, DC 20546\n\n14. Sponsoring Agency Code\n\n505-42-71\n\n15 Supplementary Notes\n\nPoint of contact: Richard E. McFarland, Ames Research Center, Moffett Field, CA 94035\n(4 15) 694-617 1 or FTS 448-6 17 1\n16. Abstract\n\nComputer-generated graphics in real-time helicopter simulation produces objectionable scene-presentation\ntime delays. In the flight simulation laboratory at Ames Research Center, it has been determined that these\ndelays have an adverse influence on pilot performance during aggressive tasks such as nap-of-the-Earth (NOE)\nmaneuvers.\nUsing contemporary equipment, computer-generated image (CGI) time delays are an unavoidable consequence of the operations required for scene generation. However, providing that magnitude distortion at\nhigher frequencies are tolerable, delay compensation is possible over a restricted frequency range. This range,\nassumed to have an upper limit of perhaps 10 or 15 rad/sec, conforms approximately to the bandwidth\nassociated with helicopter handling qualities research.\nA compensation algorithm is introduced here and evaluated in terms of tradeoffs in frequency responses.\nThe algorithm has a discrete basis and accommodates both a large, constant transport delay interval and a\nperiodic delay interval, as associated with asynchronous operations.\n\nI\n\nTime delay\nCompensation\nReal-time simulation\nComputer-generated graphics\nOperational bandwidth\nA&chronous transfers\n19. Security aarrif. (of this report)\n\nUnclassified\n\n-\n\nI 18. Distribution Statement\n\n17. Key Words (Suggested by Authorlr))\n\nI\n\nI\n\n20. Security Classif. (of this page)\n\nUnclassified\n\n-\n\nUnclassified\n\nUnlimited\n\nS u b j e c t Category 05\n\nI\n\n21. NO. of Paps\n\n29\n\nI\n\n\'22. Rice\n\nA03\n\nFor sale by the National Technical Information Service. Springfield. Virginia 22161\n\nNASA-Langley, 1986\n\n'