b'Software\nWallops Ship Surveillance\nSystem\nApproved as a Wallops control center\nbackup system, the Wallops Ship Surveillance Software is a day-of-launch risk\nanalysis tool for spaceport activities. The\nsystem calculates impact probabilities\nand displays ship locations relative to\nboundary lines. It enables rapid analysis\nof possible flight paths to preclude the\nneed to cancel launches and allow execution of launches in a timely manner. Its\ndesign is based on low-cost, large-customer-base elements including personal\ncomputers, the Windows operating system, C/C++ object-oriented software,\nand network interfaces. In conformance\nwith the NASA software safety standard,\nthe system is designed to ensure that it\ndoes not falsely report a safe-for-launch\ncondition. To improve the current ship\nsurveillance method, the system is designed to prevent delay of launch under\na safe-for-launch condition.\nA single workstation is designated the\ncontroller of the official ship information\nand the official risk analysis. Copies of this\ninformation are shared with other networked workstations. The program design is divided into five subsystems areas:\n1. Communication Link \xe2\x80\x93 threads that\ncontrol the networking of workstations;\n2. Contact List \xe2\x80\x93 a thread that controls a\nlist of protected item (ocean vessel)\ninformation;\n3. Hazard List \xe2\x80\x93 threads that control a\nlist of hazardous item (debris) information and associated risk calculation\ninformation;\n4. Display \xe2\x80\x93 threads that control operator\ninputs and screen display outputs; and\n5. Archive \xe2\x80\x93 a thread that controls\narchive file read and write access.\nCurrently, most of the hazard list\nthread and parts of other threads are\nbeing reused as part of a new ship surveillance system, under the SureTrak project.\nThis work was done by Donna C. Smith of\nGoddard Space Flight Center. Further information is contained in a TSP (see page 1). GSC15623-1\n\nSource Lines Counter\n(SLiC) Version 4.0\nSource Lines Counter (SLiC) is a software utility designed to measure software source code size using logical\n\nNASA Tech Briefs, March 2011\n\nsource statements and other common\nmeasures for 22 of the programming\nlanguages commonly used at NASA and\nthe aerospace industry. Such metrics\ncan be used in a wide variety of applications, from parametric cost estimation\nto software defect analysis. SLiC has a\nvariety of unique features such as automatic code search, automatic file detection, hierarchical directory totals, and\nspreadsheet-compatible output. SLiC\nwas written for extensibility; new programming language support can be\nadded with minimal effort in a short\namount of time. SLiC runs on a variety\nof platforms including UNIX, Windows,\nand Mac OSX. Its straightforward command-line interface allows for customization and incorporation into the\nsoftware build process for tracking development metrics.\nThis work was done by Erik W. Monson,\nKevin A. Smith, Brian J. Newport, Roli D.\nGostelow, Jairus M. Hihn, and Ronald K.\nKandt of Caltech for NASA\xe2\x80\x99s Jet Propulsion\nLaboratory. For more information, contact\niaoffice@jpl.nasa.gov.\nThis software is available for commercial licensing. Please contact Daniel Broderick of\nthe California Institute of Technology at\ndanielb@caltech.edu. Refer to NPO-45962.\n\nawareness of the rendezvous and proximity operations trajectory.\nRPOP also can separately maintain trajectory estimates (past, current, and predicted) based on certain data types and\nco-plot them, in order to show how the\nvarious navigation solutions compare.\nRPOP\xe2\x80\x99s best estimate of the relative trajectory is determined by a relative Kalman filter processing data provided by the sensor\nsuite\xe2\x80\x99s most accurate sensor, the trajectory\ncontrol sensor (TCS). Integrated with the\nKalman filter is an algorithm that identifies the reflector that the TCS is tracking.\nBecause RPOP runs on PC laptop\ncomputers, the development and certification lifecycles are more agile, flexible,\nand cheaper than those that govern the\nOrbiter FSW (flight software) that runs\nin the GPC. New releases of RPOP can\nbe turned around on a 3- to 6-month\ntemplate, from new Change Request\n(CR) to certification, depending on the\ncomplexity of the changes.\nThis work was done by Heather Hinkel, Scott\nTamblyn, and William L. Jackson of NASA\xe2\x80\x99s\nJohnson Space Center; Chris Foster of Jacobs\nEngineering (ESCG); Jack Brazzel and Thomas\nR. Manning of McDonnell Douglas Space Systems; and Fred Clark, Pete Spehar, Jim D. Barrett, and Zoran Milenkovic of Lockheed Martin. Further information is contained in a\nTSP (see page 1). MSC-24473-1\n\nGuidance, Navigation, and\nControl Program\nThe Rendezvous and Proximity Operations Program (RPOP) is real-time\nguidance, navigation, and control\n(GN&C) domain piloting-aid software\nthat provides 3D Orbiter graphics and\nruns on the Space Shuttle\xe2\x80\x99s Criticality-3\nPayload and General Support Computer\n(PGSC) in the crew cockpit. This software provides the crew with \xe2\x80\x9cSituational\nAwareness\xe2\x80\x9d during the rendezvous and\nproximity operations phases of flight.\nRPOP can be configured from flight to\nflight, accounting for mission-specific\nflight scenarios and target vehicles, via\ninitialization load (I-load) data files. The\nsoftware provides real-time, automated,\nclosed-loop guidance recommendations\nand the capability to integrate the crew\xe2\x80\x99s\nmanual backup techniques.\nThe software can bring all relative navigation sensor data, including the Orbiter\xe2\x80\x99s GPC (general purpose computer) data, into one central application\nto provide comprehensive situational\n\nSingle-Frame Terrain Mapping Software for Robotic\nVehicles\nThis software is a component in an\nunmanned ground vehicle (UGV) perception system that builds compact,\nsingle-frame terrain maps for distribution to other systems, such as a world\nmodel or an operator control unit,\nover a local area network (LAN). Each\ncell in the map encodes an elevation\nvalue, terrain classification, object classification, terrain traversability, terrain\nroughness, and a confidence value into\nfour bytes of memory. The input to this\nsoftware component is a range image\n(from a lidar or stereo vision system),\nand optionally a terrain classification\nimage and an object classification\nimage, both registered to the range\nimage. The single-frame terrain map\ngenerates estimates of the support surface elevation, ground cover elevation,\nand minimum canopy elevation; gener-\n\n9\n\n'