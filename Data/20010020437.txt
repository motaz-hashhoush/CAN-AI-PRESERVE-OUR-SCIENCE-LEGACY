b'NASA\n\n/ CR--2000-210560\n\nTAILSIM\n\nDale\n\nState\n\nGuide\n\nW. Hiltner\n\nOhio\n\nUsers\n\nDecember\n\nUniversity\n\n2000\n\nResearch\n\nFoundation,\n\nColumbus,\n\nOhio\n\nThe NASA STI Program\n\nSince its founding,\nNASA has been dedicated\nthe advancement\nof aeronautics\nand space\nscience. The NASA Scientific and Technical\nInformation\n(STI) Program\nin helping NASA maintain\n\nOffice...\n\nCONFERENCE\n\nto\n\nPUBLICATION.\n\nCollected\n\npapers from scientific and technical\nconferences,\nsymposia,\nseminars, or other\nmeetings sponsored\nor cosponsored\nby\nNASA.\n\nOffice plays a key part\nthis important\nrole.\n\nThe NASA STI Program Office is operated by\nLangley Research Center, the Lead Center for\nNASA\'s scientific and technical information.\nThe\n\nSPECIAL\ntechnical,\n\nPUBLICATION.\nScientific,\nor historical information\nfrom\n\nNASA programs,\nprojects, and missions,\noften concerned\nwith subjects having\nsubstantial\npublic interest.\n\nNASA STI Program Office provides access to the\nNASA STI Database, the largest collection of\naeronautical\nand space science STI in the world.\nThe Program Office is also NASA\'s institutional\nmechanism\nfor disseminating\nthe results of its\nresearch and development\nactivities. These results\nare published by NASA in the NASA STI Report\nSeries, which includes the following report types:\nTECHNICAL\nPUBLICATION.\nReports of\ncompleted\nresearch or a major significant\nphase of research that present the results of\nNASA programs and include extensive data\nor theoretical analysis. Includes compilations\nof significant scientific and technical data and\ninformation\ndeemed to be of continuing\nreference value. NASA\'s counterpart\nof peerreviewed formal professional\npapers but\nhas less stringent limitations on manuscript\nlength and extent of graphic presentations.\n\nin Profile\n\nTECHNICAL\nTRANSLATION.\nEnglishlanguage\ntranslations\nof foreign scientific\nand technical material pertinent\nto NASA\'s\nmission.\nSpecialized\nservices that complement\nthe STI\nProgram Office\'s diverse offerings include\ncreating custom thesauri, building customized\ndata bases, organizing\nand publishing\nresearch\nresults..,\neven providing\nvideos.\nFor more information\nProgram\n\nabout\n\nthe NASA STI\n\nOffice, see the following:\n\n\xe2\x80\xa2\n\nAccess the NASA STI Program\nat http://www.sti.nasa.gov\n\n\xe2\x80\xa2\n\nE-mail your question\nhelp@sti.nasa.gov\n\nand technical findings that are preliminary\nor\nof specialized\ninterest, e.g., quick release\nreports, working papers, and bibliographies\nthat contain minimal annotation.\nDoes not\n\n\xe2\x80\xa2\n\nFax your question to the NASA Access\nHelp Desk at 301-621-0134\n\ncontain\n\n\xe2\x80\xa2\n\nTelephone the NASA Access Help Desk at\n301-621-0390\n\nTECHNICAL\n\nMEMORANDUM.\n\nextensive\n\nCONTRACTOR\n\nScientific\n\nanalysis.\nREPORT. Scientific\n\ntechnical findings by NASA-sponsored\ncontractors\nand grantees.\n\nHome\n\nvia the Internet\n\nPage\n\nto\n\nand\nWrite to:\nNASA Access\nNASA Center\n7121 Standard\nHanover,\n\nHelp Desk\nfor AeroSpace\nDrive\n\nMD 21076\n\nInformation\n\nNASA/_\n\nCR--2000-210560\n\nTAILSIM\n\nDale\n\nState\n\nGuide\n\nW. Hiltner\n\nOhio\n\nUsers\n\nPrepared\n\nUniversity\n\nunder\n\nNational\n\nGrant\n\nAeronautics\n\nSpace\n\nAdministration\n\nGlenn\n\nResearch\n\nDecember\n\nCenter\n\n2000\n\nResearch\n\nNAG3-2007\n\nand\n\nFoundation,\n\nColumbus,\n\nOhio\n\nTrade names or manufacturers\'\nnames are used in this report for\nidentification\nonly. This usage does not constitute\nan official\nendorsement,\neither expressed\nor implied, by the National\nAeronautics\nand Space Administration.\n\nAvailable\nNASA Center\n7121 Standard\n\nfor Aerospace\nDrive\n\nfrom\nNational\n\nInformation\n\nTechnical\n\nInformation\n\nService\n\n5285 Port Royal\n\nRoad\n\nSpringfield,\nVA 22100\nPrice Code: A03\n\nHanover,\nMD 21076\nPrice Code: A03\nAvailable\n\nelectronically\n\nat http://gltrs.grc.nasa.gov/GLTRS\n\nTable\n\n1.0 Program Overview\n1.1 Program\n2. Program\n\nof Contents\n\n................................................................................................................................................................................\n\nStructure .........................................................................................................................................................................\n\nOperation\n\n...................................................................................................................................................................................\n\n1\n4\n\n2.t\n\nProgram\n\n2.2\n\nInput File Parameters\n\n2.3\n\nInput Tables ..................................................................................................................................................................................\n\n6\n\n2.4\n\nInput Parameter\n\n7\n\n2.5\n\nRunning\n\n3. Program\n\nSetup ..............................................................................................................................................................................\n\n1\n\n....................................................................................................................................................................\n\nGuidelines\n\nthe Program\n\n.........................................................................................................................................................\n\n...................................................................................................................................................................\n\nOutputs ......................................................................................................................................................................................\n\n4. Changing\n\nthe Aircraft\n\nConfiguration\n\n4.1\n\nModifying\n\nthe Buildup\n\n4.2\n\nModifying\n\nOutput\n\nModel ...........................................................................................................................................\n\nEquations\n\nParameters\n\n................................................................................................................................................\n\n....................................................................................................................................................\n\n8\n8\n9\n9\n10\n\nto the Reversible\n\n5.1\n\nReversible\n\nElevator\n\n5.2\n\nPilot Model .................................................................................................................................................................................\n\n11\n\n5.3\n\nGust Models\n\n13\n\nControl\n\nPilot, and Gust Models ........................................................................................................\n\n4\n\n5. Modifications\n\nReferences\n\nControl.\n\n4\n\nModel ...........................................................................................................................................\n\n...............................................................................................................................................................................\n\n..................................................................................................................................................................................................\n\nAppendix\n\nA---TAILSM\n\nAppendix\n\nB---Partial\n\nNASA/CR--2000-210560\n\n16.COM\nIntemal\n\nInclude\n\nParameter\n\nFile Listing .............................................................................................................................\nListing ......................................................................................................................................\n\niii\n\n10\n10\n\n14\n15\n18\n\n1.0 Program\n\nOverview\n\nThe TAILSIM program uses a 4 th order Runge-Kutta method to integrate the standard aircraft equations-of-motion\n(EOM). The EOM determine three translational and three rotational accelerations about the aircraft\'s body axis reference\nsystem. The forces and\nderivatives, and control\nfunction of para-meters\ndimensionalize\nthem to\nFeatures that make\n\nmoments that drive the EOM are determined from aerodynamic coefficients, dynamic\ninputs. Values for these terms are determined from linear interpolation of tables that are a\nsuch as angle-of-attack\nand surface deflections. Buildup equations combine these terms and\ngenerate the driving total forces and moments.\nTAILSIM applicable to studies of tailplane stall include modeling of the reversible control\n\nsystem, modeling of the pilot performing a load factor and/or airspeed command task, and modeling of vertical gusts.\nThe reversible control system dynamics can be described as two hinged masses connected by a spring, resulting in a fifth\norder system. The pilot model is a standard form of lead-lag with a time delay applied to an integrated pitch rate and/or\nairspeed error feed-back. The time delay is implemented by a Pade approximation,\nwhile the commanded pitch rate is\ndetermined by a com-manded load factor. Vertical gust inputs include a single 1-cosine gust and a continuous NASA\nDryden gust model. These dynamic models, coupled with the use of a nonlinear database, allow the tailplane stall\ncharacteristics,\nelevator response, and resulting aircraft response, to be modeled. A useful output capability of the\nTAILSIM program is the ability to display multiple post-run plot pages to allow a quick assessment of the time history\nresponse. There are 16 plot pages currently available to the user. Each plot page displays 9 parameters. Each parameter\ncan also be displayed individually, on a one plot-per-page format. For a more refined display of the results the program\ncan also create files of tabulated data, which can then be used by other plotting programs.\nThe TAILSIM program was written straightforwardly\nassuming the user would want to change the database tables,\nthe buildup equations, the output parameters, and the pilot model parameters. A separate database file and input file are\nautomatically read in by the program. The use of an include file to set up all common blocks facilitates easy changing of\nparameter\n\nnames and array sizes.\n1.1 Program\n\nStructure\n\nThe functional program structure is shown in the program flow block diagram of figure 1.1.1. Here INIT represents\nthe initialization actions of the program. The main action of the initialization subroutine is to setup the input/output file\nstructure, set constants and calculate gains, read in the input data, and trim the aircraft to the input flight condition.\nReading in the aircraft geometry and flight condition data, and input and output file names is performed in the main\nprogram. The subroutine SMINIT is then called. This program sets constants for the standard atmosphere, gust calculations, reversible control system, and pilot model, and initializes the random ftmction and calculates pilot model gains.\nThe database is then read in using subroutine TBLIN. Output variable names are placed into arrays in VNOUT. Any\nadjust-ments to gross weight or inertias, as required by the input run file configuration, are calculated in CGTRAN. The\ntrim process is then started by determining the initial surface deflections defmed by the flight controls subroutine,\nFCSYS.\n\n\xc3\x978\nh,.V\n\nFigure\n\nNASA/CR--2000-210560\n\nI.I.1--TAILSIM\n\nProgram\n\n1\n\nFlow Block Diagram.\n\nThe\n\ntrimming\n\nto bring\nfacilitate\n\nand r dot\n\nEOM\n\nloop\n\nFMTRM\n\nfor trimming.\n\nproperties\n\nEOM\n\nwere\n\nis used\n\ndeflection\n\nfound\n\nto adjust\n\nSpecifically,\n\nthe buildup\n\nthe dynamically\n\nequation\n\nlagged\n\nforces and moments,\nperforming\nare then calculated\nin EOMACB.\n\nMultiple\n\noptions\n\nwith the standard\nvariable,\n\nto provide\n\nthe required\n\nunaccelerated\n\nto vary to trim.\n\nThe\nmain\n\nmain\n\nperformed\n\ncoefficients\n\nFCSYS.\n\nThe\n\nThese\n\ninputs\n\ntables\n\nin each\n\nbeen noted\n\nflight\n\nFM block\n\naircraft\nMost\n\ncondition\n\nC.G.\n\nusage\n\nloop\n\na\n\npath\nis again\n\ndepending\n\ncontrol\nGust\n\nwhich\n\nin the\n\nThis action\ninputs,\n\nis\n\nperformed\n\non the input\n\nstick dynamics,\n\ninputs\n\non the step size\n\nRKTIME,\n\nthe structure\n\nof the control\n\noption\n\nor load\n\nare also calculated\n\nand the current\n\n"pass"\n\nin\n\nof\n\nis the first subroutine\nis used,\n\nintegration\n\naccessed\nare\n\nfour\n\n"passes"\n\n(INT\n\nblock).\n\nThis\n\ndeflections,\n\nNAS A/CR---2000-210560\n\nderivatives.\n\nprogram,\n\nThese\n\nat the known\n\nacting\n\nflight\n\non the aircraft\n\nof subroutines,\n\nTBLOOK,\n\nare then used\n\nfor differences\n\non each\n\nangle-of-attack\n\nis used\n\ncondition\n\nsome\n\nto access\n\nin the buildup\n\nin the assumed\n\nto EOMACC,\n\nvector\n\nis used.\nthe values\n\nnature\n\nin a separate\nThese\n\nloop.\nwhich\n\nare generated\n\nwith the integrations\n\npasses\n\nto calculate\n\nC.G.\n\nmay\n\nof which\n\nthe\n\nequations\n\nto\n\nthe total\n\nfor the database\n\nof the Runge-Kutta\n\nhowever,\n\nare tangential\n\nof the longitudinal\nInside\n\nmotion,\n\nthe Runge-Kutta\n\ncalculates\n\nEarth\n\noriented\n\nby a call to subroutine\n\nfor the pilot\nof the EOM.\nsubroutine,\n\nsubroutines\n\nof the four\n\nderivatives,\n\nthe accuracy\n\nin the Runge-Kutta\nterms.\n\nare input\n\nthe proper\n\nto calculate\n\nin series\n\nare then used\n\nand enhance\n\nare performed\nRKINTL\n\nand moments\n\nis performed\n\nare determined\nThe\n\naxis accelerations\n\nalong\n\nmaintains\n\nintegrations\n\nscale them\n\nbody\n\nthe forces\n\nwhich\n\nforces\n\nand the\n\nin AEROFM.\n\nderivatives.\n\nand moments\n\nRequired\n\nknown,\n\nAny adjustment\n\nequations\n\nof these derivatives\n\nare then integrated,\n\nproperly\n\nflight\n\npath angle\n\nby the FC block.\n\nand can vary\n\na stick force.\n\nthe table lookup\n\nand control\n\nin AEROFM.\n\nare secant\n\nrates\n\nas surface\n\nare used\n\nis always\n\nwill vary the flight\n\ndefines\n\nThis\n\nas noted\n\nthe reversible\n\nRunke-Kutta\n\nThese\n\nturn.\n\nloop.\n\ndepends\n\naxis\n\nare inputs.\n\nin a coordinated\n\ntables,\n\nwhich\n\nBody\n\nthe flight\n\ninputs\n\nIn AEROFMC\n\ntotal coefficients\n\nare accomplished\n\ntotal forces\n\nRunge-Kutta\n\nstate\n\nand pitching\n\nwill be to the input\n\naction,\n\nthis program\n\nin the main program\nprior to their usage\nthe derivative\nand added to the summed\nThe\n\nof\n\nThe\n\nto steady\n\nvalue\n\nAngle-of-attack\n\nthe calculation\n\nto drive\n\nin program\n\na 4 th order\n\nand surface\n\nrepresents\n\nThe\n\naccomplished\n\ntheir derivatives\n\naccelerations.\n\nthat since\n\nthe stability\n\nterms of the buildup\n\nmore correct\n\nNote\n\nin the trim discussion.\nand determine\n\ntotal coefficients.\n\nand moments,\ninput\n\nhistory\n\nThe\n\ntables\n\ntime,\n\ntime is calculated\n\non angle\n\nto trim v dot\n\nthe trim function\n\nthe trim\n\ncondition,\n\nand commands\n\nof the integration\n\nand altitude\n\nbe exceeded,\n\nintegration\nflight\n\ninput\n\nmodel\n\nFor\n\ntime step.\n\nthe time\n\nbe determined.\n\nto the aircraft\n\nforce\n\nstate\n\ncalculations.\n\nairspeeds.\n\nwould\n\nfrom\n\nIntegration\nloop.\n\nnumber\n\nrepresents\n\nthe pilot\n\ntransfer\n\nis not an input,\n\nto trim\n\nstick\n\ndeflection\n\nTo\n\nloop.\n\nto trim u dot.\n\nin AEROFMC\n\nis an input,\n\nthrust levels\n\nblock\n\ndrive\n\nare a function\n\nintegration\n\nMach\n\nthe Runge-Kutta\n\ndeflection,\n\ncalculated\n\nC.G.\n\nFCS\n\nelevator\n\nan iterative\n\nrecursion\n\nand rudder\n\nand thrust\n\ntolerances.\n\ntest data, as apposed\nto a local pitching\nmoment\nslope\nknown, FMTRM\ncalls AEROFM\nto calculate\nthe total\n\ncoefficient\n\nof the current\nThe\n\nwithin\n\nterm is set to a steady\n\nare read in directly\n\ninputs\n\nwhich\n\nintegration.\n\nin the Runke-Kutta\n\ndetermine\n\nControl\n\nairspeed,\n\ninput\n\nWith\n\ndefines\n\nFLTCOND.\n\ncan be direct\n\ntrim\n\nthe Runke-Kutta\nrequired\n\nor minimum\n\ncan also be input\n\ndiagram\n\nby a call to subroutine\n\nfactor and]or\nthis block.\n\nrequired\n\nangle\n\nIf thrust\n\nIf thrust coefficient\n\nand starts with the determination\n\nin subroutine\nchosen.\n\nA bank\n\nline on the block\n\nprogram\n\nflight.\nIf maximum\n\ninputs\n\nspecified\n\na Newton-Raphson\n\nthe true and calibrated\n\nload factor.\n\nseparately\n\non sideslip\n\ndownwash\n\nIn all options,\n\nto determine\n\nsurface\n\nto within\n\nloop on thrust coefficient\n\nany database-to-aircraft\n\nthe aircraft.\n\ncalculations\n\nand thrust will be varied.\n\nallowed\n\nhave\n\nfor trimming\n\nand is set to match\n\npath angle\nangle,\n\nexist\n\natmosphere\n\nthe control\n\np dot.\n\nmoment\nis calculated\nfrom table data developed\nfrom trim flight\nused for a dynamic\nresponse.\nWith the aerodynamic\ncoefficients\naerodynamic\naccelerations\n\nby using\n\nrecursion\n\nto trim\n\nusing\n\nof motion\n\nale trimmed\n\nan iterative\n\nby a Newton-Raphson\n\non aileron\n\ntrims\n\naxis equations\n\nto trim w dot and q dot within\n\nare trimmed\n\nwith an iterative\n\nSubroutine\nvalues\n\nThis program\nbody\n\nand lateral/directional\n\nthe best convergence\n\ndeflection\n\nlateral/directional\n\nis then called.\n\nthe longitudinal\n\nEOM,\n\nand elevator\n\nSMTRIM,\n\nof the six degree-of-freedom\n\nconvergence,\n\nthe longitudinal\nattack\n\nsubroutine,\n\nthe accelerations\n\nmodel\n\nand stick\n\nA useful\nRKINT.\n\nare called\n\nfeature\n\n2\n\nloop,\n\nby COMPINT,\nloop.\n\nterms were\n\ntranslational\n\nin subroutine\n\naccelerations\n\ntrack\n\nto\naxis\nand\n\nCOMPINT\n\nprogram\n\nthat have physical\n\nand keep\n\na\n\nsummed\n\nand Euler\n\nThese\n\nas\n\nTo provide\n\na Ac_ is then applied\n\nof the TAILSIM\n\nFor parameters\n\nfor the next pass of the Runge-Kutta\n\nthese\n\nEOMACB.\n\ndynamics,\n\nintegration,\n\nderivatives.\n\nis that the\nlimits,\n\nof past values\n\nsuch\nand\n\nFinally, the OUT block indicates the saving of output parameters into individual arrays. The location of this saving\naction in the Runge-Kutta loop was chosen to provide a direct comparison of state and control parameters to EOM\naccelerations. The subroutine PSAVE saves all desired parameters into arrays at this point in the Runge-Kutta\nloop.\nArrays are used to provide the option of creating an output data file for a time history and to provide post run plotting\ncapability. The formats for the output data files are contained in subroutine POUT, which is called by the main program,\nif desired, after a run is completed. Five output files, to minimize the size of each file, contain all variable names set in\nVNOUT and all parameters saved in PSAVE.\nNot shown in the block diagram is the plotting subroutine, PPLOT. This subroutine is accessed after the completion\nof a time history run, and displays multiple plot pages of the desired parameters stored in the arrays contained in\nPSAVE. These plots may be screen dumped to provide a hard copy of the time history.\n\nNASAJCR--2000-210560\n\n3\n\n2.\n\nProgram\n\nOperation\n\n2.1 Program\n\nSetup\n\nTAILSIM was written in Fortran using the Microsoft Fortran Powerstation v 1.0. The screen plotting features in the\nprogram used compiler specific functions. It is not known if these features will be compatible with other Fortran\ncompilers. All other program operations should work on any Fortran compiler.\nIn its current version TAILSIM assumes that all program files are contained in the directory, C:",I)H6DYN. The\nrequired program files are: C:kDH6DYNNTAILSM16.FOR,\nC:_)H6DYNkTAILSM\n16.RUN, and C:_)H6DYN",\nTAILSM 16.COM. The current database is contained in C:\'_/)H6DYN\'_H6NTF\n12.DAT. A font file is contained in\nC:"/)H6DYN_COURB.FON.\n\n2.2 Input File Parameters\nThis section assumes that a TAILSIM\n\nprogram and all required\n\nfiles are ready to use and that an executable\n\nbe created successfully. The TAILSMI6.RUN\ninput file is then used to set up the simulation\nof this input file is shown in Figure 2.2.1. Note that all data in the input file is labeled.\n\nrun conditions.\n\nfile can\n\nAn example\n\nThe first two lines of the input file are comment lines that are used to provide a description of the input file\nconfigur-ation.\nThe third line contains the run number which is used in the output file filenames. An error will occur if\nthis run number matches that of the output files in the current directory. The remaining parameters will be described\nbelow with reference to their labels. Each set of inputs is also given a description indicated on the left of each comment\nline.\nThe input parameters\n\nare:\n\nLENGTH\nSTEP\nEXTRAP\n\nProgram\n\nTMINS\nGW\nWING S\nMAC\nSPAN\nDGW\nAREA\nCHORD\nARM\nHT\nXCG0\nYCGO\nZCGO\nDXCG\nDYCG\nDZCG\nXCGDB\nYCGDB\nZCGDB\nIXX0\nIXY0\nIXZ0\nIYY0\nIYZ0\n\nStarting time to begin checking for the minimum\nAircraft nominal gross weight, lbs\nWing reference area, fi2\n\nrun time in seconds\n\nRunge-Kutta\nExtrapolation\noff, 0.0\n\nintegration step size. Typically, 0.01 or 0.02 (100 or 50 Hz integration frequency) are used\nflag variable. Optional input to the table look-up subroutine to turn extrapolation on, 1.0 or\n\nReference chord length, ft (Mean Aerodynamic\nWingspan. ft\nDelta gross weight from nominal, lbs\nTailplane planform reference area, fi-_\nTailplane MAC, ft\n\nload factor\n\nChord\n\n(MAC))\n\nReference distance from the wing quarter chord point to the tailplane quarter chord point, ft\nTailplane height above the reference center-of-gravity\n(C.G. i\nX axis C.G. location, %MAC, positive aft\nY axis C.G. location, %MAC, positive right\nZ axis C.G. location, %MAC, positive up\nDelta X axis C.G. location due to DGW, %MAC, positive aft\nDelta Y axis C.G. location due to DGW, %MAC, positive right\nDelta Z axis C.G. location due to DGW, %MAC, positive up\nX axis C.G. location of database, %MAC, positive aft\nX axis C.G. location of database, %MAC, positive aft\nX axis C.G. location of database, %MAC, positive aft\nIx inertia, slug-ft 2, for nominal gross weight\nIxy inertia, slug-fi 2, for nominal gross weight\nI_ inertia, slug-ft 2, for nominal gross weight\nIv inertia, slug-ft 2, for nominal gross weight\nIy_ inertia, slug-fi 2, for nominal gross weight\n\nNASA/CR--2000-210560\n\n4\n\nIZZ0\nALT\nMACH\nTCTF\nTAOA\nTGAMMA\nTPHI\nGVEL\nT START\nT END\nICOPT\nand\n\nI_ inertia, 2,fornominal weight\nslug-ft\ngross\nInitial ltitude,\na\nft\nInitialMach\nNumber\nInitialhrust\nt\ncoefficient\nsetting.seto0.0the\nIf t\ntrimroutine ill vary thrust\nw\nthe\ncoefficientrequired\nas\nInitialangle-of-attack inthe\nused trimroutine,\ndeg\nInitiallightpath\nf\nanglesed trimroutine,\nu inthe\ndeg\nBank\nangle trim in a coordinated turn, deg\nfora\nGust peak amplitude, ft/sec\nStarting time for single pulse or NASA Dryden gust input\nEnding time for NASA Dryden gust input\nControl input type flag: l-elevator input; 2-stick force input; 3-load factor command\n\ninput: 4-load factor\n\nairspeed command input\nof pitch rate to integrated pitch rate error\nof airspeed to integrated airspeed error\nmodel lag time constant, sec\nmodel lead time constant, sec\n\nRatio\nQPFR\nAPFR\nRatio\nPMTLAG Pilot\nPMTLEAD Pilot\nPMTDELAY\nPilot\n\nmodel time delay, sec\n\nThe next lines define the filename\nis required\n\nof the command\n\ninput file and the database.\n\nFor completeness,\n\nthe full path name\n\nin the filename.\nTAILS M 16 RUNS\nDH6 TWIN OTTER with TAIL \'LOW\' DATA FROM NLRC\nRUN\nTIMES\n\n01\nLENGTH\n\nSTEP\n\nEXTRAP\n\nTMINS\n\n9.98\n\nCG DATABASE\nINERTIAS\nFLT COND\n\nWING S\n420.00\n\nMAC\n6.50\n\nSPAN\n65.00\n\nAREA\n\nCHORD\n\nARM\n\nHT\n\n4.75\n\n25.66\n\n2.63\n\nXCGO\n\nYCG0\n\nZCG0\n\nDXCG\n\nDYCG\n\nDZCG\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\nXCGDB\n0.25\n\nYCGDB\n0.00\n\nZCGDB\n0.00\n\nIXX0\n\nIXY0\n\nIXZ0\n\nIYY0\n\nIYZ0\n\nIZZ0\n\n19324.0\n\nC.G.\n\n8.50\n\nGW\n10000.0\n\n0.25\n\nTAIL GEOM\n\n1.0\n\n98.0\n\nA/C GEOM\n\n0.020\n\n0.00\n\n1099.0\n\n24688.0\n\n0.00\n\n35357.0\n\nALT\n\nMACH\n\nTCTF\n\nTAOA\n\n0.133\n\n0.000\n\n8.00\n\n7200.00\nGUST\n\nGVEL\n\nT START\n\nCOMMANDS\n\n0.50\n\n0.00\n\nTPHI\n0._\n\n10.00\n\nICOPT\n3\n\nQPFR\n0.0\n\nAPFR\n5\n\nPMTLAG\nPMTLEAD\n0.5\n0.4\n\nC:kDH6DYN_MDPGST.DAT\n\nDATA BASE C:kDH6DYNkDH6NTF 12.DAT\nFigure\n\nNASA/CR--2000-210560\n\nTGAMMA\n\nT END\n\n50.00\nCMD OPTION\n\nDGW\n0.0\n\n2.2.1mExample\n\n5\n\nRun Input File.\n\nPMTDELAY\n0.12\n\n2.3 Input Tables\nThe input tables are used to def\'me the surface deflections, stick force, load factor, and thrust delta commands, and\nto turn icing on or off. These tables are contained in the command file indicated in the input file in section 2.2. In the\nexample, the command input file is C:kDH6DYN_MDPGST.DAT\nand is shown in figure 2.3.1.\nThe tables are used by defining sets of time and input values. The simulation program then linearly interpolates\nbetween the time values as required. No extrapolation is allowed. Changes are made directly by typing in the desired\nvalues. In practice, there has been no practical limit to the number of break points allowed.\nAll tables have a single dependent parameter, indicated by the 1 in the first line of each table. The next line shows\nthe single independent parameter name and output parameter name, followed by the number of data points. Note that all\nparameter name labels are included in the table for convenience,\nbut are not read by the table input program. The next\nlines indicate the values of the independent parameters, followed by the values of the dependent parameters. All inputs,\nnumeric or character, are right justified, with the spacing indicated by the header line. The TRA in the last line defines\nthe end of the table. Comments are allowed, using the COM label as indicated.\nDescriptions of the table input parameters follow:\nDLFAP\nDELEVC\nFSTCKC\nANLFC\nDAILC\nDRUDC\nCTHRSTC\nFICE\n\nFlap deflection, deg\nElevator deflection command, deg\nStick force command, lbs\nLoad factor command, g\nAileron deflection command, deg\nRudder deflection command, deg\nDelta thrust coefficient increment command\nTailplane\n\nNASA/CR--2000-210560\n\nicing flag:\n\n0-uniced\n\ntailplane;\n\nfrom trim\n\n1-iced tailplane\n\n6\n\nCOM\nCOM\n\nFILE CMDPGST.DAT\n\nCOM\nCOM\n\nFOR SPACING\n\nCOM\nCTAB01\n\n1.0000\n\n3.0000\n\n2.0000\n\n4.0000\n\n5.0000\n\n6.0000\n\nCOM\n\nTBL 1\nTIME\n\nDFLAP\n\n4.00\n0.00\n\n1.00\n\n6.00\n\n100.0\n\n20.00\n\n20.00\n\n20.00\n\n20.00\n\nCOM\nCTAB08\n\nTBL 1\nTIME\n\nNLFC\n\n12.00\n0.00\n\n1.00\n\n1.50\n\n5.00\n\n5.50\n\n9.50\n\n12.50\n\n14.50\n\n15.50\n\n17.50\n\n18.50\n\n80.00\n\n1.00\n\n0.65\n\n0.65\n\n1.50\n\n1.50\n\n1.80\n\n1.80\n\n1.00\n\n1.00\n\n1.00\n-0.20\nCTAB07\n\n-0.20\n\nTBL 1\nTIME\n\nFSTCKC\n\n6.00\n0.00\nCTAB02\n\n1.00\n\n1.01\n\n3.50\n\n4.00\n\n6.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\nTBL 1\nTIME\n\nDELEVC\n\n6.00\n0.00\nCTAB03\n\n1.00\n\n3.00\n\n7.00\n\n10.00\n\n13.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\nTBL 1\n\nTIME\n\nDAILC\n\n6.00\n0.00\n\n1.00\n\n2.00\n\n2.50\n\n4.00\n\n5.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n0.00\n\n2.00\n0.00\n\n2.50\n0.00\n\n4.00\n0.00\n\n5.00\n0.00\n\n6.00\n\n40.00\n\n0.000\n\n0.000\n\nCTAB04 TBL 1\nTIME\n\nDRUDC\n\n6.00\n0.00\n\n1.00\n\n0.00\nCTAB05\n\n0\n\n0.00\n\nTBL 1\nTIME\n\nCTHRSTC\n\n3.00\n0.00\n\n1.00\n\n0.000\nCTAB06\n\n0.000\n\nTBL 1\nTIME\n\nFICE\n\n2.00\n0.00(_\n\n100.000\n\n0.000\n\n0.000\n\nTRA\nFigure\n\n2.3.1--Example\n\n2.4.\n\nIt is expected\nC.G.,\n\nthat a nominal\n\nand set of inertias.\n\nNASA/CR--2000-210560\n\nconfiguration\n\nFor simple\n\nchanges\n\nInput\n\nCommand\n\nParameter\n\nweight,\n\naircraft\n\nas may occur\n\n7\n\nFile\n\nGuidelines\n\ninput will be for a given\nin gross\n\nInput\n\ngeometry\n\nand a nominal\n\nfor some fuel loadings,\n\ngross\n\nTAILSIM\n\nweight,\nincludes\n\nthe capability to adjust the C.G. and inertias. The calculations assume that any change in gross weight defined by input\nDGW and input changes in C.G., DXCG, DYCG, and DZCG, are caused by a single point mass. Therefore, adjustments\nto these inertias should only be considered an approximation.\nA database is usually built up around an assumed quarter chord C.G., so TAILSIM includes the ability to transfer\nthe database moments to the given configuration C.G. This adjustment occurs in subroutine AEROFM and is applicable\nto the calculated total moments. The internal calculations used in generating the total forces and moments remain in the\ndatabase C.G. configuration. Total nonadjusted forces and moments from the buildup equation coefficients\nAEROFMC are also calculated and output for diagnostic purposes.\nThe maximum number of data samples is set by the PARAMETER\nstatement in the common file,\n\nof\n\nTAILSMI 6.COM. This is used with the STEP size to determine a maximum run length. (The program is currently set\nto allow the recording of 4110 data samples, or over 80 sec at 50 samples/sec.) A step size of 0.02 gives good accuracy\nand allows reasonable run times. For maximum accuracy, a minimum step size of 0.01 is suggested. Note that output file\nparameters are saved for each time step, so the output file size will be twice as large for the 0.01 step size, compared to\nthe 0.02 step size.\nThe TAOA and TGAMMA inputs initialize their representative\nparameters in the trim subroutine. Angle-of-attack\nis varied as required to meet the desired load factor. If a TCTF value is nonzero, flight path angle, gamma, is varied so\nthat thrust equals drag if required. If TCTF is set to 0.0, thrust coefficient is varied so that thrust equals drag at the\nTGAMMA flight path angle. If the thrust coefficient limits of 0.0 or 0.16 are reached, gamma is varied as required.\nThese trim opera-tions are also valid if TPHI is nonzero, which will cause a trim in a coordinated turn at the specified\nTPHI bank angle.\nThe magnitude of the peak vertical gust is set by the GVEL value, with the starting time for the gust calculation set\nby T START. (If no gust is desired, VGEL is set to 0.00.) Ira l-cosine gust is desired, T END is set to 0.0. The 1-cosine\ngust calculation determines the duration of the gust based on airspeed.\ndesired, T END is set to the desired end time for the gust inputs.\n\nIf a continuous\n\nNASA Dryden gust input is\n\nFull capability to vary the pilot model gains is provided by the CMD OPTION inputs. This includes the lead, lag,\nand delay terms, as well as the ratio of proportional to integral error feedback. As discussed below, nominal values are\nshown in the example input run file. Care should be taken when changing these values, as significant changes in\nresponse can occur for small changes.\n2.5\n\nRunning\n\nthe Program\n\nWith the input run file defined and saved, the program may now be executed. Upon execution, the program will\ninitialize and start the trim process. When the trim is completed, a list of trim parameters will be displayed, and the user\nwill be prompted to start the program to calculate the time history response, or abandon the run. If the program is\nabandoned, the input file parameter list and the trim data will be saved in an TSI6XX.TRM\nfile, (where XX is the input\nrun number), and all other output files will be deleted. This feature allows the user to target a specific flight condition for\nthe time history, and use trial and error to ensure it is reached. If the time history is started, a message "TAILSIM\nprogram started" is displayed until the program is finished computing the time history response.\n\n3. Program\n\nOutputs\n\nWhen the time history response calculations are completed, the first of 16 pages of 9 plots per page is displayed. A\nmessage line at the top of the plot indicates further display options. A one plot per page format may be accessed simply\nby entering the number of the plot. The plot number is defined from left to fight with 1 at the upper left and 9 at the\nlower right. The 9 plot per page format may then be displayed by entering 10. To view another plot page or exit the plot\ndisplays, 88 is entered. The plot page menu is then displayed in addition to the program exit options. A new plot page is\nthen accessed by entering the number for that page.\nThe minimum tailplane angle-of-attack and load factor are found for each run. The search for the minimum load\nfactor starts after the TMINS\nto the TS 16XX.TRM file.\n\ninput time. These values and the values of other parameters\n\nat these minimums\n\nare output\n\nTwo program exit options allow for the time history data to be abandoned or saved. If abandoned, all output files\nexcept the TS 16XX.TRM file are deleted. If the time history data is saved, the program then writes designated\nparameters to five output files in column format. This data may then be accessed by other plotting packages.\n\nNASA/CR--2000-210560\n\n8\n\nThe\noutput\nfilesacurrently\ndesignated\nas:\nC:XDH6DYNkTS\n16XX.TRM Trimparameter\nlisting\nC:XI)H6DYNWS 1\n16XXP\n.OUT First utput\no\nfilelisting\nC:XI)H6DYNKTS\n16XXP2.OUT\nSecond filelisting\noutput\nC:kDH6DYNNTS\n16XXP3.OUT\nThird\noutput\nfilelisting\nC:qDH6DYN\'xTS\n16XXP4.OUT\nFourthutput\no\nfilelisting\nC:X,\nDH6DYNXTS\n16XXP3.OUT\nFifthoutput\nfilelisting\nC:X/)H6DYNXTS\n16XX.TST Diagnostic file (As required)\noutput\nThe output files list all the parameters of the plot pages in the same order with the same names. A typical file\ncontains 27 parameters and TIME. A header line defines the parameter names as defined in VNOUT, with TIME always\nin the first column. The use of five output files allows reasonable file sizes and functionality with most potting programs.\n\n4.\n\nChanging\n\nthe Aircraft\n\nConfiguration\n\nModel\n\nThe TAILSIM program was written in a straight forward manner to facilitate modifications by the user. The\nexpected user modifications\nare; build up equations, output parameters, plot page parameters, reversible control system,\nand pilot model. The build up equations will change for different aircraft and different available coefficients. It is\nassumed that these equations will be available to the user. The desired output parameters may be different or may be\ndesired in different formats. Other pilot model architectures may be desired to investigate the effects of pilot technique\non the response of the aircraft.\n\n4.1\n\nModifying\n\nthe Buildup\n\nEquations\n\nThe buildup equations are contained in subroutine AEROFMC. In this subroutine all of the tables of the database\nare accessed and the coefficients are scaled and combined to produce a total coefficient for all six axes. Additional\nparameters specific to the buildup equations are calculated as required. Any other calculations using the coefficients are\nperformed in this subroutine if possible. These summation equations are readily programmed\nusing the available\nvariables. Any modi-fications to the input or output of AEORMFC that may be required for steady state conditions, as\nrequired for trimming, are programmed in subroutine FMTRM. This structure minimizes programming\nerrors by\nproviding one source for the complete buildup equations.\nTo simplify the use of variables in the program, all variables that are passed between any subroutine are contained\nin an include file. This file is currently named C:\'xDH6DYN\'xTAILSM 16.COM, and is inserted into all the subroutines\nwith a Fortran include statement. Appendix A contains the current include file and Appendix B a partial list of the\ninternal variables of the program.\nTo obtain coefficients from the database the TBLOOK subroutine is used. Before calling this subroutine, the\nvariables X 1IN through X5IN must be assigned. The TBLOOK subroutine assumes that the current values of X 1IN\nthrough X5IN correctly defme the independent parameter values for the table that is being accessed. All variable names\nin the tables are used for reference only. Table names from ATAB01 to ATAB99, and BTAB01 to DTAB99 are\nallowed, and can be inserted in the database in any order. The format of the tables is fixed. The table name, table output\nname, and extrapolation flag are included in the call to the TBLOOK program. The extrapolation flag can be input as 0,\n1, or EXTRAP, the global extrapolation parameter. An example file listing showing the use of the TBLOOK subroutine\nis shown in figure 4.1.1.\n\nNASA/CR---2000-210560\n\n9\n\nX1\nIN=VALPHA*RTD\nX2IN\n=CTHRST\nX3IN\n=DFLAP\nX4IN\n=FICE\nX5IN\n=0.0\nCALL\nTBLOOK(\'BTAB81\',\n0,CL00T)\nCALL\nTBLOOK(\'BTAB82\',\n0,CD00T)\nCALL\nTBLOOK(\'BTAB83\',\n0,CM00T)\nFigure\n4.1.1mExample ofTBLOOK\nUse\nSubroutine\nCall\n4.2 Modifying Output Parameters\nThe time history output formats are contained in the VNOUT, PSAVE and POUT subroutine. These are straight\nforward and changes are readily implemented\nif desired. The trim output formats are contained in the SMTRIM\nsubroutine.\nThe output filenames\n\nare contained\n\nin the MAIN program.\n\nA naming hierarchy\n\nwas established\n\nfor the current\n\nprogram as noted in section 3. Straight forward WRITE and FORMAT statements are use to set the output file names to\na unit number. This unit number is then used as required in WRITE and READ statements. Any valid Fortran file\nnaming convention may be used for the file names.\nThe subroutine PPLOT contains the main display functions. A single set of arrays are accessed to generate a plot\npage. These arrays are f\'dled with different parameters obtained from different arrays in the PSAVE subroutine. These\narrays are indicated by their respective page numbers in this subroutine. They are dimensioned in the include file,\nallowing name changes or additions to be readily implemented.\nIn PPLOT, the programming to set the parameters displayed on each page are indicated by their respective page\nnumbers. The output parameters are determined by setting the values of the DATPLOT array to those of the desired\narray from the PSAVE subroutine. The labeling for the plots is accomplished directly by using the two dimensional\narray of names set in VNOUT.\nAdditional pages can be added by duplicating the programming for each page in PPLOT, and adding a new array to\nVNOUT, PSAVE and the include f\'de. Loop and GO TO counters must be changed as required. To change or add a title\nfor the plot, programming\nin the MAIN program must be modified. This programming is clearly indicated near the end\nof the MAIN program, and consists of straight forward Fortran print statements. Note that the range of the ISTORE\nparameter is checked in an IF statement below this programming, which must be modified as well.\n\n5. Modifications\n\nto the Reversible\n\nControl,\n\nPilot, and Gust Models\n\nThe reversible elevator control model, pilot model, and gust models were implemented in the FCSYS subroutine.\nThe pertinent equations and parameters used in this subroutine are shown below. The current values of constants that\nwill need to be modified\nis given\n\nto obtain different\n\ndynamics\n\nare also given. Only a basic background\n\ndescription\n\nof each model\n\nThe constant parameters of the reversible control system model were chosen based on analysis of available\ninformation on the Twin Otter geometry, and to match characteristics\nin the flight test data. These parameters would\nchange for a different aircraft configuration, or to "tweek" the existing dynamics. The constant parameters of the pilot\nmodel were determined from a range of typical values, and to obtain acceptable simulation responses over a wide range\nof flight con-ditions. The gust model dynamic and constants were implemented directly from their indicated sources.\nThese sources are listed here as the gust models were not implemented for the dissertation.\n5.1\n\nReversible\n\nElevator\n\nControl\n\nModel\n\nAs noted in the introduction, the aircraft of interest in this study have reversible control systems. These systems\ntypically use cables to directly connect the stick to the elevator. Due to the length of the cables, cable stretch can be\nnoticeable to the pilot. To model this type of control system, a simple description was chosen. The cable was modeled\na spring, driven by pilot stick force and elevator hinge moment. Both the stick and the elevator were assumed to have\nmass and inertia. To simulate damping of the cable due to pilot action and frictional effects, values of damping were\nchosen to be -20.0 for the stick and -4.0 for the elevator. All of these constants are set in the SIMINT initialization\nsubroutine.\n\nNASA/CR---2000-210560\n\n10\n\nas\n\nThe dynamic\nfinal\nequationsimplemented program\nas\ninthe\nare:\nWSDOT-STKDMP*WSTCK\n=\n+ASTCK/AIS*FCABLE\n+ FSTCKC*BSTCK/AIS\nWEDOT = -ELVDMP*WELEV\n+ AELEV/AIE*FCABLE\n+ DMHT]AIE\nFCDOT = -AKC*ASTCK*WSTCK\n- AKC*AELEV*WELEV\nFSTCK = FCABLE*ASTCK/BSTCK\n+ FSTCKC\nDMHT = CMHT*QDP*SECE*QTR\n+ DMHTRIM\nDELEV = DELEVT + DELEVC*RTD\nDSTCK = DSTCKT + DSTCKC*RTD\nThe parameter\n\ndescription\n\nAELEV = 0.25\nAlE = 1.08\nAlS = 0.44\nAKC = 5890.0\nASTCK = 0.50\nBSTCK = 2.383\nDELEV\nDELEVC\nDELEVT\nDMHT\nDMHTRIM\nDSTCK\nDSTCKC\nDSTCKT\nELVDMP = 4.0\nFCABLE\nFSTCKC, FSTCK\nQDP\nQTR\nSECE = 57.3\nSTKDMP = 20.0\nWELEV,\nWSTCK,\n\nWEDOT\nWSDOT\n\nand their values are shown below:\n\nLength of elevator control arm, ft\nElevator inertia, slug-fi 2\nControl stick inertia, slug-fl 2\nCable spring constant, lb/in\nLength of control stick pivot to cable, fl\nLength of control stick, fi\nTotal calculated elevator deflection, deg\nCalculated elevator deflection, tad\nTrim elevator deflection, deg\nElevator hinge moment, fi-lb\nTrim elevator hinge moment, fi-lb\nTotal calculated stick deflection, deg\nCalculated stick deflection, rad\nTrim stick deflection, deg\nDamping coefficient for elevator\nCable force, lb\nCommanded stick force and calculated\nDynamic pressure, lb/fl-"\nTailplane dynamic pressure\nElevator planform area, r2\n\nstick force, lb\n\nratio\n\nDamping coefficient for stick\nStick angular rate and acceleration, rad/sec, rad/sec 2\nElevator angular rate and acceleration, rad/sec, rad/sec 2\n\n5.2 Pilot Model\nIn classical form a pilot model is a transfer function that consists of some combination of a pure gain, delay term,\nlead term, and one or more lag terms. The delay term represents a reaction time delay while one lag term corresponds to\na neuromuscular\nlag, neither of which are adjustable by the pilot. However, human pilots are very adaptable, and may\nvary their performance to match the desired response. This is represented by a lead and lag term with adjustable time\nconstants in the pilot model. The form of the pilot model as implemented in the ALFCS subroutine is:\nXPIDOT = XP2\nXP2DOT = PMG2 I*XP1 + PMG22*XP2\nDEPILOT =PMGCI*XPI\n+ PMGC2*XP2\nDELEVP = DELEVT + DEPILOT*RTD\n\nNASA/CR--2000-210560\n\n+ QGAIN*PMG2E*QDTOT\n+ QGAIN*PMGCE*QDTOT\n\n11\n\n+ PMG2E*ASFBT\n+ PMGCE*ASFBT\n\nInputsnd\na gains re\na definedelow:\nb\nASFBED ((VINFTRM\n=\n\n-VINF)*0.1\n\n) - ASFBE)*0.2\n\nASFBEK = (VINFTRM - VINF )*0.1\nASFBT = (ASFBED*APFR\n+ (1.0-APFR)*ASFBEKI))/RTD\nDMHTP = CMHTP*QDP*SECE*QTR\n+ DMHTRIMU\nFSTCKC = SEGEAR*DMHTP\nQDES = G*{NLFC - 1.0)/VINF\nQDESE = QDES - QR\nQDTOT = QDESE*QPFR\nQGAIN = (ZAOA*MQT\nThe description\n\n+ (1.0 - QPFR)*QDESEI\n- MAOAT*VINF)/(ZDE*MAOAT\n\n- ZAOA*MDET)\n\nand values for the unique pilot model parameters\n\nASFBED\nASFBEK\nASFBEKI\nCMHTP\nDEPILOT\nDELEVP\nDELEVT\nDMHTP\nDMHTRIMU\nMAOAT\nMDET\nMQT\nNLFC\nQGAIN\nQDES\nQDESE\nQDESI\nSEGEAR = 0.8392\nXPI,XP 1DOT,XP2,XP2DOT\nZAOA\nZDE\n\nare shown below:\n\nFiltered airspeed rate, scaled, kts/s\nAirspeed error, scaled, kts\nIntegrated scaled airspeed error, kts\nUniced elevator hinge moment coefficient\nElevator command, rad\nTotal commanded elevator,\nTrim elevator, deg\nUniced commanded\nTrim elevator uniced\nDimensional pitching\nDimensional elevator\n\ndeg\n\nelevator hinge moment, ft-lb\nhinge moment, fl-lb\nmoment slope\neffectiveness\n\nDimensional pitching moment due to pitch rate\nCommanded load factor, g\nGain, pitch rate to elevator deflection\nCommanded pitch rate, rad/sec\nCommanded pitch rate error, rad/sec\nIntegrated pitch rate error, rad\nStick force to elevator gearing\nCanonical form variables and their derivatives\nDimensional\nDimensional\n\nZ-force slope\nZ-force due to elevator deflection\n\nNote that the airspeed feedback is only used when ICOPT = 4, but is included here for completeness.\nThe gains shown in the above equations are obtained from the following definitions and parameters,\nvalues indicated:\nPMTLG\nPMTLD\n\nTI = 0.5 - Lag time constant, sec\nTt, = 0.4 - Lead time constant, sec\n\nPMTD\nPMG21\nPMG22\nPMG2E\nPMGC1\nPMGC2\nPMGCE\n\nx = 0.12 - Time constant for pilot reaction\n-l.0/(Ti*r/2)\n= -33.3\n- (T_ + "r,/2)/(Tt*x/2) = -18.67\n1.0/(Ti*r,/2) = 33.3\n1.0 + Tt/\'rL = 1.8\nTt.- r./2 + TL/TI*(Tr+\'ff2) = 0.788\nTt/Tt. = 0.8\n\nwith nominal\n\ndelay, sec\n\nAs noted above, the constants indicated in this section resulted in acceptable simulation responses. If changes are\ndesired, they should be done judiciously, and some triM-and-error should be expected. Since changes are probable, the\nlead, lag, delay, and proportional to integral ratios are included as parameters in the input run file.\n\nNASA/CR----2000-210560\n\n12\n\n5.3 Gust Models\nTwo gust models were implemented in TAILSIM. The simplest is a single pulse l-cosine gust that represents a\nsharp edged gust. It is referenced in Federal Aviation Regulations, Subpart C---Structure,\nin determining the structural\nrequirements for aircraft.\nThe second gust model is a continuous implementation of the Dryden PSD function to represent continuous\natmospheric turbulence. Both gust models are taken from Reference 1. When implementing the Dryden gust, a white\nnoise generator is needed. This has been approximated using a random function, RANI, from reference 2, which is\nstated to have uniform properties.\nWhen implementing gusts using data obtained from steady state conditions, the inability of the aerodynamic forces\nto respond instantaneously\nto rapid changes in angle of attack must be considered. To account for this delay in\naerodynamic reaction, the Kussner function has been developed for aeroelastic analysis. The Kussner function as\ndefined in reference 3 has been implemented and applied to the gust velocity generated by the above models to create an\neffective gust velocity. Finally, to account for the difference in time that the gust reaches the wing and tailplane as the\naircraft flies through the gust, a pade delay is applied to the effective gust velocity to determine the effective gust\nvelocity acting at the tailplane.\nThe sharp edged gust implementation\n\nis:\n\nSARG = PI*VINF*(TIME-TGUSTS)*2.09/GUSTL\nIF(SARG .LE. 2.0*PI ) WGUST = GUSTV/2.0*(1\nParameters\n\nare defmed below:\n\nGUSTL\nGUSTV\nSARG\nWGUST\n\n- COS(SARG))\n\nGust length = 25*CREF, ft\nInput gust amplitude, ft/sec\nGust angle, rad\nInstantaneous\ngust velocity, fl/sec\n\nThe Dryden\n\ngust implementation\n\nis:\n\nSQWKW = SQRT(3.0*WSIG*WSIG*VINF/(WLW*PI))\nBETAW = VINF/(1.73*WLW)\nWLTHW = VINF/WLW\nVRAND = RAN I(IDUM)\nWGRAND = GUSTV*(VRAND\n- 0.5)*2.0\nWGDRY 1D = WGDRY2\nWGDRY2D = -2.0*WLTHW*WGDRY2\n- WLTHW*WLTHW*WGDRY1\nWGUST\n\n= SQWKW*WGDRY2\n\nSpecific parameters\n\n+ SQWKW*BETAW*WGDRYI\n\nare def\'med below;\n\nBETAW\nVRAND\nWGDRY1,WGDRY1D\nWGDRY2,WGDRY2D\nWGRAND\nWLTHW\nWLW\nWSIG\n\nNASA/CR--2000-210560\n\nScaled turbulence frequency, l/sec\nRandom function output between 0 and 1\nGeneralized variable and derivative in realization\nGeneralized variable and derivative in realization\nRandom gust velocity, ft/sec\nTurbulence frequency, 1/sec\nTurbulence scale length = 1750 ft. for thunderstorms\nTurbulence intensity = 21 fi/sec, for thunderstorms\n\n13\n\n+ WGRAND\n\nThe\nKussner\nfunctionnd delay\na Pade implementation\nare:\nTKDEN\n=2.0*VINF\nTK5=4.35*CREF/TKDEN\nTK6=7.69*CREF/TKDEN\nTK7=CREF/TKDEN\nWGEFID\n=WGEF2\nWGEF2D(- (TK6+TK7)*WGEF2\n=\n- WGEF+WGUST)/(TK6*TK7\n1\nWGEF\n=WGEFI TK5*WGEF2\n+\nWGEFDWGEFI +TK5*WGEF2D\n=\nD\nARGEF ATAN2(WGEF,VU)\n=\nARGEFD = ATAN2(WGEFD,VU)\nTCAT = LTAIL/(VINF*2.0)\nWGEFLD = (WGEF - TCAT*WGEFD\nATGEFL = ATAN2(WGEFL,VU)\n\n- WGEFL)/TCAT\n\nThe parameters are:\nARGEF,ARGEFD\nEffective gust angle of attack and rate rad, rad/s 2\nATGEFL\nEffective gust tailplane angle of attack, rad/sec\nTCAT\nPade delay time constant, sec\nTKDEN\nTime constant scale factor\nTK5,TK6.TK7\nTime constants, 2 poles, 1 zeros, sec\nWGEF,WGEFD\nEffective gust velocity and rate, ft/sec, ft/s 2\nWGEFL,WGEFLD\nWGEFI,WGEF1D\nWGEF2,WGEF2D\n\nTailplane effective gust velocity and rate. ft/sec, fi/s 2\nGeneralized variable and derivative in realization.\nGeneralized variable and derivative in realization.\n\nReferences\n1. McLean,\n\nD., Automatic\n\nFlight Control\n\nSystems,\n\nPrentice Hall, 1990.\n\n2. Press, W.H., Teukolsky, S.A., Vetterling, W.T., Flannery, B.P., Numerical Recipes in Forn\'an 77, The Art of\nScientific Computing. Second Edition, Cambridge University Press, 1992.\n3. Van der Vart, J.C., "Effects of Aerodynamic Lags on Aircraft Responses," AGARD CP-386, 1985, pp. 33-1-33-11.\n\nNASA/CR--2000-210560\n\n14\n\nAppendix\nTAILSM16.COM\nC FILENAME: TAILSMI6.COM\n04-17-99\nC\nC COMMON BLOCKS FOR ALL SUBROUTINES\nC\n\nA\n\nInclude\n\nFile Listing\n\nFOR TAILSM\n\n16 PROGRAM\n\nPARAMETER\n(NP--4110)\nREAL IXX,IXY,IXZ,IYY,IYZ,IZZ,MACH\nREAL IXX0,IXY0,IXZ0,IYY0.IYZ0,IZZ0\nREAL LFTOT.NFFOT,LMTOT,MMTOT,NMTOT,LTAIL\nREAL NX,NY,NZ,NZFC.NLF.NLFC,NF\nREAL MAOA,MQ,MDE,MAOAT,MQT,M\nDET\nC\nCHARACTER*\n\n12 VLBL\n\nC\nCOMMON/PROGA\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n1/AINTA(50,4),DATLDP(9,NP),\nDATA 1(NP),DATPLOT(9.NP),\nDATPLT 1(9,NP),DATPLT2(9,NP),DATPLT3\n(9,NP),\nDATPLT4(9,NP),DATPLT5(9,NP),DATPLT6(9,NP),\nDATPLT7(9,NP),DATPLT8(9,NP),DATPLT9(9.NP),\nDATPLT 10(9.NP),DATPLT\n11(9,NP),DATPLT\n12(9,NP),\nDATPLT 13(9.NP),DATPLT\n14(9,NP),DATPLT\n15 (9,NP),\nDATPLT 16(9,NP),\nCOEFFO(8,NP),ALPHA(NP),TIMEA(NP),\nVLBL(16,9)\n\nCOMMON/PROGC\n\nI/IRUN,ISCRN,IKEYB,TIME,TMAX,DT,IMAX,NVrS.ITHIST,\n\nC\n1\n\nIRPT,PI,RTD,DTR,T0\n\nC\nCOMMON/PROGV2/GW,GW0,DGW,SREF,CREF,SPAN.FNPODM,CFG2,\n1\nIXX,IXY,IXZ,IYY,IYZ,LZZ,\n,)\nIXX0,IXY0,IXZ0,IYY0,IYZ0,IZZ0,\n3\nALT,MACH,TCTF,FCND\n1,FCND2,FCND3,SCDUM,SCTST,\n4\nG,UGC,PSL,TSL,RSL,\n5\nXCG0,YCG0,ZCG0,DXCG,DYCG,DZCG,XCG,YCG,ZCG,\n6\nXCGDB,YCGDB,ZCGDB,\n7\nXAARM,YAARM,ZAARM,DBXARM,DBYARM,DBZARM\nC\nCOMMON/DBCOEF/CZ00,\nCZAOA, CZQ, CZDE,\n1\nCX00, CXAOA, CXAOA2, CXQ, CXDE,\n2\nCMAOA, CMQ, CMDE, CMAOAT, CMQT, CMDET,\n3\nCLB, CLP, CLR, CLDA, CLDR,\n4\nCNB, CNP, CNR, CNDA, CNDR,\n5\nCYB, CYP, CYR, CYDA, CYDR,\n6\nCMMQD, CFZQD, CFXQD, CMHTRIM,\n7\nCL00,CD00,CL00T,CD00T,CZ00T,CX00T,CM00T\nC\nCOMMON/COM/COMM(2)\n\nNASA/CR---2000-210560\n\n15\n\nC\nCOMMON/EOM\n1/DX,DY,DZ,VU,VV,VW,PR,QR,RR,PHIR,THETAR,PSIR,\n\nC\n\n1\n2\n3\n4\n5\nCOMMON/FMS\n1\n2\n3\n4\n5\n\nGAMMAR,GAMMAD,ALPHAR,ALPHAD,BETAR,BETAD,\nNF,NZ,NLF,NX,NY,PHID\nPSID,VUID,\nVDOT,ALPHARD,BETARD,ALPHARM,\nDXD,DYD,DZD,VUD,VVD,VWD,PRD,QRD,RRD,\nPHIRD.THETARD.PSIRD,PSIRDT,PHIDT,PHIRT\n1/LFTOT.NFrOT,ZFI\'OT,DFFOT,XFFOT,YFI\'OT,\nLMTOT,MMTOT,NMTOT,FNPM,THRUST,\nVINF, VINFK,VINFEK,TEMP,PRESS,RHO,SOS,QDP,\nVINFCK,CFL,CFD,CFZ,CFX,CMM,CML,CMN,CFY,\nCLMIN,CDMIN,CDK\n1,CDK2,\nDFLS,DFDS,DFZB,DFXB,DFYS,DMMS,DMLB,DMNB\n\nC\nCOMMON/TRIM\n\n1/CFZTRM,CFXTRM,CZOOTRM,CXOOTRM,CMO0,\n\n1\n2\n\nC\n\nTOLU,TOLV,TOLW,TOLP,TOLQ,TOLR,CMMTRM,\nAOATRM,DMHT,DMHTRIM,VTHETAT,XFTOTT,VTHETAE,\n\n3\n4\n\nVTRIM.TRMMACH,TRMDFLAP,MCOUNT,TRMCT,ATSTALL,\nATHMBRK,GAMMADT,VINFTRM\n\nCOMMON/TBL\n\nI/X 1IN,X2IN,X3IN,X4IN,X5IN,EXTRAP\n\nC\n\nC\n\nCOMMON/PROGV3/DELEV,DFLAP,VAR4,VAR5,DAIL,DRUD,DHZT,\n1\nTVECT,TFACT,DLEF,\nDTEF,ANGTHR,PLA,\n2\nDAILT,DAILC,DRUDT,DRUDC,DELEVT.DELEVC,\n3\nCTHRSTC,CI\'HRSTT,GAMMART,CTHRST,FICE\nCOMMON/TAIL\n1\n2\n3\n4\n\n1/EDW,QTR.STAIL,CTAIL,LTAIL,HTAIL,\nCFZT,CFXT,CFLT,CFDT,CMMT,CMHT,CMHTU,\nALPHARL,CMMAT,CMMADL,\nAOATA,AOATQ,AOAT,CFXA2L,EDWL,CMDAOA,\nCFZHT,CFXHT,CMMHT,EDPWR,S\nEDPWR\n\nC\nC\nC\nC\n\nCOMMON/GUST\n1\nCOMMON/GUST\n1\n2\n3\n4\n5\n\n1/TGUSTS,TGUSTE,GUSTV.VAGD,VWG,VWGD,\nARGEFDD,ARGEFD,ARGEF,ALPHARG,ARGD\nI/TGUSTS,TGUSTE,GUSTV,WGUST,VRAND,WGRAND,\nARGEFDD,ARGEFD,ARGEF,ALPHARG,ARGD,\nWGEF 1D,WGEFI,WGEF2D,WGEF2,WGEFD,WGEF,\nWGEFLD,WGEFL,TKDEN,TK5,TK6,TK7,\nWLW,WSIG,SQWKW,BETAW,WLTHW,\nWGDRY 1D,WGDRY 1,WGDRY2D,WGDRY2,WGDRY\n\nC\nCOMMON/ALAGS\n\n1/DEDA,EDWT,EDWTL,EDWTLD,ATGEFL,ATGEFLD\n\nC\nCOMMON/STCK\n\nNASA/CR--2000-210560\n\n1/FSTCK,FSTCKC,DSTCKDD,DSTCKD,DSTCKT,DSTCK,\nDSTCKC.DELEVDD,DELEVD,DMHD,FSTCKA,\nFSTCKP,FCABLE,WELEV,WSTCK,STKDMP,ELVDMP,\nWSDOT,WEDOT,FCDOT,ASTCK,BSTCK,NZFC,\nAKC,AIE,AIS,AELEV,\nNLFC,XP 12Gt:\'l DOT,XP2,XP2DOT,QDESE,QDESEI,QDES,\nICOPT,X 1QDOT,X 1Q,DELEVP,CMHTP,DMHTP,QGAIN,\n\n16\n\n7\n8\n9\n1\n\nMAOA,MQ,MDE,ZAOA,ZDE,DMHTU,DMHTRIMU,\nASFBED,ASFBEKI,ASFBE,ASFBEK,QPFR,APFR,QAPFB.\nMAOAT,MQT,MDET,PMG21\n.PMG22,PMG2E,\nPMGCI,PMGC2.PMGCE,PMTLG,PMTLD,PMTD\n\nC\nCOMMON/INTLIM/ELVMAX,ELVMIN,STKMAX,STKMIN\nC\nCOMMON/QDOTLIM/CFZTMN,CFZTMRCFXTMN,CFXTMP,CMMTMN,CMMTMP,\n1\nCMHTMN,CMHTMP,CFZDMN,CFZDMP.CFXDMN,CFXDMP,\n2\nCMMDMN.CMMDMP,QRDTMN,QRDTMP\nC\nCOMMON/TBLACCS/DTA(20000),LOCALE(400)\n\nNASA/CR--2000-210560\n\n17\n\nAppendix\nPartial\n\nALPHAD\nALPHAR\nALPHARD\nALT\nAOAT\nAOATA\nAOATQ\nBETAD\nBETAR\nBETARD\nCDO0\nCDOOT\nCFD\nCFDT\nCFL\nCFLT\nCFX\nCFXT\nCFY\nCFZ\nCFZQ\nCF-ZQD\nCTZT\nCL00\nCL00T\nCMAOA\nCMDE\nCMHT\nCMHTU\nCML\nCMM\nCMMADL\nCMMAT\nCMMT\nCMN\nCMQ\nCMQD\nCM00T\nCREF\nCTAIL\nCTHRST\nCI\'HRSTC\nCZAOA\nDAIL\nDEDA\nDELEV\nDMHT\nDMHTU\nDRUD\n\nAngle-of-attack,\nAngle-of-attack,\nAngle-of-attack\nAltitude, ft\nTailplane\n\nInternal\n\nB\n\nParameter\n\nListing\n\ndeg\nrad\nrate. rad/sec\n\nangle of attack, rad\n\nAerodynamic\ncontribution to tailplane angle of attack, rad\nPitch rate contribution to tailplane angle of attack, rad\nAngle-of-sideslip,\ndeg\nAngle-of-sideslip,\nrad\nAngle-of-sideslip\nrate, rad/sec\nTotal aircraft trimmed drag coefficient\nTailplane contribution to trimmed drag coefficient\nTotal drag coefficient\nTailplane drag coefficient\nTotal lift coefficient\nTailplane lift coefficient\nTotal axial force coefficient\nTailplane axial force coefficient\nTotal sideforce coefficient\nTotal force coefficient in Z-axis direction\nTotal aircraft Z-force due to pitching moment\nTailplane contribution to Z-force due to pitching moment\nTailplane force coefficient in Z-axis direction\nTotal aircraft trimmed lift coefficient\nTailplane contribution to trimmed lift coefficient\nBuilt-up total aircraft pitching moment slope\nTailplane moment coefficient\nTailplane hinge moment coefficient\nUniced tailplane hinge moment coefficient\nTotal rolling moment coefficient\nTotal pitching moment coefficient\nPitching moment coefficient - summed incremental angle of attack times local pitching moment\nTailplane contribution to built-up pitching moment slope\nTailplane pitching moment coefficient\nTotal yawing moment coefficient\nTotal aircraft pitching moment due to pitch rate\nTailplane contribution to pitching moment due to pitch rate\nTailplane contribution to trimmed moment coefficient\nReference chord length, MAC, ft\nTailplane chord, ft\nThrust coefficient\nDelta commanded thrust coefficient\n\nfrom trim\n\nTotal aircraft Z-force slope\nAileron deflection, deg\nDerivative of downwash angle with respect to angle of attack\nElevator deflection, deg\nTaiiplane hinge moment, flabs\nUniced tailplane hinge moment, ft-lbs\nRudder deflection, deg\n\nNASA/CR--2000-210560\n\n18\n\nslope\n\nDSTCK\nDSTCKC\nDFLAP\nDFTOT\nDMHT\nDX,DXD\nDY,DYD\nDZ,DZD\nEDW\nEDWPWR\nEDWT\nEDWTL\nFNPM\nGAMMAD\nGAMMAR\nGW\nHTAIL\nIXX\nIYY\nIZZ\nIXY\nIXZ\nIYZ\nLFTOT\nLMTOT\nLTAIL\nMACH\nMMTOT\nNFTOT\nNF\nNLF\nNLFC\nNMTOT\nNX\nNY\nNZ\nPHID\nPHIR\nPHIRD\nPSID\nPSIR\nPSIRD\nPR\nPRD\nQDESI\nQGAIN\nQDP\nQR\nQRD\nQRDTMN\nQRDTMP\nQTR\nRR\nRRD\n\nStick\nangular\ndeflection,\ndeg\nCalculated\ncommanded deflection,\nstick\ndeg\nFlap\ndeflection,\ndeg\nTotal rag\nd force,\nlbs\nElevator moment,\nhinge\nfl-lbs\nVelocity,\nacceleration fixedXaxis\ninEarth\ndirection, fl/sec\nft/sec, 2\nVelocity,\nacceleration fixedYaxis\ninEarth\ndirection, ft/sec-"\nft/sec,\nVelocity,\nacceleration fixedZaxis\ninEarth\ndirection, fl/sec-\'\nfl/sec,\nAerodynamic\ncontribution\ntodownwash deg\nangle,\nPower\ncontribution\ntodownwash deg\nangle,\nTotal erodynamicpower\na\nand\ndownwash deg\nangle,\nTotalagged\nl\ndownwash deg\nangle,\nNetthrust,\nlbs\nFlight ath\np angle,\ndeg\nFlight ath\np angle,\nrad\nAircraft weight,\ngross\nlbs\nTailplane above\nheight\nreference, ft\nCG,\nMoment\nofinertia bout axis,\na X\nslug-fi\n2\nMoment\nofinertia bout axis,\na Y\nslug-ft\n2\nMoment\nofinertia bout\na Zaxis, lug-fl\ns\n2\nProduct\nofinertia\ninXYaxis, lug-ft\ns\n2\nProduct\nofinertia\ninXZaxis.\nslug-ft\n2\nProduct of inertia in YZ axis. slug-ft 2\nTotal lift force, lbs\nTotal rolling moment, fl-lbs\nReference distance from wing to tail 1/4 chord, ft\nMach number\nTotal pitching moment, flabs\nTotal normal force, lbs\nNormal acceleration, g\nLoad factor, g\nCommanded\nload factor, g\nTotal yawing moment, fi-lbs\nAcceleration\nin body axis x-direction, g\nAcceleration in body axis y-direction, g\nAcceleration\nin body axis z-direction, g\nBank angle, deg\nBank angle, rad\nRate of change of bank angle rad/sec\nHeading angle, deg\nHeading angle, rad\nRate of change of heading angle, rad/sec\nRoll rate, rad/sec\nRoll angular acceleration, rad/sec 2\nIntegrated pitch rate error, rad\nGain, pitch rate to elevator deflection\nDynamic pressure, lb/fl 2\nPitch rate, rad/sec\nPitch angular acceleration, rad/sec 2\nPitch acceleration with minimum elevator deflection, rad/sec 2\nPitch acceleration with maximum elevator deflection, rad/sec 2\nTailplane dynamic pressure ratio\nYaw rate, rad/sec\nYaw angular acceleration, rad/sec 2\n\nNASA/CR--2000-210560\n\n19\n\nSEDPWR\n\nPower\n\nSPAN\n\nWingspan,\n\nfactor\n\nin downwash\n\ndue to power\n\neffects\n\nft\n\nSREF\n\nWing\n\nSTAIL\n\nTailplane\n\nTHETAR\n\nPitch\n\nTHETARD\nTHRUST\n\nRate of change of pitch angle,\nThrust. lbs\n\nVDOT\n\nRate of change\n\nVINF\n\nAirspeed.\n\nft/sec, and\n\nVINFK\n\nAirspeed.\n\nknots\n\nVlNFEK\n\nEquivalent\n\nairspeed, knots\n\nVINFCK\n\nCalibrated\n\nairspeed,\n\nVU,VUD\nVV.VVD\n\nVelocity,\n\nacceleration\n\nin body X axis direction,\n\nft/sec, ft/sec 2\n\nVelocity,\n\nacceleration\n\nin body Y axis direction,\n\nft/sec, fi/_c 2\n\nVUID\n\nVelocity\n\nin earth oriented\n\nVW,VWD\n\nVelocity, acceleration\nin body Z axis direction,\nElevator deflection, rate. tad, rad/sec\n\nWELEV,WEDOT\nWSTCK.WSDOT\n\nReference\n\narea,\n\nreference\n\nangle,\n\nf12\n\narea,\n\nfi2\n\nrad\n\nof airspeed,\n\nrad/sec\n\nfi/sec 2\n\nknots\n\naxis system, fi/s\n\nYFTOT\n\nStick angular deflection,\nTotal axial force, lbs\nTotal sideforce, lbs\n\nZFTOT\n\nTotal body axis lift force, lbs\n\nXFTOT\n\nNASA/CR--2000-210560\n\nrate, tad. rad/sec\n\n20\n\nft/sec, ft/sec 2\n\nREPORT\n\nDOCUMENTATION\n\nPAGE\n\nFormApprov_d\nOMB\n\nNo. 0704-0188\n\nPublic reporting burden for this collection of informationis estimated to average 1 hour per response, includingthe time for reviewinginstructions,seamhing existingdata sources,\ngathering and maintaining the data needed, and completingand reviewingthe collection of information. Send comments regarding this burden estimate or any other aspect of this\ncollection of information, including suggestions for reducing this burden, to Washington Headquarters Services, Directorate for Information Operations and Reports, 1215 Jefferson\nDavis Highway, Suite 1204, Arlington, VA 22202-4302, and to the Office of Management and BudgeL Paperwork Reduction Project (0704-0188), Washington, DC 20503.\n1. AGENCY\n\nUSE ONLY\n\n(Leave\n\nblank)\n\n2. REPORT\n\nDATE\n\n3. REPORT\n\nDecember\n4.\n\nTITLE AND\n\nTYPE\n\n2000\n\nAND DATES\nFinal\n\nSUBTITLE\n\nTAILSIM\n\nUsers\n\nCOVERED\n\nContractor\n\nReport\n\n5. FUNDING\n\nNUMBERS\n\nGuide\n\nWU-711-21-23-00\n\n6. AUTHOR(S)\n\nNAG3-2007\nDale\n\nW. Hiltner\n\n7. PERFORMING\n\nORGANIZATION\n\nOhio\n\nState\n\n1960\n\nKenny\n\nUniversity\n\nNAME(S)\n\nResearch\n\nOhio\n\nE-12512\n\nDC\n\nSUPPLEMENTARY\n\nSpace\n\nRatvasky,\n\n5840,\n\npublication\n\n08\n\nTurbomachinery\n\ntranslational\n\nprogram\nand three\n\nfrom aerodynamic\ntotal\n\nand\n\nPropulsion\n\nSystems\n\nDivision,\n\n12b.\n\nNASA\n\nforces\n\n61\n\nDistribution:\n\nDISTRIBUTION\n\nResearch\n\nCenter,\n\nCODE\n\nfrom\n\nthe NASA\n\nCenter\n\nfor AeroSpace\n\nuses a 4th order Runge-Kutta\nrotational\n\naccelerations\n\nsuch\n\ndynamic\n\nmethod\n\nabout\n\napplied\n\nInformation,\n\nFeatures\n\nto an integrated\n\npitch\n\nbody\n\nand control\n\nthe standard\n\ninputs.\n\nand surface\n\nthat make\n\nrate and/or\n\nto integrate\n\nthe aircraft\'s\n\nderivatives,\n\nas angle-of-attack\n\nand moments.\n\npitch rate is determined\nThese dynamic models,\n\nNonstandard\n\n301--621--0390.\n\n200 words)\n\nairspeed\n\naxis\n\nerror feedback.\n\naircraft\n\nequations-of-motion\n\nsystem.\n\nThe forces\n\nfor these terms\n\nBuildup\n\napplicable\ncommand\nresulting\n\nreference\n\nValues\n\ndeflections.\n\nTAILSIM\n\nmodeling of the pilot performing\na load factor and/or airspeed\ncan be described\nas two hinged masses connected\nby a spring,\n\nequations\n\nto studies\n\nare deterrmned\n\ncombine\n\nof tailplane\n\n(EOM).\n\nand moments\n\nfrom linear\n\nstall include\n\nmodeling\n\nis implemented\n\ndetermine\n\ninterpolation\n\nthree\n\nare deterrmned\n\nof tables\nthem\n\nof the reversible\n\ntask, and modeling\nof vertical gusts. The reversible\nin a fifth order system. The pilot model is a standard\nThe time delay\n\nThe EOM\n\nthat drive the EOM\n\nthese terms and dimensionalize\n\nthat are\n\nto generate\ncontrol\n\nto be modeled.\n\nA useful\n\noutput\n\ncapability\n\nof the TAILSIM\n\nprogram\n\nis the ability\n\nto display\n\ncontrol system dynamics\nform of lead-lag with a time\n\nby a Pade approximation,\n\nmultiple\n\npost-run\n\ncan then be used by other plotting\n\nprograms.\n\nThe TAILSIM\n\nprogram\n\nwas written\n\nstraightforwardly\n\nplot pages\n\nwhile\n\nthe commanded\n\nto allow\n\na quick\n\n9 parameters.\nEach parameter\ncan also create fries of tabulated\n\nassuming\n\nthe user would\n\nwant to change\n\nthe database tables, the buildup equations,\nthe output parameters,\nand the pilot model parameters.\nA separate\ndatabase file and input file are automatically\nread in by the program,\nThe use of an include file to set up all common\nblocks facilitates\neasy changing\nof parameter\nnames and array sizes.\n14.\n\nSUBJECT\n\nTERMS\n\nAircraft\n\nicing;\n\n15.\nTailplane\n\nicing;\n\nStability\n\nand\n\ncontrol;\n\nFlight\n\ndynamics;\n\nFlight\n\nsimulation\n\nNUMBER\n\nOF PAGES\n\n16.\n\n27\nPRICE CODE\n\n20.\n\nLIMITATION\n\nA03\n17.\n\nSECURITY CLASSIFICATION\nOF REPORT\nUnclassified\n\nNSN\n\n7540-01-280-5500\n\n18.\n\nSECURITY CLASSIFICATION\nOF THIS PAGE\nUnclassified\n\n19. SECURITY CLASSIFICATION\nOF ABSTRACT\n\nOF ABSTRACT\n\nUnclassified\nStandard\nPrescribed\n298-102\n\nthe\n\nsystem,\n\nby a commanded\nload factor. Vertical gust inputs include a single 1-cosine gust and a continuous\nNASA Dryden gust model.\ncoupled with the use of a nonlinear\ndatabase,\nallow the tailplane stall characteristics,\nelevator response,\nand resulting\naircraft\n\nassessment\nof the time history response.\nThere are 16 plot pages currently\navailable\nto the user. Each plot page displays\ncan also be displayed\nindividually,\non a one plot-per-page\nformat. For a more refined display of the results the program\ndata, which\n\nGlenn\n\nat http://gltrs.Ec.nasa.aov/GLTRS\n\ncoefficients,\n\nof parameters\n\nresponse,\n\nand\n\nSTATEMENT\n\nis available\n\n(Maximum\n\nThe TAILSIM\n\ndelay\n\nCR--2000-210560\n\n- Unlimited\n\nABSTRACT\n\ndriving\n\nSPONSORING/MONITORING\nAGENCYREPORTNUMBER\n\n216--433-3905.\n\nelectronically\n\na function\n\n10.\n\nAdministration\n\nThomas\n\nCategories:\n\nAvailable\nThis\n\nADDRESS(ES)\n\nNASA\n\nDiSTRIBUTION/AVAILABILITY\n\nSubject\n\nAND\n\nNOTES\n\ncode\n\nUnclassified\n\n13.\n\nand\n\nNAME(S)\n\n20546-0001\n\nManager,\n\norganization\n\n12a.\n\nAGENCY\n\nAeronautics\n\nWashington,\n\nProject\n\nFoundation\n\n43210-1063\n\n9. SPONSORING/MONITORING\n\n11.\n\n8. PERFORMING\nORGANIZATION\nREPORT NUMBER\n\nRoad\n\nColumbus,\n\nNational\n\nAND ADDRESS(ES)\n\nForm 298 (Rev. 2-89)\nby ANSI Std. Z39-18\n\n'