b'Data Formats:\nUsing self-describing data formats\nCurt Tilmes\nNASA\n\nVersion 1.0\nReview Date\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nOverview\n\xe2\x80\xa2 Self-describing data formats have become a well accepted\nway of archiving and disseminating scientific data.\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nBackground\n\xe2\x80\xa2 Before self-describing data formats became widely used,\neach project often invented their own data formats, often\nraw binary or even ASCII.\n\xe2\x80\xa2 These approaches had a number of problems:\n\xe2\x80\xa2 Machine dependent byte ordering or floating point organizations\n\xe2\x80\xa2 Required a \xe2\x80\x98key\xe2\x80\x99 to be able to open the file and read the right data.\n\xe2\x80\xa2 A new custom reader is needed for each different data organization.\nWorking in a new language could be very difficult since you have to\nredevelop the reader anew.\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nSelf-describing data formats\n\xe2\x80\xa2 Information describing the data contents of the file are\nembedded within the data file itself:\n\xe2\x80\xa2 Names for various fields\n\xe2\x80\xa2 Data types \xe2\x80\x93 Standardized, portable, machine independent\n\xe2\x80\xa2 Pointers to various fields, making it efficient to extract the particular\nfields you want without reading the entire file\n\xe2\x80\xa2 Attributes and flags related to the primary fields with extra information\nsuch as units, fill values, etc.\n\n\xe2\x80\xa2 Include a standard API and portable data access libraries in\na variety of languages\n\xe2\x80\xa2 There are tools that can open and work with arbitrary files,\nusing the embedded descriptions to interpret the data.\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nSome example formats\n\xe2\x80\xa2 HDF \xe2\x80\x93 Hierarchical Data Format\n\xe2\x80\xa2 HDF4 and HDF5 versions are in use today\n\xe2\x80\xa2 A NASA variant called HDF-EOS is used within the Earth Observing\nSystem program.\n\n\xe2\x80\xa2 NetCDF \xe2\x80\x93 Network Common Data Form\n\xe2\x80\xa2 Widely used by agencies including NASA and NOAA\n\xe2\x80\xa2 Climate and forecast (CF) metadata conventions help standardize\nsome things into NetCDF in a common manner.\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nBest practices\n\xe2\x80\xa2 Choosing a self-describing format is a good first step, but it\nisn\xe2\x80\x99t a panacea. You still have to decide how to encode\nyour data into the format.\n\xe2\x80\xa2 Think carefully about the how you use the format:\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\xe2\x80\xa2\n\nLayout of data within the file\nUnambiguous names for fields; Use standard names if possible\nUnits\nFill values\n\n\xe2\x80\xa2 Keep the users/readers of your files in mind.\n\xe2\x80\xa2 Some formats support seamless internal compression that\ncan help with file sizes.\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nCase Study: Format abuse\n\xe2\x80\xa2 A project had to distribute NORAD Two-Line Element (TLE)\n1 39900U 10123A 10249.02432654 .00000388 00001-0 14877-3 0 3039\nSets\n2 39900 098.6793 188.3954 0009896 294.6098 065.4121 14.19557889216547\n\xe2\x80\xa2 This is a small amount of data, in a well defined format\nwithin ASCII, widely used and common.\n\xe2\x80\xa2 ASCII isn\xe2\x80\x99t the best format, but for a small amount of data like this,\nespecially in a widely used and understood format, it would have been\nfine.\n\xe2\x80\xa2 People understand the TLE format and have standard ways to parse\nit.\n\xe2\x80\xa2 Nevertheless, it isn\xe2\x80\x99t self-describing, and people unfamiliar with TLE\nwouldn\xe2\x80\x99t have a clue what those numbers mean.\n\n\xe2\x80\xa2 They chose to encode into HDF\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nCase Study: Format abuse (cont)\n\xe2\x80\xa2 A straightforward encoding would be to parse the fields,\ncreate fields with the right types (floating point) and name\nthem according to their actual content from the TLE spec.\n\xe2\x80\xa2 They chose instead to maintain the ASCII text, encoding the\nindividual characters of the file in their raw numerical form\nas an array of bytes.\n\xe2\x80\xa2 To read this data from the HDF file, you first have to extract\nthe ASCII bytes, then parse yourself according to the TLE\nspec.\n\xe2\x80\xa2 Rather than attaching metadata to the data fields, they\ncreated a separate empty dataset just to hold the metadata.\n\xe2\x80\xa2 This is just bizarre. Don\xe2\x80\x99t do it like that.\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nCase Study: Format abuse (cont)\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nReferences and Resources\n\xe2\x80\xa2 HDF: http://www.hdfgroup.org\n\xe2\x80\xa2 HDF-EOS: http://hdfeos.org\n\xe2\x80\xa2 NetCDF: http://www.unidata.ucar.edu/software/netcdf\n\xe2\x80\xa2 CF: http://cf-pcmdi.llnl.gov/\n\nData Formats: Using self-describing data formats; Version 1.0, Reviewed ??/??/??\n\nOther Relevant Modules\n\xe2\x80\xa2 Avoiding proprietary formats\n\xe2\x80\xa2 Choosing and adopting community accepted standards\n\xe2\x80\xa2 Building understandable spreadsheets\n\n'