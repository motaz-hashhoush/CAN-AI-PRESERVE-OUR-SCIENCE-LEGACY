b'Information Sciences\nUpdate on EMD and Hilbert-Spectra Analysis of Time Series\nGoddard Space Flight Center, Greenbelt, Maryland\nU.S. Patent 6,381,559 presents further information about the method described in \xe2\x80\x9cAnalyzing Time Series Using\nEMD and Hilbert Spectra\xe2\x80\x9d (GSC13817), NASA Tech Briefs, Vol. 24, No. 10\n(October 2000), page 63. To recapitulate: The method is especially well\nsuited for analyzing time-series data that\nrepresent nonstationary and nonlinear\nphysical phenomena. The method is\nbased principally on the concept of empirical mode decomposition (EMD), according to which any complicated signal\n(as represented by digital samples) can\nbe decomposed into a finite number of\n\nfunctions, called \xe2\x80\x9cintrinsic mode functions\xe2\x80\x9d (IMFs), that admit well-behaved\nHilbert transforms. The local energies\nand the instantaneous frequencies derived from the IMFs through Hilbert\ntransforms can be used to construct an\nenergy-frequency-time distribution, denoted a Hilbert spectrum. The patent\nexpands on the description in the cited\nprior article by explaining underlying\nmathematical principles and describing\ndetails of implementation. The patent\nalso describes, as major elements of the\nmethod, the options of (1) filtering the\noriginal signal by combining a subset of\n\nIMFs and (2) fitting a curve to the filtered signal \xe2\x80\x94 something that it may\nnot be possible to do with the original\nsignal.\nThis work was done by Norden E. Huang\nof Goddard Space Flight Center. Further information is contained in a TSP (see\npage 1).\nThis invention is owned by NASA, and a\npatent application has been filed. Inquiries concerning nonexclusive or exclusive license for its\ncommercial development should be addressed to\nthe Patent Counsel, Goddard Space Flight Center; (301) 286-7351. Refer to GSC-13817-3.\n\nQuad-Tree Visual-Calculus Analysis of Satellite Coverage\nThe computational burden is less than in a pixel representation.\nNASA\xe2\x80\x99s Jet Propulsion Laboratory, Pasadena, California\nAn improved method of analysis of\ncoverage of areas of the Earth by a constellation of radio-communication or\nscientific-observation satellites has been\ndeveloped. This method is intended to\nsupplant an older method in which the\nglobal-coverage-analysis problem is\nsolved from a ground-to-satellite perspective. The older method is suitable\nfor coarse-grained analysis of coverage\nof a constellation of a few satellites, but\nthe algorithms of the older method are\ntoo slow and cumbersome for the large\nscope of the problem of analysis of coverage of a modern constellation of\nmany satellites intended to provide\nglobal coverage all the time. In contrast,\nthe present method provides for rapid\nand efficient analysis. This method is\nderived from a satellite-to-ground perspective and involves a unique combination of two techniques for multiresolution representation of map features on\nthe surface of a sphere.\nThe first of the two techniques, called\n\xe2\x80\x9cvisual calculus,\xe2\x80\x9d is one that embodies\nthe satellite-to-ground perspective and\nassists in the visualization of global coverage. In visual calculus, a satellite can\nbe regarded as \xe2\x80\x9cpainting\xe2\x80\x9d its field of view\nor other coverage field onto the ground\n\nNASA Tech Briefs, November 2003\n\nUsing a Multiresolution Map to analyze a circular region, it is not necessary to resort to full resolution\neverywhere. Large areas with the same value can be represented by a few large squares; smaller\nsquares are needed only to resolve details of the boundary.\n\n27\n\nto generate simple maps. These maps\nare two-dimensional projections of the\nglobe, with ground tracks and station\nmasks for each satellite in a constellation. These maps are processed further\nto generate composite maps that answer\na variety of simple and complex questions regarding coverage, both for specific ground points and for regions.\nFor the purpose of computational implementation, a map is represented by\nan integer function of latitude and longitude, analogous to the more familiar\nmap color as a function of latitude and\nlongitude. More specifically, a map object \xce\x9c is defined by \xce\x9c(l,\xce\xbb):(l,\xce\xbb)\xe2\x86\x92i,\nwhere l is latitude, \xce\xbb is longitude, and i is\nthe integer value at the point in question. The processing of maps to generate composite maps and answer questions about coverage involves, among\nother things, the use of an algebra in\nwhich map objects are manipulated by\nunary, binary, Boolean, and other operators. Examples of operators include one\nthat finds the distance from a given\npoint to a map boundary and one that\n\n28\n\nfinds what percentage of a map has a\ngiven integer value.\nThe second technique essential to the\npresent method is the use of a quad-tree\ndata structure in implementing the visual\ncalculus. For this purpose, the map function is redefined to provide not only the\ninteger value for a given location but also\ninformation on how far one must travel\nfrom that location to encounter a change\nin the map. A point quad tree is well suited\nto a multiresolution representation of\nmap features on the surface of a sphere.\nIn essence, a quad tree is a data-compression construct that takes advantage\nof the facts that (1) a typical map contains only a few regions with a few values\nand (2) at each point, most values in the\nneighborhood are the same value. In a\nquad tree, squares of pixels that have the\nsame value are represented as one large\nsquare. It does not become necessary to\ndo calculations on a subdivision of a\nsquare until a map boundary subdivides\nthe square. Thus, it is not necessary to\nfix resolution at the beginning of an\nanalysis. If higher resolution is needed\n\nfor a particular map, it can be achieved\nthrough finer subdivisions.\nThe main reason for choosing a quadtree data structure instead of a pixelbased data structure is that the pointquad-tree structure requires less\ndata-storage space. This computational\nadvantage arises because the number of\nsubdivisions needed in a given case is approximately proportional to the length of\nthe boundary between regions, instead of\nproportional to the area of the regions as\nin a pixel representation. It is necessary\nto subdivide only those squares that straddle a boundary (see figure), and because\na boundary is one-dimensional, the number of subdivisions for the required resolution scales linearly, rather than quadratically as when subdividing an area\nwith pixels.\nThis work was done by Martin W. Lo,\nGeorge Hockney, and Bruce Kwan of Caltech\nfor NASA\xe2\x80\x99s Jet Propulsion Laboratory.\nFurther information is contained in a TSP\n(see page 1).\nNPO-20557\n\nNASA Tech Briefs, November 2003\n\n'