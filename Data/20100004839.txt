b"Abstract submitted to the 48th AIAA Aerospace Sciences Meeting, Orlando, Florida, January 4-7, 2010\n\nAutomatic Mesh Generation of Hybrid Mesh on Valves in\nMultiple Positions in Feedline Systems\nDouglas H. Ross1, Yasushi Ito2, Fredric W. Dorothy3, Alan M. Shih 4\nUniversity of Alabama at Birmingham, Birmingham, Alabama, 35294\nJohn Peugeot5\nNASA Marshall Space Flight Center, MSFC, Alabama 35812\n\nI. Introduction\n\nF\n\nluid flow simulations through a valve often require evaluation of the valve in multiple opening positions. A\nmesh has to be generated for the valve for each position and compounding. The problem is the fact that the valve\nis typically part of a larger feedline system. In this paper, we propose to develop a system to create meshes for\nfeedline systems with parametrically controlled valve openings. Herein we outline two approaches to generate the\nmeshes for a valve in a feedline system at multiple positions. There are two issues that must be addressed. The first\nis the creation of the mesh on the valve for multiple positions. The second is the generation of the mesh for the total\nfeedline system including the valve. For generation of the mesh on the valve, we will describe the use of topology\nmatching and mesh generation parameter transfer1. For generation of the total feedline system, we will describe two\nsolutions that we have implemented. In both cases the valve is treated as a component in the feedline system. In the\nfirst method the geometry of the valve in the feedline system is replaced with a valve at a different opening position.\nGeometry is created to connect the valve to the feedline system. Then topology for the valve is created and the\nportion of the topology for the valve is topology matched to the \xe2\x80\x9cstandard\xe2\x80\x9d valve in a different position. The mesh\ngeneration parameters are transferred and then the volume mesh for the whole feedline system is generated. The\nsecond method enables the user to generate the volume mesh on the valve in multiple open positions external to the\nfeedline system, to insert it into the volume mesh of the feedline system, and to reduce the amount of computer time\nrequired for mesh generation because only two small volume meshes connecting the valve to the feedline mesh need\nto be updated.\n\nII. Valve-Only\nTypically valve geometries are complex enough to require construction in a computer-aided design program\n(CAD) or in a mesh generation system that has significant modeling capability. For the purpose of this paper we will\nconsider geometry created externally in a CAD program and requiring multiple meshes to be created on the same\nvalve with the change being the opening position of the valve. Therefore a mesh system must have an ability to\ncreate meshes on imported geometry. Most meshing systems require that all the meshing elements and specifications\nbe reattached to each importation of the geometry. A method available in some meshing systems that mitigates this\nwork is a scripting system. However, a script has to be created for each new valve geometry.\nThe method presented in this paper to generate a mesh on a valve with a modified opening position is mesh\ngeneration based on topology matching1. Where topology is defined as a boundary representation (b-rep) based on\ntrimmed Non-Uniform Rational B-Splines (NURBS) surfaces including connectivity information2, 3. The matching\nportion of the method is to create a one-to-one correspondence between a \xe2\x80\x9cstandard\xe2\x80\x9d topology, which already has a\nmesh, and a \xe2\x80\x9cnew\xe2\x80\x9d topology, on which a new mesh will be created based on mesh generation parameters used for\nthe mesh on the \xe2\x80\x9cstandard\xe2\x80\x9d topology. The correspondence is created by first matching faces, then unique edges, then\nvertices and then non-unique edges between the two topologies. The primary match algorithm for faces is a breadth\nfirst search with backtracking. A potential match is a face with the same trim structure and the same connection to\n1\n\nProgrammer II, Dept. of Mechanical Engineering, BEC 257, 1150 10th Avenue South, Birmingham, AL 35244.\nResearch Assistant Professor, Dept. of Mechanical Engineering, BEC 257, 1150 10th Avenue South, Birmingham,\nAL 35244, Senior Member AIAA.\n3\nProgrammer, Dept. of Mechanical Engineering, BEC 257, 1150 10th Avenue South, Birmingham, AL 35244.\n4\nResearch Professor, Dept. of Mechanical Engineering, BEC 257, 1150 10th Avenue South, Birmingham, AL\n35244, Associate Fellow AIAA.\n5\nResearch Engineer, NASA MSFC ER42, Member, AIAA.\n1\nAmerican Institute of Aeronautics and Astronautics\n2\n\nAbstract submitted to the 48th AIAA Aerospace Sciences Meeting, Orlando, Florida, January 4-7, 2010\n\nfaces which already have a correspondence built. All possible correspondences are built and a best correspondence\nis chosen. The heuristic to determine the best correspondence is based on the minimum summation of angles\nbetween matching faces. To have a viable angle measure a Principal Component Analysis (PCA) is performed on\nboth topologies and a transformation applied to bring the PCA basis to the standard basis. After the topologies have\nbeen matched it is a mechanical operation to transfer the grid creation specification information from the \xe2\x80\x9cstandard\xe2\x80\x9d\ntopology to the \xe2\x80\x9cnew\xe2\x80\x9d topology based on the parametric connection values. A mesh is then created on the \xe2\x80\x9cnew\xe2\x80\x9d\ntopology.\nIf the valve is topology matched without placing it in the feedline system then the valve geometry does not\nrequire its position to be transformed to align with the matching topology and principal component analysis is not\nrequired. This provides a better match since most of the geometry is at the exact same position. Only a portion of the\nvalve moves so most of the mesh generation parameters do not have to be changed.\nWhile a benefit of the topology matching method for mesh generation is that the geometry can be created in a\nCAD system that is specifically designed for complex geometry creation. For some valve geometries generated in a\nCAD system the topology only remains the same over a portion of the valve movement. Of course the valve\ngeometric topology changes when the valve closes but for flow systems only open valve positions are interesting.\nThree examples of valve geometries are examined: a ball valve, a shield valve and a poppet valve. Figures 1 and 2\nshow an example of a shield valve with different valve positions and a volume mesh created for it. The ball and\nshield valves have two ranges of angles over which the topology remains the same. Therefore they each require two\n\xe2\x80\x9cstandard\xe2\x80\x9d topology models for the matching process. The poppet valve topology remains the same over all opening\npositions. Shown in Figure 3 is an example of automated mesh generation for a poppet valve of different openings.\n\n\xc2\xa0\nFigure 1. Shield valve geometry created in ProE with parameter value for angle of valve opening\n\nFigure 2. Shield valve mesh generated by topology matching and mesh generation parameter transfer\nImporting geometry into a watertight topology structure has another benefit. Imported geometry from CAD\nsystems often has gaps between trim surfaces. The topology structure works to close these gaps by providing a\nsingle representation at the boundary between surfaces.\nThe geometry and/or mesh for feedline systems with components can be created in at least as many ways as the\nmesh for a single valve. The advantages and disadvantages are similar to those for a single valve. The mesh can be\ncreated as a custom template by using a software library which is laborious. A general purpose meshing system can\nbe used which may or may not support a parametric valve positioning. The feedline itself is typically straight,\ncurved and branching sections. The components of a feedline system can be simple or complex. Since valves are\ntypically complex the method of adding a valve as a component to a feedline system typically require that the valve\n2\nAmerican Institute of Aeronautics and Astronautics\n\nAbstract submitted to the 48th AIAA Aerospace Sciences Meeting, Orlando, Florida, January 4-7, 2010\n\ngeometry be imported, while the feedline can be generated externally or internal to the meshing system. Two\nalternatives for generation of the feedline system and two alternatives for replacement of the valve in the feedline\nsystem are presented.\nThe methods for generation of the feedline system are using a CAD package and using the MiniCAD geometry\nand mesh generation system. But they can be imported from external CAD systems as well.\n\n(a)\n(b)\n(c)\n(d)\nFigure 3. Topology associated with the poppet valve: (a) Topology entities; (b) Grid pattern structure was\nbuilt up out of butterfly and H-grid blocks. The new valve geometry with a more open valve position is\nimported into MiniCAD and converted to a topology structure. The new topology is matched with the old\ntopology and the grid pattern mesh is transferred from the old topology to (c) the new topology to create (d) a\nmesh for the more open valve position\n\nIII. Valves in Feedline\nUser developed extendibility is essential in modern CAD packages. MiniCAD2 has been developed from the\nstart with this in mind. All of MiniCAD's functionality is wrapped up in a single library that can be imported into\nany python script. The user can therefore write short python scripts that can take full advantage of MiniCAD's\ngeometry and grid creation abilities. These scripts can be run from within MiniCAD's interface, and can be designed\nto have user interfaces that query the user for input. A script was created to generate feedline systems that are run\nfrom the script tab available to the user.\nThat script provides functionality for piecing together feedline systems from a common set of components. The\nuser can build up a feedline system by adding various parts such as straight sections, T-joints, curved sections, and\nmore advanced components, such as valves and tanks. The user can specify the shape and size of all the\ncomponents, and how they connect together, allowing the user to build up a feedline system similarly to how the\nuser would build the system in real life.\nThis has a positive impact on the development of feedline systems for two reasons. The first and obvious impact\nis that the user is able to build feedline systems more quickly. There is less time spent reinventing each part as the\nfeedline system is built. The second impact is that this allows for high-level parameterization of the feedline system.\nThis is because the placement and shape properties of the feedline components are stored as scriptable parameters\ninside of MiniCAD. The user can build a feedline system, and then automatically produce multiple grids by varying\nthe properties of individual components of the feedline system.\nValve or other component insertion or replacement in the MiniCAD feedline system requires that the valve\ngeometry be prepared by specifying the inlet and outlet curves. The valve can then be inserted with consideration for\nthe number and placement of the trim curves at the pipe element and the valve. Typically the shape and number and\nstart/end points of the trim curves on the valve will not be the same or align with the curves on the feedline element\nthat it connects to. Two NURBS surfaces are created that blend the curves together with tangency considerations\nand are split in the middle to match the topological requirements of the trim curves on the pipe element and the\nvalve. Using this method the geometry of the valve and the pipe element do not have to be modified. After the\nconnecting geometry and mesh have been created topology matching can be used on the valve to transfer grid\nparameters and a mesh generated on the total feedline system.\nUsing a CAD system and in particular Pro/E for generation of the geometry for feedline systems is relatively\nstraightforward but some issues require consideration. Since the valve geometry is considered to be complex the\nvalve would typically be created as a separate part. Therefore the feedline system would be created as an assembly\nrather than as a single part. If the valve was added into a single part the volume of the feedline system would well\ndefined. However when a part is added to an assembly each part is its own volume and does not merge into the\nassembly to create a single volume. Some options to deal with this would be that the meshing system be able to\nattach meshing information to a geometry structure that is not a single volume and does not have a good topological\n3\nAmerican Institute of Aeronautics and Astronautics\n\nAbstract submitted to the 48th AIAA Aerospace Sciences Meeting, Orlando, Florida, January 4-7, 2010\n\nstructure. Alternatively the meshing system could perform all the required Boolean operations to create a twomanifold geometry structure. The method that we use is to stop the feedline short of the valves to be replaced and\ncreate connecting geometry as is done in a similar manner to the MiniCAD self contained feedline system. A\nfeedline geometry created in an external CAD system the feedline is generated with an appropriate amount of gap\nbetween the end of the pipes and the valve inlet and outlet. The pipes are imported and mesh is generated on them.\nThe valve has mesh generated for multiple opening using topology matching. The mesh for the valve is placed into\nposition using rigid body transformations to fill its spot in the feedline system. Connector geometry is created based\non curves generated from the grid edges surrounding the faces of the pipe and component faces to be joined. A\nNURBS surface with good tangential properties is created to connect the two curves and a surface mesh is generated\non the connecting surface.\nA hybrid volume mesh can be generated using the Mixed-Element Grid Generator in 3 Dimensions (MEGG3D)4\nbased on the connecting surface mesh and the extracted surface meshes from the pipe outlet and valve inlet. The\nvalve outlet and pipe inlet have both triangular and quadrilateral elements that were generated when the hybrid mesh\nwas generated on the feedline system and valve component. Figure 4 shows a simple example for pipe geometries.\nA good-quality hybrid mesh can be created from a surface mesh with pre-specified interfaces. The white cylinder at\nthe upper left in each sub-figure imitates the valve component and the purple cylinder represents the feedline\nelement. The green cylinder shown in Figures 4b and d represents the connector created between the feedline and\nvalve component. The replacement of the valve component with different volume mesh parameters can still be\nconnected to the feedline with a high-quality mesh.\n\n(a)\n\n(b)\n\n(c)\n(d)\nFigure 4. New hybrid meshes created between existing hybrid meshes: (a) Two hybrid meshes created from\nthe same parameters for the prismatic layers; (b) Hybrid mesh between the hybrid meshes shown in a; (c)\nTwo hybrid meshes created from different parameters for the prismatic layers (tighter spacing for the upper\nleft pipe); (d) Hybrid mesh between the hybrid meshes shown in c\n\nIV. Conclusion\nA method for automatically creating mesh on feedline systems including valves with multiple opening positions\nhas been presented. The second method for generation of the volume mesh by generation of mesh on the valve and\nthen insertion in the previously meshed feedline system is the preferred method of operation from both a time and\n4\nAmerican Institute of Aeronautics and Astronautics\n\nAbstract submitted to the 48th AIAA Aerospace Sciences Meeting, Orlando, Florida, January 4-7, 2010\n\nsimplicity standpoint. Future work will include the application of multi-block structured mesh. This paper will\ninclude more valve examples to demonstrate the innovation in the topology matching approach to achieve automated\nmesh generation for topologically-equivalent geometries. More technical details will also be included in the final\npaper and presentation to provide detailed information about the approach and its technical foundation.\n\nAcknowledgments\nThis work was supported by the Space Vehicle Technology Institute under grant NCC3-989 jointly funded by\nNASA and DOD within the NASA Constellation University Institutes Project, with Claudia Meyer as the project\nmanager.\n\nReferences\n1\n\nRoss, D. H., Dorothy, F. W., Ito, Y., Shih, A. M. and Soni, B. K., \xe2\x80\x9cMesh Generation Transfer Based on Topology\nMatching,\xe2\x80\x9d AIAA Paper 2008-0926, 46th AIAA Aerospace Sciences Meeting and Exhibit, Reno, NV, 2008.\n2\nGopalsamy, S., Ross, D.H. and Shih, A.M., \xe2\x80\x9cAPI for Grid Generation over Topological Models,\xe2\x80\x9d Proceedings of the 13th\nInternational Meshing Roundtable, Williamsburg, VA, 2004, pp. 221-230.\n3\nShih, A.M., Yu, T-Y, Gopalsamy, S., Ito, Y., and Soni, B.K., \xe2\x80\x9cGeometry and Mesh Generation for High Fidelity\nComputational Simulations Using Non-Uniform Rational B-Splines,\xe2\x80\x9d Applied Numerical Mathematics, Vol. 55, Issue 3, 2005,\npp. 368-381.\n4\nIto, Y., Murayama, M., Yamamoto, K., Shih, A. M. and Soni, B. K., \xe2\x80\x9cEfficient CFD Evaluation of Small Device Locations\nwith Automatic Local Remeshing,\xe2\x80\x9d AIAA Paper 2008-7180, 26th AIAA Applied Aerodynamics Conference, Honolulu, HI, 2008.\n\n5\nAmerican Institute of Aeronautics and Astronautics\n\n"